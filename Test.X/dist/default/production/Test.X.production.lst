

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 21 21:15:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15225
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	dataBIGRAM,global,delta=1
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    30                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    31                           	psect	text1,local,class=CODE,merge=1,delta=2
    32                           	psect	text2,local,class=CODE,merge=1,delta=2
    33                           	psect	text3,local,class=CODE,merge=1,delta=2
    34                           	psect	text4,local,class=CODE,merge=1,delta=2
    35                           	psect	text5,local,class=CODE,merge=1,delta=2
    36                           	psect	text6,local,class=CODE,merge=1,delta=2
    37                           	psect	text7,local,class=CODE,merge=1,delta=2
    38                           	psect	text8,local,class=CODE,merge=1,delta=2
    39                           	psect	text9,local,class=CODE,merge=1,delta=2
    40                           	psect	text10,local,class=CODE,merge=1,delta=2
    41                           	psect	text11,local,class=CODE,merge=1,delta=2
    42                           	psect	text12,local,class=CODE,merge=1,delta=2
    43                           	psect	text13,local,class=CODE,merge=1,delta=2
    44                           	psect	text14,local,class=CODE,merge=1,delta=2
    45                           	psect	text15,local,class=CODE,merge=1,delta=2
    46                           	psect	text16,local,class=CODE,merge=1,delta=2
    47                           	psect	text17,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text19,local,class=CODE,merge=1,delta=2
    50                           	psect	text20,local,class=CODE,merge=1,delta=2
    51                           	psect	text21,local,class=CODE,merge=1,delta=2
    52                           	psect	text22,local,class=CODE,merge=1,delta=2
    53                           	psect	text23,local,class=CODE,merge=1,delta=2
    54                           	psect	text24,local,class=CODE,merge=1,delta=2
    55                           	psect	text25,local,class=CODE,merge=1,delta=2
    56                           	psect	text26,local,class=CODE,merge=1,delta=2
    57                           	psect	text27,local,class=CODE,merge=1,delta=2
    58                           	psect	text28,local,class=CODE,merge=1,delta=2
    59                           	psect	text29,local,class=CODE,merge=1,delta=2
    60                           	psect	text30,local,class=CODE,merge=1,delta=2
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    62                           	dabs	1,0x620,48
    63                           	dabs	1,0x5CA,38
    64                           	dabs	1,0x5A0,42
    65                           	dabs	1,0x521,79
    66                           	dabs	1,0x520,1
    67                           	dabs	1,0x4A0,80
    68                           	dabs	1,0x448,40
    69                           	dabs	1,0x420,40
    70                           	dabs	1,0x3A0,80
    71                           	dabs	1,0x35E,18
    72                           	dabs	1,0x320,62
    73                           	dabs	1,0x2A3,77
    74                           	dabs	1,0x2193,0,_silent_night
    75                           	dabs	1,0x221E,0,_silent_night_pre
    76                           	dabs	1,0x22A8,0,_song3_pre
    77                           	dabs	1,0x2321,0,_song3
    78                           	dabs	1,0x239A,0,_song2
    79                           	dabs	1,0x7E,2
    80  0000                     
    81                           ; Version 2.35
    82                           ; Generated 13/04/2021 GMT
    83                           ; 
    84                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F15225 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000E                     	;# 
   130  0012                     	;# 
   131  0014                     	;# 
   132  0018                     	;# 
   133  001A                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011D                     	;# 
   149  011E                     	;# 
   150  011F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  018E                     	;# 
   154  018F                     	;# 
   155  0190                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  020E                     	;# 
   161  020E                     	;# 
   162  020F                     	;# 
   163  020F                     	;# 
   164  0210                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  028C                     	;# 
   169  028C                     	;# 
   170  028D                     	;# 
   171  028D                     	;# 
   172  028E                     	;# 
   173  028F                     	;# 
   174  0290                     	;# 
   175  0291                     	;# 
   176  030C                     	;# 
   177  030C                     	;# 
   178  030D                     	;# 
   179  030E                     	;# 
   180  030F                     	;# 
   181  0310                     	;# 
   182  0310                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0314                     	;# 
   187  0314                     	;# 
   188  0315                     	;# 
   189  0316                     	;# 
   190  0318                     	;# 
   191  0318                     	;# 
   192  0319                     	;# 
   193  031A                     	;# 
   194  059C                     	;# 
   195  059C                     	;# 
   196  059D                     	;# 
   197  059D                     	;# 
   198  059E                     	;# 
   199  059F                     	;# 
   200  070C                     	;# 
   201  070D                     	;# 
   202  070E                     	;# 
   203  0716                     	;# 
   204  0717                     	;# 
   205  0718                     	;# 
   206  080C                     	;# 
   207  0811                     	;# 
   208  0813                     	;# 
   209  0814                     	;# 
   210  081A                     	;# 
   211  081A                     	;# 
   212  081B                     	;# 
   213  081C                     	;# 
   214  081C                     	;# 
   215  081D                     	;# 
   216  081E                     	;# 
   217  081F                     	;# 
   218  088E                     	;# 
   219  0890                     	;# 
   220  0891                     	;# 
   221  0892                     	;# 
   222  0893                     	;# 
   223  090C                     	;# 
   224  1E8F                     	;# 
   225  1E90                     	;# 
   226  1E91                     	;# 
   227  1E92                     	;# 
   228  1E93                     	;# 
   229  1E9C                     	;# 
   230  1EA1                     	;# 
   231  1EA2                     	;# 
   232  1EC3                     	;# 
   233  1EC5                     	;# 
   234  1EC6                     	;# 
   235  1EC7                     	;# 
   236  1ECB                     	;# 
   237  1ECB                     	;# 
   238  1ECB                     	;# 
   239  1ECC                     	;# 
   240  1ECC                     	;# 
   241  1ECC                     	;# 
   242  1F10                     	;# 
   243  1F11                     	;# 
   244  1F12                     	;# 
   245  1F14                     	;# 
   246  1F15                     	;# 
   247  1F20                     	;# 
   248  1F21                     	;# 
   249  1F22                     	;# 
   250  1F23                     	;# 
   251  1F24                     	;# 
   252  1F25                     	;# 
   253  1F38                     	;# 
   254  1F39                     	;# 
   255  1F3A                     	;# 
   256  1F3B                     	;# 
   257  1F3C                     	;# 
   258  1F3D                     	;# 
   259  1F3E                     	;# 
   260  1F3F                     	;# 
   261  1F4E                     	;# 
   262  1F4F                     	;# 
   263  1F50                     	;# 
   264  1F51                     	;# 
   265  1F52                     	;# 
   266  1F53                     	;# 
   267  1F54                     	;# 
   268  1F55                     	;# 
   269  1FE4                     	;# 
   270  1FE5                     	;# 
   271  1FE6                     	;# 
   272  1FE7                     	;# 
   273  1FE8                     	;# 
   274  1FE8                     	;# 
   275  1FE9                     	;# 
   276  1FEA                     	;# 
   277  1FEB                     	;# 
   278  1FED                     	;# 
   279  1FEE                     	;# 
   280  1FEF                     	;# 
   281  0000                     	;# 
   282  0001                     	;# 
   283  0002                     	;# 
   284  0003                     	;# 
   285  0004                     	;# 
   286  0005                     	;# 
   287  0006                     	;# 
   288  0007                     	;# 
   289  0008                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000E                     	;# 
   295  0012                     	;# 
   296  0014                     	;# 
   297  0018                     	;# 
   298  001A                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011B                     	;# 
   312  011C                     	;# 
   313  011D                     	;# 
   314  011E                     	;# 
   315  011F                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  018E                     	;# 
   319  018F                     	;# 
   320  0190                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  020C                     	;# 
   324  020D                     	;# 
   325  020E                     	;# 
   326  020E                     	;# 
   327  020F                     	;# 
   328  020F                     	;# 
   329  0210                     	;# 
   330  0210                     	;# 
   331  0211                     	;# 
   332  0211                     	;# 
   333  028C                     	;# 
   334  028C                     	;# 
   335  028D                     	;# 
   336  028D                     	;# 
   337  028E                     	;# 
   338  028F                     	;# 
   339  0290                     	;# 
   340  0291                     	;# 
   341  030C                     	;# 
   342  030C                     	;# 
   343  030D                     	;# 
   344  030E                     	;# 
   345  030F                     	;# 
   346  0310                     	;# 
   347  0310                     	;# 
   348  0311                     	;# 
   349  0312                     	;# 
   350  0313                     	;# 
   351  0314                     	;# 
   352  0314                     	;# 
   353  0315                     	;# 
   354  0316                     	;# 
   355  0318                     	;# 
   356  0318                     	;# 
   357  0319                     	;# 
   358  031A                     	;# 
   359  059C                     	;# 
   360  059C                     	;# 
   361  059D                     	;# 
   362  059D                     	;# 
   363  059E                     	;# 
   364  059F                     	;# 
   365  070C                     	;# 
   366  070D                     	;# 
   367  070E                     	;# 
   368  0716                     	;# 
   369  0717                     	;# 
   370  0718                     	;# 
   371  080C                     	;# 
   372  0811                     	;# 
   373  0813                     	;# 
   374  0814                     	;# 
   375  081A                     	;# 
   376  081A                     	;# 
   377  081B                     	;# 
   378  081C                     	;# 
   379  081C                     	;# 
   380  081D                     	;# 
   381  081E                     	;# 
   382  081F                     	;# 
   383  088E                     	;# 
   384  0890                     	;# 
   385  0891                     	;# 
   386  0892                     	;# 
   387  0893                     	;# 
   388  090C                     	;# 
   389  1E8F                     	;# 
   390  1E90                     	;# 
   391  1E91                     	;# 
   392  1E92                     	;# 
   393  1E93                     	;# 
   394  1E9C                     	;# 
   395  1EA1                     	;# 
   396  1EA2                     	;# 
   397  1EC3                     	;# 
   398  1EC5                     	;# 
   399  1EC6                     	;# 
   400  1EC7                     	;# 
   401  1ECB                     	;# 
   402  1ECB                     	;# 
   403  1ECB                     	;# 
   404  1ECC                     	;# 
   405  1ECC                     	;# 
   406  1ECC                     	;# 
   407  1F10                     	;# 
   408  1F11                     	;# 
   409  1F12                     	;# 
   410  1F14                     	;# 
   411  1F15                     	;# 
   412  1F20                     	;# 
   413  1F21                     	;# 
   414  1F22                     	;# 
   415  1F23                     	;# 
   416  1F24                     	;# 
   417  1F25                     	;# 
   418  1F38                     	;# 
   419  1F39                     	;# 
   420  1F3A                     	;# 
   421  1F3B                     	;# 
   422  1F3C                     	;# 
   423  1F3D                     	;# 
   424  1F3E                     	;# 
   425  1F3F                     	;# 
   426  1F4E                     	;# 
   427  1F4F                     	;# 
   428  1F50                     	;# 
   429  1F51                     	;# 
   430  1F52                     	;# 
   431  1F53                     	;# 
   432  1F54                     	;# 
   433  1F55                     	;# 
   434  1FE4                     	;# 
   435  1FE5                     	;# 
   436  1FE6                     	;# 
   437  1FE7                     	;# 
   438  1FE8                     	;# 
   439  1FE8                     	;# 
   440  1FE9                     	;# 
   441  1FEA                     	;# 
   442  1FEB                     	;# 
   443  1FED                     	;# 
   444  1FEE                     	;# 
   445  1FEF                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000E                     	;# 
   460  0012                     	;# 
   461  0014                     	;# 
   462  0018                     	;# 
   463  001A                     	;# 
   464  009A                     	;# 
   465  009B                     	;# 
   466  009B                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009E                     	;# 
   470  009F                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0119                     	;# 
   474  011A                     	;# 
   475  011B                     	;# 
   476  011B                     	;# 
   477  011C                     	;# 
   478  011D                     	;# 
   479  011E                     	;# 
   480  011F                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483  018E                     	;# 
   484  018F                     	;# 
   485  0190                     	;# 
   486  0191                     	;# 
   487  0192                     	;# 
   488  020C                     	;# 
   489  020D                     	;# 
   490  020E                     	;# 
   491  020E                     	;# 
   492  020F                     	;# 
   493  020F                     	;# 
   494  0210                     	;# 
   495  0210                     	;# 
   496  0211                     	;# 
   497  0211                     	;# 
   498  028C                     	;# 
   499  028C                     	;# 
   500  028D                     	;# 
   501  028D                     	;# 
   502  028E                     	;# 
   503  028F                     	;# 
   504  0290                     	;# 
   505  0291                     	;# 
   506  030C                     	;# 
   507  030C                     	;# 
   508  030D                     	;# 
   509  030E                     	;# 
   510  030F                     	;# 
   511  0310                     	;# 
   512  0310                     	;# 
   513  0311                     	;# 
   514  0312                     	;# 
   515  0313                     	;# 
   516  0314                     	;# 
   517  0314                     	;# 
   518  0315                     	;# 
   519  0316                     	;# 
   520  0318                     	;# 
   521  0318                     	;# 
   522  0319                     	;# 
   523  031A                     	;# 
   524  059C                     	;# 
   525  059C                     	;# 
   526  059D                     	;# 
   527  059D                     	;# 
   528  059E                     	;# 
   529  059F                     	;# 
   530  070C                     	;# 
   531  070D                     	;# 
   532  070E                     	;# 
   533  0716                     	;# 
   534  0717                     	;# 
   535  0718                     	;# 
   536  080C                     	;# 
   537  0811                     	;# 
   538  0813                     	;# 
   539  0814                     	;# 
   540  081A                     	;# 
   541  081A                     	;# 
   542  081B                     	;# 
   543  081C                     	;# 
   544  081C                     	;# 
   545  081D                     	;# 
   546  081E                     	;# 
   547  081F                     	;# 
   548  088E                     	;# 
   549  0890                     	;# 
   550  0891                     	;# 
   551  0892                     	;# 
   552  0893                     	;# 
   553  090C                     	;# 
   554  1E8F                     	;# 
   555  1E90                     	;# 
   556  1E91                     	;# 
   557  1E92                     	;# 
   558  1E93                     	;# 
   559  1E9C                     	;# 
   560  1EA1                     	;# 
   561  1EA2                     	;# 
   562  1EC3                     	;# 
   563  1EC5                     	;# 
   564  1EC6                     	;# 
   565  1EC7                     	;# 
   566  1ECB                     	;# 
   567  1ECB                     	;# 
   568  1ECB                     	;# 
   569  1ECC                     	;# 
   570  1ECC                     	;# 
   571  1ECC                     	;# 
   572  1F10                     	;# 
   573  1F11                     	;# 
   574  1F12                     	;# 
   575  1F14                     	;# 
   576  1F15                     	;# 
   577  1F20                     	;# 
   578  1F21                     	;# 
   579  1F22                     	;# 
   580  1F23                     	;# 
   581  1F24                     	;# 
   582  1F25                     	;# 
   583  1F38                     	;# 
   584  1F39                     	;# 
   585  1F3A                     	;# 
   586  1F3B                     	;# 
   587  1F3C                     	;# 
   588  1F3D                     	;# 
   589  1F3E                     	;# 
   590  1F3F                     	;# 
   591  1F4E                     	;# 
   592  1F4F                     	;# 
   593  1F50                     	;# 
   594  1F51                     	;# 
   595  1F52                     	;# 
   596  1F53                     	;# 
   597  1F54                     	;# 
   598  1F55                     	;# 
   599  1FE4                     	;# 
   600  1FE5                     	;# 
   601  1FE6                     	;# 
   602  1FE7                     	;# 
   603  1FE8                     	;# 
   604  1FE8                     	;# 
   605  1FE9                     	;# 
   606  1FEA                     	;# 
   607  1FEB                     	;# 
   608  1FED                     	;# 
   609  1FEE                     	;# 
   610  1FEF                     	;# 
   611  0000                     	;# 
   612  0001                     	;# 
   613  0002                     	;# 
   614  0003                     	;# 
   615  0004                     	;# 
   616  0005                     	;# 
   617  0006                     	;# 
   618  0007                     	;# 
   619  0008                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000E                     	;# 
   625  0012                     	;# 
   626  0014                     	;# 
   627  0018                     	;# 
   628  001A                     	;# 
   629  009A                     	;# 
   630  009B                     	;# 
   631  009B                     	;# 
   632  009C                     	;# 
   633  009D                     	;# 
   634  009E                     	;# 
   635  009F                     	;# 
   636  010E                     	;# 
   637  010F                     	;# 
   638  0119                     	;# 
   639  011A                     	;# 
   640  011B                     	;# 
   641  011B                     	;# 
   642  011C                     	;# 
   643  011D                     	;# 
   644  011E                     	;# 
   645  011F                     	;# 
   646  018C                     	;# 
   647  018D                     	;# 
   648  018E                     	;# 
   649  018F                     	;# 
   650  0190                     	;# 
   651  0191                     	;# 
   652  0192                     	;# 
   653  020C                     	;# 
   654  020D                     	;# 
   655  020E                     	;# 
   656  020E                     	;# 
   657  020F                     	;# 
   658  020F                     	;# 
   659  0210                     	;# 
   660  0210                     	;# 
   661  0211                     	;# 
   662  0211                     	;# 
   663  028C                     	;# 
   664  028C                     	;# 
   665  028D                     	;# 
   666  028D                     	;# 
   667  028E                     	;# 
   668  028F                     	;# 
   669  0290                     	;# 
   670  0291                     	;# 
   671  030C                     	;# 
   672  030C                     	;# 
   673  030D                     	;# 
   674  030E                     	;# 
   675  030F                     	;# 
   676  0310                     	;# 
   677  0310                     	;# 
   678  0311                     	;# 
   679  0312                     	;# 
   680  0313                     	;# 
   681  0314                     	;# 
   682  0314                     	;# 
   683  0315                     	;# 
   684  0316                     	;# 
   685  0318                     	;# 
   686  0318                     	;# 
   687  0319                     	;# 
   688  031A                     	;# 
   689  059C                     	;# 
   690  059C                     	;# 
   691  059D                     	;# 
   692  059D                     	;# 
   693  059E                     	;# 
   694  059F                     	;# 
   695  070C                     	;# 
   696  070D                     	;# 
   697  070E                     	;# 
   698  0716                     	;# 
   699  0717                     	;# 
   700  0718                     	;# 
   701  080C                     	;# 
   702  0811                     	;# 
   703  0813                     	;# 
   704  0814                     	;# 
   705  081A                     	;# 
   706  081A                     	;# 
   707  081B                     	;# 
   708  081C                     	;# 
   709  081C                     	;# 
   710  081D                     	;# 
   711  081E                     	;# 
   712  081F                     	;# 
   713  088E                     	;# 
   714  0890                     	;# 
   715  0891                     	;# 
   716  0892                     	;# 
   717  0893                     	;# 
   718  090C                     	;# 
   719  1E8F                     	;# 
   720  1E90                     	;# 
   721  1E91                     	;# 
   722  1E92                     	;# 
   723  1E93                     	;# 
   724  1E9C                     	;# 
   725  1EA1                     	;# 
   726  1EA2                     	;# 
   727  1EC3                     	;# 
   728  1EC5                     	;# 
   729  1EC6                     	;# 
   730  1EC7                     	;# 
   731  1ECB                     	;# 
   732  1ECB                     	;# 
   733  1ECB                     	;# 
   734  1ECC                     	;# 
   735  1ECC                     	;# 
   736  1ECC                     	;# 
   737  1F10                     	;# 
   738  1F11                     	;# 
   739  1F12                     	;# 
   740  1F14                     	;# 
   741  1F15                     	;# 
   742  1F20                     	;# 
   743  1F21                     	;# 
   744  1F22                     	;# 
   745  1F23                     	;# 
   746  1F24                     	;# 
   747  1F25                     	;# 
   748  1F38                     	;# 
   749  1F39                     	;# 
   750  1F3A                     	;# 
   751  1F3B                     	;# 
   752  1F3C                     	;# 
   753  1F3D                     	;# 
   754  1F3E                     	;# 
   755  1F3F                     	;# 
   756  1F4E                     	;# 
   757  1F4F                     	;# 
   758  1F50                     	;# 
   759  1F51                     	;# 
   760  1F52                     	;# 
   761  1F53                     	;# 
   762  1F54                     	;# 
   763  1F55                     	;# 
   764  1FE4                     	;# 
   765  1FE5                     	;# 
   766  1FE6                     	;# 
   767  1FE7                     	;# 
   768  1FE8                     	;# 
   769  1FE8                     	;# 
   770  1FE9                     	;# 
   771  1FEA                     	;# 
   772  1FEB                     	;# 
   773  1FED                     	;# 
   774  1FEE                     	;# 
   775  1FEF                     	;# 
   776  0000                     	;# 
   777  0001                     	;# 
   778  0002                     	;# 
   779  0003                     	;# 
   780  0004                     	;# 
   781  0005                     	;# 
   782  0006                     	;# 
   783  0007                     	;# 
   784  0008                     	;# 
   785  0009                     	;# 
   786  000A                     	;# 
   787  000B                     	;# 
   788  000C                     	;# 
   789  000E                     	;# 
   790  0012                     	;# 
   791  0014                     	;# 
   792  0018                     	;# 
   793  001A                     	;# 
   794  009A                     	;# 
   795  009B                     	;# 
   796  009B                     	;# 
   797  009C                     	;# 
   798  009D                     	;# 
   799  009E                     	;# 
   800  009F                     	;# 
   801  010E                     	;# 
   802  010F                     	;# 
   803  0119                     	;# 
   804  011A                     	;# 
   805  011B                     	;# 
   806  011B                     	;# 
   807  011C                     	;# 
   808  011D                     	;# 
   809  011E                     	;# 
   810  011F                     	;# 
   811  018C                     	;# 
   812  018D                     	;# 
   813  018E                     	;# 
   814  018F                     	;# 
   815  0190                     	;# 
   816  0191                     	;# 
   817  0192                     	;# 
   818  020C                     	;# 
   819  020D                     	;# 
   820  020E                     	;# 
   821  020E                     	;# 
   822  020F                     	;# 
   823  020F                     	;# 
   824  0210                     	;# 
   825  0210                     	;# 
   826  0211                     	;# 
   827  0211                     	;# 
   828  028C                     	;# 
   829  028C                     	;# 
   830  028D                     	;# 
   831  028D                     	;# 
   832  028E                     	;# 
   833  028F                     	;# 
   834  0290                     	;# 
   835  0291                     	;# 
   836  030C                     	;# 
   837  030C                     	;# 
   838  030D                     	;# 
   839  030E                     	;# 
   840  030F                     	;# 
   841  0310                     	;# 
   842  0310                     	;# 
   843  0311                     	;# 
   844  0312                     	;# 
   845  0313                     	;# 
   846  0314                     	;# 
   847  0314                     	;# 
   848  0315                     	;# 
   849  0316                     	;# 
   850  0318                     	;# 
   851  0318                     	;# 
   852  0319                     	;# 
   853  031A                     	;# 
   854  059C                     	;# 
   855  059C                     	;# 
   856  059D                     	;# 
   857  059D                     	;# 
   858  059E                     	;# 
   859  059F                     	;# 
   860  070C                     	;# 
   861  070D                     	;# 
   862  070E                     	;# 
   863  0716                     	;# 
   864  0717                     	;# 
   865  0718                     	;# 
   866  080C                     	;# 
   867  0811                     	;# 
   868  0813                     	;# 
   869  0814                     	;# 
   870  081A                     	;# 
   871  081A                     	;# 
   872  081B                     	;# 
   873  081C                     	;# 
   874  081C                     	;# 
   875  081D                     	;# 
   876  081E                     	;# 
   877  081F                     	;# 
   878  088E                     	;# 
   879  0890                     	;# 
   880  0891                     	;# 
   881  0892                     	;# 
   882  0893                     	;# 
   883  090C                     	;# 
   884  1E8F                     	;# 
   885  1E90                     	;# 
   886  1E91                     	;# 
   887  1E92                     	;# 
   888  1E93                     	;# 
   889  1E9C                     	;# 
   890  1EA1                     	;# 
   891  1EA2                     	;# 
   892  1EC3                     	;# 
   893  1EC5                     	;# 
   894  1EC6                     	;# 
   895  1EC7                     	;# 
   896  1ECB                     	;# 
   897  1ECB                     	;# 
   898  1ECB                     	;# 
   899  1ECC                     	;# 
   900  1ECC                     	;# 
   901  1ECC                     	;# 
   902  1F10                     	;# 
   903  1F11                     	;# 
   904  1F12                     	;# 
   905  1F14                     	;# 
   906  1F15                     	;# 
   907  1F20                     	;# 
   908  1F21                     	;# 
   909  1F22                     	;# 
   910  1F23                     	;# 
   911  1F24                     	;# 
   912  1F25                     	;# 
   913  1F38                     	;# 
   914  1F39                     	;# 
   915  1F3A                     	;# 
   916  1F3B                     	;# 
   917  1F3C                     	;# 
   918  1F3D                     	;# 
   919  1F3E                     	;# 
   920  1F3F                     	;# 
   921  1F4E                     	;# 
   922  1F4F                     	;# 
   923  1F50                     	;# 
   924  1F51                     	;# 
   925  1F52                     	;# 
   926  1F53                     	;# 
   927  1F54                     	;# 
   928  1F55                     	;# 
   929  1FE4                     	;# 
   930  1FE5                     	;# 
   931  1FE6                     	;# 
   932  1FE7                     	;# 
   933  1FE8                     	;# 
   934  1FE8                     	;# 
   935  1FE9                     	;# 
   936  1FEA                     	;# 
   937  1FEB                     	;# 
   938  1FED                     	;# 
   939  1FEE                     	;# 
   940  1FEF                     	;# 
   941  0000                     	;# 
   942  0001                     	;# 
   943  0002                     	;# 
   944  0003                     	;# 
   945  0004                     	;# 
   946  0005                     	;# 
   947  0006                     	;# 
   948  0007                     	;# 
   949  0008                     	;# 
   950  0009                     	;# 
   951  000A                     	;# 
   952  000B                     	;# 
   953  000C                     	;# 
   954  000E                     	;# 
   955  0012                     	;# 
   956  0014                     	;# 
   957  0018                     	;# 
   958  001A                     	;# 
   959  009A                     	;# 
   960  009B                     	;# 
   961  009B                     	;# 
   962  009C                     	;# 
   963  009D                     	;# 
   964  009E                     	;# 
   965  009F                     	;# 
   966  010E                     	;# 
   967  010F                     	;# 
   968  0119                     	;# 
   969  011A                     	;# 
   970  011B                     	;# 
   971  011B                     	;# 
   972  011C                     	;# 
   973  011D                     	;# 
   974  011E                     	;# 
   975  011F                     	;# 
   976  018C                     	;# 
   977  018D                     	;# 
   978  018E                     	;# 
   979  018F                     	;# 
   980  0190                     	;# 
   981  0191                     	;# 
   982  0192                     	;# 
   983  020C                     	;# 
   984  020D                     	;# 
   985  020E                     	;# 
   986  020E                     	;# 
   987  020F                     	;# 
   988  020F                     	;# 
   989  0210                     	;# 
   990  0210                     	;# 
   991  0211                     	;# 
   992  0211                     	;# 
   993  028C                     	;# 
   994  028C                     	;# 
   995  028D                     	;# 
   996  028D                     	;# 
   997  028E                     	;# 
   998  028F                     	;# 
   999  0290                     	;# 
  1000  0291                     	;# 
  1001  030C                     	;# 
  1002  030C                     	;# 
  1003  030D                     	;# 
  1004  030E                     	;# 
  1005  030F                     	;# 
  1006  0310                     	;# 
  1007  0310                     	;# 
  1008  0311                     	;# 
  1009  0312                     	;# 
  1010  0313                     	;# 
  1011  0314                     	;# 
  1012  0314                     	;# 
  1013  0315                     	;# 
  1014  0316                     	;# 
  1015  0318                     	;# 
  1016  0318                     	;# 
  1017  0319                     	;# 
  1018  031A                     	;# 
  1019  059C                     	;# 
  1020  059C                     	;# 
  1021  059D                     	;# 
  1022  059D                     	;# 
  1023  059E                     	;# 
  1024  059F                     	;# 
  1025  070C                     	;# 
  1026  070D                     	;# 
  1027  070E                     	;# 
  1028  0716                     	;# 
  1029  0717                     	;# 
  1030  0718                     	;# 
  1031  080C                     	;# 
  1032  0811                     	;# 
  1033  0813                     	;# 
  1034  0814                     	;# 
  1035  081A                     	;# 
  1036  081A                     	;# 
  1037  081B                     	;# 
  1038  081C                     	;# 
  1039  081C                     	;# 
  1040  081D                     	;# 
  1041  081E                     	;# 
  1042  081F                     	;# 
  1043  088E                     	;# 
  1044  0890                     	;# 
  1045  0891                     	;# 
  1046  0892                     	;# 
  1047  0893                     	;# 
  1048  090C                     	;# 
  1049  1E8F                     	;# 
  1050  1E90                     	;# 
  1051  1E91                     	;# 
  1052  1E92                     	;# 
  1053  1E93                     	;# 
  1054  1E9C                     	;# 
  1055  1EA1                     	;# 
  1056  1EA2                     	;# 
  1057  1EC3                     	;# 
  1058  1EC5                     	;# 
  1059  1EC6                     	;# 
  1060  1EC7                     	;# 
  1061  1ECB                     	;# 
  1062  1ECB                     	;# 
  1063  1ECB                     	;# 
  1064  1ECC                     	;# 
  1065  1ECC                     	;# 
  1066  1ECC                     	;# 
  1067  1F10                     	;# 
  1068  1F11                     	;# 
  1069  1F12                     	;# 
  1070  1F14                     	;# 
  1071  1F15                     	;# 
  1072  1F20                     	;# 
  1073  1F21                     	;# 
  1074  1F22                     	;# 
  1075  1F23                     	;# 
  1076  1F24                     	;# 
  1077  1F25                     	;# 
  1078  1F38                     	;# 
  1079  1F39                     	;# 
  1080  1F3A                     	;# 
  1081  1F3B                     	;# 
  1082  1F3C                     	;# 
  1083  1F3D                     	;# 
  1084  1F3E                     	;# 
  1085  1F3F                     	;# 
  1086  1F4E                     	;# 
  1087  1F4F                     	;# 
  1088  1F50                     	;# 
  1089  1F51                     	;# 
  1090  1F52                     	;# 
  1091  1F53                     	;# 
  1092  1F54                     	;# 
  1093  1F55                     	;# 
  1094  1FE4                     	;# 
  1095  1FE5                     	;# 
  1096  1FE6                     	;# 
  1097  1FE7                     	;# 
  1098  1FE8                     	;# 
  1099  1FE8                     	;# 
  1100  1FE9                     	;# 
  1101  1FEA                     	;# 
  1102  1FEB                     	;# 
  1103  1FED                     	;# 
  1104  1FEE                     	;# 
  1105  1FEF                     	;# 
  1106  0000                     	;# 
  1107  0001                     	;# 
  1108  0002                     	;# 
  1109  0003                     	;# 
  1110  0004                     	;# 
  1111  0005                     	;# 
  1112  0006                     	;# 
  1113  0007                     	;# 
  1114  0008                     	;# 
  1115  0009                     	;# 
  1116  000A                     	;# 
  1117  000B                     	;# 
  1118  000C                     	;# 
  1119  000E                     	;# 
  1120  0012                     	;# 
  1121  0014                     	;# 
  1122  0018                     	;# 
  1123  001A                     	;# 
  1124  009A                     	;# 
  1125  009B                     	;# 
  1126  009B                     	;# 
  1127  009C                     	;# 
  1128  009D                     	;# 
  1129  009E                     	;# 
  1130  009F                     	;# 
  1131  010E                     	;# 
  1132  010F                     	;# 
  1133  0119                     	;# 
  1134  011A                     	;# 
  1135  011B                     	;# 
  1136  011B                     	;# 
  1137  011C                     	;# 
  1138  011D                     	;# 
  1139  011E                     	;# 
  1140  011F                     	;# 
  1141  018C                     	;# 
  1142  018D                     	;# 
  1143  018E                     	;# 
  1144  018F                     	;# 
  1145  0190                     	;# 
  1146  0191                     	;# 
  1147  0192                     	;# 
  1148  020C                     	;# 
  1149  020D                     	;# 
  1150  020E                     	;# 
  1151  020E                     	;# 
  1152  020F                     	;# 
  1153  020F                     	;# 
  1154  0210                     	;# 
  1155  0210                     	;# 
  1156  0211                     	;# 
  1157  0211                     	;# 
  1158  028C                     	;# 
  1159  028C                     	;# 
  1160  028D                     	;# 
  1161  028D                     	;# 
  1162  028E                     	;# 
  1163  028F                     	;# 
  1164  0290                     	;# 
  1165  0291                     	;# 
  1166  030C                     	;# 
  1167  030C                     	;# 
  1168  030D                     	;# 
  1169  030E                     	;# 
  1170  030F                     	;# 
  1171  0310                     	;# 
  1172  0310                     	;# 
  1173  0311                     	;# 
  1174  0312                     	;# 
  1175  0313                     	;# 
  1176  0314                     	;# 
  1177  0314                     	;# 
  1178  0315                     	;# 
  1179  0316                     	;# 
  1180  0318                     	;# 
  1181  0318                     	;# 
  1182  0319                     	;# 
  1183  031A                     	;# 
  1184  059C                     	;# 
  1185  059C                     	;# 
  1186  059D                     	;# 
  1187  059D                     	;# 
  1188  059E                     	;# 
  1189  059F                     	;# 
  1190  070C                     	;# 
  1191  070D                     	;# 
  1192  070E                     	;# 
  1193  0716                     	;# 
  1194  0717                     	;# 
  1195  0718                     	;# 
  1196  080C                     	;# 
  1197  0811                     	;# 
  1198  0813                     	;# 
  1199  0814                     	;# 
  1200  081A                     	;# 
  1201  081A                     	;# 
  1202  081B                     	;# 
  1203  081C                     	;# 
  1204  081C                     	;# 
  1205  081D                     	;# 
  1206  081E                     	;# 
  1207  081F                     	;# 
  1208  088E                     	;# 
  1209  0890                     	;# 
  1210  0891                     	;# 
  1211  0892                     	;# 
  1212  0893                     	;# 
  1213  090C                     	;# 
  1214  1E8F                     	;# 
  1215  1E90                     	;# 
  1216  1E91                     	;# 
  1217  1E92                     	;# 
  1218  1E93                     	;# 
  1219  1E9C                     	;# 
  1220  1EA1                     	;# 
  1221  1EA2                     	;# 
  1222  1EC3                     	;# 
  1223  1EC5                     	;# 
  1224  1EC6                     	;# 
  1225  1EC7                     	;# 
  1226  1ECB                     	;# 
  1227  1ECB                     	;# 
  1228  1ECB                     	;# 
  1229  1ECC                     	;# 
  1230  1ECC                     	;# 
  1231  1ECC                     	;# 
  1232  1F10                     	;# 
  1233  1F11                     	;# 
  1234  1F12                     	;# 
  1235  1F14                     	;# 
  1236  1F15                     	;# 
  1237  1F20                     	;# 
  1238  1F21                     	;# 
  1239  1F22                     	;# 
  1240  1F23                     	;# 
  1241  1F24                     	;# 
  1242  1F25                     	;# 
  1243  1F38                     	;# 
  1244  1F39                     	;# 
  1245  1F3A                     	;# 
  1246  1F3B                     	;# 
  1247  1F3C                     	;# 
  1248  1F3D                     	;# 
  1249  1F3E                     	;# 
  1250  1F3F                     	;# 
  1251  1F4E                     	;# 
  1252  1F4F                     	;# 
  1253  1F50                     	;# 
  1254  1F51                     	;# 
  1255  1F52                     	;# 
  1256  1F53                     	;# 
  1257  1F54                     	;# 
  1258  1F55                     	;# 
  1259  1FE4                     	;# 
  1260  1FE5                     	;# 
  1261  1FE6                     	;# 
  1262  1FE7                     	;# 
  1263  1FE8                     	;# 
  1264  1FE8                     	;# 
  1265  1FE9                     	;# 
  1266  1FEA                     	;# 
  1267  1FEB                     	;# 
  1268  1FED                     	;# 
  1269  1FEE                     	;# 
  1270  1FEF                     	;# 
  1271  0000                     	;# 
  1272  0001                     	;# 
  1273  0002                     	;# 
  1274  0003                     	;# 
  1275  0004                     	;# 
  1276  0005                     	;# 
  1277  0006                     	;# 
  1278  0007                     	;# 
  1279  0008                     	;# 
  1280  0009                     	;# 
  1281  000A                     	;# 
  1282  000B                     	;# 
  1283  000C                     	;# 
  1284  000E                     	;# 
  1285  0012                     	;# 
  1286  0014                     	;# 
  1287  0018                     	;# 
  1288  001A                     	;# 
  1289  009A                     	;# 
  1290  009B                     	;# 
  1291  009B                     	;# 
  1292  009C                     	;# 
  1293  009D                     	;# 
  1294  009E                     	;# 
  1295  009F                     	;# 
  1296  010E                     	;# 
  1297  010F                     	;# 
  1298  0119                     	;# 
  1299  011A                     	;# 
  1300  011B                     	;# 
  1301  011B                     	;# 
  1302  011C                     	;# 
  1303  011D                     	;# 
  1304  011E                     	;# 
  1305  011F                     	;# 
  1306  018C                     	;# 
  1307  018D                     	;# 
  1308  018E                     	;# 
  1309  018F                     	;# 
  1310  0190                     	;# 
  1311  0191                     	;# 
  1312  0192                     	;# 
  1313  020C                     	;# 
  1314  020D                     	;# 
  1315  020E                     	;# 
  1316  020E                     	;# 
  1317  020F                     	;# 
  1318  020F                     	;# 
  1319  0210                     	;# 
  1320  0210                     	;# 
  1321  0211                     	;# 
  1322  0211                     	;# 
  1323  028C                     	;# 
  1324  028C                     	;# 
  1325  028D                     	;# 
  1326  028D                     	;# 
  1327  028E                     	;# 
  1328  028F                     	;# 
  1329  0290                     	;# 
  1330  0291                     	;# 
  1331  030C                     	;# 
  1332  030C                     	;# 
  1333  030D                     	;# 
  1334  030E                     	;# 
  1335  030F                     	;# 
  1336  0310                     	;# 
  1337  0310                     	;# 
  1338  0311                     	;# 
  1339  0312                     	;# 
  1340  0313                     	;# 
  1341  0314                     	;# 
  1342  0314                     	;# 
  1343  0315                     	;# 
  1344  0316                     	;# 
  1345  0318                     	;# 
  1346  0318                     	;# 
  1347  0319                     	;# 
  1348  031A                     	;# 
  1349  059C                     	;# 
  1350  059C                     	;# 
  1351  059D                     	;# 
  1352  059D                     	;# 
  1353  059E                     	;# 
  1354  059F                     	;# 
  1355  070C                     	;# 
  1356  070D                     	;# 
  1357  070E                     	;# 
  1358  0716                     	;# 
  1359  0717                     	;# 
  1360  0718                     	;# 
  1361  080C                     	;# 
  1362  0811                     	;# 
  1363  0813                     	;# 
  1364  0814                     	;# 
  1365  081A                     	;# 
  1366  081A                     	;# 
  1367  081B                     	;# 
  1368  081C                     	;# 
  1369  081C                     	;# 
  1370  081D                     	;# 
  1371  081E                     	;# 
  1372  081F                     	;# 
  1373  088E                     	;# 
  1374  0890                     	;# 
  1375  0891                     	;# 
  1376  0892                     	;# 
  1377  0893                     	;# 
  1378  090C                     	;# 
  1379  1E8F                     	;# 
  1380  1E90                     	;# 
  1381  1E91                     	;# 
  1382  1E92                     	;# 
  1383  1E93                     	;# 
  1384  1E9C                     	;# 
  1385  1EA1                     	;# 
  1386  1EA2                     	;# 
  1387  1EC3                     	;# 
  1388  1EC5                     	;# 
  1389  1EC6                     	;# 
  1390  1EC7                     	;# 
  1391  1ECB                     	;# 
  1392  1ECB                     	;# 
  1393  1ECB                     	;# 
  1394  1ECC                     	;# 
  1395  1ECC                     	;# 
  1396  1ECC                     	;# 
  1397  1F10                     	;# 
  1398  1F11                     	;# 
  1399  1F12                     	;# 
  1400  1F14                     	;# 
  1401  1F15                     	;# 
  1402  1F20                     	;# 
  1403  1F21                     	;# 
  1404  1F22                     	;# 
  1405  1F23                     	;# 
  1406  1F24                     	;# 
  1407  1F25                     	;# 
  1408  1F38                     	;# 
  1409  1F39                     	;# 
  1410  1F3A                     	;# 
  1411  1F3B                     	;# 
  1412  1F3C                     	;# 
  1413  1F3D                     	;# 
  1414  1F3E                     	;# 
  1415  1F3F                     	;# 
  1416  1F4E                     	;# 
  1417  1F4F                     	;# 
  1418  1F50                     	;# 
  1419  1F51                     	;# 
  1420  1F52                     	;# 
  1421  1F53                     	;# 
  1422  1F54                     	;# 
  1423  1F55                     	;# 
  1424  1FE4                     	;# 
  1425  1FE5                     	;# 
  1426  1FE6                     	;# 
  1427  1FE7                     	;# 
  1428  1FE8                     	;# 
  1429  1FE8                     	;# 
  1430  1FE9                     	;# 
  1431  1FEA                     	;# 
  1432  1FEB                     	;# 
  1433  1FED                     	;# 
  1434  1FEE                     	;# 
  1435  1FEF                     	;# 
  1436  0000                     	;# 
  1437  0001                     	;# 
  1438  0002                     	;# 
  1439  0003                     	;# 
  1440  0004                     	;# 
  1441  0005                     	;# 
  1442  0006                     	;# 
  1443  0007                     	;# 
  1444  0008                     	;# 
  1445  0009                     	;# 
  1446  000A                     	;# 
  1447  000B                     	;# 
  1448  000C                     	;# 
  1449  000E                     	;# 
  1450  0012                     	;# 
  1451  0014                     	;# 
  1452  0018                     	;# 
  1453  001A                     	;# 
  1454  009A                     	;# 
  1455  009B                     	;# 
  1456  009B                     	;# 
  1457  009C                     	;# 
  1458  009D                     	;# 
  1459  009E                     	;# 
  1460  009F                     	;# 
  1461  010E                     	;# 
  1462  010F                     	;# 
  1463  0119                     	;# 
  1464  011A                     	;# 
  1465  011B                     	;# 
  1466  011B                     	;# 
  1467  011C                     	;# 
  1468  011D                     	;# 
  1469  011E                     	;# 
  1470  011F                     	;# 
  1471  018C                     	;# 
  1472  018D                     	;# 
  1473  018E                     	;# 
  1474  018F                     	;# 
  1475  0190                     	;# 
  1476  0191                     	;# 
  1477  0192                     	;# 
  1478  020C                     	;# 
  1479  020D                     	;# 
  1480  020E                     	;# 
  1481  020E                     	;# 
  1482  020F                     	;# 
  1483  020F                     	;# 
  1484  0210                     	;# 
  1485  0210                     	;# 
  1486  0211                     	;# 
  1487  0211                     	;# 
  1488  028C                     	;# 
  1489  028C                     	;# 
  1490  028D                     	;# 
  1491  028D                     	;# 
  1492  028E                     	;# 
  1493  028F                     	;# 
  1494  0290                     	;# 
  1495  0291                     	;# 
  1496  030C                     	;# 
  1497  030C                     	;# 
  1498  030D                     	;# 
  1499  030E                     	;# 
  1500  030F                     	;# 
  1501  0310                     	;# 
  1502  0310                     	;# 
  1503  0311                     	;# 
  1504  0312                     	;# 
  1505  0313                     	;# 
  1506  0314                     	;# 
  1507  0314                     	;# 
  1508  0315                     	;# 
  1509  0316                     	;# 
  1510  0318                     	;# 
  1511  0318                     	;# 
  1512  0319                     	;# 
  1513  031A                     	;# 
  1514  059C                     	;# 
  1515  059C                     	;# 
  1516  059D                     	;# 
  1517  059D                     	;# 
  1518  059E                     	;# 
  1519  059F                     	;# 
  1520  070C                     	;# 
  1521  070D                     	;# 
  1522  070E                     	;# 
  1523  0716                     	;# 
  1524  0717                     	;# 
  1525  0718                     	;# 
  1526  080C                     	;# 
  1527  0811                     	;# 
  1528  0813                     	;# 
  1529  0814                     	;# 
  1530  081A                     	;# 
  1531  081A                     	;# 
  1532  081B                     	;# 
  1533  081C                     	;# 
  1534  081C                     	;# 
  1535  081D                     	;# 
  1536  081E                     	;# 
  1537  081F                     	;# 
  1538  088E                     	;# 
  1539  0890                     	;# 
  1540  0891                     	;# 
  1541  0892                     	;# 
  1542  0893                     	;# 
  1543  090C                     	;# 
  1544  1E8F                     	;# 
  1545  1E90                     	;# 
  1546  1E91                     	;# 
  1547  1E92                     	;# 
  1548  1E93                     	;# 
  1549  1E9C                     	;# 
  1550  1EA1                     	;# 
  1551  1EA2                     	;# 
  1552  1EC3                     	;# 
  1553  1EC5                     	;# 
  1554  1EC6                     	;# 
  1555  1EC7                     	;# 
  1556  1ECB                     	;# 
  1557  1ECB                     	;# 
  1558  1ECB                     	;# 
  1559  1ECC                     	;# 
  1560  1ECC                     	;# 
  1561  1ECC                     	;# 
  1562  1F10                     	;# 
  1563  1F11                     	;# 
  1564  1F12                     	;# 
  1565  1F14                     	;# 
  1566  1F15                     	;# 
  1567  1F20                     	;# 
  1568  1F21                     	;# 
  1569  1F22                     	;# 
  1570  1F23                     	;# 
  1571  1F24                     	;# 
  1572  1F25                     	;# 
  1573  1F38                     	;# 
  1574  1F39                     	;# 
  1575  1F3A                     	;# 
  1576  1F3B                     	;# 
  1577  1F3C                     	;# 
  1578  1F3D                     	;# 
  1579  1F3E                     	;# 
  1580  1F3F                     	;# 
  1581  1F4E                     	;# 
  1582  1F4F                     	;# 
  1583  1F50                     	;# 
  1584  1F51                     	;# 
  1585  1F52                     	;# 
  1586  1F53                     	;# 
  1587  1F54                     	;# 
  1588  1F55                     	;# 
  1589  1FE4                     	;# 
  1590  1FE5                     	;# 
  1591  1FE6                     	;# 
  1592  1FE7                     	;# 
  1593  1FE8                     	;# 
  1594  1FE8                     	;# 
  1595  1FE9                     	;# 
  1596  1FEA                     	;# 
  1597  1FEB                     	;# 
  1598  1FED                     	;# 
  1599  1FEE                     	;# 
  1600  1FEF                     	;# 
  1601  0000                     	;# 
  1602  0001                     	;# 
  1603  0002                     	;# 
  1604  0003                     	;# 
  1605  0004                     	;# 
  1606  0005                     	;# 
  1607  0006                     	;# 
  1608  0007                     	;# 
  1609  0008                     	;# 
  1610  0009                     	;# 
  1611  000A                     	;# 
  1612  000B                     	;# 
  1613  000C                     	;# 
  1614  000E                     	;# 
  1615  0012                     	;# 
  1616  0014                     	;# 
  1617  0018                     	;# 
  1618  001A                     	;# 
  1619  009A                     	;# 
  1620  009B                     	;# 
  1621  009B                     	;# 
  1622  009C                     	;# 
  1623  009D                     	;# 
  1624  009E                     	;# 
  1625  009F                     	;# 
  1626  010E                     	;# 
  1627  010F                     	;# 
  1628  0119                     	;# 
  1629  011A                     	;# 
  1630  011B                     	;# 
  1631  011B                     	;# 
  1632  011C                     	;# 
  1633  011D                     	;# 
  1634  011E                     	;# 
  1635  011F                     	;# 
  1636  018C                     	;# 
  1637  018D                     	;# 
  1638  018E                     	;# 
  1639  018F                     	;# 
  1640  0190                     	;# 
  1641  0191                     	;# 
  1642  0192                     	;# 
  1643  020C                     	;# 
  1644  020D                     	;# 
  1645  020E                     	;# 
  1646  020E                     	;# 
  1647  020F                     	;# 
  1648  020F                     	;# 
  1649  0210                     	;# 
  1650  0210                     	;# 
  1651  0211                     	;# 
  1652  0211                     	;# 
  1653  028C                     	;# 
  1654  028C                     	;# 
  1655  028D                     	;# 
  1656  028D                     	;# 
  1657  028E                     	;# 
  1658  028F                     	;# 
  1659  0290                     	;# 
  1660  0291                     	;# 
  1661  030C                     	;# 
  1662  030C                     	;# 
  1663  030D                     	;# 
  1664  030E                     	;# 
  1665  030F                     	;# 
  1666  0310                     	;# 
  1667  0310                     	;# 
  1668  0311                     	;# 
  1669  0312                     	;# 
  1670  0313                     	;# 
  1671  0314                     	;# 
  1672  0314                     	;# 
  1673  0315                     	;# 
  1674  0316                     	;# 
  1675  0318                     	;# 
  1676  0318                     	;# 
  1677  0319                     	;# 
  1678  031A                     	;# 
  1679  059C                     	;# 
  1680  059C                     	;# 
  1681  059D                     	;# 
  1682  059D                     	;# 
  1683  059E                     	;# 
  1684  059F                     	;# 
  1685  070C                     	;# 
  1686  070D                     	;# 
  1687  070E                     	;# 
  1688  0716                     	;# 
  1689  0717                     	;# 
  1690  0718                     	;# 
  1691  080C                     	;# 
  1692  0811                     	;# 
  1693  0813                     	;# 
  1694  0814                     	;# 
  1695  081A                     	;# 
  1696  081A                     	;# 
  1697  081B                     	;# 
  1698  081C                     	;# 
  1699  081C                     	;# 
  1700  081D                     	;# 
  1701  081E                     	;# 
  1702  081F                     	;# 
  1703  088E                     	;# 
  1704  0890                     	;# 
  1705  0891                     	;# 
  1706  0892                     	;# 
  1707  0893                     	;# 
  1708  090C                     	;# 
  1709  1E8F                     	;# 
  1710  1E90                     	;# 
  1711  1E91                     	;# 
  1712  1E92                     	;# 
  1713  1E93                     	;# 
  1714  1E9C                     	;# 
  1715  1EA1                     	;# 
  1716  1EA2                     	;# 
  1717  1EC3                     	;# 
  1718  1EC5                     	;# 
  1719  1EC6                     	;# 
  1720  1EC7                     	;# 
  1721  1ECB                     	;# 
  1722  1ECB                     	;# 
  1723  1ECB                     	;# 
  1724  1ECC                     	;# 
  1725  1ECC                     	;# 
  1726  1ECC                     	;# 
  1727  1F10                     	;# 
  1728  1F11                     	;# 
  1729  1F12                     	;# 
  1730  1F14                     	;# 
  1731  1F15                     	;# 
  1732  1F20                     	;# 
  1733  1F21                     	;# 
  1734  1F22                     	;# 
  1735  1F23                     	;# 
  1736  1F24                     	;# 
  1737  1F25                     	;# 
  1738  1F38                     	;# 
  1739  1F39                     	;# 
  1740  1F3A                     	;# 
  1741  1F3B                     	;# 
  1742  1F3C                     	;# 
  1743  1F3D                     	;# 
  1744  1F3E                     	;# 
  1745  1F3F                     	;# 
  1746  1F4E                     	;# 
  1747  1F4F                     	;# 
  1748  1F50                     	;# 
  1749  1F51                     	;# 
  1750  1F52                     	;# 
  1751  1F53                     	;# 
  1752  1F54                     	;# 
  1753  1F55                     	;# 
  1754  1FE4                     	;# 
  1755  1FE5                     	;# 
  1756  1FE6                     	;# 
  1757  1FE7                     	;# 
  1758  1FE8                     	;# 
  1759  1FE8                     	;# 
  1760  1FE9                     	;# 
  1761  1FEA                     	;# 
  1762  1FEB                     	;# 
  1763  1FED                     	;# 
  1764  1FEE                     	;# 
  1765  1FEF                     	;_silent_night
  1766                           
  1767                           	psect	idataBIGRAM
  1768  0482                     __pidataBIGRAM:
  1769                           
  1770                           ;initializer for _silent_night
  1771  0482  349E               	retlw	158
  1772  0483  349E               	retlw	158
  1773  0484  349E               	retlw	158
  1774  0485  348D               	retlw	141
  1775  0486  349E               	retlw	158
  1776  0487  349E               	retlw	158
  1777  0488  34BC               	retlw	188
  1778  0489  34BC               	retlw	188
  1779  048A  34BC               	retlw	188
  1780  048B  34BC               	retlw	188
  1781  048C  34BC               	retlw	188
  1782  048D  34BC               	retlw	188
  1783  048E  349E               	retlw	158
  1784  048F  349E               	retlw	158
  1785  0490  349E               	retlw	158
  1786  0491  348D               	retlw	141
  1787  0492  349E               	retlw	158
  1788  0493  349E               	retlw	158
  1789  0494  34BC               	retlw	188
  1790  0495  34BC               	retlw	188
  1791  0496  34BC               	retlw	188
  1792  0497  34BC               	retlw	188
  1793  0498  34BC               	retlw	188
  1794  0499  34BC               	retlw	188
  1795  049A  34D3               	retlw	211
  1796  049B  34D3               	retlw	211
  1797  049C  34D3               	retlw	211
  1798  049D  34D3               	retlw	211
  1799  049E  34D3               	retlw	211
  1800  049F  34D3               	retlw	211
  1801  04A0  34FC               	retlw	252
  1802  04A1  34FC               	retlw	252
  1803  04A2  34FC               	retlw	252
  1804  04A3  34FC               	retlw	252
  1805  04A4  34FC               	retlw	252
  1806  04A5  34FC               	retlw	252
  1807  04A6  34EE               	retlw	238
  1808  04A7  34EE               	retlw	238
  1809  04A8  34EE               	retlw	238
  1810  04A9  34EE               	retlw	238
  1811  04AA  34EE               	retlw	238
  1812  04AB  34EE               	retlw	238
  1813  04AC  349E               	retlw	158
  1814  04AD  349E               	retlw	158
  1815  04AE  349E               	retlw	158
  1816  04AF  349E               	retlw	158
  1817  04B0  349E               	retlw	158
  1818  04B1  349E               	retlw	158
  1819  04B2  348D               	retlw	141
  1820  04B3  348D               	retlw	141
  1821  04B4  348D               	retlw	141
  1822  04B5  348D               	retlw	141
  1823  04B6  348D               	retlw	141
  1824  04B7  348D               	retlw	141
  1825  04B8  34ED               	retlw	237
  1826  04B9  34ED               	retlw	237
  1827  04BA  34ED               	retlw	237
  1828  04BB  34FC               	retlw	252
  1829  04BC  348D               	retlw	141
  1830  04BD  348D               	retlw	141
  1831  04BE  349E               	retlw	158
  1832  04BF  349E               	retlw	158
  1833  04C0  349E               	retlw	158
  1834  04C1  348D               	retlw	141
  1835  04C2  349E               	retlw	158
  1836  04C3  349E               	retlw	158
  1837  04C4  34BC               	retlw	188
  1838  04C5  34BC               	retlw	188
  1839  04C6  34BC               	retlw	188
  1840  04C7  34BC               	retlw	188
  1841  04C8  34BC               	retlw	188
  1842  04C9  34BC               	retlw	188
  1843  04CA  348D               	retlw	141
  1844  04CB  348D               	retlw	141
  1845  04CC  348D               	retlw	141
  1846  04CD  348D               	retlw	141
  1847  04CE  348D               	retlw	141
  1848  04CF  348D               	retlw	141
  1849  04D0  34ED               	retlw	237
  1850  04D1  34ED               	retlw	237
  1851  04D2  34ED               	retlw	237
  1852  04D3  34FC               	retlw	252
  1853  04D4  348D               	retlw	141
  1854  04D5  348D               	retlw	141
  1855  04D6  349E               	retlw	158
  1856  04D7  349E               	retlw	158
  1857  04D8  349E               	retlw	158
  1858  04D9  348D               	retlw	141
  1859  04DA  349E               	retlw	158
  1860  04DB  349E               	retlw	158
  1861  04DC  34BC               	retlw	188
  1862  04DD  34BC               	retlw	188
  1863  04DE  34BC               	retlw	188
  1864  04DF  34BC               	retlw	188
  1865  04E0  34BC               	retlw	188
  1866  04E1  34BC               	retlw	188
  1867  04E2  34D3               	retlw	211
  1868  04E3  34D3               	retlw	211
  1869  04E4  34D3               	retlw	211
  1870  04E5  34D3               	retlw	211
  1871  04E6  34D3               	retlw	211
  1872  04E7  34D3               	retlw	211
  1873  04E8  34B1               	retlw	177
  1874  04E9  34B1               	retlw	177
  1875  04EA  34B1               	retlw	177
  1876  04EB  34D3               	retlw	211
  1877  04EC  34FC               	retlw	252
  1878  04ED  34FC               	retlw	252
  1879  04EE  34ED               	retlw	237
  1880  04EF  34ED               	retlw	237
  1881  04F0  34ED               	retlw	237
  1882  04F1  34ED               	retlw	237
  1883  04F2  34ED               	retlw	237
  1884  04F3  34ED               	retlw	237
  1885  04F4  34BC               	retlw	188
  1886  04F5  34BC               	retlw	188
  1887  04F6  34BC               	retlw	188
  1888  04F7  34BC               	retlw	188
  1889  04F8  34BC               	retlw	188
  1890  04F9  34BC               	retlw	188
  1891  04FA  34ED               	retlw	237
  1892  04FB  34ED               	retlw	237
  1893  04FC  349E               	retlw	158
  1894  04FD  349E               	retlw	158
  1895  04FE  34BC               	retlw	188
  1896  04FF  34BC               	retlw	188
  1897  0500  349E               	retlw	158
  1898  0501  349E               	retlw	158
  1899  0502  349E               	retlw	158
  1900  0503  34B1               	retlw	177
  1901  0504  34D3               	retlw	211
  1902  0505  34D3               	retlw	211
  1903  0506  34EE               	retlw	238
  1904  0507  34EE               	retlw	238
  1905  0508  34EE               	retlw	238
  1906  0509  34EE               	retlw	238
  1907  050A  34EE               	retlw	238
  1908  050B  34EE               	retlw	238
  1909  050C  3400               	retlw	0
  1910                           
  1911                           ;initializer for _silent_night_pre
  1912  050D  34D0               	retlw	208
  1913  050E  34D0               	retlw	208
  1914  050F  34D0               	retlw	208
  1915  0510  34D0               	retlw	208
  1916  0511  34D0               	retlw	208
  1917  0512  34D0               	retlw	208
  1918  0513  34D0               	retlw	208
  1919  0514  34D0               	retlw	208
  1920  0515  34D0               	retlw	208
  1921  0516  34D0               	retlw	208
  1922  0517  34D0               	retlw	208
  1923  0518  34D0               	retlw	208
  1924  0519  34D0               	retlw	208
  1925  051A  34D0               	retlw	208
  1926  051B  34D0               	retlw	208
  1927  051C  34D0               	retlw	208
  1928  051D  34D0               	retlw	208
  1929  051E  34D0               	retlw	208
  1930  051F  34D0               	retlw	208
  1931  0520  34D0               	retlw	208
  1932  0521  34D0               	retlw	208
  1933  0522  34D0               	retlw	208
  1934  0523  34D0               	retlw	208
  1935  0524  34D0               	retlw	208
  1936  0525  34C0               	retlw	192
  1937  0526  34C0               	retlw	192
  1938  0527  34C0               	retlw	192
  1939  0528  34C0               	retlw	192
  1940  0529  34C0               	retlw	192
  1941  052A  34C0               	retlw	192
  1942  052B  34C0               	retlw	192
  1943  052C  34C0               	retlw	192
  1944  052D  34C0               	retlw	192
  1945  052E  34C0               	retlw	192
  1946  052F  34C0               	retlw	192
  1947  0530  34C0               	retlw	192
  1948  0531  34C0               	retlw	192
  1949  0532  34C0               	retlw	192
  1950  0533  34C0               	retlw	192
  1951  0534  34C0               	retlw	192
  1952  0535  34C0               	retlw	192
  1953  0536  34C0               	retlw	192
  1954  0537  34D0               	retlw	208
  1955  0538  34D0               	retlw	208
  1956  0539  34D0               	retlw	208
  1957  053A  34D0               	retlw	208
  1958  053B  34D0               	retlw	208
  1959  053C  34D0               	retlw	208
  1960  053D  34D0               	retlw	208
  1961  053E  34D0               	retlw	208
  1962  053F  34D0               	retlw	208
  1963  0540  34D0               	retlw	208
  1964  0541  34D0               	retlw	208
  1965  0542  34D0               	retlw	208
  1966  0543  34C0               	retlw	192
  1967  0544  34C0               	retlw	192
  1968  0545  34C0               	retlw	192
  1969  0546  34C0               	retlw	192
  1970  0547  34D0               	retlw	208
  1971  0548  34D0               	retlw	208
  1972  0549  34D0               	retlw	208
  1973  054A  34D0               	retlw	208
  1974  054B  34D0               	retlw	208
  1975  054C  34D0               	retlw	208
  1976  054D  34D0               	retlw	208
  1977  054E  34D0               	retlw	208
  1978  054F  34D0               	retlw	208
  1979  0550  34D0               	retlw	208
  1980  0551  34D0               	retlw	208
  1981  0552  34D0               	retlw	208
  1982  0553  34D0               	retlw	208
  1983  0554  34D0               	retlw	208
  1984  0555  34D0               	retlw	208
  1985  0556  34D0               	retlw	208
  1986  0557  34D0               	retlw	208
  1987  0558  34D0               	retlw	208
  1988  0559  34D0               	retlw	208
  1989  055A  34D0               	retlw	208
  1990  055B  34C0               	retlw	192
  1991  055C  34C0               	retlw	192
  1992  055D  34C0               	retlw	192
  1993  055E  34C0               	retlw	192
  1994  055F  34D0               	retlw	208
  1995  0560  34D0               	retlw	208
  1996  0561  34D0               	retlw	208
  1997  0562  34D0               	retlw	208
  1998  0563  34D0               	retlw	208
  1999  0564  34D0               	retlw	208
  2000  0565  34D0               	retlw	208
  2001  0566  34D0               	retlw	208
  2002  0567  34D0               	retlw	208
  2003  0568  34D0               	retlw	208
  2004  0569  34D0               	retlw	208
  2005  056A  34D0               	retlw	208
  2006  056B  34D0               	retlw	208
  2007  056C  34D0               	retlw	208
  2008  056D  34C0               	retlw	192
  2009  056E  34C0               	retlw	192
  2010  056F  34C0               	retlw	192
  2011  0570  34C0               	retlw	192
  2012  0571  34C0               	retlw	192
  2013  0572  34C0               	retlw	192
  2014  0573  34C0               	retlw	192
  2015  0574  34C0               	retlw	192
  2016  0575  34C0               	retlw	192
  2017  0576  34C0               	retlw	192
  2018  0577  34C0               	retlw	192
  2019  0578  34C0               	retlw	192
  2020  0579  34C0               	retlw	192
  2021  057A  34C0               	retlw	192
  2022  057B  34C0               	retlw	192
  2023  057C  34C0               	retlw	192
  2024  057D  34C0               	retlw	192
  2025  057E  34C0               	retlw	192
  2026  057F  34C0               	retlw	192
  2027  0580  34C0               	retlw	192
  2028  0581  34C0               	retlw	192
  2029  0582  34C0               	retlw	192
  2030  0583  34C0               	retlw	192
  2031  0584  34C0               	retlw	192
  2032  0585  34C0               	retlw	192
  2033  0586  34C0               	retlw	192
  2034  0587  34D0               	retlw	208
  2035  0588  34D0               	retlw	208
  2036  0589  34D0               	retlw	208
  2037  058A  34D0               	retlw	208
  2038  058B  34D0               	retlw	208
  2039  058C  34D0               	retlw	208
  2040  058D  34D0               	retlw	208
  2041  058E  34D0               	retlw	208
  2042  058F  34D0               	retlw	208
  2043  0590  34D0               	retlw	208
  2044  0591  34D0               	retlw	208
  2045  0592  34D0               	retlw	208
  2046  0593  34D0               	retlw	208
  2047  0594  34D0               	retlw	208
  2048  0595  34D0               	retlw	208
  2049  0596  34D0               	retlw	208
  2050                           
  2051                           ;initializer for _song3_pre
  2052  0597  34E0               	retlw	224
  2053  0598  34E0               	retlw	224
  2054  0599  34D0               	retlw	208
  2055  059A  34D0               	retlw	208
  2056  059B  34E0               	retlw	224
  2057  059C  34E0               	retlw	224
  2058  059D  34D0               	retlw	208
  2059  059E  34D0               	retlw	208
  2060  059F  34E0               	retlw	224
  2061  05A0  34E0               	retlw	224
  2062  05A1  34D0               	retlw	208
  2063  05A2  34E0               	retlw	224
  2064  05A3  3400               	retlw	0
  2065  05A4  34E0               	retlw	224
  2066  05A5  34D0               	retlw	208
  2067  05A6  34D0               	retlw	208
  2068  05A7  34E0               	retlw	224
  2069  05A8  34E0               	retlw	224
  2070  05A9  34D0               	retlw	208
  2071  05AA  34D0               	retlw	208
  2072  05AB  34E0               	retlw	224
  2073  05AC  34E0               	retlw	224
  2074  05AD  34D0               	retlw	208
  2075  05AE  34D0               	retlw	208
  2076  05AF  34E0               	retlw	224
  2077  05B0  34E0               	retlw	224
  2078  05B1  34D0               	retlw	208
  2079  05B2  34E0               	retlw	224
  2080  05B3  3400               	retlw	0
  2081  05B4  34E0               	retlw	224
  2082  05B5  34D0               	retlw	208
  2083  05B6  34D0               	retlw	208
  2084  05B7  34E0               	retlw	224
  2085  05B8  34E0               	retlw	224
  2086  05B9  34D0               	retlw	208
  2087  05BA  34D0               	retlw	208
  2088  05BB  34E0               	retlw	224
  2089  05BC  34E0               	retlw	224
  2090  05BD  34D0               	retlw	208
  2091  05BE  34D0               	retlw	208
  2092  05BF  34E0               	retlw	224
  2093  05C0  34E0               	retlw	224
  2094  05C1  34D0               	retlw	208
  2095  05C2  34E0               	retlw	224
  2096  05C3  3400               	retlw	0
  2097  05C4  34E0               	retlw	224
  2098  05C5  34D0               	retlw	208
  2099  05C6  34D0               	retlw	208
  2100  05C7  34E0               	retlw	224
  2101  05C8  34E0               	retlw	224
  2102  05C9  34D0               	retlw	208
  2103  05CA  34D0               	retlw	208
  2104  05CB  34E0               	retlw	224
  2105  05CC  34E0               	retlw	224
  2106  05CD  34D0               	retlw	208
  2107  05CE  34D0               	retlw	208
  2108  05CF  34E0               	retlw	224
  2109  05D0  34E0               	retlw	224
  2110  05D1  34D0               	retlw	208
  2111  05D2  34E0               	retlw	224
  2112  05D3  3400               	retlw	0
  2113  05D4  3400               	retlw	0
  2114  05D5  34D0               	retlw	208
  2115  05D6  34D0               	retlw	208
  2116  05D7  34D0               	retlw	208
  2117  05D8  34D0               	retlw	208
  2118  05D9  34D0               	retlw	208
  2119  05DA  34D0               	retlw	208
  2120  05DB  34D0               	retlw	208
  2121  05DC  34D0               	retlw	208
  2122  05DD  34D0               	retlw	208
  2123  05DE  34D0               	retlw	208
  2124  05DF  34D0               	retlw	208
  2125  05E0  34D0               	retlw	208
  2126  05E1  34D0               	retlw	208
  2127  05E2  34D0               	retlw	208
  2128  05E3  34D0               	retlw	208
  2129  05E4  34D0               	retlw	208
  2130  05E5  34D0               	retlw	208
  2131  05E6  34D0               	retlw	208
  2132  05E7  34D0               	retlw	208
  2133  05E8  34D0               	retlw	208
  2134  05E9  34D0               	retlw	208
  2135  05EA  34D0               	retlw	208
  2136  05EB  34D0               	retlw	208
  2137  05EC  34D0               	retlw	208
  2138  05ED  34D0               	retlw	208
  2139  05EE  34D0               	retlw	208
  2140  05EF  34D0               	retlw	208
  2141  05F0  34D0               	retlw	208
  2142  05F1  34D0               	retlw	208
  2143  05F2  34D0               	retlw	208
  2144  05F3  34D0               	retlw	208
  2145  05F4  34D0               	retlw	208
  2146  05F5  34D0               	retlw	208
  2147  05F6  34D0               	retlw	208
  2148  05F7  34D0               	retlw	208
  2149  05F8  34D0               	retlw	208
  2150  05F9  34D0               	retlw	208
  2151  05FA  34D0               	retlw	208
  2152  05FB  34D0               	retlw	208
  2153  05FC  34D0               	retlw	208
  2154  05FD  34D0               	retlw	208
  2155  05FE  34E0               	retlw	224
  2156  05FF  34E0               	retlw	224
  2157  0600  34D0               	retlw	208
  2158  0601  34D0               	retlw	208
  2159  0602  34D0               	retlw	208
  2160  0603  34D0               	retlw	208
  2161  0604  34D0               	retlw	208
  2162  0605  34D0               	retlw	208
  2163  0606  34D0               	retlw	208
  2164  0607  34D0               	retlw	208
  2165  0608  34D0               	retlw	208
  2166  0609  34D0               	retlw	208
  2167  060A  34D0               	retlw	208
  2168  060B  34D0               	retlw	208
  2169  060C  34D0               	retlw	208
  2170  060D  34D0               	retlw	208
  2171  060E  34D0               	retlw	208
  2172  060F  34D0               	retlw	208
  2173                           
  2174                           ;initializer for _song3
  2175  0610  3400               	retlw	0
  2176  0611  3400               	retlw	0
  2177  0612  34D4               	retlw	212
  2178  0613  34D4               	retlw	212
  2179  0614  34D4               	retlw	212
  2180  0615  34D4               	retlw	212
  2181  0616  34D4               	retlw	212
  2182  0617  34D4               	retlw	212
  2183  0618  34D4               	retlw	212
  2184  0619  34D4               	retlw	212
  2185  061A  34D4               	retlw	212
  2186  061B  34D4               	retlw	212
  2187  061C  3400               	retlw	0
  2188  061D  34D4               	retlw	212
  2189  061E  34D4               	retlw	212
  2190  061F  34D4               	retlw	212
  2191  0620  34D4               	retlw	212
  2192  0621  34D4               	retlw	212
  2193  0622  34D4               	retlw	212
  2194  0623  34D4               	retlw	212
  2195  0624  34D4               	retlw	212
  2196  0625  34D4               	retlw	212
  2197  0626  34D4               	retlw	212
  2198  0627  34D4               	retlw	212
  2199  0628  34D4               	retlw	212
  2200  0629  34D4               	retlw	212
  2201  062A  34D4               	retlw	212
  2202  062B  34D4               	retlw	212
  2203  062C  3400               	retlw	0
  2204  062D  34D4               	retlw	212
  2205  062E  34D4               	retlw	212
  2206  062F  34D4               	retlw	212
  2207  0630  3400               	retlw	0
  2208  0631  3400               	retlw	0
  2209  0632  34D4               	retlw	212
  2210  0633  34D4               	retlw	212
  2211  0634  34D4               	retlw	212
  2212  0635  34D4               	retlw	212
  2213  0636  34D4               	retlw	212
  2214  0637  34D4               	retlw	212
  2215  0638  34D4               	retlw	212
  2216  0639  34D4               	retlw	212
  2217  063A  34D4               	retlw	212
  2218  063B  34D4               	retlw	212
  2219  063C  3400               	retlw	0
  2220  063D  34D4               	retlw	212
  2221  063E  34D4               	retlw	212
  2222  063F  34D4               	retlw	212
  2223  0640  34D4               	retlw	212
  2224  0641  34D4               	retlw	212
  2225  0642  34D4               	retlw	212
  2226  0643  34D4               	retlw	212
  2227  0644  34D4               	retlw	212
  2228  0645  34D4               	retlw	212
  2229  0646  34D4               	retlw	212
  2230  0647  34D4               	retlw	212
  2231  0648  34D4               	retlw	212
  2232  0649  34D4               	retlw	212
  2233  064A  34D4               	retlw	212
  2234  064B  34D4               	retlw	212
  2235  064C  3400               	retlw	0
  2236  064D  3400               	retlw	0
  2237  064E  34ED               	retlw	237
  2238  064F  34D4               	retlw	212
  2239  0650  34B2               	retlw	178
  2240  0651  34B2               	retlw	178
  2241  0652  34B2               	retlw	178
  2242  0653  34B2               	retlw	178
  2243  0654  34B2               	retlw	178
  2244  0655  34B2               	retlw	178
  2245  0656  34B2               	retlw	178
  2246  0657  34D4               	retlw	212
  2247  0658  34EE               	retlw	238
  2248  0659  34B2               	retlw	178
  2249  065A  34B2               	retlw	178
  2250  065B  34D4               	retlw	212
  2251  065C  34B2               	retlw	178
  2252  065D  34B2               	retlw	178
  2253  065E  34B2               	retlw	178
  2254  065F  34D4               	retlw	212
  2255  0660  34EE               	retlw	238
  2256  0661  34D4               	retlw	212
  2257  0662  34B2               	retlw	178
  2258  0663  3400               	retlw	0
  2259  0664  3400               	retlw	0
  2260  0665  3400               	retlw	0
  2261  0666  3400               	retlw	0
  2262  0667  34D4               	retlw	212
  2263  0668  34EE               	retlw	238
  2264  0669  348D               	retlw	141
  2265  066A  349E               	retlw	158
  2266  066B  34B2               	retlw	178
  2267  066C  34B2               	retlw	178
  2268  066D  34B2               	retlw	178
  2269  066E  34B2               	retlw	178
  2270  066F  34B2               	retlw	178
  2271  0670  34D4               	retlw	212
  2272  0671  34EE               	retlw	238
  2273  0672  34B2               	retlw	178
  2274  0673  3400               	retlw	0
  2275  0674  3400               	retlw	0
  2276  0675  3400               	retlw	0
  2277  0676  3400               	retlw	0
  2278  0677  348D               	retlw	141
  2279  0678  348D               	retlw	141
  2280  0679  348D               	retlw	141
  2281  067A  348D               	retlw	141
  2282  067B  349E               	retlw	158
  2283  067C  349E               	retlw	158
  2284  067D  349E               	retlw	158
  2285  067E  349E               	retlw	158
  2286  067F  34B2               	retlw	178
  2287  0680  348D               	retlw	141
  2288  0681  348D               	retlw	141
  2289  0682  349E               	retlw	158
  2290  0683  34B2               	retlw	178
  2291  0684  34D4               	retlw	212
  2292  0685  34D4               	retlw	212
  2293  0686  34D4               	retlw	212
  2294  0687  3400               	retlw	0
  2295  0688  3400               	retlw	0
  2296                           
  2297                           ;initializer for _song2
  2298  0689  34EE               	retlw	238
  2299  068A  34EE               	retlw	238
  2300  068B  34BD               	retlw	189
  2301  068C  34BD               	retlw	189
  2302  068D  349E               	retlw	158
  2303  068E  349E               	retlw	158
  2304  068F  349E               	retlw	158
  2305  0690  349E               	retlw	158
  2306  0691  349E               	retlw	158
  2307  0692  349E               	retlw	158
  2308  0693  348D               	retlw	141
  2309  0694  348D               	retlw	141
  2310  0695  348D               	retlw	141
  2311  0696  348D               	retlw	141
  2312  0697  349E               	retlw	158
  2313  0698  349E               	retlw	158
  2314  0699  34BD               	retlw	189
  2315  069A  34BD               	retlw	189
  2316  069B  34BD               	retlw	189
  2317  069C  34BD               	retlw	189
  2318  069D  34BD               	retlw	189
  2319  069E  349E               	retlw	158
  2320  069F  348D               	retlw	141
  2321  06A0  348D               	retlw	141
  2322  06A1  348D               	retlw	141
  2323  06A2  348D               	retlw	141
  2324  06A3  348D               	retlw	141
  2325  06A4  348D               	retlw	141
  2326  06A5  349E               	retlw	158
  2327  06A6  349E               	retlw	158
  2328  06A7  349E               	retlw	158
  2329  06A8  349E               	retlw	158
  2330  06A9  349E               	retlw	158
  2331  06AA  349E               	retlw	158
  2332  06AB  3400               	retlw	0
  2333  06AC  3400               	retlw	0
  2334  06AD  34BD               	retlw	189
  2335  06AE  349E               	retlw	158
  2336  06AF  348D               	retlw	141
  2337  06B0  348D               	retlw	141
  2338  06B1  348D               	retlw	141
  2339  06B2  348D               	retlw	141
  2340  06B3  348D               	retlw	141
  2341  06B4  348D               	retlw	141
  2342  06B5  349E               	retlw	158
  2343  06B6  349E               	retlw	158
  2344  06B7  349E               	retlw	158
  2345  06B8  349E               	retlw	158
  2346  06B9  349E               	retlw	158
  2347  06BA  349E               	retlw	158
  2348  06BB  349E               	retlw	158
  2349  06BC  349E               	retlw	158
  2350  06BD  349E               	retlw	158
  2351  06BE  34B2               	retlw	178
  2352  06BF  34B2               	retlw	178
  2353  06C0  34B2               	retlw	178
  2354  06C1  34BD               	retlw	189
  2355  06C2  34B2               	retlw	178
  2356  06C3  34B2               	retlw	178
  2357  06C4  34B2               	retlw	178
  2358  06C5  349E               	retlw	158
  2359  06C6  349E               	retlw	158
  2360  06C7  348D               	retlw	141
  2361  06C8  348D               	retlw	141
  2362  06C9  349E               	retlw	158
  2363  06CA  349E               	retlw	158
  2364  06CB  34BD               	retlw	189
  2365  06CC  34BD               	retlw	189
  2366  06CD  349E               	retlw	158
  2367  06CE  349E               	retlw	158
  2368  06CF  349E               	retlw	158
  2369  06D0  349E               	retlw	158
  2370  06D1  349E               	retlw	158
  2371  06D2  349E               	retlw	158
  2372  06D3  348D               	retlw	141
  2373  06D4  348D               	retlw	141
  2374  06D5  349E               	retlw	158
  2375  06D6  349E               	retlw	158
  2376  06D7  349E               	retlw	158
  2377  06D8  349E               	retlw	158
  2378  06D9  34BD               	retlw	189
  2379  06DA  34BD               	retlw	189
  2380  06DB  34BD               	retlw	189
  2381  06DC  34BD               	retlw	189
  2382  06DD  34BD               	retlw	189
  2383  06DE  34BD               	retlw	189
  2384                           
  2385                           	psect	idataCOMMON
  2386  0003                     __pidataCOMMON:
  2387                           
  2388                           ;initializer for _num_songs
  2389  0003  3403               	retlw	3
  2390                           
  2391                           	psect	idataBANK0
  2392  0D4E                     __pidataBANK0:
  2393                           
  2394                           ;initializer for _dream_lights
  2395  0D4E  3400               	retlw	0
  2396  0D4F  34E8               	retlw	232
  2397  0D50  34BE               	retlw	190
  2398  0D51  34FE               	retlw	254
  2399  0D52  34BD               	retlw	189
  2400  0D53  34A0               	retlw	160
  2401  0D54  3400               	retlw	0
  2402                           
  2403                           ;initializer for _song3_length
  2404  0D55  3478               	retlw	120
  2405                           
  2406                           ;initializer for _timer_low_3
  2407  0D56  3434               	retlw	52
  2408                           
  2409                           ;initializer for _timer_high_3
  2410  0D57  34EA               	retlw	234
  2411                           
  2412                           ;initializer for _song2_length
  2413  0D58  3485               	retlw	133
  2414                           
  2415                           ;initializer for _timer_low_2
  2416  0D59  3425               	retlw	37
  2417                           
  2418                           ;initializer for _timer_high_2
  2419  0D5A  34E8               	retlw	232
  2420                           
  2421                           	psect	idataBANK1
  2422  071B                     __pidataBANK1:
  2423                           
  2424                           ;initializer for _song2_2
  2425  071B  348D               	retlw	141
  2426  071C  348D               	retlw	141
  2427  071D  348D               	retlw	141
  2428  071E  348D               	retlw	141
  2429  071F  348D               	retlw	141
  2430  0720  348D               	retlw	141
  2431  0721  34FC               	retlw	252
  2432  0722  34FC               	retlw	252
  2433  0723  34BD               	retlw	189
  2434  0724  34BD               	retlw	189
  2435  0725  34D4               	retlw	212
  2436  0726  34D4               	retlw	212
  2437  0727  34B2               	retlw	178
  2438  0728  34B2               	retlw	178
  2439  0729  348D               	retlw	141
  2440  072A  348D               	retlw	141
  2441  072B  349E               	retlw	158
  2442  072C  349E               	retlw	158
  2443  072D  349E               	retlw	158
  2444  072E  349E               	retlw	158
  2445  072F  348D               	retlw	141
  2446  0730  348D               	retlw	141
  2447  0731  348D               	retlw	141
  2448  0732  348D               	retlw	141
  2449  0733  349E               	retlw	158
  2450  0734  349E               	retlw	158
  2451  0735  34BD               	retlw	189
  2452  0736  34BD               	retlw	189
  2453  0737  34BD               	retlw	189
  2454  0738  34BD               	retlw	189
  2455  0739  34EE               	retlw	238
  2456  073A  34D4               	retlw	212
  2457  073B  34BD               	retlw	189
  2458  073C  34BD               	retlw	189
  2459  073D  34BD               	retlw	189
  2460  073E  34D4               	retlw	212
  2461  073F  34D4               	retlw	212
  2462  0740  34D4               	retlw	212
  2463  0741  34EE               	retlw	238
  2464  0742  34EE               	retlw	238
  2465  0743  34EE               	retlw	238
  2466  0744  34EE               	retlw	238
  2467  0745  34EE               	retlw	238
  2468  0746  34EE               	retlw	238
  2469  0747  34EE               	retlw	238
  2470  0748  34EE               	retlw	238
  2471  0749  34EE               	retlw	238
  2472  074A  34EE               	retlw	238
  2473  074B  3400               	retlw	0
  2474                           
  2475                           ;initializer for _light_array
  2476  074C  34FE               	retlw	254
  2477  074D  34FF               	retlw	255
  2478  074E  34FE               	retlw	254
  2479  074F  34FF               	retlw	255
  2480  0750  34FE               	retlw	254
  2481  0751  34FF               	retlw	255
  2482  0752  34FE               	retlw	254
  2483                           
  2484                           	psect	stringtext1
  2485  1000                     __pstringtext1:
  2486  1000                     _spi1_configuration:
  2487  1000  3400               	retlw	0
  2488  1001  3440               	retlw	64
  2489  1002  3401               	retlw	1
  2490  1003  3400               	retlw	0
  2491  1004                     __end_of_spi1_configuration:
  2492                           
  2493                           	psect	stringtext2
  2494  1004                     __pstringtext2:
  2495  1004                     _a:
  2496  1004  348D               	retlw	141
  2497  1005                     __end_of_a:
  2498                           
  2499                           	psect	stringtext3
  2500  1005                     __pstringtext3:
  2501  1005                     _g:
  2502  1005  349E               	retlw	158
  2503  1006                     __end_of_g:
  2504                           
  2505                           	psect	stringtext4
  2506  1006                     __pstringtext4:
  2507  1006                     _f:
  2508  1006  34B2               	retlw	178
  2509  1007                     __end_of_f:
  2510                           
  2511                           	psect	stringtext5
  2512  1007                     __pstringtext5:
  2513  1007                     _e:
  2514  1007  34BD               	retlw	189
  2515  1008                     __end_of_e:
  2516                           
  2517                           	psect	stringtext6
  2518  1008                     __pstringtext6:
  2519  1008                     _d:
  2520  1008  34D4               	retlw	212
  2521  1009                     __end_of_d:
  2522                           
  2523                           	psect	stringtext7
  2524  1009                     __pstringtext7:
  2525  1009                     _c:
  2526  1009  34EE               	retlw	238
  2527  100A                     __end_of_c:
  2528                           
  2529                           	psect	stringtext8
  2530  100A                     __pstringtext8:
  2531  100A                     _b:
  2532  100A  34FC               	retlw	252
  2533  100B                     __end_of_b:
  2534                           
  2535                           	psect	nvCOMMON
  2536  0077                     __pnvCOMMON:
  2537  0077                     _timer0ReloadVal16bit:
  2538  0077                     	ds	2
  2539                           
  2540                           	psect	nvBANK0
  2541  004E                     __pnvBANK0:
  2542  004E                     _TMR1_InterruptHandler:
  2543  004E                     	ds	2
  2544  0050                     _timer1ReloadVal:
  2545  0050                     	ds	2
  2546  0052                     _TMR0_InterruptHandler:
  2547  0052                     	ds	2
  2548  0054                     _INT_InterruptHandler:
  2549  0054                     	ds	2
  2550  001A                     _LATCbits	set	26
  2551  0012                     _TRISAbits	set	18
  2552  000B                     _INTCONbits	set	11
  2553  0014                     _TRISC	set	20
  2554  0012                     _TRISA	set	18
  2555  001A                     _LATC	set	26
  2556  0018                     _LATA	set	24
  2557  0014                     _TRISCbits	set	20
  2558  018C                     _SSP1BUF	set	396
  2559  0191                     _SSP1CON2	set	401
  2560  0190                     _SSP1CON1bits	set	400
  2561  018D                     _SSP1ADD	set	397
  2562  0190                     _SSP1CON1	set	400
  2563  018F                     _SSP1STAT	set	399
  2564  020F                     _T1GCONbits	set	527
  2565  020E                     _T1CONbits	set	526
  2566  020E                     _T1CON	set	526
  2567  020C                     _TMR1L	set	524
  2568  020D                     _TMR1H	set	525
  2569  0211                     _T1CLK	set	529
  2570  0210                     _T1GATE	set	528
  2571  020F                     _T1GCON	set	527
  2572  028D                     _PR2	set	653
  2573  028C                     _TMR2	set	652
  2574  028E                     _T2CONbits	set	654
  2575  0291                     _T2RSTbits	set	657
  2576  028F                     _T2HLTbits	set	655
  2577  028E                     _T2CON	set	654
  2578  028C                     _T2TMR	set	652
  2579  028D                     _T2PR	set	653
  2580  0291                     _T2RST	set	657
  2581  028F                     _T2HLT	set	655
  2582  0290                     _T2CLKCON	set	656
  2583  0314                     _PWM3DCL	set	788
  2584  0315                     _PWM3DCH	set	789
  2585  0316                     _PWM3CON	set	790
  2586  059E                     _T0CON0bits	set	1438
  2587  059E                     _T0CON0	set	1438
  2588  059C                     _TMR0L	set	1436
  2589  059D                     _TMR0H	set	1437
  2590  059F                     _T0CON1	set	1439
  2591  0717                     _PIE1bits	set	1815
  2592  070C                     _PIR0bits	set	1804
  2593  0716                     _PIE0bits	set	1814
  2594  070D                     _PIR1bits	set	1805
  2595  080C                     _WDTCON	set	2060
  2596  0892                     _OSCTUNE	set	2194
  2597  0893                     _OSCFRQ	set	2195
  2598  0891                     _OSCEN	set	2193
  2599  1E90                     _INTPPS	set	7824
  2600  1EC6                     _SSP1DATPPS	set	7878
  2601  1EC5                     _SSP1CLKPPS	set	7877
  2602  1F15                     _RA5PPS	set	7957
  2603  1F52                     _INLVLC	set	8018
  2604  1F3C                     _INLVLA	set	7996
  2605  1F51                     _SLRCONC	set	8017
  2606  1F3B                     _SLRCONA	set	7995
  2607  1F50                     _ODCONC	set	8016
  2608  1F3A                     _ODCONA	set	7994
  2609  1F4F                     _WPUC	set	8015
  2610  1F39                     _WPUA	set	7993
  2611  1F38                     _ANSELA	set	7992
  2612  1F4E                     _ANSELC	set	8014
  2613  1F23                     _RC3PPS	set	7971
  2614  1F25                     _RC5PPS	set	7973
  2615                           
  2616                           	psect	cinit
  2617  0033                     start_initialization:	
  2618                           ; #config settings
  2619                           
  2620  0033                     __initialization:	;BIGRAM
  2621                           
  2622                           ; Initialize objects allocated to BIGRAM
  2623  0033  3082               	movlw	low __pidataBIGRAM
  2624  0034  0084               	movwf	4
  2625  0035  3084               	movlw	(high __pidataBIGRAM)| (0+128)
  2626  0036  0085               	movwf	5
  2627  0037  3093               	movlw	low (0+8595)
  2628  0038  0086               	movwf	6
  2629  0039  3021               	movlw	high (0+8595)
  2630  003A  0087               	movwf	7
  2631  003B  3002               	movlw	2
  2632  003C  00FF               	movwf	btemp+1
  2633  003D  305D               	movlw	93
  2634  003E  318D  250E  3180   	fcall	init_ram
  2635                           
  2636                           ; Initialize objects allocated to COMMON
  2637  0041  3180  2003  3180   	fcall	__pidataCOMMON	;fetch initializer
  2638  0044  00F9               	movwf	__pdataCOMMON& (0+127)
  2639                           
  2640                           ; Initialize objects allocated to BANK0
  2641  0045  304E               	movlw	low __pidataBANK0
  2642  0046  0084               	movwf	4
  2643  0047  308D               	movlw	(high __pidataBANK0)| (0+128)
  2644  0048  0085               	movwf	5
  2645  0049  3041               	movlw	low __pdataBANK0
  2646  004A  0086               	movwf	6
  2647  004B  3000               	movlw	high __pdataBANK0
  2648  004C  0087               	movwf	7
  2649  004D  3000               	movlw	0
  2650  004E  00FF               	movwf	btemp+1
  2651  004F  300D               	movlw	13
  2652  0050  318D  250E  3180   	fcall	init_ram
  2653                           
  2654                           ; Initialize objects allocated to BANK1
  2655  0053  301B               	movlw	low __pidataBANK1
  2656  0054  0084               	movwf	4
  2657  0055  3087               	movlw	(high __pidataBANK1)| (0+128)
  2658  0056  0085               	movwf	5
  2659  0057  30A0               	movlw	low __pdataBANK1
  2660  0058  0086               	movwf	6
  2661  0059  3000               	movlw	high __pdataBANK1
  2662  005A  0087               	movwf	7
  2663  005B  3000               	movlw	0
  2664  005C  00FF               	movwf	btemp+1
  2665  005D  3038               	movlw	56
  2666  005E  318D  250E  3180   	fcall	init_ram
  2667                           
  2668                           ; Clear objects allocated to BANK0
  2669  0061  01D6               	clrf	__pbssBANK0& (0+127)
  2670  0062  01D7               	clrf	(__pbssBANK0+1)& (0+127)
  2671  0063  01D8               	clrf	(__pbssBANK0+2)& (0+127)
  2672  0064  01D9               	clrf	(__pbssBANK0+3)& (0+127)
  2673  0065  01DA               	clrf	(__pbssBANK0+4)& (0+127)
  2674  0066  01DB               	clrf	(__pbssBANK0+5)& (0+127)
  2675  0067  01DC               	clrf	(__pbssBANK0+6)& (0+127)
  2676                           
  2677                           ; Clear objects allocated to BANK1
  2678  0068  0141               	movlb	1	; select bank1
  2679  0069  01EB               	clrf	__pbssBANK1& (0+127)
  2680  006A  01EC               	clrf	(__pbssBANK1+1)& (0+127)
  2681  006B  01ED               	clrf	(__pbssBANK1+2)& (0+127)
  2682  006C  01EE               	clrf	(__pbssBANK1+3)& (0+127)
  2683  006D                     end_of_initialization:	
  2684                           ;End of C runtime variable initialization code
  2685                           
  2686  006D                     __end_of__initialization:
  2687  006D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2688  006E  0140               	movlb	0
  2689  006F  318D  2DC5         	ljmp	_main	;jump to C main() function
  2690                           
  2691                           	psect	bssCOMMON
  2692  0000                     __pbssCOMMON:
  2693  0000                     _song2_pre:
  2694  0000                     	ds	0
  2695                           
  2696                           	psect	dataCOMMON
  2697  0079                     __pdataCOMMON:
  2698  0079                     _num_songs:
  2699  0079                     	ds	1
  2700                           
  2701                           	psect	bssBANK0
  2702  0056                     __pbssBANK0:
  2703  0056                     _dream_sw:
  2704  0056                     	ds	1
  2705  0057                     _change_lights:
  2706  0057                     	ds	1
  2707  0058                     _last_prescale:
  2708  0058                     	ds	1
  2709  0059                     _last_note:
  2710  0059                     	ds	1
  2711  005A                     _song2_playing:
  2712  005A                     	ds	1
  2713  005B                     _song3_playing:
  2714  005B                     	ds	1
  2715  005C                     _silent_night_playing:
  2716  005C                     	ds	1
  2717                           
  2718                           	psect	dataBANK0
  2719  0041                     __pdataBANK0:
  2720  0041                     _dream_lights:
  2721  0041                     	ds	7
  2722  0048                     _song3_length:
  2723  0048                     	ds	1
  2724  0049                     _timer_low_3:
  2725  0049                     	ds	1
  2726  004A                     _timer_high_3:
  2727  004A                     	ds	1
  2728  004B                     _song2_length:
  2729  004B                     	ds	1
  2730  004C                     _timer_low_2:
  2731  004C                     	ds	1
  2732  004D                     _timer_high_2:
  2733  004D                     	ds	1
  2734                           
  2735                           	psect	bssBANK1
  2736  00EB                     __pbssBANK1:
  2737  00EB                     _count:
  2738  00EB                     	ds	2
  2739  00ED                     _presses:
  2740  00ED                     	ds	1
  2741  00EE                     _TMR0_complete:
  2742  00EE                     	ds	1
  2743                           
  2744                           	psect	dataBANK1
  2745  00A0                     __pdataBANK1:
  2746  00A0                     _song2_2:
  2747  00A0                     	ds	49
  2748  00D1                     _light_array:
  2749  00D1                     	ds	7
  2750                           
  2751                           	psect	inittext
  2752  0D0E                     init_ram:
  2753  0D0E  00FE               	movwf	btemp
  2754  0D0F                     initloop:
  2755  0D0F  0012               	moviw fsr0++
  2756  0D10  001E               	movwi fsr1++
  2757  0D11  3001               	movlw	1
  2758  0D12  02FE               	subwf	btemp,f
  2759  0D13  3000               	movlw	0
  2760  0D14  3BFF               	subwfb	btemp+1,f
  2761  0D15  087F               	movf	btemp+1,w
  2762  0D16  047E               	iorwf	btemp,w
  2763  0D17  1D03               	skipz
  2764  0D18  2D0F               	goto	initloop
  2765  0D19  3400               	retlw	0
  2766                           
  2767                           	psect	cstackBANK1
  2768  00D8                     __pcstackBANK1:
  2769  00D8                     displayMatrix@states:
  2770                           
  2771                           ; 1 bytes @ 0x0
  2772  00D8                     	ds	1
  2773  00D9                     displayMatrix@i:
  2774                           
  2775                           ; 2 bytes @ 0x1
  2776  00D9                     	ds	2
  2777  00DB                     displayMatrix@lowSide:
  2778                           
  2779                           ; 1 bytes @ 0x3
  2780  00DB                     	ds	1
  2781  00DC                     ??_main:
  2782                           
  2783                           ; 1 bytes @ 0x4
  2784  00DC                     	ds	5
  2785  00E1                     main@light:
  2786                           
  2787                           ; 1 bytes @ 0x9
  2788  00E1                     	ds	1
  2789  00E2                     main@pre:
  2790                           
  2791                           ; 1 bytes @ 0xA
  2792  00E2                     	ds	1
  2793  00E3                     main@j:
  2794                           
  2795                           ; 2 bytes @ 0xB
  2796  00E3                     	ds	2
  2797  00E5                     main@i:
  2798                           
  2799                           ; 2 bytes @ 0xD
  2800  00E5                     	ds	2
  2801  00E7                     main@j_1175:
  2802                           
  2803                           ; 2 bytes @ 0xF
  2804  00E7                     	ds	2
  2805  00E9                     main@j_1177:
  2806                           
  2807                           ; 2 bytes @ 0x11
  2808  00E9                     	ds	2
  2809                           
  2810                           	psect	cstackCOMMON
  2811  0070                     __pcstackCOMMON:
  2812  0070                     ?_SPI1_Initialize:
  2813  0070                     ?_PIN_MANAGER_Initialize:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816  0070                     ?_OSCILLATOR_Initialize:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819  0070                     ?_WDT_Initialize:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822  0070                     ?_PWM3_Initialize:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825  0070                     ?_TMR2_Initialize:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828  0070                     ?_TMR1_Initialize:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831  0070                     ?_EXT_INT_Initialize:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834  0070                     ?_TMR0_Initialize:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837  0070                     ?_TMR0_ISR:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840  0070                     ??_TMR0_ISR:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843  0070                     ?_INT_ISR:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846  0070                     ?_TMR1_ISR:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849  0070                     ?_INT_CallBack:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852  0070                     ?_TMR0_DefaultInterruptHandler:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855  0070                     ??_TMR0_DefaultInterruptHandler:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858  0070                     ?_TMR1_DefaultInterruptHandler:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861  0070                     ??_TMR1_DefaultInterruptHandler:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864  0070                     ?_EXT_ISR:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867  0070                     ??_EXT_ISR:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870  0070                     ?_TMR0_ISR_:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873  0070                     ??_TMR0_ISR_:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876  0070                     ?_TMR1_ISR_:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879  0070                     ??_TMR1_ISR_:	
  2880                           ; 1 bytes @ 0x0
  2881                           
  2882  0070                     ?_displayMatrix:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885  0070                     ?_SYSTEM_Initialize:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888  0070                     ?_SPI1_ExchangeByte:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891  0070                     ?_INTERRUPT_InterruptManager:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894  0070                     ?_INT_DefaultInterruptHandler:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897  0070                     ??_INT_DefaultInterruptHandler:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900  0070                     ?_TMR0_Reload:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903  0070                     ??_TMR0_Reload:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906  0070                     ?_TMR1_WriteTimer:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909  0070                     ?_main:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912  0070                     TMR1_WriteTimer@timerVal:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915                           
  2916                           ; 2 bytes @ 0x0
  2917  0070                     	ds	1
  2918  0071                     ??_INT_ISR:
  2919  0071                     ??_INT_CallBack:	
  2920                           ; 1 bytes @ 0x1
  2921                           
  2922                           
  2923                           ; 1 bytes @ 0x1
  2924  0071                     	ds	1
  2925  0072                     ??_SPI1_Initialize:
  2926  0072                     ??_PIN_MANAGER_Initialize:	
  2927                           ; 1 bytes @ 0x2
  2928                           
  2929  0072                     ??_OSCILLATOR_Initialize:	
  2930                           ; 1 bytes @ 0x2
  2931                           
  2932  0072                     ??_WDT_Initialize:	
  2933                           ; 1 bytes @ 0x2
  2934                           
  2935  0072                     ??_PWM3_Initialize:	
  2936                           ; 1 bytes @ 0x2
  2937                           
  2938  0072                     ??_TMR2_Initialize:	
  2939                           ; 1 bytes @ 0x2
  2940                           
  2941  0072                     ??_TMR1_ISR:	
  2942                           ; 1 bytes @ 0x2
  2943                           
  2944  0072                     ?_TMR0_SetInterruptHandler:	
  2945                           ; 1 bytes @ 0x2
  2946                           
  2947  0072                     ?_TMR1_SetInterruptHandler:	
  2948                           ; 1 bytes @ 0x2
  2949                           
  2950  0072                     ?_playNote:	
  2951                           ; 1 bytes @ 0x2
  2952                           
  2953  0072                     ??_SPI1_ExchangeByte:	
  2954                           ; 1 bytes @ 0x2
  2955                           
  2956  0072                     ??_INTERRUPT_InterruptManager:	
  2957                           ; 1 bytes @ 0x2
  2958                           
  2959  0072                     ?_INT_SetInterruptHandler:	
  2960                           ; 1 bytes @ 0x2
  2961                           
  2962  0072                     ??_TMR1_WriteTimer:	
  2963                           ; 1 bytes @ 0x2
  2964                           
  2965  0072                     SPI1_ExchangeByte@data:	
  2966                           ; 1 bytes @ 0x2
  2967                           
  2968  0072                     playNote@prescale:	
  2969                           ; 1 bytes @ 0x2
  2970                           
  2971  0072                     INT_SetInterruptHandler@InterruptHandler:	
  2972                           ; 1 bytes @ 0x2
  2973                           
  2974  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  2975                           ; 2 bytes @ 0x2
  2976                           
  2977  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2978                           ; 2 bytes @ 0x2
  2979                           
  2980                           
  2981                           ; 2 bytes @ 0x2
  2982  0072                     	ds	1
  2983  0073                     ?_shiftBytes:
  2984  0073                     ??_playNote:	
  2985                           ; 1 bytes @ 0x3
  2986                           
  2987  0073                     shiftBytes@lowSide:	
  2988                           ; 1 bytes @ 0x3
  2989                           
  2990                           
  2991                           ; 1 bytes @ 0x3
  2992  0073                     	ds	1
  2993  0074                     ??_TMR1_Initialize:
  2994  0074                     ??_EXT_INT_Initialize:	
  2995                           ; 1 bytes @ 0x4
  2996                           
  2997  0074                     ??_TMR0_Initialize:	
  2998                           ; 1 bytes @ 0x4
  2999                           
  3000  0074                     ??_TMR0_SetInterruptHandler:	
  3001                           ; 1 bytes @ 0x4
  3002                           
  3003  0074                     ??_TMR1_SetInterruptHandler:	
  3004                           ; 1 bytes @ 0x4
  3005                           
  3006  0074                     ??_shiftBytes:	
  3007                           ; 1 bytes @ 0x4
  3008                           
  3009  0074                     ??_SYSTEM_Initialize:	
  3010                           ; 1 bytes @ 0x4
  3011                           
  3012  0074                     ??_INT_SetInterruptHandler:	
  3013                           ; 1 bytes @ 0x4
  3014                           
  3015  0074                     playNote@note:	
  3016                           ; 1 bytes @ 0x4
  3017                           
  3018  0074                     shiftBytes@highSide:	
  3019                           ; 1 bytes @ 0x4
  3020                           
  3021                           
  3022                           ; 1 bytes @ 0x4
  3023  0074                     	ds	1
  3024  0075                     ??_displayMatrix:
  3025                           
  3026                           ; 1 bytes @ 0x5
  3027  0075                     	ds	2
  3028                           
  3029                           	psect	cstackBANK0
  3030  0020                     __pcstackBANK0:
  3031  0020                     TMR1_ISR_@light_1196:
  3032                           
  3033                           ; 1 bytes @ 0x0
  3034  0020                     	ds	1
  3035  0021                     TMR1_ISR_@lights:
  3036                           
  3037                           ; 1 bytes @ 0x1
  3038  0021                     	ds	1
  3039  0022                     TMR1_ISR_@lights_1188:
  3040                           
  3041                           ; 1 bytes @ 0x2
  3042  0022                     	ds	1
  3043  0023                     TMR1_ISR_@light:
  3044                           
  3045                           ; 1 bytes @ 0x3
  3046  0023                     	ds	1
  3047  0024                     TMR1_ISR_@lights_1194:
  3048                           
  3049                           ; 1 bytes @ 0x4
  3050  0024                     	ds	1
  3051  0025                     TMR1_ISR_@i_1190:
  3052                           
  3053                           ; 2 bytes @ 0x5
  3054  0025                     	ds	2
  3055  0027                     TMR1_ISR_@i_1199:
  3056                           
  3057                           ; 2 bytes @ 0x7
  3058  0027                     	ds	2
  3059  0029                     TMR1_ISR_@i_1201:
  3060                           
  3061                           ; 2 bytes @ 0x9
  3062  0029                     	ds	2
  3063  002B                     TMR1_ISR_@i_1202:
  3064                           
  3065                           ; 2 bytes @ 0xB
  3066  002B                     	ds	2
  3067  002D                     TMR1_ISR_@i_1186:
  3068                           
  3069                           ; 2 bytes @ 0xD
  3070  002D                     	ds	2
  3071  002F                     TMR1_ISR_@i_1189:
  3072                           
  3073                           ; 2 bytes @ 0xF
  3074  002F                     	ds	2
  3075  0031                     TMR1_ISR_@i_1197:
  3076                           
  3077                           ; 2 bytes @ 0x11
  3078  0031                     	ds	2
  3079  0033                     TMR1_ISR_@i_1198:
  3080                           
  3081                           ; 2 bytes @ 0x13
  3082  0033                     	ds	2
  3083  0035                     TMR1_ISR_@i_1200:
  3084                           
  3085                           ; 2 bytes @ 0x15
  3086  0035                     	ds	2
  3087  0037                     TMR1_ISR_@i:
  3088                           
  3089                           ; 2 bytes @ 0x17
  3090  0037                     	ds	2
  3091  0039                     TMR1_ISR_@i_1187:
  3092                           
  3093                           ; 2 bytes @ 0x19
  3094  0039                     	ds	2
  3095  003B                     TMR1_ISR_@j:
  3096                           
  3097                           ; 2 bytes @ 0x1B
  3098  003B                     	ds	2
  3099  003D                     TMR1_ISR_@i_1193:
  3100                           
  3101                           ; 2 bytes @ 0x1D
  3102  003D                     	ds	2
  3103  003F                     TMR1_ISR_@j_1195:
  3104                           
  3105                           ; 2 bytes @ 0x1F
  3106  003F                     	ds	2
  3107                           
  3108                           	psect	maintext
  3109  0DC5                     __pmaintext:	
  3110 ;;
  3111 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3112 ;;
  3113 ;; *************** function _main *****************
  3114 ;; Defined at:
  3115 ;;		line 283 in file "main.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  light           1    0        unsigned char 
  3120 ;;  light           1    9[BANK1 ] unsigned char 
  3121 ;;  pre             1   10[BANK1 ] unsigned char 
  3122 ;;  j               2   17[BANK1 ] int 
  3123 ;;  j               2   15[BANK1 ] int 
  3124 ;;  j               2   11[BANK1 ] int 
  3125 ;;  i               2   13[BANK1 ] int 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : B3F/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3136 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  3137 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3138 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  3139 ;;Total ram usage:       15 bytes
  3140 ;; Hardware stack levels required when called: 8
  3141 ;; This function calls:
  3142 ;;		_EXT_INT_Initialize
  3143 ;;		_INT_SetInterruptHandler
  3144 ;;		_PWM3_Initialize
  3145 ;;		_SPI1_Initialize
  3146 ;;		_SYSTEM_Initialize
  3147 ;;		_TMR0_Initialize
  3148 ;;		_TMR0_SetInterruptHandler
  3149 ;;		_TMR1_Initialize
  3150 ;;		_TMR1_SetInterruptHandler
  3151 ;;		_TMR2_Initialize
  3152 ;;		_displayMatrix
  3153 ;;		_playNote
  3154 ;;		_shiftBytes
  3155 ;; This function is called by:
  3156 ;;		Startup code after reset
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           
  3161                           ;psect for function _main
  3162  0DC5                     _main:
  3163  0DC5                     l2808:	
  3164                           ;incstack = 0
  3165                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3166                           
  3167                           
  3168                           ;main.c: 286:     SYSTEM_Initialize();
  3169  0DC5  3187  27BA  318D   	fcall	_SYSTEM_Initialize
  3170  0DC8                     l2810:
  3171                           
  3172                           ;main.c: 292:     (INTCONbits.GIE = 1);
  3173  0DC8  178B               	bsf	11,7	;volatile
  3174  0DC9                     l2812:
  3175                           
  3176                           ;main.c: 295:     (INTCONbits.PEIE = 1);
  3177  0DC9  170B               	bsf	11,6	;volatile
  3178                           
  3179                           ;main.c: 304:     SPI1_Initialize();
  3180  0DCA  318D  2580  318D   	fcall	_SPI1_Initialize
  3181  0DCD                     l2814:
  3182                           
  3183                           ;main.c: 305:     SSP1CON1bits.SSPEN = 0;
  3184  0DCD  0143               	movlb	3	; select bank3
  3185  0DCE  1290               	bcf	16,5	;volatile
  3186  0DCF                     l2816:
  3187                           
  3188                           ;main.c: 306:     TRISCbits.TRISC3 = 0;
  3189  0DCF  0140               	movlb	0	; select bank0
  3190  0DD0  1194               	bcf	20,3	;volatile
  3191  0DD1                     l2818:
  3192                           
  3193                           ;main.c: 307:     TRISAbits.TRISA4 = 1;
  3194  0DD1  1612               	bsf	18,4	;volatile
  3195  0DD2                     l2820:
  3196                           
  3197                           ;main.c: 308:     TRISCbits.TRISC5 = 0;
  3198  0DD2  1294               	bcf	20,5	;volatile
  3199  0DD3                     l2822:
  3200                           
  3201                           ;main.c: 311:     SSP1CON1bits.SSPEN = 1;
  3202  0DD3  0143               	movlb	3	; select bank3
  3203  0DD4  1690               	bsf	16,5	;volatile
  3204                           
  3205                           ;main.c: 314:     EXT_INT_Initialize();
  3206  0DD5  318D  2527  318D   	fcall	_EXT_INT_Initialize
  3207                           
  3208                           ;main.c: 315:     INT_SetInterruptHandler(EXT_ISR);
  3209  0DD8  30D6               	movlw	low _EXT_ISR
  3210  0DD9  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
  3211  0DDA  3007               	movlw	high _EXT_ISR
  3212  0DDB  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  3213  0DDC  318C  24EE  318D   	fcall	_INT_SetInterruptHandler
  3214  0DDF                     l2824:
  3215                           
  3216                           ;main.c: 316:     PIE0bits.INTE = 1;
  3217  0DDF  014E               	movlb	14	; select bank14
  3218  0DE0  1416               	bsf	22,0	;volatile
  3219                           
  3220                           ;main.c: 319:     TMR0_Initialize();
  3221  0DE1  318D  25AC  318D   	fcall	_TMR0_Initialize
  3222                           
  3223                           ;main.c: 320:     TMR0_SetInterruptHandler(TMR0_ISR_);
  3224  0DE4  30DE               	movlw	low _TMR0_ISR_
  3225  0DE5  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3226  0DE6  300C               	movlw	high _TMR0_ISR_
  3227  0DE7  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3228  0DE8  318C  24FA  318D   	fcall	_TMR0_SetInterruptHandler
  3229  0DEB                     l2826:
  3230                           
  3231                           ;main.c: 321:     T0CON0bits.T0EN = 0;
  3232  0DEB  014B               	movlb	11	; select bank11
  3233  0DEC  139E               	bcf	30,7	;volatile
  3234                           
  3235                           ;main.c: 324:     TMR1_Initialize();
  3236  0DED  3187  277B  318D   	fcall	_TMR1_Initialize
  3237                           
  3238                           ;main.c: 325:     TMR1_SetInterruptHandler(TMR1_ISR_);
  3239  0DF0  3071               	movlw	low _TMR1_ISR_
  3240  0DF1  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3241  0DF2  3000               	movlw	high _TMR1_ISR_
  3242  0DF3  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3243  0DF4  318D  2500  318D   	fcall	_TMR1_SetInterruptHandler
  3244  0DF7                     l2828:
  3245                           
  3246                           ;main.c: 326:     T1CONbits.TMR1ON = 0;
  3247  0DF7  0144               	movlb	4	; select bank4
  3248  0DF8  100E               	bcf	14,0	;volatile
  3249                           
  3250                           ;main.c: 329:     TMR2_Initialize();
  3251  0DF9  3187  27F2  318D   	fcall	_TMR2_Initialize
  3252  0DFC                     l2830:
  3253                           
  3254                           ;main.c: 330:     T2CONbits.TMR2ON = 0;
  3255  0DFC  0145               	movlb	5	; select bank5
  3256  0DFD  138E               	bcf	14,7	;volatile
  3257                           
  3258                           ;main.c: 333:     PWM3_Initialize();
  3259  0DFE  318D  2506  318D   	fcall	_PWM3_Initialize
  3260  0E01                     l2832:
  3261  0E01  0140               	movlb	0	; select bank0
  3262  0E02  111A               	bcf	26,2	;volatile
  3263  0E03                     l2834:
  3264  0E03  121A               	bcf	26,4	;volatile
  3265  0E04                     l2836:
  3266  0E04  101A               	bcf	26,0	;volatile
  3267  0E05                     l2838:
  3268                           
  3269                           ;main.c: 343:     for (int i = 0; i < 15; i++)
  3270  0E05  0141               	movlb	1	; select bank1
  3271  0E06  01E5               	clrf	main@i^(0+128)
  3272  0E07  01E6               	clrf	(main@i+1)^(0+128)
  3273  0E08                     l2844:
  3274                           
  3275                           ;main.c: 344:     {;main.c: 345:         for (int j = 0; j < 12; j++)
  3276  0E08  0141               	movlb	1	; select bank1
  3277  0E09  01E3               	clrf	main@j^(0+128)
  3278  0E0A  01E4               	clrf	(main@j+1)^(0+128)
  3279  0E0B                     l2850:
  3280                           
  3281                           ;main.c: 346:         {;main.c: 347:             displayMatrix(light_array);
  3282  0E0B  30D1               	movlw	(low (_light_array| 0))& (0+255)
  3283  0E0C  3186  26DF  318D   	fcall	_displayMatrix
  3284  0E0F                     l2852:
  3285                           
  3286                           ;main.c: 348:         }
  3287  0E0F  3001               	movlw	1
  3288  0E10  0141               	movlb	1	; select bank1
  3289  0E11  07E3               	addwf	main@j^(0+128),f
  3290  0E12  3000               	movlw	0
  3291  0E13  3DE4               	addwfc	(main@j+1)^(0+128),f
  3292  0E14                     l2854:
  3293  0E14  0864               	movf	(main@j+1)^(0+128),w
  3294  0E15  3A80               	xorlw	128
  3295  0E16  00DC               	movwf	??_main^(0+128)
  3296  0E17  3080               	movlw	128
  3297  0E18  025C               	subwf	??_main^(0+128),w
  3298  0E19  1D03               	skipz
  3299  0E1A  2E1D               	goto	u1895
  3300  0E1B  300C               	movlw	12
  3301  0E1C  0263               	subwf	main@j^(0+128),w
  3302  0E1D                     u1895:
  3303  0E1D  1C03               	skipc
  3304  0E1E  2E20               	goto	u1891
  3305  0E1F  2E21               	goto	u1890
  3306  0E20                     u1891:
  3307  0E20  2E0B               	goto	l2850
  3308  0E21                     u1890:
  3309  0E21                     l2856:
  3310                           
  3311                           ;main.c: 349:         if (i < 7)
  3312  0E21  0141               	movlb	1	; select bank1
  3313  0E22  0866               	movf	(main@i+1)^(0+128),w
  3314  0E23  3A80               	xorlw	128
  3315  0E24  00DC               	movwf	??_main^(0+128)
  3316  0E25  3080               	movlw	128
  3317  0E26  025C               	subwf	??_main^(0+128),w
  3318  0E27  1D03               	skipz
  3319  0E28  2E2B               	goto	u1905
  3320  0E29  3007               	movlw	7
  3321  0E2A  0265               	subwf	main@i^(0+128),w
  3322  0E2B                     u1905:
  3323  0E2B  1803               	skipnc
  3324  0E2C  2E2E               	goto	u1901
  3325  0E2D  2E2F               	goto	u1900
  3326  0E2E                     u1901:
  3327  0E2E  2E67               	goto	l2870
  3328  0E2F                     u1900:
  3329  0E2F                     l2858:
  3330                           
  3331                           ;main.c: 350:         {;main.c: 351:             for (int j = 0; j < 7; j++)
  3332  0E2F  0141               	movlb	1	; select bank1
  3333  0E30  01E7               	clrf	main@j_1175^(0+128)
  3334  0E31  01E8               	clrf	(main@j_1175+1)^(0+128)
  3335  0E32                     l2864:
  3336                           
  3337                           ;main.c: 352:             {;main.c: 353:                 uint8_t light = (~light_array[j
      +                          ]) << 7;
  3338  0E32  0141               	movlb	1	; select bank1
  3339  0E33  0867               	movf	main@j_1175^(0+128),w
  3340  0E34  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  3341  0E35  0086               	movwf	6
  3342  0E36  0187               	clrf	7
  3343  0E37  0901               	comf	1,w
  3344  0E38  00DC               	movwf	??_main^(0+128)
  3345  0E39  3006               	movlw	6
  3346  0E3A                     u1915:
  3347  0E3A  35DC               	lslf	??_main^(0+128),f
  3348  0E3B  3EFF               	addlw	-1
  3349  0E3C  1D03               	skipz
  3350  0E3D  2E3A               	goto	u1915
  3351  0E3E  355C               	lslf	??_main^(0+128),w
  3352  0E3F  00DD               	movwf	(??_main+1)^(0+128)
  3353  0E40  085D               	movf	(??_main+1)^(0+128),w
  3354  0E41  00E1               	movwf	main@light^(0+128)
  3355                           
  3356                           ;main.c: 354:                 light_array[j] = (light_array[j] << 1) + (light >> 7);
  3357  0E42  0861               	movf	main@light^(0+128),w
  3358  0E43  00DC               	movwf	??_main^(0+128)
  3359  0E44  3007               	movlw	7
  3360  0E45                     u1925:
  3361  0E45  36DC               	lsrf	??_main^(0+128),f
  3362  0E46  0B89               	decfsz	9,f
  3363  0E47  2E45               	goto	u1925
  3364  0E48  0867               	movf	main@j_1175^(0+128),w
  3365  0E49  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  3366  0E4A  0086               	movwf	6
  3367  0E4B  0187               	clrf	7
  3368  0E4C  3501               	lslf	1,w
  3369  0E4D  075C               	addwf	??_main^(0+128),w
  3370  0E4E  00DD               	movwf	(??_main+1)^(0+128)
  3371  0E4F  0867               	movf	main@j_1175^(0+128),w
  3372  0E50  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  3373  0E51  0086               	movwf	6
  3374  0E52  0187               	clrf	7
  3375  0E53  085D               	movf	(??_main+1)^(0+128),w
  3376  0E54  0081               	movwf	1
  3377  0E55                     l2866:
  3378                           
  3379                           ;main.c: 355:             }
  3380  0E55  3001               	movlw	1
  3381  0E56  07E7               	addwf	main@j_1175^(0+128),f
  3382  0E57  3000               	movlw	0
  3383  0E58  3DE8               	addwfc	(main@j_1175+1)^(0+128),f
  3384  0E59                     l2868:
  3385  0E59  0868               	movf	(main@j_1175+1)^(0+128),w
  3386  0E5A  3A80               	xorlw	128
  3387  0E5B  00DC               	movwf	??_main^(0+128)
  3388  0E5C  3080               	movlw	128
  3389  0E5D  025C               	subwf	??_main^(0+128),w
  3390  0E5E  1D03               	skipz
  3391  0E5F  2E62               	goto	u1935
  3392  0E60  3007               	movlw	7
  3393  0E61  0267               	subwf	main@j_1175^(0+128),w
  3394  0E62                     u1935:
  3395  0E62  1C03               	skipc
  3396  0E63  2E65               	goto	u1931
  3397  0E64  2E66               	goto	u1930
  3398  0E65                     u1931:
  3399  0E65  2E32               	goto	l2864
  3400  0E66                     u1930:
  3401  0E66  2E89               	goto	l2882
  3402  0E67                     l2870:
  3403                           
  3404                           ;main.c: 358:         {;main.c: 359:             for (int j = 0; j < 7; j++)
  3405  0E67  0141               	movlb	1	; select bank1
  3406  0E68  01E9               	clrf	main@j_1177^(0+128)
  3407  0E69  01EA               	clrf	(main@j_1177+1)^(0+128)
  3408  0E6A                     l2876:
  3409                           
  3410                           ;main.c: 362:                 light_array[j] = (light_array[j] << 1) + 1;
  3411  0E6A  0141               	movlb	1	; select bank1
  3412  0E6B  0869               	movf	main@j_1177^(0+128),w
  3413  0E6C  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  3414  0E6D  0086               	movwf	6
  3415  0E6E  0187               	clrf	7
  3416  0E6F  1403               	setc
  3417  0E70  0D01               	rlf	1,w
  3418  0E71  00DC               	movwf	??_main^(0+128)
  3419  0E72  0869               	movf	main@j_1177^(0+128),w
  3420  0E73  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  3421  0E74  0086               	movwf	6
  3422  0E75  0187               	clrf	7
  3423  0E76  085C               	movf	??_main^(0+128),w
  3424  0E77  0081               	movwf	1
  3425  0E78                     l2878:
  3426                           
  3427                           ;main.c: 363:             }
  3428  0E78  3001               	movlw	1
  3429  0E79  07E9               	addwf	main@j_1177^(0+128),f
  3430  0E7A  3000               	movlw	0
  3431  0E7B  3DEA               	addwfc	(main@j_1177+1)^(0+128),f
  3432  0E7C                     l2880:
  3433  0E7C  086A               	movf	(main@j_1177+1)^(0+128),w
  3434  0E7D  3A80               	xorlw	128
  3435  0E7E  00DC               	movwf	??_main^(0+128)
  3436  0E7F  3080               	movlw	128
  3437  0E80  025C               	subwf	??_main^(0+128),w
  3438  0E81  1D03               	skipz
  3439  0E82  2E85               	goto	u1945
  3440  0E83  3007               	movlw	7
  3441  0E84  0269               	subwf	main@j_1177^(0+128),w
  3442  0E85                     u1945:
  3443  0E85  1C03               	skipc
  3444  0E86  2E88               	goto	u1941
  3445  0E87  2E89               	goto	u1940
  3446  0E88                     u1941:
  3447  0E88  2E6A               	goto	l2876
  3448  0E89                     u1940:
  3449  0E89                     l2882:
  3450                           
  3451                           ;main.c: 365:     }
  3452  0E89  3001               	movlw	1
  3453  0E8A  0141               	movlb	1	; select bank1
  3454  0E8B  07E5               	addwf	main@i^(0+128),f
  3455  0E8C  3000               	movlw	0
  3456  0E8D  3DE6               	addwfc	(main@i+1)^(0+128),f
  3457  0E8E  0866               	movf	(main@i+1)^(0+128),w
  3458  0E8F  3A80               	xorlw	128
  3459  0E90  00DC               	movwf	??_main^(0+128)
  3460  0E91  3080               	movlw	128
  3461  0E92  025C               	subwf	??_main^(0+128),w
  3462  0E93  1D03               	skipz
  3463  0E94  2E97               	goto	u1955
  3464  0E95  300F               	movlw	15
  3465  0E96  0265               	subwf	main@i^(0+128),w
  3466  0E97                     u1955:
  3467  0E97  1C03               	skipc
  3468  0E98  2E9A               	goto	u1951
  3469  0E99  2E9B               	goto	u1950
  3470  0E9A                     u1951:
  3471  0E9A  2E08               	goto	l2844
  3472  0E9B                     u1950:
  3473  0E9B                     l551:	
  3474                           ;main.c: 373:     while (1)
  3475                           
  3476                           
  3477                           ;main.c: 374:     {;main.c: 375:         T0CON0bits.T0EN = 1;
  3478  0E9B  014B               	movlb	11	; select bank11
  3479  0E9C  179E               	bsf	30,7	;volatile
  3480  0E9D                     l2884:
  3481                           
  3482                           ;main.c: 376:         shiftBytes(0xFE, 0x08);
  3483  0E9D  3008               	movlw	8
  3484  0E9E  0141               	movlb	1	; select bank1
  3485  0E9F  00DC               	movwf	??_main^(0+128)
  3486  0EA0  085C               	movf	??_main^(0+128),w
  3487  0EA1  00F3               	movwf	shiftBytes@lowSide
  3488  0EA2  30FE               	movlw	254
  3489  0EA3  318D  2541  318D   	fcall	_shiftBytes
  3490  0EA6                     l2886:
  3491  0EA6  0140               	movlb	0	; select bank0
  3492  0EA7  111A               	bcf	26,2	;volatile
  3493  0EA8                     l2888:
  3494  0EA8  101A               	bcf	26,0	;volatile
  3495  0EA9                     l2890:
  3496                           
  3497                           ;main.c: 379:         if (presses && TMR0_complete)
  3498  0EA9  0141               	movlb	1	; select bank1
  3499  0EAA  086D               	movf	_presses^(0+128),w
  3500  0EAB  1903               	btfsc	3,2
  3501  0EAC  2EAE               	goto	u1961
  3502  0EAD  2EAF               	goto	u1960
  3503  0EAE                     u1961:
  3504  0EAE  2FE5               	goto	l2956
  3505  0EAF                     u1960:
  3506  0EAF                     l2892:
  3507  0EAF  086E               	movf	_TMR0_complete^(0+128),w
  3508  0EB0  1903               	btfsc	3,2
  3509  0EB1  2EB3               	goto	u1971
  3510  0EB2  2EB4               	goto	u1970
  3511  0EB3                     u1971:
  3512  0EB3  2FE5               	goto	l2956
  3513  0EB4                     u1970:
  3514  0EB4                     l2894:
  3515                           
  3516                           ;main.c: 380:         {;main.c: 381:             T0CON0bits.T0EN = 0;
  3517  0EB4  014B               	movlb	11	; select bank11
  3518  0EB5  139E               	bcf	30,7	;volatile
  3519                           
  3520                           ;main.c: 384:             switch (presses)
  3521  0EB6  2F11               	goto	l2922
  3522  0EB7                     l2896:
  3523                           
  3524                           ;main.c: 387:                     light_array[0] = 0x88;
  3525  0EB7  3088               	movlw	136
  3526  0EB8  00DC               	movwf	??_main^(0+128)
  3527  0EB9  085C               	movf	??_main^(0+128),w
  3528  0EBA  00D1               	movwf	_light_array^(0+128)
  3529                           
  3530                           ;main.c: 388:                     light_array[1] = 0x44;
  3531  0EBB  3044               	movlw	68
  3532  0EBC  00DC               	movwf	??_main^(0+128)
  3533  0EBD  085C               	movf	??_main^(0+128),w
  3534  0EBE  00D2               	movwf	(_light_array^(0+128)+1)
  3535                           
  3536                           ;main.c: 389:                     light_array[2] = 0x22;
  3537  0EBF  3022               	movlw	34
  3538  0EC0  00DC               	movwf	??_main^(0+128)
  3539  0EC1  085C               	movf	??_main^(0+128),w
  3540  0EC2  00D3               	movwf	(_light_array^(0+128)+2)
  3541                           
  3542                           ;main.c: 390:                     light_array[3] = 0x11;
  3543  0EC3  3011               	movlw	17
  3544  0EC4  00DC               	movwf	??_main^(0+128)
  3545  0EC5  085C               	movf	??_main^(0+128),w
  3546  0EC6  00D4               	movwf	(_light_array^(0+128)+3)
  3547                           
  3548                           ;main.c: 391:                     light_array[4] = 0x88;
  3549  0EC7  3088               	movlw	136
  3550  0EC8  00DC               	movwf	??_main^(0+128)
  3551  0EC9  085C               	movf	??_main^(0+128),w
  3552  0ECA  00D5               	movwf	(_light_array^(0+128)+4)
  3553                           
  3554                           ;main.c: 392:                     light_array[5] = 0x44;
  3555  0ECB  3044               	movlw	68
  3556  0ECC  00DC               	movwf	??_main^(0+128)
  3557  0ECD  085C               	movf	??_main^(0+128),w
  3558  0ECE  00D6               	movwf	(_light_array^(0+128)+5)
  3559                           
  3560                           ;main.c: 393:                     light_array[6] = 0x22;
  3561  0ECF  3022               	movlw	34
  3562  0ED0  00DC               	movwf	??_main^(0+128)
  3563  0ED1  085C               	movf	??_main^(0+128),w
  3564  0ED2  00D7               	movwf	(_light_array^(0+128)+6)
  3565  0ED3                     l2898:
  3566                           
  3567                           ;main.c: 394:                     silent_night_playing = 1;
  3568  0ED3  0140               	movlb	0	; select bank0
  3569  0ED4  01DC               	clrf	_silent_night_playing
  3570  0ED5  0ADC               	incf	_silent_night_playing,f
  3571                           
  3572                           ;main.c: 395:                     break;
  3573  0ED6  2F25               	goto	l559
  3574  0ED7                     l2900:
  3575                           
  3576                           ;main.c: 407:                     light_array[0] = 0xFF;
  3577  0ED7  30FF               	movlw	255
  3578  0ED8  00DC               	movwf	??_main^(0+128)
  3579  0ED9  085C               	movf	??_main^(0+128),w
  3580  0EDA  00D1               	movwf	_light_array^(0+128)
  3581                           
  3582                           ;main.c: 408:                     light_array[1] = 0xFF;
  3583  0EDB  30FF               	movlw	255
  3584  0EDC  00DC               	movwf	??_main^(0+128)
  3585  0EDD  085C               	movf	??_main^(0+128),w
  3586  0EDE  00D2               	movwf	(_light_array^(0+128)+1)
  3587                           
  3588                           ;main.c: 409:                     light_array[2] = 0xFF;
  3589  0EDF  30FF               	movlw	255
  3590  0EE0  00DC               	movwf	??_main^(0+128)
  3591  0EE1  085C               	movf	??_main^(0+128),w
  3592  0EE2  00D3               	movwf	(_light_array^(0+128)+2)
  3593                           
  3594                           ;main.c: 410:                     light_array[3] = 0xFF;
  3595  0EE3  30FF               	movlw	255
  3596  0EE4  00DC               	movwf	??_main^(0+128)
  3597  0EE5  085C               	movf	??_main^(0+128),w
  3598  0EE6  00D4               	movwf	(_light_array^(0+128)+3)
  3599                           
  3600                           ;main.c: 411:                     light_array[4] = 0xFF;
  3601  0EE7  30FF               	movlw	255
  3602  0EE8  00DC               	movwf	??_main^(0+128)
  3603  0EE9  085C               	movf	??_main^(0+128),w
  3604  0EEA  00D5               	movwf	(_light_array^(0+128)+4)
  3605                           
  3606                           ;main.c: 412:                     light_array[5] = 0xFF;
  3607  0EEB  30FF               	movlw	255
  3608  0EEC  00DC               	movwf	??_main^(0+128)
  3609  0EED  085C               	movf	??_main^(0+128),w
  3610  0EEE  00D6               	movwf	(_light_array^(0+128)+5)
  3611                           
  3612                           ;main.c: 413:                     light_array[6] = 0xFF;
  3613  0EEF  30FF               	movlw	255
  3614  0EF0  00DC               	movwf	??_main^(0+128)
  3615  0EF1  085C               	movf	??_main^(0+128),w
  3616  0EF2  00D7               	movwf	(_light_array^(0+128)+6)
  3617  0EF3                     l2902:
  3618                           
  3619                           ;main.c: 415:                     song2_playing = 1;
  3620  0EF3  0140               	movlb	0	; select bank0
  3621  0EF4  01DA               	clrf	_song2_playing
  3622  0EF5  0ADA               	incf	_song2_playing,f
  3623                           
  3624                           ;main.c: 416:                     break;
  3625  0EF6  2F25               	goto	l559
  3626  0EF7                     l2904:
  3627                           
  3628                           ;main.c: 419:                     light_array[0] = 0x00;
  3629  0EF7  01D1               	clrf	_light_array^(0+128)
  3630  0EF8                     l2906:
  3631                           
  3632                           ;main.c: 420:                     light_array[1] = 0xE8;
  3633  0EF8  30E8               	movlw	232
  3634  0EF9  00DC               	movwf	??_main^(0+128)
  3635  0EFA  085C               	movf	??_main^(0+128),w
  3636  0EFB  00D2               	movwf	(_light_array^(0+128)+1)
  3637  0EFC                     l2908:
  3638                           
  3639                           ;main.c: 421:                     light_array[2] = 0xBE;
  3640  0EFC  30BE               	movlw	190
  3641  0EFD  00DC               	movwf	??_main^(0+128)
  3642  0EFE  085C               	movf	??_main^(0+128),w
  3643  0EFF  00D3               	movwf	(_light_array^(0+128)+2)
  3644  0F00                     l2910:
  3645                           
  3646                           ;main.c: 422:                     light_array[3] = 0xFE;
  3647  0F00  30FE               	movlw	254
  3648  0F01  00DC               	movwf	??_main^(0+128)
  3649  0F02  085C               	movf	??_main^(0+128),w
  3650  0F03  00D4               	movwf	(_light_array^(0+128)+3)
  3651  0F04                     l2912:
  3652                           
  3653                           ;main.c: 423:                     light_array[4] = 0xBD;
  3654  0F04  30BD               	movlw	189
  3655  0F05  00DC               	movwf	??_main^(0+128)
  3656  0F06  085C               	movf	??_main^(0+128),w
  3657  0F07  00D5               	movwf	(_light_array^(0+128)+4)
  3658  0F08                     l2914:
  3659                           
  3660                           ;main.c: 424:                     light_array[5] = 0xA0;
  3661  0F08  30A0               	movlw	160
  3662  0F09  00DC               	movwf	??_main^(0+128)
  3663  0F0A  085C               	movf	??_main^(0+128),w
  3664  0F0B  00D6               	movwf	(_light_array^(0+128)+5)
  3665  0F0C                     l2916:
  3666                           
  3667                           ;main.c: 425:                     light_array[6] = 0x00;
  3668  0F0C  01D7               	clrf	(_light_array^(0+128)+6)
  3669  0F0D                     l2918:
  3670                           
  3671                           ;main.c: 438:                     song3_playing = 1;
  3672  0F0D  0140               	movlb	0	; select bank0
  3673  0F0E  01DB               	clrf	_song3_playing
  3674  0F0F  0ADB               	incf	_song3_playing,f
  3675                           
  3676                           ;main.c: 439:                     break;
  3677  0F10  2F25               	goto	l559
  3678  0F11                     l2922:
  3679  0F11  0141               	movlb	1	; select bank1
  3680  0F12  086D               	movf	_presses^(0+128),w
  3681  0F13  00DC               	movwf	??_main^(0+128)
  3682  0F14  01DD               	clrf	(??_main^(0+128)+1)
  3683                           
  3684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3685                           ; Switch size 1, requested type "simple"
  3686                           ; Number of cases is 1, Range of values is 0 to 0
  3687                           ; switch strategies available:
  3688                           ; Name         Instructions Cycles
  3689                           ; simple_byte            4     3 (average)
  3690                           ; direct_byte            8     6 (fixed)
  3691                           ; jumptable            260     6 (fixed)
  3692                           ;	Chosen strategy is simple_byte
  3693  0F15  085D               	movf	(??_main+1)^(0+128),w
  3694  0F16  3A00               	xorlw	0	; case 0
  3695  0F17  1903               	skipnz
  3696  0F18  2F1A               	goto	l3022
  3697  0F19  2F25               	goto	l559
  3698  0F1A                     l3022:
  3699                           
  3700                           ; Switch size 1, requested type "simple"
  3701                           ; Number of cases is 3, Range of values is 1 to 3
  3702                           ; switch strategies available:
  3703                           ; Name         Instructions Cycles
  3704                           ; simple_byte           10     6 (average)
  3705                           ; direct_byte           15     9 (fixed)
  3706                           ; jumptable            263     9 (fixed)
  3707                           ;	Chosen strategy is simple_byte
  3708  0F1A  085C               	movf	??_main^(0+128),w
  3709  0F1B  3A01               	xorlw	1	; case 1
  3710  0F1C  1903               	skipnz
  3711  0F1D  2EB7               	goto	l2896
  3712  0F1E  3A03               	xorlw	3	; case 2
  3713  0F1F  1903               	skipnz
  3714  0F20  2ED7               	goto	l2900
  3715  0F21  3A01               	xorlw	1	; case 3
  3716  0F22  1903               	skipnz
  3717  0F23  2EF7               	goto	l2904
  3718  0F24  2F25               	goto	l559
  3719  0F25                     l559:
  3720                           
  3721                           ;main.c: 441:             T1CONbits.TMR1ON = 1;
  3722  0F25  0144               	movlb	4	; select bank4
  3723  0F26  140E               	bsf	14,0	;volatile
  3724                           
  3725                           ;main.c: 442:             T2CONbits.TMR2ON = 1;
  3726  0F27  0145               	movlb	5	; select bank5
  3727  0F28  178E               	bsf	14,7	;volatile
  3728                           
  3729                           ;main.c: 445:             while (presses == 1)
  3730  0F29  2F4A               	goto	l2926
  3731  0F2A                     l2924:
  3732                           
  3733                           ;main.c: 446:             {;main.c: 447:                 playNote(silent_night[count], s
      +                          ilent_night_pre[count]);
  3734  0F2A  301E               	movlw	30
  3735  0F2B  00DC               	movwf	??_main^(0+128)
  3736  0F2C  3022               	movlw	34
  3737  0F2D  00DD               	movwf	(??_main^(0+128)+1)
  3738  0F2E  086B               	movf	_count^(0+128),w
  3739  0F2F  075C               	addwf	??_main^(0+128),w
  3740  0F30  0086               	movwf	6
  3741  0F31  086C               	movf	(_count+1)^(0+128),w
  3742  0F32  3D5D               	addwfc	(??_main+1)^(0+128),w
  3743  0F33  0087               	movwf	7
  3744  0F34  0801               	movf	1,w
  3745  0F35  00DE               	movwf	(??_main+2)^(0+128)
  3746  0F36  085E               	movf	(??_main+2)^(0+128),w
  3747  0F37  00F2               	movwf	playNote@prescale
  3748  0F38  3093               	movlw	147
  3749  0F39  00DF               	movwf	(??_main+3)^(0+128)
  3750  0F3A  3021               	movlw	33
  3751  0F3B  00E0               	movwf	((??_main+3)^(0+128)+1)
  3752  0F3C  086B               	movf	_count^(0+128),w
  3753  0F3D  075F               	addwf	(??_main+3)^(0+128),w
  3754  0F3E  0086               	movwf	6
  3755  0F3F  086C               	movf	(_count+1)^(0+128),w
  3756  0F40  3D60               	addwfc	(??_main+4)^(0+128),w
  3757  0F41  0087               	movwf	7
  3758  0F42  0801               	movf	1,w
  3759  0F43  3187  279B  318D   	fcall	_playNote
  3760                           
  3761                           ;main.c: 448:                 displayMatrix(light_array);
  3762  0F46  30D1               	movlw	(low (_light_array| 0))& (0+255)
  3763  0F47  3186  26DF  318D   	fcall	_displayMatrix
  3764  0F4A                     l2926:
  3765                           
  3766                           ;main.c: 445:             while (presses == 1)
  3767  0F4A  0141               	movlb	1	; select bank1
  3768  0F4B  036D               	decf	_presses^(0+128),w
  3769  0F4C  1903               	btfsc	3,2
  3770  0F4D  2F4F               	goto	u1981
  3771  0F4E  2F50               	goto	u1980
  3772  0F4F                     u1981:
  3773  0F4F  2F2A               	goto	l2924
  3774  0F50                     u1980:
  3775  0F50  2FAD               	goto	l2944
  3776  0F51                     l2928:
  3777                           
  3778                           ;main.c: 452:             {;main.c: 454:                 if (count > 84)
  3779  0F51  086C               	movf	(_count+1)^(0+128),w
  3780  0F52  3A80               	xorlw	128
  3781  0F53  00DC               	movwf	??_main^(0+128)
  3782  0F54  3080               	movlw	128
  3783  0F55  025C               	subwf	??_main^(0+128),w
  3784  0F56  1D03               	skipz
  3785  0F57  2F5A               	goto	u1995
  3786  0F58  3055               	movlw	85
  3787  0F59  026B               	subwf	_count^(0+128),w
  3788  0F5A                     u1995:
  3789  0F5A  1C03               	skipc
  3790  0F5B  2F5D               	goto	u1991
  3791  0F5C  2F5E               	goto	u1990
  3792  0F5D                     u1991:
  3793  0F5D  2F96               	goto	l2942
  3794  0F5E                     u1990:
  3795  0F5E                     l2930:
  3796                           
  3797                           ;main.c: 457:                     if ((count >= 91) && (count <= 96))
  3798  0F5E  0141               	movlb	1	; select bank1
  3799  0F5F  086C               	movf	(_count+1)^(0+128),w
  3800  0F60  3A80               	xorlw	128
  3801  0F61  00DC               	movwf	??_main^(0+128)
  3802  0F62  3080               	movlw	128
  3803  0F63  025C               	subwf	??_main^(0+128),w
  3804  0F64  1D03               	skipz
  3805  0F65  2F68               	goto	u2005
  3806  0F66  305B               	movlw	91
  3807  0F67  026B               	subwf	_count^(0+128),w
  3808  0F68                     u2005:
  3809  0F68  1C03               	skipc
  3810  0F69  2F6B               	goto	u2001
  3811  0F6A  2F6C               	goto	u2000
  3812  0F6B                     u2001:
  3813  0F6B  2F80               	goto	l2936
  3814  0F6C                     u2000:
  3815  0F6C                     l2932:
  3816  0F6C  0141               	movlb	1	; select bank1
  3817  0F6D  086C               	movf	(_count+1)^(0+128),w
  3818  0F6E  3A80               	xorlw	128
  3819  0F6F  00DC               	movwf	??_main^(0+128)
  3820  0F70  3080               	movlw	128
  3821  0F71  025C               	subwf	??_main^(0+128),w
  3822  0F72  1D03               	skipz
  3823  0F73  2F76               	goto	u2015
  3824  0F74  3061               	movlw	97
  3825  0F75  026B               	subwf	_count^(0+128),w
  3826  0F76                     u2015:
  3827  0F76  1803               	skipnc
  3828  0F77  2F79               	goto	u2011
  3829  0F78  2F7A               	goto	u2010
  3830  0F79                     u2011:
  3831  0F79  2F80               	goto	l2936
  3832  0F7A                     u2010:
  3833  0F7A                     l2934:
  3834                           
  3835                           ;main.c: 458:                     {;main.c: 459:                         pre = 0xC0;
  3836  0F7A  30C0               	movlw	192
  3837  0F7B  0141               	movlb	1	; select bank1
  3838  0F7C  00DC               	movwf	??_main^(0+128)
  3839  0F7D  085C               	movf	??_main^(0+128),w
  3840  0F7E  00E2               	movwf	main@pre^(0+128)
  3841                           
  3842                           ;main.c: 460:                     }
  3843  0F7F  2F85               	goto	l2938
  3844  0F80                     l2936:
  3845                           
  3846                           ;main.c: 462:                     {;main.c: 463:                         pre = 0xD0;
  3847  0F80  30D0               	movlw	208
  3848  0F81  0141               	movlb	1	; select bank1
  3849  0F82  00DC               	movwf	??_main^(0+128)
  3850  0F83  085C               	movf	??_main^(0+128),w
  3851  0F84  00E2               	movwf	main@pre^(0+128)
  3852  0F85                     l2938:
  3853                           
  3854                           ;main.c: 465:                     playNote(song2_2[count - 85], pre);
  3855  0F85  0862               	movf	main@pre^(0+128),w
  3856  0F86  00DC               	movwf	??_main^(0+128)
  3857  0F87  085C               	movf	??_main^(0+128),w
  3858  0F88  00F2               	movwf	playNote@prescale
  3859  0F89  086B               	movf	_count^(0+128),w
  3860  0F8A  3E4B               	addlw	(low ((_song2_2| 0+171)))& (0+255)
  3861  0F8B  0086               	movwf	6
  3862  0F8C  0187               	clrf	7
  3863  0F8D  0801               	movf	1,w
  3864  0F8E  3187  279B  318D   	fcall	_playNote
  3865  0F91                     l2940:
  3866                           
  3867                           ;main.c: 466:                     displayMatrix(light_array);
  3868  0F91  30D1               	movlw	(low (_light_array| 0))& (0+255)
  3869  0F92  3186  26DF  318D   	fcall	_displayMatrix
  3870                           
  3871                           ;main.c: 467:                 }
  3872  0F95  2FAD               	goto	l2944
  3873  0F96                     l2942:
  3874                           
  3875                           ;main.c: 469:                 {;main.c: 470:                     playNote(song2[count], 
      +                          0xD0);
  3876  0F96  30D0               	movlw	208
  3877  0F97  0141               	movlb	1	; select bank1
  3878  0F98  00DC               	movwf	??_main^(0+128)
  3879  0F99  085C               	movf	??_main^(0+128),w
  3880  0F9A  00F2               	movwf	playNote@prescale
  3881  0F9B  309A               	movlw	154
  3882  0F9C  00DD               	movwf	(??_main+1)^(0+128)
  3883  0F9D  3023               	movlw	35
  3884  0F9E  00DE               	movwf	((??_main+1)^(0+128)+1)
  3885  0F9F  086B               	movf	_count^(0+128),w
  3886  0FA0  075D               	addwf	(??_main+1)^(0+128),w
  3887  0FA1  0086               	movwf	6
  3888  0FA2  086C               	movf	(_count+1)^(0+128),w
  3889  0FA3  3D5E               	addwfc	(??_main+2)^(0+128),w
  3890  0FA4  0087               	movwf	7
  3891  0FA5  0801               	movf	1,w
  3892  0FA6  3187  279B  318D   	fcall	_playNote
  3893                           
  3894                           ;main.c: 471:                     displayMatrix(light_array);
  3895  0FA9  30D1               	movlw	(low (_light_array| 0))& (0+255)
  3896  0FAA  3186  26DF  318D   	fcall	_displayMatrix
  3897  0FAD                     l2944:
  3898                           
  3899                           ;main.c: 451:             while (presses == 2)
  3900  0FAD  3002               	movlw	2
  3901  0FAE  0141               	movlb	1	; select bank1
  3902  0FAF  066D               	xorwf	_presses^(0+128),w
  3903  0FB0  1903               	btfsc	3,2
  3904  0FB1  2FB3               	goto	u2021
  3905  0FB2  2FB4               	goto	u2020
  3906  0FB3                     u2021:
  3907  0FB3  2F51               	goto	l2928
  3908  0FB4                     u2020:
  3909  0FB4  2FD5               	goto	l2948
  3910  0FB5                     l2946:
  3911                           
  3912                           ;main.c: 480:             {;main.c: 481:                 playNote(song3[count], song3_pr
      +                          e[count]);
  3913  0FB5  30A8               	movlw	168
  3914  0FB6  00DC               	movwf	??_main^(0+128)
  3915  0FB7  3022               	movlw	34
  3916  0FB8  00DD               	movwf	(??_main^(0+128)+1)
  3917  0FB9  086B               	movf	_count^(0+128),w
  3918  0FBA  075C               	addwf	??_main^(0+128),w
  3919  0FBB  0086               	movwf	6
  3920  0FBC  086C               	movf	(_count+1)^(0+128),w
  3921  0FBD  3D5D               	addwfc	(??_main+1)^(0+128),w
  3922  0FBE  0087               	movwf	7
  3923  0FBF  0801               	movf	1,w
  3924  0FC0  00DE               	movwf	(??_main+2)^(0+128)
  3925  0FC1  085E               	movf	(??_main+2)^(0+128),w
  3926  0FC2  00F2               	movwf	playNote@prescale
  3927  0FC3  3021               	movlw	33
  3928  0FC4  00DF               	movwf	(??_main+3)^(0+128)
  3929  0FC5  3023               	movlw	35
  3930  0FC6  00E0               	movwf	((??_main+3)^(0+128)+1)
  3931  0FC7  086B               	movf	_count^(0+128),w
  3932  0FC8  075F               	addwf	(??_main+3)^(0+128),w
  3933  0FC9  0086               	movwf	6
  3934  0FCA  086C               	movf	(_count+1)^(0+128),w
  3935  0FCB  3D60               	addwfc	(??_main+4)^(0+128),w
  3936  0FCC  0087               	movwf	7
  3937  0FCD  0801               	movf	1,w
  3938  0FCE  3187  279B  318D   	fcall	_playNote
  3939                           
  3940                           ;main.c: 482:                 displayMatrix(light_array);
  3941  0FD1  30D1               	movlw	(low (_light_array| 0))& (0+255)
  3942  0FD2  3186  26DF  318D   	fcall	_displayMatrix
  3943  0FD5                     l2948:
  3944                           
  3945                           ;main.c: 479:             while (presses == 3)
  3946  0FD5  3003               	movlw	3
  3947  0FD6  0141               	movlb	1	; select bank1
  3948  0FD7  066D               	xorwf	_presses^(0+128),w
  3949  0FD8  1903               	btfsc	3,2
  3950  0FD9  2FDB               	goto	u2031
  3951  0FDA  2FDC               	goto	u2030
  3952  0FDB                     u2031:
  3953  0FDB  2FB5               	goto	l2946
  3954  0FDC                     u2030:
  3955  0FDC                     l2950:
  3956                           
  3957                           ;main.c: 484:             presses = 0;
  3958  0FDC  01ED               	clrf	_presses^(0+128)
  3959                           
  3960                           ;main.c: 485:             silent_night_playing = 0;
  3961  0FDD  0140               	movlb	0	; select bank0
  3962  0FDE  01DC               	clrf	_silent_night_playing
  3963                           
  3964                           ;main.c: 486:             song2_playing = 0;
  3965  0FDF  01DA               	clrf	_song2_playing
  3966                           
  3967                           ;main.c: 487:             song3_playing = 0;
  3968  0FE0  01DB               	clrf	_song3_playing
  3969  0FE1                     l2952:
  3970                           
  3971                           ;main.c: 488:             T1CONbits.TMR1ON = 0;
  3972  0FE1  0144               	movlb	4	; select bank4
  3973  0FE2  100E               	bcf	14,0	;volatile
  3974  0FE3                     l2954:
  3975                           
  3976                           ;main.c: 489:             T2CONbits.TMR2ON = 0;
  3977  0FE3  0145               	movlb	5	; select bank5
  3978  0FE4  138E               	bcf	14,7	;volatile
  3979  0FE5                     l2956:
  3980                           
  3981                           ;main.c: 492:         if (TMR0_complete && (!presses))
  3982  0FE5  0141               	movlb	1	; select bank1
  3983  0FE6  086E               	movf	_TMR0_complete^(0+128),w
  3984  0FE7  1903               	btfsc	3,2
  3985  0FE8  2FEA               	goto	u2041
  3986  0FE9  2FEB               	goto	u2040
  3987  0FEA                     u2041:
  3988  0FEA  2E9B               	goto	l551
  3989  0FEB                     u2040:
  3990  0FEB                     l2958:
  3991  0FEB  086D               	movf	_presses^(0+128),w
  3992  0FEC  1D03               	btfss	3,2
  3993  0FED  2FEF               	goto	u2051
  3994  0FEE  2FF0               	goto	u2050
  3995  0FEF                     u2051:
  3996  0FEF  2E9B               	goto	l551
  3997  0FF0                     u2050:
  3998  0FF0                     l2960:
  3999                           
  4000                           ;main.c: 493:         {;main.c: 494:             T0CON0bits.T0EN = 0;
  4001  0FF0  014B               	movlb	11	; select bank11
  4002  0FF1  139E               	bcf	30,7	;volatile
  4003                           
  4004                           ;main.c: 495:             T1CONbits.TMR1ON = 0;
  4005  0FF2  0144               	movlb	4	; select bank4
  4006  0FF3  100E               	bcf	14,0	;volatile
  4007                           
  4008                           ;main.c: 496:             T2CONbits.TMR2ON = 0;
  4009  0FF4  0145               	movlb	5	; select bank5
  4010  0FF5  138E               	bcf	14,7	;volatile
  4011                           
  4012                           ;main.c: 497:             PIR0bits.INTF = 0;
  4013  0FF6  014E               	movlb	14	; select bank14
  4014  0FF7  100C               	bcf	12,0	;volatile
  4015                           
  4016                           ;main.c: 498:             PIE0bits.INTE = 1;
  4017  0FF8  1416               	bsf	22,0	;volatile
  4018  0FF9                     l576:	
  4019                           ;main.c: 499:             do { LATCbits.LATC2 = 1; } while(0);
  4020                           
  4021  0FF9  0140               	movlb	0	; select bank0
  4022  0FFA  151A               	bsf	26,2	;volatile
  4023  0FFB                     l578:	
  4024                           ;main.c: 500:             do { LATCbits.LATC0 = 1; } while(0);
  4025                           
  4026  0FFB  141A               	bsf	26,0	;volatile
  4027  0FFC                     l579:
  4028  0FFC  0063               	sleep	;# 
  4029  0FFD  2E9B               	goto	l551
  4030  0FFE  3180  2831         	ljmp	start
  4031  1000                     __end_of_main:
  4032                           
  4033                           	psect	text1
  4034  079B                     __ptext1:	
  4035 ;; *************** function _playNote *****************
  4036 ;; Defined at:
  4037 ;;		line 817 in file "main.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  note            1    wreg     unsigned char 
  4040 ;;  prescale        1    2[COMMON] unsigned char 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  note            1    4[COMMON] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4052 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;Total ram usage:        3 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 5
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           
  4067                           ;psect for function _playNote
  4068  079B                     _playNote:
  4069                           
  4070                           ;incstack = 0
  4071                           ; Regs used in _playNote: [wreg]
  4072                           ;playNote@note stored from wreg
  4073  079B  00F4               	movwf	playNote@note
  4074  079C                     l2506:
  4075                           
  4076                           ;main.c: 817: void playNote(uint8_t note, uint8_t prescale);main.c: 818: {;main.c: 820: 
      +                              if (note != last_note)
  4077  079C  0874               	movf	playNote@note,w
  4078  079D  0140               	movlb	0	; select bank0
  4079  079E  0659               	xorwf	_last_note,w
  4080  079F  1903               	skipnz
  4081  07A0  2FA2               	goto	u1561
  4082  07A1  2FA3               	goto	u1560
  4083  07A2                     u1561:
  4084  07A2  2FA6               	goto	l669
  4085  07A3                     u1560:
  4086  07A3                     l2508:
  4087                           
  4088                           ;main.c: 821:     {;main.c: 822:         T2PR = note;
  4089  07A3  0874               	movf	playNote@note,w
  4090  07A4  0145               	movlb	5	; select bank5
  4091  07A5  008D               	movwf	13	;volatile
  4092  07A6                     l669:	
  4093                           ;main.c: 823:     }
  4094                           
  4095                           
  4096                           ;main.c: 825:     if (prescale != last_prescale)
  4097  07A6  0872               	movf	playNote@prescale,w
  4098  07A7  0140               	movlb	0	; select bank0
  4099  07A8  0658               	xorwf	_last_prescale,w
  4100  07A9  1903               	skipnz
  4101  07AA  2FAC               	goto	u1571
  4102  07AB  2FAD               	goto	u1570
  4103  07AC                     u1571:
  4104  07AC  2FB0               	goto	l670
  4105  07AD                     u1570:
  4106  07AD                     l2510:
  4107                           
  4108                           ;main.c: 826:     {;main.c: 827:         T2CON = prescale;
  4109  07AD  0872               	movf	playNote@prescale,w
  4110  07AE  0145               	movlb	5	; select bank5
  4111  07AF  008E               	movwf	14	;volatile
  4112  07B0                     l670:	
  4113                           ;main.c: 828:     }
  4114                           
  4115                           
  4116                           ;main.c: 829:     last_note = note;
  4117  07B0  0874               	movf	playNote@note,w
  4118  07B1  00F3               	movwf	??_playNote
  4119  07B2  0873               	movf	??_playNote,w
  4120  07B3  0140               	movlb	0	; select bank0
  4121  07B4  00D9               	movwf	_last_note
  4122                           
  4123                           ;main.c: 830:     last_prescale = prescale;
  4124  07B5  0872               	movf	playNote@prescale,w
  4125  07B6  00F3               	movwf	??_playNote
  4126  07B7  0873               	movf	??_playNote,w
  4127  07B8  00D8               	movwf	_last_prescale
  4128  07B9                     l671:
  4129  07B9  0008               	return
  4130  07BA                     __end_of_playNote:
  4131                           
  4132                           	psect	text2
  4133  06DF                     __ptext2:	
  4134 ;; *************** function _displayMatrix *****************
  4135 ;; Defined at:
  4136 ;;		line 855 in file "main.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  states          1    wreg     PTR unsigned char 
  4139 ;;		 -> light_array(7), 
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  states          1    0[BANK1 ] PTR unsigned char 
  4142 ;;		 -> light_array(7), 
  4143 ;;  i               2    1[BANK1 ] int 
  4144 ;;  lowSide         1    3[BANK1 ] unsigned char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;      Totals:         2       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;Total ram usage:        6 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 7
  4161 ;; This function calls:
  4162 ;;		_shiftBytes
  4163 ;; This function is called by:
  4164 ;;		_main
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function _displayMatrix
  4170  06DF                     _displayMatrix:
  4171                           
  4172                           ;incstack = 0
  4173                           ; Regs used in _displayMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4174                           ;displayMatrix@states stored from wreg
  4175  06DF  0141               	movlb	1	; select bank1
  4176  06E0  00D8               	movwf	displayMatrix@states^(0+128)
  4177  06E1                     l2772:
  4178                           
  4179                           ;main.c: 855: void displayMatrix(uint8_t states[8]);main.c: 856: {;main.c: 859:     uint
      +                          8_t lowSide = 0x00;
  4180  06E1  01DB               	clrf	displayMatrix@lowSide^(0+128)
  4181                           
  4182                           ;main.c: 860:     for (int i = 0; i < 7; i++)
  4183  06E2  01D9               	clrf	displayMatrix@i^(0+128)
  4184  06E3  01DA               	clrf	(displayMatrix@i+1)^(0+128)
  4185  06E4                     l2778:
  4186                           
  4187                           ;main.c: 861:     {;main.c: 862:         if (!lowSide)
  4188  06E4  0141               	movlb	1	; select bank1
  4189  06E5  085B               	movf	displayMatrix@lowSide^(0+128),w
  4190  06E6  1D03               	btfss	3,2
  4191  06E7  2EE9               	goto	u1851
  4192  06E8  2EEA               	goto	u1850
  4193  06E9                     u1851:
  4194  06E9  2EEF               	goto	l2782
  4195  06EA                     u1850:
  4196  06EA                     l2780:
  4197                           
  4198                           ;main.c: 863:         {;main.c: 864:             lowSide++;
  4199  06EA  3001               	movlw	1
  4200  06EB  00F5               	movwf	??_displayMatrix
  4201  06EC  0875               	movf	??_displayMatrix,w
  4202  06ED  07DB               	addwf	displayMatrix@lowSide^(0+128),f
  4203                           
  4204                           ;main.c: 865:         }
  4205  06EE  2EF3               	goto	l2784
  4206  06EF                     l2782:
  4207                           
  4208                           ;main.c: 867:         {;main.c: 868:             lowSide = lowSide << 1;
  4209  06EF  355B               	lslf	displayMatrix@lowSide^(0+128),w
  4210  06F0  00F5               	movwf	??_displayMatrix
  4211  06F1  0875               	movf	??_displayMatrix,w
  4212  06F2  00DB               	movwf	displayMatrix@lowSide^(0+128)
  4213  06F3                     l2784:
  4214                           
  4215                           ;main.c: 871:         shiftBytes(states[i], lowSide);
  4216  06F3  085B               	movf	displayMatrix@lowSide^(0+128),w
  4217  06F4  00F5               	movwf	??_displayMatrix
  4218  06F5  0875               	movf	??_displayMatrix,w
  4219  06F6  00F3               	movwf	shiftBytes@lowSide
  4220  06F7  0859               	movf	displayMatrix@i^(0+128),w
  4221  06F8  0758               	addwf	displayMatrix@states^(0+128),w
  4222  06F9  00F6               	movwf	??_displayMatrix+1
  4223  06FA  0876               	movf	??_displayMatrix+1,w
  4224  06FB  0086               	movwf	6
  4225  06FC  0187               	clrf	7
  4226  06FD  0801               	movf	1,w
  4227  06FE  318D  2541  3186   	fcall	_shiftBytes
  4228  0701                     l2786:
  4229                           
  4230                           ;main.c: 872:         _delay((unsigned long)((1)*(8000000/4000.0)));
  4231  0701  3003               	movlw	3
  4232  0702  00F5               	movwf	??_displayMatrix
  4233  0703  3098               	movlw	152
  4234  0704                     u2067:
  4235  0704  0B89               	decfsz	9,f
  4236  0705  2F04               	goto	u2067
  4237  0706  0BF5               	decfsz	??_displayMatrix,f
  4238  0707  2F04               	goto	u2067
  4239  0708                     l2788:
  4240                           
  4241                           ;main.c: 873:     }
  4242  0708  3001               	movlw	1
  4243  0709  0141               	movlb	1	; select bank1
  4244  070A  07D9               	addwf	displayMatrix@i^(0+128),f
  4245  070B  3000               	movlw	0
  4246  070C  3DDA               	addwfc	(displayMatrix@i+1)^(0+128),f
  4247  070D                     l2790:
  4248  070D  085A               	movf	(displayMatrix@i+1)^(0+128),w
  4249  070E  3A80               	xorlw	128
  4250  070F  00F5               	movwf	??_displayMatrix
  4251  0710  3080               	movlw	128
  4252  0711  0275               	subwf	??_displayMatrix,w
  4253  0712  1D03               	skipz
  4254  0713  2F16               	goto	u1865
  4255  0714  3007               	movlw	7
  4256  0715  0259               	subwf	displayMatrix@i^(0+128),w
  4257  0716                     u1865:
  4258  0716  1C03               	skipc
  4259  0717  2F19               	goto	u1861
  4260  0718  2F1A               	goto	u1860
  4261  0719                     u1861:
  4262  0719  2EE4               	goto	l2778
  4263  071A                     u1860:
  4264  071A                     l692:
  4265  071A  0008               	return
  4266  071B                     __end_of_displayMatrix:
  4267                           
  4268                           	psect	text3
  4269  0D41                     __ptext3:	
  4270 ;; *************** function _shiftBytes *****************
  4271 ;; Defined at:
  4272 ;;		line 843 in file "main.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  highSide        1    wreg     unsigned char 
  4275 ;;  lowSide         1    3[COMMON] unsigned char 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  highSide        1    4[COMMON] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0, pclath, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4287 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;Total ram usage:        2 bytes
  4292 ;; Hardware stack levels used: 1
  4293 ;; Hardware stack levels required when called: 6
  4294 ;; This function calls:
  4295 ;;		_SPI1_ExchangeByte
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;;		_displayMatrix
  4299 ;;		_Initialize_Matrix
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _shiftBytes
  4305  0D41                     _shiftBytes:
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _shiftBytes: [wreg+status,2+status,0+pclath+cstack]
  4309                           ;shiftBytes@highSide stored from wreg
  4310  0D41  00F4               	movwf	shiftBytes@highSide
  4311  0D42                     l2766:
  4312                           
  4313                           ;main.c: 843: void shiftBytes(uint8_t highSide, uint8_t lowSide);main.c: 844: {;main.c: 
      +                          846:     SPI1_ExchangeByte(lowSide);
  4314  0D42  0873               	movf	shiftBytes@lowSide,w
  4315  0D43  318D  2534  318D   	fcall	_SPI1_ExchangeByte
  4316                           
  4317                           ;main.c: 847:     SPI1_ExchangeByte(highSide);
  4318  0D46  0874               	movf	shiftBytes@highSide,w
  4319  0D47  318D  2534  318D   	fcall	_SPI1_ExchangeByte
  4320  0D4A                     l2768:
  4321  0D4A  0140               	movlb	0	; select bank0
  4322  0D4B  161A               	bsf	26,4	;volatile
  4323  0D4C                     l2770:
  4324  0D4C  121A               	bcf	26,4	;volatile
  4325  0D4D                     l685:
  4326  0D4D  0008               	return
  4327  0D4E                     __end_of_shiftBytes:
  4328                           
  4329                           	psect	text4
  4330  0D34                     __ptext4:	
  4331 ;; *************** function _SPI1_ExchangeByte *****************
  4332 ;; Defined at:
  4333 ;;		line 97 in file "mcc_generated_files/spi1.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  data            1    wreg     unsigned char 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  data            1    2[COMMON] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      unsigned char 
  4340 ;; Registers used:
  4341 ;;		wreg
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;Total ram usage:        1 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; Hardware stack levels required when called: 5
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_shiftBytes
  4358 ;;		_SPI1_WriteBlock
  4359 ;;		_SPI1_ReadBlock
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _SPI1_ExchangeByte
  4365  0D34                     _SPI1_ExchangeByte:
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in _SPI1_ExchangeByte: [wreg]
  4369                           ;SPI1_ExchangeByte@data stored from wreg
  4370  0D34  00F2               	movwf	SPI1_ExchangeByte@data
  4371  0D35                     l2760:
  4372                           
  4373                           ;mcc_generated_files/spi1.c: 97: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 98: {;mcc_generated_files/spi1.c: 99:     SSP1BUF = data;
  4374  0D35  0872               	movf	SPI1_ExchangeByte@data,w
  4375  0D36  0143               	movlb	3	; select bank3
  4376  0D37  008C               	movwf	12	;volatile
  4377  0D38                     l74:	
  4378                           ;mcc_generated_files/spi1.c: 100:     while(!PIR1bits.SSP1IF);
  4379                           
  4380  0D38  014E               	movlb	14	; select bank14
  4381  0D39  1C8D               	btfss	13,1	;volatile
  4382  0D3A  2D3C               	goto	u1841
  4383  0D3B  2D3D               	goto	u1840
  4384  0D3C                     u1841:
  4385  0D3C  2D38               	goto	l74
  4386  0D3D                     u1840:
  4387  0D3D                     l76:
  4388                           
  4389                           ;mcc_generated_files/spi1.c: 101:     PIR1bits.SSP1IF = 0;
  4390  0D3D  108D               	bcf	13,1	;volatile
  4391  0D3E                     l2762:
  4392                           
  4393                           ;mcc_generated_files/spi1.c: 102:     return SSP1BUF;
  4394  0D3E  0143               	movlb	3	; select bank3
  4395  0D3F  080C               	movf	12,w	;volatile
  4396  0D40                     l77:
  4397  0D40  0008               	return
  4398  0D41                     __end_of_SPI1_ExchangeByte:
  4399                           
  4400                           	psect	text5
  4401  07BA                     __ptext5:	
  4402 ;; *************** function _SYSTEM_Initialize *****************
  4403 ;; Defined at:
  4404 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;		None
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0, pclath, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;Total ram usage:        0 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; Hardware stack levels required when called: 7
  4425 ;; This function calls:
  4426 ;;		_EXT_INT_Initialize
  4427 ;;		_OSCILLATOR_Initialize
  4428 ;;		_PIN_MANAGER_Initialize
  4429 ;;		_PWM3_Initialize
  4430 ;;		_SPI1_Initialize
  4431 ;;		_TMR0_Initialize
  4432 ;;		_TMR1_Initialize
  4433 ;;		_TMR2_Initialize
  4434 ;;		_WDT_Initialize
  4435 ;; This function is called by:
  4436 ;;		_main
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _SYSTEM_Initialize
  4442  07BA                     _SYSTEM_Initialize:
  4443  07BA                     l2450:	
  4444                           ;incstack = 0
  4445                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4446                           
  4447                           
  4448                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  4449  07BA  318D  2580  3187   	fcall	_SPI1_Initialize
  4450                           
  4451                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4452  07BD  3187  2753  3187   	fcall	_PIN_MANAGER_Initialize
  4453                           
  4454                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4455  07C0  318C  24F4  3187   	fcall	_OSCILLATOR_Initialize
  4456  07C3                     l2452:
  4457                           
  4458                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4459  07C3  318C  24DB  3187   	fcall	_WDT_Initialize
  4460  07C6                     l2454:
  4461                           
  4462                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  4463  07C6  318D  2506  3187   	fcall	_PWM3_Initialize
  4464  07C9                     l2456:
  4465                           
  4466                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  4467  07C9  3187  27F2  3187   	fcall	_TMR2_Initialize
  4468  07CC                     l2458:
  4469                           
  4470                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  4471  07CC  3187  277B  3187   	fcall	_TMR1_Initialize
  4472  07CF                     l2460:
  4473                           
  4474                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
  4475  07CF  318D  2527  3187   	fcall	_EXT_INT_Initialize
  4476  07D2                     l2462:
  4477                           
  4478                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4479  07D2  318D  25AC  3187   	fcall	_TMR0_Initialize
  4480  07D5                     l29:
  4481  07D5  0008               	return
  4482  07D6                     __end_of_SYSTEM_Initialize:
  4483                           
  4484                           	psect	text6
  4485  0CDB                     __ptext6:	
  4486 ;; *************** function _WDT_Initialize *****************
  4487 ;; Defined at:
  4488 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		status,2
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 5
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_SYSTEM_Initialize
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           
  4517                           ;psect for function _WDT_Initialize
  4518  0CDB                     _WDT_Initialize:
  4519  0CDB                     l2114:	
  4520                           ;incstack = 0
  4521                           ; Regs used in _WDT_Initialize: [status,2]
  4522                           
  4523                           
  4524                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x00;
  4525  0CDB  0150               	movlb	16	; select bank16
  4526  0CDC  018C               	clrf	12	;volatile
  4527  0CDD                     l35:
  4528  0CDD  0008               	return
  4529  0CDE                     __end_of_WDT_Initialize:
  4530                           
  4531                           	psect	text7
  4532  07F2                     __ptext7:	
  4533 ;; *************** function _TMR2_Initialize *****************
  4534 ;; Defined at:
  4535 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used: 1
  4555 ;; Hardware stack levels required when called: 5
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_SYSTEM_Initialize
  4560 ;;		_main
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           
  4565                           ;psect for function _TMR2_Initialize
  4566  07F2                     _TMR2_Initialize:
  4567  07F2                     l2118:	
  4568                           ;incstack = 0
  4569                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4570                           
  4571                           
  4572                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  4573  07F2  3001               	movlw	1
  4574  07F3  0145               	movlb	5	; select bank5
  4575  07F4  0090               	movwf	16	;volatile
  4576  07F5                     l2120:
  4577                           
  4578                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  4579  07F5  018F               	clrf	15	;volatile
  4580  07F6                     l2122:
  4581                           
  4582                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  4583  07F6  0191               	clrf	17	;volatile
  4584                           
  4585                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  4586  07F7  30FF               	movlw	255
  4587  07F8  008D               	movwf	13	;volatile
  4588  07F9                     l2124:
  4589                           
  4590                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  4591  07F9  018C               	clrf	12	;volatile
  4592  07FA                     l2126:
  4593                           
  4594                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  4595  07FA  014E               	movlb	14	; select bank14
  4596  07FB  130D               	bcf	13,6	;volatile
  4597  07FC                     l2128:
  4598                           
  4599                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  4600  07FC  30B0               	movlw	176
  4601  07FD  0145               	movlb	5	; select bank5
  4602  07FE  008E               	movwf	14	;volatile
  4603  07FF                     l177:
  4604  07FF  0008               	return
  4605  0800                     __end_of_TMR2_Initialize:
  4606                           
  4607                           	psect	text8
  4608  077B                     __ptext8:	
  4609 ;; *************** function _TMR1_Initialize *****************
  4610 ;; Defined at:
  4611 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0, pclath, cstack
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;Total ram usage:        0 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 6
  4632 ;; This function calls:
  4633 ;;		_TMR1_SetInterruptHandler
  4634 ;; This function is called by:
  4635 ;;		_SYSTEM_Initialize
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _TMR1_Initialize
  4642  077B                     _TMR1_Initialize:
  4643  077B                     l2130:	
  4644                           ;incstack = 0
  4645                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4646                           
  4647                           
  4648                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4649  077B  0144               	movlb	4	; select bank4
  4650  077C  018F               	clrf	15	;volatile
  4651                           
  4652                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  4653  077D  0190               	clrf	16	;volatile
  4654  077E                     l2132:
  4655                           
  4656                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  4657  077E  3004               	movlw	4
  4658  077F  0091               	movwf	17	;volatile
  4659  0780                     l2134:
  4660                           
  4661                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
  4662  0780  30E1               	movlw	225
  4663  0781  008D               	movwf	13	;volatile
  4664  0782                     l2136:
  4665                           
  4666                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
  4667  0782  30BA               	movlw	186
  4668  0783  008C               	movwf	12	;volatile
  4669  0784                     l2138:
  4670                           
  4671                           ;mcc_generated_files/tmr1.c: 84:     PIR1bits.TMR1IF = 0;
  4672  0784  014E               	movlb	14	; select bank14
  4673  0785  128D               	bcf	13,5	;volatile
  4674  0786                     l2140:
  4675                           
  4676                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4677  0786  0144               	movlb	4	; select bank4
  4678  0787  080D               	movf	13,w	;volatile
  4679  0788  0140               	movlb	0	; select bank0
  4680  0789  00D1               	movwf	_timer1ReloadVal+1	;volatile
  4681  078A  0144               	movlb	4	; select bank4
  4682  078B  080C               	movf	12,w	;volatile
  4683  078C  0140               	movlb	0	; select bank0
  4684  078D  00D0               	movwf	_timer1ReloadVal	;volatile
  4685  078E                     l2142:
  4686                           
  4687                           ;mcc_generated_files/tmr1.c: 90:     PIE1bits.TMR1IE = 1;
  4688  078E  014E               	movlb	14	; select bank14
  4689  078F  1697               	bsf	23,5	;volatile
  4690  0790                     l2144:
  4691                           
  4692                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4693  0790  3002               	movlw	low _TMR1_DefaultInterruptHandler
  4694  0791  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4695  0792  3000               	movlw	high _TMR1_DefaultInterruptHandler
  4696  0793  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4697  0794  318D  2500  3187   	fcall	_TMR1_SetInterruptHandler
  4698  0797                     l2146:
  4699                           
  4700                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
  4701  0797  3005               	movlw	5
  4702  0798  0144               	movlb	4	; select bank4
  4703  0799  008E               	movwf	14	;volatile
  4704  079A                     l365:
  4705  079A  0008               	return
  4706  079B                     __end_of_TMR1_Initialize:
  4707                           
  4708                           	psect	text9
  4709  0D00                     __ptext9:	
  4710 ;; *************** function _TMR1_SetInterruptHandler *****************
  4711 ;; Defined at:
  4712 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4715 ;;		 -> TMR1_ISR_(1), TMR1_DefaultInterruptHandler(1), 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;Total ram usage:        2 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 5
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_TMR1_Initialize
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742                           
  4743                           ;psect for function _TMR1_SetInterruptHandler
  4744  0D00                     _TMR1_SetInterruptHandler:
  4745  0D00                     l2052:	
  4746                           ;incstack = 0
  4747                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4748                           
  4749                           
  4750                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4751  0D00  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4752  0D01  0140               	movlb	0	; select bank0
  4753  0D02  00CF               	movwf	_TMR1_InterruptHandler+1
  4754  0D03  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4755  0D04  00CE               	movwf	_TMR1_InterruptHandler
  4756  0D05                     l395:
  4757  0D05  0008               	return
  4758  0D06                     __end_of_TMR1_SetInterruptHandler:
  4759                           
  4760                           	psect	text10
  4761  0DAC                     __ptext10:	
  4762 ;; *************** function _TMR0_Initialize *****************
  4763 ;; Defined at:
  4764 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0, pclath, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;Total ram usage:        0 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 6
  4785 ;; This function calls:
  4786 ;;		_TMR0_SetInterruptHandler
  4787 ;; This function is called by:
  4788 ;;		_SYSTEM_Initialize
  4789 ;;		_main
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           
  4794                           ;psect for function _TMR0_Initialize
  4795  0DAC                     _TMR0_Initialize:
  4796  0DAC                     l2154:	
  4797                           ;incstack = 0
  4798                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4799                           
  4800                           
  4801                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x90;
  4802  0DAC  3090               	movlw	144
  4803  0DAD  014B               	movlb	11	; select bank11
  4804  0DAE  009F               	movwf	31	;volatile
  4805                           
  4806                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x86;
  4807  0DAF  3086               	movlw	134
  4808  0DB0  009D               	movwf	29	;volatile
  4809                           
  4810                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xE8;
  4811  0DB1  30E8               	movlw	232
  4812  0DB2  009C               	movwf	28	;volatile
  4813                           
  4814                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  4815  0DB3  081D               	movf	29,w	;volatile
  4816  0DB4  00F8               	movwf	_timer0ReloadVal16bit+1	;volatile
  4817  0DB5  081C               	movf	28,w	;volatile
  4818  0DB6  00F7               	movwf	_timer0ReloadVal16bit	;volatile
  4819  0DB7                     l2156:
  4820                           
  4821                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  4822  0DB7  014E               	movlb	14	; select bank14
  4823  0DB8  128C               	bcf	12,5	;volatile
  4824  0DB9                     l2158:
  4825                           
  4826                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  4827  0DB9  1696               	bsf	22,5	;volatile
  4828  0DBA                     l2160:
  4829                           
  4830                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4831  0DBA  30DA               	movlw	low _TMR0_DefaultInterruptHandler
  4832  0DBB  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4833  0DBC  300C               	movlw	high _TMR0_DefaultInterruptHandler
  4834  0DBD  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4835  0DBE  318C  24FA  318D   	fcall	_TMR0_SetInterruptHandler
  4836  0DC1                     l2162:
  4837                           
  4838                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  4839  0DC1  3090               	movlw	144
  4840  0DC2  014B               	movlb	11	; select bank11
  4841  0DC3  009E               	movwf	30	;volatile
  4842  0DC4                     l309:
  4843  0DC4  0008               	return
  4844  0DC5                     __end_of_TMR0_Initialize:
  4845                           
  4846                           	psect	text11
  4847  0CFA                     __ptext11:	
  4848 ;; *************** function _TMR0_SetInterruptHandler *****************
  4849 ;; Defined at:
  4850 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4853 ;;		 -> TMR0_ISR_(1), TMR0_DefaultInterruptHandler(1), 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;Total ram usage:        2 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; Hardware stack levels required when called: 5
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_TMR0_Initialize
  4876 ;;		_main
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _TMR0_SetInterruptHandler
  4882  0CFA                     _TMR0_SetInterruptHandler:
  4883  0CFA                     l2050:	
  4884                           ;incstack = 0
  4885                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4886                           
  4887                           
  4888                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  4889  0CFA  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4890  0CFB  0140               	movlb	0	; select bank0
  4891  0CFC  00D3               	movwf	_TMR0_InterruptHandler+1
  4892  0CFD  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4893  0CFE  00D2               	movwf	_TMR0_InterruptHandler
  4894  0CFF                     l331:
  4895  0CFF  0008               	return
  4896  0D00                     __end_of_TMR0_SetInterruptHandler:
  4897                           
  4898                           	psect	text12
  4899  0D80                     __ptext12:	
  4900 ;; *************** function _SPI1_Initialize *****************
  4901 ;; Defined at:
  4902 ;;		line 62 in file "mcc_generated_files/spi1.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used: 1
  4922 ;; Hardware stack levels required when called: 5
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_SYSTEM_Initialize
  4927 ;;		_main
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function _SPI1_Initialize
  4933  0D80                     _SPI1_Initialize:
  4934  0D80                     l2068:	
  4935                           ;incstack = 0
  4936                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  4937                           
  4938                           
  4939                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 21;
  4940  0D80  3015               	movlw	21
  4941  0D81  017D               	movlb	61	; select bank61
  4942  0D82  00C5               	movwf	69	;volatile
  4943                           
  4944                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 4;
  4945  0D83  3004               	movlw	4
  4946  0D84  00C6               	movwf	70	;volatile
  4947                           
  4948                           ;mcc_generated_files/spi1.c: 67:     RC5PPS = 7;
  4949  0D85  3007               	movlw	7
  4950  0D86  017E               	movlb	62	; select bank62
  4951  0D87  00A5               	movwf	37	;volatile
  4952                           
  4953                           ;mcc_generated_files/spi1.c: 68:     RC3PPS = 8;
  4954  0D88  3008               	movlw	8
  4955  0D89  00A3               	movwf	35	;volatile
  4956                           
  4957                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x40;
  4958  0D8A  3040               	movlw	64
  4959  0D8B  0143               	movlb	3	; select bank3
  4960  0D8C  008F               	movwf	15	;volatile
  4961  0D8D                     l2070:
  4962                           
  4963                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x00;
  4964  0D8D  0190               	clrf	16	;volatile
  4965  0D8E                     l2072:
  4966                           
  4967                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x01;
  4968  0D8E  3001               	movlw	1
  4969  0D8F  008D               	movwf	13	;volatile
  4970  0D90                     l2074:
  4971                           
  4972                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC5 = 0;
  4973  0D90  0140               	movlb	0	; select bank0
  4974  0D91  1294               	bcf	20,5	;volatile
  4975  0D92                     l2076:
  4976                           
  4977                           ;mcc_generated_files/spi1.c: 74:     SSP1CON1bits.SSPEN = 0;
  4978  0D92  0143               	movlb	3	; select bank3
  4979  0D93  1290               	bcf	16,5	;volatile
  4980  0D94                     l64:
  4981  0D94  0008               	return
  4982  0D95                     __end_of_SPI1_Initialize:
  4983                           
  4984                           	psect	text13
  4985  0D06                     __ptext13:	
  4986 ;; *************** function _PWM3_Initialize *****************
  4987 ;; Defined at:
  4988 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;Total ram usage:        0 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 5
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_SYSTEM_Initialize
  5013 ;;		_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           
  5018                           ;psect for function _PWM3_Initialize
  5019  0D06                     _PWM3_Initialize:
  5020  0D06                     l2116:	
  5021                           ;incstack = 0
  5022                           ; Regs used in _PWM3_Initialize: [wreg]
  5023                           
  5024                           
  5025                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  5026  0D06  3080               	movlw	128
  5027  0D07  0146               	movlb	6	; select bank6
  5028  0D08  0096               	movwf	22	;volatile
  5029                           
  5030                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  5031  0D09  307F               	movlw	127
  5032  0D0A  0095               	movwf	21	;volatile
  5033                           
  5034                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  5035  0D0B  30C0               	movlw	192
  5036  0D0C  0094               	movwf	20	;volatile
  5037  0D0D                     l226:
  5038  0D0D  0008               	return
  5039  0D0E                     __end_of_PWM3_Initialize:
  5040                           
  5041                           	psect	text14
  5042  0753                     __ptext14:	
  5043 ;; *************** function _PIN_MANAGER_Initialize *****************
  5044 ;; Defined at:
  5045 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;		None
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      void 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;Total ram usage:        0 bytes
  5064 ;; Hardware stack levels used: 1
  5065 ;; Hardware stack levels required when called: 5
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_SYSTEM_Initialize
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function _PIN_MANAGER_Initialize
  5075  0753                     _PIN_MANAGER_Initialize:
  5076  0753                     l2078:	
  5077                           ;incstack = 0
  5078                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5079                           
  5080                           
  5081                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5082  0753  0140               	movlb	0	; select bank0
  5083  0754  0198               	clrf	24	;volatile
  5084                           
  5085                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  5086  0755  019A               	clrf	26	;volatile
  5087  0756                     l2080:
  5088                           
  5089                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x1F;
  5090  0756  301F               	movlw	31
  5091  0757  0092               	movwf	18	;volatile
  5092  0758                     l2082:
  5093                           
  5094                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x02;
  5095  0758  3002               	movlw	2
  5096  0759  0094               	movwf	20	;volatile
  5097  075A                     l2084:
  5098                           
  5099                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x1F;
  5100  075A  301F               	movlw	31
  5101  075B  017E               	movlb	62	; select bank62
  5102  075C  00CE               	movwf	78	;volatile
  5103  075D                     l2086:
  5104                           
  5105                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x23;
  5106  075D  3023               	movlw	35
  5107  075E  00B8               	movwf	56	;volatile
  5108                           
  5109                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  5110  075F  01B9               	clrf	57	;volatile
  5111                           
  5112                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  5113  0760  01CF               	clrf	79	;volatile
  5114                           
  5115                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  5116  0761  01BA               	clrf	58	;volatile
  5117                           
  5118                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  5119  0762  01D0               	clrf	80	;volatile
  5120  0763                     l2088:
  5121                           
  5122                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  5123  0763  3037               	movlw	55
  5124  0764  00BB               	movwf	59	;volatile
  5125  0765                     l2090:
  5126                           
  5127                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  5128  0765  303F               	movlw	63
  5129  0766  00D1               	movwf	81	;volatile
  5130  0767                     l2092:
  5131                           
  5132                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  5133  0767  303F               	movlw	63
  5134  0768  00BC               	movwf	60	;volatile
  5135  0769                     l2094:
  5136                           
  5137                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  5138  0769  303F               	movlw	63
  5139  076A  00D2               	movwf	82	;volatile
  5140  076B                     l2096:
  5141                           
  5142                           ;mcc_generated_files/pin_manager.c: 106:     INTPPS = 0x02;
  5143  076B  3002               	movlw	2
  5144  076C  017D               	movlb	61	; select bank61
  5145  076D  0090               	movwf	16	;volatile
  5146  076E                     l2098:
  5147                           
  5148                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x15;
  5149  076E  3015               	movlw	21
  5150  076F  00C5               	movwf	69	;volatile
  5151  0770                     l2100:
  5152                           
  5153                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x08;
  5154  0770  3008               	movlw	8
  5155  0771  017E               	movlb	62	; select bank62
  5156  0772  00A3               	movwf	35	;volatile
  5157  0773                     l2102:
  5158                           
  5159                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x03;
  5160  0773  3003               	movlw	3
  5161  0774  0095               	movwf	21	;volatile
  5162  0775                     l2104:
  5163                           
  5164                           ;mcc_generated_files/pin_manager.c: 110:     RC5PPS = 0x07;
  5165  0775  3007               	movlw	7
  5166  0776  00A5               	movwf	37	;volatile
  5167  0777                     l2106:
  5168                           
  5169                           ;mcc_generated_files/pin_manager.c: 111:     SSP1DATPPS = 0x04;
  5170  0777  3004               	movlw	4
  5171  0778  017D               	movlb	61	; select bank61
  5172  0779  00C6               	movwf	70	;volatile
  5173  077A                     l147:
  5174  077A  0008               	return
  5175  077B                     __end_of_PIN_MANAGER_Initialize:
  5176                           
  5177                           	psect	text15
  5178  0CF4                     __ptext15:	
  5179 ;; *************** function _OSCILLATOR_Initialize *****************
  5180 ;; Defined at:
  5181 ;;		line 64 in file "mcc_generated_files/mcc.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;		None
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5199 ;;Total ram usage:        0 bytes
  5200 ;; Hardware stack levels used: 1
  5201 ;; Hardware stack levels required when called: 5
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_SYSTEM_Initialize
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _OSCILLATOR_Initialize
  5211  0CF4                     _OSCILLATOR_Initialize:
  5212  0CF4                     l2108:	
  5213                           ;incstack = 0
  5214                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5215                           
  5216                           
  5217                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  5218  0CF4  0151               	movlb	17	; select bank17
  5219  0CF5  0191               	clrf	17	;volatile
  5220  0CF6                     l2110:
  5221                           
  5222                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  5223  0CF6  3003               	movlw	3
  5224  0CF7  0093               	movwf	19	;volatile
  5225  0CF8                     l2112:
  5226                           
  5227                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  5228  0CF8  0192               	clrf	18	;volatile
  5229  0CF9                     l32:
  5230  0CF9  0008               	return
  5231  0CFA                     __end_of_OSCILLATOR_Initialize:
  5232                           
  5233                           	psect	text16
  5234  0D27                     __ptext16:	
  5235 ;; *************** function _EXT_INT_Initialize *****************
  5236 ;; Defined at:
  5237 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0, pclath, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;Total ram usage:        0 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; Hardware stack levels required when called: 6
  5258 ;; This function calls:
  5259 ;;		_INT_SetInterruptHandler
  5260 ;; This function is called by:
  5261 ;;		_SYSTEM_Initialize
  5262 ;;		_main
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266                           
  5267                           ;psect for function _EXT_INT_Initialize
  5268  0D27                     _EXT_INT_Initialize:
  5269  0D27                     l2148:	
  5270                           ;incstack = 0
  5271                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5272                           
  5273                           
  5274                           ;mcc_generated_files/ext_int.c: 77:     (PIR0bits.INTF = 0);
  5275  0D27  014E               	movlb	14	; select bank14
  5276  0D28  100C               	bcf	12,0	;volatile
  5277                           
  5278                           ;mcc_generated_files/ext_int.c: 78:     (INTCONbits.INTEDG = 1);
  5279  0D29  140B               	bsf	11,0	;volatile
  5280  0D2A                     l2150:
  5281                           
  5282                           ;mcc_generated_files/ext_int.c: 80:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
  5283  0D2A  30D9               	movlw	low _INT_DefaultInterruptHandler
  5284  0D2B  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
  5285  0D2C  300C               	movlw	high _INT_DefaultInterruptHandler
  5286  0D2D  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  5287  0D2E  318C  24EE  318D   	fcall	_INT_SetInterruptHandler
  5288  0D31                     l2152:
  5289                           
  5290                           ;mcc_generated_files/ext_int.c: 81:     (PIE0bits.INTE = 1);
  5291  0D31  014E               	movlb	14	; select bank14
  5292  0D32  1416               	bsf	22,0	;volatile
  5293  0D33                     l284:
  5294  0D33  0008               	return
  5295  0D34                     __end_of_EXT_INT_Initialize:
  5296                           
  5297                           	psect	text17
  5298  0CEE                     __ptext17:	
  5299 ;; *************** function _INT_SetInterruptHandler *****************
  5300 ;; Defined at:
  5301 ;;		line 63 in file "mcc_generated_files/ext_int.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  5304 ;;		 -> EXT_ISR(1), INT_DefaultInterruptHandler(1), 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;Total ram usage:        2 bytes
  5321 ;; Hardware stack levels used: 1
  5322 ;; Hardware stack levels required when called: 5
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_EXT_INT_Initialize
  5327 ;;		_main
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function _INT_SetInterruptHandler
  5333  0CEE                     _INT_SetInterruptHandler:
  5334  0CEE                     l2048:	
  5335                           ;incstack = 0
  5336                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5337                           
  5338                           
  5339                           ;mcc_generated_files/ext_int.c: 64:     INT_InterruptHandler = InterruptHandler;
  5340  0CEE  0873               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  5341  0CEF  0140               	movlb	0	; select bank0
  5342  0CF0  00D5               	movwf	_INT_InterruptHandler+1
  5343  0CF1  0872               	movf	INT_SetInterruptHandler@InterruptHandler,w
  5344  0CF2  00D4               	movwf	_INT_InterruptHandler
  5345  0CF3                     l278:
  5346  0CF3  0008               	return
  5347  0CF4                     __end_of_INT_SetInterruptHandler:
  5348                           
  5349                           	psect	intentry
  5350  0004                     __pintentry:	
  5351 ;; *************** function _INTERRUPT_InterruptManager *****************
  5352 ;; Defined at:
  5353 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;Total ram usage:        0 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; Hardware stack levels required when called: 4
  5374 ;; This function calls:
  5375 ;;		_INT_ISR
  5376 ;;		_TMR0_ISR
  5377 ;;		_TMR1_ISR
  5378 ;; This function is called by:
  5379 ;;		Interrupt level 1
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383  0004                     _INTERRUPT_InterruptManager:
  5384                           
  5385                           ;incstack = 0
  5386  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5387                           
  5388                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5389  0005  3180               	pagesel	$
  5390  0006                     i1l2528:
  5391                           
  5392                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  5393  0006  014E               	movlb	14	; select bank14
  5394  0007  1E96               	btfss	22,5	;volatile
  5395  0008  280A               	goto	u160_21
  5396  0009  280B               	goto	u160_20
  5397  000A                     u160_21:
  5398  000A  2813               	goto	i1l250
  5399  000B                     u160_20:
  5400  000B                     i1l2530:
  5401  000B  1E8C               	btfss	12,5	;volatile
  5402  000C  280E               	goto	u161_21
  5403  000D  280F               	goto	u161_20
  5404  000E                     u161_21:
  5405  000E  2813               	goto	i1l250
  5406  000F                     u161_20:
  5407  000F                     i1l2532:
  5408                           
  5409                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5410  000F  318D  256C  3180   	fcall	_TMR0_ISR
  5411                           
  5412                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5413  0012  282F               	goto	i1l258
  5414  0013                     i1l250:	
  5415                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.INTE == 1 && PIR0bits
      +                          .INTF == 1)
  5416                           
  5417  0013  1C16               	btfss	22,0	;volatile
  5418  0014  2816               	goto	u162_21
  5419  0015  2817               	goto	u162_20
  5420  0016                     u162_21:
  5421  0016  281F               	goto	i1l252
  5422  0017                     u162_20:
  5423  0017                     i1l2534:
  5424  0017  1C0C               	btfss	12,0	;volatile
  5425  0018  281A               	goto	u163_21
  5426  0019  281B               	goto	u163_20
  5427  001A                     u163_21:
  5428  001A  281F               	goto	i1l252
  5429  001B                     u163_20:
  5430  001B                     i1l2536:
  5431                           
  5432                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         INT_ISR();
  5433  001B  318C  24E8  3180   	fcall	_INT_ISR
  5434                           
  5435                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  5436  001E  282F               	goto	i1l258
  5437  001F                     i1l252:	
  5438                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  5439                           
  5440  001F  1F0B               	btfss	11,6	;volatile
  5441  0020  2822               	goto	u164_21
  5442  0021  2823               	goto	u164_20
  5443  0022                     u164_21:
  5444  0022  282F               	goto	i1l253
  5445  0023                     u164_20:
  5446  0023                     i1l2538:
  5447                           
  5448                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5449  0023  1E97               	btfss	23,5	;volatile
  5450  0024  2826               	goto	u165_21
  5451  0025  2827               	goto	u165_20
  5452  0026                     u165_21:
  5453  0026  282F               	goto	i1l253
  5454  0027                     u165_20:
  5455  0027                     i1l2540:
  5456  0027  1E8D               	btfss	13,5	;volatile
  5457  0028  282A               	goto	u166_21
  5458  0029  282B               	goto	u166_20
  5459  002A                     u166_21:
  5460  002A  282F               	goto	i1l253
  5461  002B                     u166_20:
  5462  002B                     i1l2542:
  5463                           
  5464                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  5465  002B  318D  2595  3180   	fcall	_TMR1_ISR
  5466                           
  5467                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5468  002E  282F               	goto	i1l258
  5469  002F                     i1l253:
  5470  002F                     i1l258:
  5471  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5472  0030  0009               	retfie
  5473  0031                     __end_of_INTERRUPT_InterruptManager:
  5474                           
  5475                           	psect	text19
  5476  0D95                     __ptext19:	
  5477 ;; *************** function _TMR1_ISR *****************
  5478 ;; Defined at:
  5479 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;		None
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  1    wreg      void 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;Total ram usage:        0 bytes
  5498 ;; Hardware stack levels used: 1
  5499 ;; Hardware stack levels required when called: 1
  5500 ;; This function calls:
  5501 ;;		Absolute function
  5502 ;;		_TMR1_DefaultInterruptHandler
  5503 ;;		_TMR1_ISR_
  5504 ;;		_TMR1_WriteTimer
  5505 ;; This function is called by:
  5506 ;;		_INTERRUPT_InterruptManager
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           
  5511                           ;psect for function _TMR1_ISR
  5512  0D95                     _TMR1_ISR:
  5513  0D95                     i1l2478:	
  5514                           ;incstack = 0
  5515                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5516                           
  5517                           
  5518                           ;mcc_generated_files/tmr1.c: 168:     PIR1bits.TMR1IF = 0;
  5519  0D95  014E               	movlb	14	; select bank14
  5520  0D96  128D               	bcf	13,5	;volatile
  5521  0D97                     i1l2480:
  5522                           
  5523                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  5524  0D97  0140               	movlb	0	; select bank0
  5525  0D98  0851               	movf	_timer1ReloadVal+1,w	;volatile
  5526  0D99  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5527  0D9A  0850               	movf	_timer1ReloadVal,w	;volatile
  5528  0D9B  00F0               	movwf	TMR1_WriteTimer@timerVal
  5529  0D9C  318D  255B  318D   	fcall	_TMR1_WriteTimer
  5530  0D9F                     i1l2482:
  5531                           
  5532                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  5533  0D9F  0140               	movlb	0	; select bank0
  5534  0DA0  084E               	movf	_TMR1_InterruptHandler,w
  5535  0DA1  044F               	iorwf	_TMR1_InterruptHandler+1,w
  5536  0DA2  1903               	btfsc	3,2
  5537  0DA3  2DA5               	goto	u153_21
  5538  0DA4  2DA6               	goto	u153_20
  5539  0DA5                     u153_21:
  5540  0DA5  2DAB               	goto	i1l392
  5541  0DA6                     u153_20:
  5542  0DA6                     i1l2484:
  5543                           
  5544                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  5545  0DA6  084F               	movf	_TMR1_InterruptHandler+1,w
  5546  0DA7  008A               	movwf	10
  5547  0DA8  084E               	movf	_TMR1_InterruptHandler,w
  5548  0DA9  000A               	callw
  5549  0DAA  318D               	pagesel	$
  5550  0DAB                     i1l392:
  5551  0DAB  0008               	return
  5552  0DAC                     __end_of_TMR1_ISR:
  5553                           
  5554                           	psect	text20
  5555  0D5B                     __ptext20:	
  5556 ;; *************** function _TMR1_WriteTimer *****************
  5557 ;; Defined at:
  5558 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  timerVal        2    0[COMMON] unsigned short 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5576 ;;Total ram usage:        2 bytes
  5577 ;; Hardware stack levels used: 1
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_TMR1_ISR
  5582 ;;		_TMR1_Reload
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           
  5587                           ;psect for function _TMR1_WriteTimer
  5588  0D5B                     _TMR1_WriteTimer:
  5589  0D5B                     i1l2168:	
  5590                           ;incstack = 0
  5591                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5592                           
  5593                           
  5594                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
  5595  0D5B  0144               	movlb	4	; select bank4
  5596  0D5C  1D0E               	btfss	14,2	;volatile
  5597  0D5D  2D5F               	goto	u99_21
  5598  0D5E  2D60               	goto	u99_20
  5599  0D5F                     u99_21:
  5600  0D5F  2D67               	goto	i1l2178
  5601  0D60                     u99_20:
  5602  0D60                     i1l2170:
  5603                           
  5604                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  5605  0D60  100E               	bcf	14,0	;volatile
  5606  0D61                     i1l2172:
  5607                           
  5608                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
  5609  0D61  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5610  0D62  008D               	movwf	13	;volatile
  5611  0D63                     i1l2174:
  5612                           
  5613                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
  5614  0D63  0870               	movf	TMR1_WriteTimer@timerVal,w
  5615  0D64  008C               	movwf	12	;volatile
  5616  0D65                     i1l2176:
  5617                           
  5618                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  5619  0D65  140E               	bsf	14,0	;volatile
  5620                           
  5621                           ;mcc_generated_files/tmr1.c: 140:     }
  5622  0D66  2D6B               	goto	i1l379
  5623  0D67                     i1l2178:
  5624                           
  5625                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  5626  0D67  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5627  0D68  008D               	movwf	13	;volatile
  5628  0D69                     i1l2180:
  5629                           
  5630                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
  5631  0D69  0870               	movf	TMR1_WriteTimer@timerVal,w
  5632  0D6A  008C               	movwf	12	;volatile
  5633  0D6B                     i1l379:
  5634  0D6B  0008               	return
  5635  0D6C                     __end_of_TMR1_WriteTimer:
  5636                           
  5637                           	psect	text21
  5638  0002                     __ptext21:	
  5639 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5640 ;; Defined at:
  5641 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		None
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used: 1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_TMR1_Initialize
  5665 ;;		_TMR1_ISR
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function _TMR1_DefaultInterruptHandler
  5671  0002                     _TMR1_DefaultInterruptHandler:
  5672  0002                     i1l398:	
  5673                           ;incstack = 0
  5674                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5675                           
  5676  0002  0008               	return
  5677  0003                     __end_of_TMR1_DefaultInterruptHandler:
  5678                           
  5679                           	psect	text22
  5680  0071                     __ptext22:	
  5681 ;; *************** function _TMR1_ISR_ *****************
  5682 ;; Defined at:
  5683 ;;		line 540 in file "main.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;		None
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  i               2   11[BANK0 ] int 
  5688 ;;  i               2    9[BANK0 ] int 
  5689 ;;  i               2   21[BANK0 ] int 
  5690 ;;  i               2   19[BANK0 ] int 
  5691 ;;  i               2   17[BANK0 ] int 
  5692 ;;  lights          1    1[BANK0 ] unsigned char 
  5693 ;;  light           1    0[BANK0 ] unsigned char 
  5694 ;;  lights          1    4[BANK0 ] unsigned char 
  5695 ;;  light           1    3[BANK0 ] unsigned char 
  5696 ;;  i               2   15[BANK0 ] int 
  5697 ;;  lights          1    2[BANK0 ] unsigned char 
  5698 ;;  i               2   23[BANK0 ] int 
  5699 ;;  i               2    7[BANK0 ] int 
  5700 ;;  j               2   31[BANK0 ] int 
  5701 ;;  i               2   29[BANK0 ] int 
  5702 ;;  j               2   27[BANK0 ] int 
  5703 ;;  i               2    5[BANK0 ] int 
  5704 ;;  i               2   25[BANK0 ] int 
  5705 ;;  i               2   13[BANK0 ] int 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5716 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5718 ;;      Totals:         2      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;Total ram usage:       35 bytes
  5720 ;; Hardware stack levels used: 1
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_main
  5725 ;;		_TMR1_ISR
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _TMR1_ISR_
  5731  0071                     _TMR1_ISR_:
  5732  0071                     i1l2190:	
  5733                           ;incstack = 0
  5734                           ; Regs used in _TMR1_ISR_: [wreg-fsr1h+status,2+status,0]
  5735                           
  5736                           
  5737                           ;main.c: 542:     count++;
  5738  0071  3001               	movlw	1
  5739  0072  0141               	movlb	1	; select bank1
  5740  0073  07EB               	addwf	_count^(0+128),f
  5741  0074  3000               	movlw	0
  5742  0075  3DEC               	addwfc	(_count+1)^(0+128),f
  5743  0076                     i1l2192:
  5744                           
  5745                           ;main.c: 545:     if (silent_night_playing)
  5746  0076  0140               	movlb	0	; select bank0
  5747  0077  085C               	movf	_silent_night_playing,w
  5748  0078  1903               	btfsc	3,2
  5749  0079  287B               	goto	u100_21
  5750  007A  287C               	goto	u100_20
  5751  007B                     u100_21:
  5752  007B  2969               	goto	i1l2244
  5753  007C                     u100_20:
  5754  007C                     i1l2194:
  5755                           
  5756                           ;main.c: 546:     {;main.c: 547:         if (count < 24 || ((count > 48) && (count < 96)
      +                          ))
  5757  007C  0141               	movlb	1	; select bank1
  5758  007D  086C               	movf	(_count+1)^(0+128),w
  5759  007E  3A80               	xorlw	128
  5760  007F  00F0               	movwf	??_TMR1_ISR_
  5761  0080  3080               	movlw	128
  5762  0081  0270               	subwf	??_TMR1_ISR_,w
  5763  0082  1D03               	skipz
  5764  0083  2886               	goto	u101_25
  5765  0084  3018               	movlw	24
  5766  0085  026B               	subwf	_count^(0+128),w
  5767  0086                     u101_25:
  5768  0086  1C03               	skipc
  5769  0087  2889               	goto	u101_21
  5770  0088  288A               	goto	u101_20
  5771  0089                     u101_21:
  5772  0089  28A6               	goto	i1l2200
  5773  008A                     u101_20:
  5774  008A                     i1l2196:
  5775  008A  0141               	movlb	1	; select bank1
  5776  008B  086C               	movf	(_count+1)^(0+128),w
  5777  008C  3A80               	xorlw	128
  5778  008D  00F0               	movwf	??_TMR1_ISR_
  5779  008E  3080               	movlw	128
  5780  008F  0270               	subwf	??_TMR1_ISR_,w
  5781  0090  1D03               	skipz
  5782  0091  2894               	goto	u102_25
  5783  0092  3031               	movlw	49
  5784  0093  026B               	subwf	_count^(0+128),w
  5785  0094                     u102_25:
  5786  0094  1C03               	skipc
  5787  0095  2897               	goto	u102_21
  5788  0096  2898               	goto	u102_20
  5789  0097                     u102_21:
  5790  0097  28E8               	goto	i1l2214
  5791  0098                     u102_20:
  5792  0098                     i1l2198:
  5793  0098  0141               	movlb	1	; select bank1
  5794  0099  086C               	movf	(_count+1)^(0+128),w
  5795  009A  3A80               	xorlw	128
  5796  009B  00F0               	movwf	??_TMR1_ISR_
  5797  009C  3080               	movlw	128
  5798  009D  0270               	subwf	??_TMR1_ISR_,w
  5799  009E  1D03               	skipz
  5800  009F  28A2               	goto	u103_25
  5801  00A0  3060               	movlw	96
  5802  00A1  026B               	subwf	_count^(0+128),w
  5803  00A2                     u103_25:
  5804  00A2  1803               	skipnc
  5805  00A3  28A5               	goto	u103_21
  5806  00A4  28A6               	goto	u103_20
  5807  00A5                     u103_21:
  5808  00A5  28E8               	goto	i1l2214
  5809  00A6                     u103_20:
  5810  00A6                     i1l2200:
  5811                           
  5812                           ;main.c: 548:         {;main.c: 549:             if (last_note != silent_night[count])
  5813  00A6  3093               	movlw	147
  5814  00A7  00F0               	movwf	??_TMR1_ISR_
  5815  00A8  3021               	movlw	33
  5816  00A9  00F1               	movwf	??_TMR1_ISR_+1
  5817  00AA  0141               	movlb	1	; select bank1
  5818  00AB  086B               	movf	_count^(0+128),w
  5819  00AC  0770               	addwf	??_TMR1_ISR_,w
  5820  00AD  0086               	movwf	6
  5821  00AE  086C               	movf	(_count+1)^(0+128),w
  5822  00AF  3D71               	addwfc	??_TMR1_ISR_+1,w
  5823  00B0  0087               	movwf	7
  5824  00B1  0801               	movf	1,w
  5825  00B2  0140               	movlb	0	; select bank0
  5826  00B3  0659               	xorwf	_last_note,w
  5827  00B4  1903               	skipnz
  5828  00B5  28B7               	goto	u104_21
  5829  00B6  28B8               	goto	u104_20
  5830  00B7                     u104_21:
  5831  00B7  2969               	goto	i1l2244
  5832  00B8                     u104_20:
  5833  00B8                     i1l2202:
  5834                           
  5835                           ;main.c: 550:             {;main.c: 551:                 for (int i = 0; i < 7; i++)
  5836  00B8  01B7               	clrf	TMR1_ISR_@i
  5837  00B9  01B8               	clrf	TMR1_ISR_@i+1
  5838  00BA                     i1l2208:
  5839                           
  5840                           ;main.c: 552:                 {;main.c: 553:                     uint8_t lights = light_
      +                          array[i] >> 7;
  5841  00BA  0140               	movlb	0	; select bank0
  5842  00BB  0837               	movf	TMR1_ISR_@i,w
  5843  00BC  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  5844  00BD  0086               	movwf	6
  5845  00BE  0187               	clrf	7
  5846  00BF  0801               	movf	1,w
  5847  00C0  00F0               	movwf	??_TMR1_ISR_
  5848  00C1  3007               	movlw	7
  5849  00C2                     u105_25:
  5850  00C2  36F0               	lsrf	??_TMR1_ISR_,f
  5851  00C3  0B89               	decfsz	9,f
  5852  00C4  28C2               	goto	u105_25
  5853  00C5  0870               	movf	??_TMR1_ISR_,w
  5854  00C6  00F1               	movwf	??_TMR1_ISR_+1
  5855  00C7  0871               	movf	??_TMR1_ISR_+1,w
  5856  00C8  00A1               	movwf	TMR1_ISR_@lights
  5857                           
  5858                           ;main.c: 554:                     light_array[i] = (light_array[i] << 1) + lights;
  5859  00C9  0837               	movf	TMR1_ISR_@i,w
  5860  00CA  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  5861  00CB  0086               	movwf	6
  5862  00CC  0187               	clrf	7
  5863  00CD  3501               	lslf	1,w
  5864  00CE  0721               	addwf	TMR1_ISR_@lights,w
  5865  00CF  00F0               	movwf	??_TMR1_ISR_
  5866  00D0  0837               	movf	TMR1_ISR_@i,w
  5867  00D1  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  5868  00D2  0086               	movwf	6
  5869  00D3  0187               	clrf	7
  5870  00D4  0870               	movf	??_TMR1_ISR_,w
  5871  00D5  0081               	movwf	1
  5872  00D6                     i1l2210:
  5873                           
  5874                           ;main.c: 555:                 }
  5875  00D6  3001               	movlw	1
  5876  00D7  07B7               	addwf	TMR1_ISR_@i,f
  5877  00D8  3000               	movlw	0
  5878  00D9  3DB8               	addwfc	TMR1_ISR_@i+1,f
  5879  00DA                     i1l2212:
  5880  00DA  0838               	movf	TMR1_ISR_@i+1,w
  5881  00DB  3A80               	xorlw	128
  5882  00DC  00F0               	movwf	??_TMR1_ISR_
  5883  00DD  3080               	movlw	128
  5884  00DE  0270               	subwf	??_TMR1_ISR_,w
  5885  00DF  1D03               	skipz
  5886  00E0  28E3               	goto	u106_25
  5887  00E1  3007               	movlw	7
  5888  00E2  0237               	subwf	TMR1_ISR_@i,w
  5889  00E3                     u106_25:
  5890  00E3  1C03               	skipc
  5891  00E4  28E6               	goto	u106_21
  5892  00E5  28E7               	goto	u106_20
  5893  00E6                     u106_21:
  5894  00E6  28BA               	goto	i1l2208
  5895  00E7                     u106_20:
  5896  00E7  2969               	goto	i1l2244
  5897  00E8                     i1l2214:
  5898  00E8  0141               	movlb	1	; select bank1
  5899  00E9  086C               	movf	(_count+1)^(0+128),w
  5900  00EA  3A80               	xorlw	128
  5901  00EB  00F0               	movwf	??_TMR1_ISR_
  5902  00EC  3080               	movlw	128
  5903  00ED  0270               	subwf	??_TMR1_ISR_,w
  5904  00EE  1D03               	skipz
  5905  00EF  28F2               	goto	u107_25
  5906  00F0  3078               	movlw	120
  5907  00F1  026B               	subwf	_count^(0+128),w
  5908  00F2                     u107_25:
  5909  00F2  1C03               	skipc
  5910  00F3  28F5               	goto	u107_21
  5911  00F4  28F6               	goto	u107_20
  5912  00F5                     u107_21:
  5913  00F5  292A               	goto	i1l2230
  5914  00F6                     u107_20:
  5915  00F6                     i1l2216:
  5916  00F6  3093               	movlw	147
  5917  00F7  00F0               	movwf	??_TMR1_ISR_
  5918  00F8  3021               	movlw	33
  5919  00F9  00F1               	movwf	??_TMR1_ISR_+1
  5920  00FA  0141               	movlb	1	; select bank1
  5921  00FB  086B               	movf	_count^(0+128),w
  5922  00FC  0770               	addwf	??_TMR1_ISR_,w
  5923  00FD  0086               	movwf	6
  5924  00FE  086C               	movf	(_count+1)^(0+128),w
  5925  00FF  3D71               	addwfc	??_TMR1_ISR_+1,w
  5926  0100  0087               	movwf	7
  5927  0101  0801               	movf	1,w
  5928  0102  0140               	movlb	0	; select bank0
  5929  0103  0659               	xorwf	_last_note,w
  5930  0104  1903               	skipnz
  5931  0105  2907               	goto	u108_21
  5932  0106  2908               	goto	u108_20
  5933  0107                     u108_21:
  5934  0107  292A               	goto	i1l2230
  5935  0108                     u108_20:
  5936  0108                     i1l2218:
  5937                           
  5938                           ;main.c: 559:         {;main.c: 560:             for (int i = 0; i < 7; i++)
  5939  0108  01AD               	clrf	TMR1_ISR_@i_1186
  5940  0109  01AE               	clrf	TMR1_ISR_@i_1186+1
  5941  010A                     i1l2224:
  5942                           
  5943                           ;main.c: 561:             {;main.c: 562:                 light_array[i] = (light_array[i
      +                          ] << 1) + 1;
  5944  010A  0140               	movlb	0	; select bank0
  5945  010B  082D               	movf	TMR1_ISR_@i_1186,w
  5946  010C  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  5947  010D  0086               	movwf	6
  5948  010E  0187               	clrf	7
  5949  010F  1403               	setc
  5950  0110  0D01               	rlf	1,w
  5951  0111  00F0               	movwf	??_TMR1_ISR_
  5952  0112  082D               	movf	TMR1_ISR_@i_1186,w
  5953  0113  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  5954  0114  0086               	movwf	6
  5955  0115  0187               	clrf	7
  5956  0116  0870               	movf	??_TMR1_ISR_,w
  5957  0117  0081               	movwf	1
  5958  0118                     i1l2226:
  5959                           
  5960                           ;main.c: 563:             }
  5961  0118  3001               	movlw	1
  5962  0119  07AD               	addwf	TMR1_ISR_@i_1186,f
  5963  011A  3000               	movlw	0
  5964  011B  3DAE               	addwfc	TMR1_ISR_@i_1186+1,f
  5965  011C                     i1l2228:
  5966  011C  082E               	movf	TMR1_ISR_@i_1186+1,w
  5967  011D  3A80               	xorlw	128
  5968  011E  00F0               	movwf	??_TMR1_ISR_
  5969  011F  3080               	movlw	128
  5970  0120  0270               	subwf	??_TMR1_ISR_,w
  5971  0121  1D03               	skipz
  5972  0122  2925               	goto	u109_25
  5973  0123  3007               	movlw	7
  5974  0124  022D               	subwf	TMR1_ISR_@i_1186,w
  5975  0125                     u109_25:
  5976  0125  1C03               	skipc
  5977  0126  2928               	goto	u109_21
  5978  0127  2929               	goto	u109_20
  5979  0128                     u109_21:
  5980  0128  290A               	goto	i1l2224
  5981  0129                     u109_20:
  5982  0129  2969               	goto	i1l2244
  5983  012A                     i1l2230:
  5984  012A  0141               	movlb	1	; select bank1
  5985  012B  086C               	movf	(_count+1)^(0+128),w
  5986  012C  3A80               	xorlw	128
  5987  012D  00F0               	movwf	??_TMR1_ISR_
  5988  012E  3080               	movlw	128
  5989  012F  0270               	subwf	??_TMR1_ISR_,w
  5990  0130  1D03               	skipz
  5991  0131  2934               	goto	u110_25
  5992  0132  3078               	movlw	120
  5993  0133  026B               	subwf	_count^(0+128),w
  5994  0134                     u110_25:
  5995  0134  1803               	skipnc
  5996  0135  2937               	goto	u110_21
  5997  0136  2938               	goto	u110_20
  5998  0137                     u110_21:
  5999  0137  2969               	goto	i1l601
  6000  0138                     u110_20:
  6001  0138                     i1l2232:
  6002                           
  6003                           ;main.c: 566:         {;main.c: 567:             for (int i = 0; i < 7; i++)
  6004  0138  0140               	movlb	0	; select bank0
  6005  0139  01B9               	clrf	TMR1_ISR_@i_1187
  6006  013A  01BA               	clrf	TMR1_ISR_@i_1187+1
  6007  013B                     i1l2238:
  6008                           
  6009                           ;main.c: 568:             {;main.c: 569:                 uint8_t lights = light_array[i]
      +                           >> 7;
  6010  013B  0140               	movlb	0	; select bank0
  6011  013C  0839               	movf	TMR1_ISR_@i_1187,w
  6012  013D  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6013  013E  0086               	movwf	6
  6014  013F  0187               	clrf	7
  6015  0140  0801               	movf	1,w
  6016  0141  00F0               	movwf	??_TMR1_ISR_
  6017  0142  3007               	movlw	7
  6018  0143                     u111_25:
  6019  0143  36F0               	lsrf	??_TMR1_ISR_,f
  6020  0144  0B89               	decfsz	9,f
  6021  0145  2943               	goto	u111_25
  6022  0146  0870               	movf	??_TMR1_ISR_,w
  6023  0147  00F1               	movwf	??_TMR1_ISR_+1
  6024  0148  0871               	movf	??_TMR1_ISR_+1,w
  6025  0149  00A2               	movwf	TMR1_ISR_@lights_1188
  6026                           
  6027                           ;main.c: 570:                 light_array[i] = (light_array[i] << 1) + lights;
  6028  014A  0839               	movf	TMR1_ISR_@i_1187,w
  6029  014B  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6030  014C  0086               	movwf	6
  6031  014D  0187               	clrf	7
  6032  014E  3501               	lslf	1,w
  6033  014F  0722               	addwf	TMR1_ISR_@lights_1188,w
  6034  0150  00F0               	movwf	??_TMR1_ISR_
  6035  0151  0839               	movf	TMR1_ISR_@i_1187,w
  6036  0152  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6037  0153  0086               	movwf	6
  6038  0154  0187               	clrf	7
  6039  0155  0870               	movf	??_TMR1_ISR_,w
  6040  0156  0081               	movwf	1
  6041  0157                     i1l2240:
  6042                           
  6043                           ;main.c: 571:             }
  6044  0157  3001               	movlw	1
  6045  0158  07B9               	addwf	TMR1_ISR_@i_1187,f
  6046  0159  3000               	movlw	0
  6047  015A  3DBA               	addwfc	TMR1_ISR_@i_1187+1,f
  6048  015B                     i1l2242:
  6049  015B  083A               	movf	TMR1_ISR_@i_1187+1,w
  6050  015C  3A80               	xorlw	128
  6051  015D  00F0               	movwf	??_TMR1_ISR_
  6052  015E  3080               	movlw	128
  6053  015F  0270               	subwf	??_TMR1_ISR_,w
  6054  0160  1D03               	skipz
  6055  0161  2964               	goto	u112_25
  6056  0162  3007               	movlw	7
  6057  0163  0239               	subwf	TMR1_ISR_@i_1187,w
  6058  0164                     u112_25:
  6059  0164  1C03               	skipc
  6060  0165  2967               	goto	u112_21
  6061  0166  2968               	goto	u112_20
  6062  0167                     u112_21:
  6063  0167  293B               	goto	i1l2238
  6064  0168                     u112_20:
  6065  0168  2969               	goto	i1l2244
  6066  0169                     i1l601:
  6067  0169                     i1l2244:
  6068                           
  6069                           ;main.c: 576:     if (song2_playing)
  6070  0169  0140               	movlb	0	; select bank0
  6071  016A  085A               	movf	_song2_playing,w
  6072  016B  1903               	btfsc	3,2
  6073  016C  296E               	goto	u113_21
  6074  016D  296F               	goto	u113_20
  6075  016E                     u113_21:
  6076  016E  2AA6               	goto	i1l2320
  6077  016F                     u113_20:
  6078  016F                     i1l2246:
  6079                           
  6080                           ;main.c: 577:     {;main.c: 579:         if (count < 34)
  6081  016F  0141               	movlb	1	; select bank1
  6082  0170  086C               	movf	(_count+1)^(0+128),w
  6083  0171  3A80               	xorlw	128
  6084  0172  00F0               	movwf	??_TMR1_ISR_
  6085  0173  3080               	movlw	128
  6086  0174  0270               	subwf	??_TMR1_ISR_,w
  6087  0175  1D03               	skipz
  6088  0176  2979               	goto	u114_25
  6089  0177  3022               	movlw	34
  6090  0178  026B               	subwf	_count^(0+128),w
  6091  0179                     u114_25:
  6092  0179  1803               	skipnc
  6093  017A  297C               	goto	u114_21
  6094  017B  297D               	goto	u114_20
  6095  017C                     u114_21:
  6096  017C  29B0               	goto	i1l2262
  6097  017D                     u114_20:
  6098  017D                     i1l2248:
  6099                           
  6100                           ;main.c: 580:         {;main.c: 581:             if (last_note != song2[count])
  6101  017D  309A               	movlw	154
  6102  017E  00F0               	movwf	??_TMR1_ISR_
  6103  017F  3023               	movlw	35
  6104  0180  00F1               	movwf	??_TMR1_ISR_+1
  6105  0181  0141               	movlb	1	; select bank1
  6106  0182  086B               	movf	_count^(0+128),w
  6107  0183  0770               	addwf	??_TMR1_ISR_,w
  6108  0184  0086               	movwf	6
  6109  0185  086C               	movf	(_count+1)^(0+128),w
  6110  0186  3D71               	addwfc	??_TMR1_ISR_+1,w
  6111  0187  0087               	movwf	7
  6112  0188  0801               	movf	1,w
  6113  0189  0140               	movlb	0	; select bank0
  6114  018A  0659               	xorwf	_last_note,w
  6115  018B  1903               	skipnz
  6116  018C  298E               	goto	u115_21
  6117  018D  298F               	goto	u115_20
  6118  018E                     u115_21:
  6119  018E  2AA6               	goto	i1l2320
  6120  018F                     u115_20:
  6121  018F                     i1l2250:
  6122                           
  6123                           ;main.c: 582:             {;main.c: 583:                 for (int i = 0; i < 7; i++)
  6124  018F  01AF               	clrf	TMR1_ISR_@i_1189
  6125  0190  01B0               	clrf	TMR1_ISR_@i_1189+1
  6126  0191                     i1l2256:
  6127                           
  6128                           ;main.c: 584:                 {;main.c: 585:                     light_array[i] = light_
      +                          array[i] >> 1;
  6129  0191  0140               	movlb	0	; select bank0
  6130  0192  082F               	movf	TMR1_ISR_@i_1189,w
  6131  0193  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6132  0194  0086               	movwf	6
  6133  0195  0187               	clrf	7
  6134  0196  3601               	lsrf	1,w
  6135  0197  00F0               	movwf	??_TMR1_ISR_
  6136  0198  082F               	movf	TMR1_ISR_@i_1189,w
  6137  0199  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6138  019A  0086               	movwf	6
  6139  019B  0187               	clrf	7
  6140  019C  0870               	movf	??_TMR1_ISR_,w
  6141  019D  0081               	movwf	1
  6142  019E                     i1l2258:
  6143                           
  6144                           ;main.c: 586:                 }
  6145  019E  3001               	movlw	1
  6146  019F  07AF               	addwf	TMR1_ISR_@i_1189,f
  6147  01A0  3000               	movlw	0
  6148  01A1  3DB0               	addwfc	TMR1_ISR_@i_1189+1,f
  6149  01A2                     i1l2260:
  6150  01A2  0830               	movf	TMR1_ISR_@i_1189+1,w
  6151  01A3  3A80               	xorlw	128
  6152  01A4  00F0               	movwf	??_TMR1_ISR_
  6153  01A5  3080               	movlw	128
  6154  01A6  0270               	subwf	??_TMR1_ISR_,w
  6155  01A7  1D03               	skipz
  6156  01A8  29AB               	goto	u116_25
  6157  01A9  3007               	movlw	7
  6158  01AA  022F               	subwf	TMR1_ISR_@i_1189,w
  6159  01AB                     u116_25:
  6160  01AB  1C03               	skipc
  6161  01AC  29AE               	goto	u116_21
  6162  01AD  29AF               	goto	u116_20
  6163  01AE                     u116_21:
  6164  01AE  2991               	goto	i1l2256
  6165  01AF                     u116_20:
  6166  01AF  2AA6               	goto	i1l2320
  6167  01B0                     i1l2262:
  6168  01B0  0141               	movlb	1	; select bank1
  6169  01B1  086C               	movf	(_count+1)^(0+128),w
  6170  01B2  3A80               	xorlw	128
  6171  01B3  00F0               	movwf	??_TMR1_ISR_
  6172  01B4  3080               	movlw	128
  6173  01B5  0270               	subwf	??_TMR1_ISR_,w
  6174  01B6  1D03               	skipz
  6175  01B7  29BA               	goto	u117_25
  6176  01B8  3025               	movlw	37
  6177  01B9  026B               	subwf	_count^(0+128),w
  6178  01BA                     u117_25:
  6179  01BA  1803               	skipnc
  6180  01BB  29BD               	goto	u117_21
  6181  01BC  29BE               	goto	u117_20
  6182  01BD                     u117_21:
  6183  01BD  29D9               	goto	i1l2276
  6184  01BE                     u117_20:
  6185  01BE                     i1l2264:
  6186                           
  6187                           ;main.c: 590:         {;main.c: 591:             for (int i = 0; i < 7; i++)
  6188  01BE  0140               	movlb	0	; select bank0
  6189  01BF  01A5               	clrf	TMR1_ISR_@i_1190
  6190  01C0  01A6               	clrf	TMR1_ISR_@i_1190+1
  6191  01C1                     i1l2270:
  6192                           
  6193                           ;main.c: 592:             {;main.c: 593:                 light_array[i] = 0x00;
  6194  01C1  0140               	movlb	0	; select bank0
  6195  01C2  0825               	movf	TMR1_ISR_@i_1190,w
  6196  01C3  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6197  01C4  0086               	movwf	6
  6198  01C5  0187               	clrf	7
  6199  01C6  0181               	clrf	1
  6200  01C7                     i1l2272:
  6201                           
  6202                           ;main.c: 594:             }
  6203  01C7  3001               	movlw	1
  6204  01C8  07A5               	addwf	TMR1_ISR_@i_1190,f
  6205  01C9  3000               	movlw	0
  6206  01CA  3DA6               	addwfc	TMR1_ISR_@i_1190+1,f
  6207  01CB                     i1l2274:
  6208  01CB  0826               	movf	TMR1_ISR_@i_1190+1,w
  6209  01CC  3A80               	xorlw	128
  6210  01CD  00F0               	movwf	??_TMR1_ISR_
  6211  01CE  3080               	movlw	128
  6212  01CF  0270               	subwf	??_TMR1_ISR_,w
  6213  01D0  1D03               	skipz
  6214  01D1  29D4               	goto	u118_25
  6215  01D2  3007               	movlw	7
  6216  01D3  0225               	subwf	TMR1_ISR_@i_1190,w
  6217  01D4                     u118_25:
  6218  01D4  1C03               	skipc
  6219  01D5  29D7               	goto	u118_21
  6220  01D6  29D8               	goto	u118_20
  6221  01D7                     u118_21:
  6222  01D7  29C1               	goto	i1l2270
  6223  01D8                     u118_20:
  6224  01D8  2AA6               	goto	i1l2320
  6225  01D9                     i1l2276:
  6226  01D9  0141               	movlb	1	; select bank1
  6227  01DA  086C               	movf	(_count+1)^(0+128),w
  6228  01DB  3A80               	xorlw	128
  6229  01DC  00F0               	movwf	??_TMR1_ISR_
  6230  01DD  3080               	movlw	128
  6231  01DE  0270               	subwf	??_TMR1_ISR_,w
  6232  01DF  1D03               	skipz
  6233  01E0  29E3               	goto	u119_25
  6234  01E1  3026               	movlw	38
  6235  01E2  026B               	subwf	_count^(0+128),w
  6236  01E3                     u119_25:
  6237  01E3  1C03               	skipc
  6238  01E4  29E6               	goto	u119_21
  6239  01E5  29E7               	goto	u119_20
  6240  01E6                     u119_21:
  6241  01E6  2A2D               	goto	i1l2292
  6242  01E7                     u119_20:
  6243  01E7                     i1l2278:
  6244  01E7  0141               	movlb	1	; select bank1
  6245  01E8  086C               	movf	(_count+1)^(0+128),w
  6246  01E9  3A80               	xorlw	128
  6247  01EA  00F0               	movwf	??_TMR1_ISR_
  6248  01EB  3080               	movlw	128
  6249  01EC  0270               	subwf	??_TMR1_ISR_,w
  6250  01ED  1D03               	skipz
  6251  01EE  29F1               	goto	u120_25
  6252  01EF  302C               	movlw	44
  6253  01F0  026B               	subwf	_count^(0+128),w
  6254  01F1                     u120_25:
  6255  01F1  1803               	skipnc
  6256  01F2  29F4               	goto	u120_21
  6257  01F3  29F5               	goto	u120_20
  6258  01F4                     u120_21:
  6259  01F4  2A2D               	goto	i1l2292
  6260  01F5                     u120_20:
  6261  01F5                     i1l2280:
  6262                           
  6263                           ;main.c: 597:         {;main.c: 598:             for (int j = 0; j < 7; j++)
  6264  01F5  0140               	movlb	0	; select bank0
  6265  01F6  01BB               	clrf	TMR1_ISR_@j
  6266  01F7  01BC               	clrf	TMR1_ISR_@j+1
  6267  01F8                     i1l2286:
  6268                           
  6269                           ;main.c: 599:             {;main.c: 600:                 uint8_t light = (~light_array[j
      +                          ]) << 7;
  6270  01F8  0140               	movlb	0	; select bank0
  6271  01F9  083B               	movf	TMR1_ISR_@j,w
  6272  01FA  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6273  01FB  0086               	movwf	6
  6274  01FC  0187               	clrf	7
  6275  01FD  0901               	comf	1,w
  6276  01FE  00F0               	movwf	??_TMR1_ISR_
  6277  01FF  3006               	movlw	6
  6278  0200                     u121_25:
  6279  0200  35F0               	lslf	??_TMR1_ISR_,f
  6280  0201  3EFF               	addlw	-1
  6281  0202  1D03               	skipz
  6282  0203  2A00               	goto	u121_25
  6283  0204  3570               	lslf	??_TMR1_ISR_,w
  6284  0205  00F1               	movwf	??_TMR1_ISR_+1
  6285  0206  0871               	movf	??_TMR1_ISR_+1,w
  6286  0207  00A3               	movwf	TMR1_ISR_@light
  6287                           
  6288                           ;main.c: 601:                 light_array[j] = (light_array[j] << 1) + (light >> 7);
  6289  0208  0823               	movf	TMR1_ISR_@light,w
  6290  0209  00F0               	movwf	??_TMR1_ISR_
  6291  020A  3007               	movlw	7
  6292  020B                     u122_25:
  6293  020B  36F0               	lsrf	??_TMR1_ISR_,f
  6294  020C  0B89               	decfsz	9,f
  6295  020D  2A0B               	goto	u122_25
  6296  020E  083B               	movf	TMR1_ISR_@j,w
  6297  020F  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6298  0210  0086               	movwf	6
  6299  0211  0187               	clrf	7
  6300  0212  3501               	lslf	1,w
  6301  0213  0770               	addwf	??_TMR1_ISR_,w
  6302  0214  00F1               	movwf	??_TMR1_ISR_+1
  6303  0215  083B               	movf	TMR1_ISR_@j,w
  6304  0216  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6305  0217  0086               	movwf	6
  6306  0218  0187               	clrf	7
  6307  0219  0871               	movf	??_TMR1_ISR_+1,w
  6308  021A  0081               	movwf	1
  6309  021B                     i1l2288:
  6310                           
  6311                           ;main.c: 602:             }
  6312  021B  3001               	movlw	1
  6313  021C  07BB               	addwf	TMR1_ISR_@j,f
  6314  021D  3000               	movlw	0
  6315  021E  3DBC               	addwfc	TMR1_ISR_@j+1,f
  6316  021F                     i1l2290:
  6317  021F  083C               	movf	TMR1_ISR_@j+1,w
  6318  0220  3A80               	xorlw	128
  6319  0221  00F0               	movwf	??_TMR1_ISR_
  6320  0222  3080               	movlw	128
  6321  0223  0270               	subwf	??_TMR1_ISR_,w
  6322  0224  1D03               	skipz
  6323  0225  2A28               	goto	u123_25
  6324  0226  3007               	movlw	7
  6325  0227  023B               	subwf	TMR1_ISR_@j,w
  6326  0228                     u123_25:
  6327  0228  1C03               	skipc
  6328  0229  2A2B               	goto	u123_21
  6329  022A  2A2C               	goto	u123_20
  6330  022B                     u123_21:
  6331  022B  29F8               	goto	i1l2286
  6332  022C                     u123_20:
  6333  022C  2AA6               	goto	i1l2320
  6334  022D                     i1l2292:
  6335  022D  0141               	movlb	1	; select bank1
  6336  022E  086C               	movf	(_count+1)^(0+128),w
  6337  022F  3A80               	xorlw	128
  6338  0230  00F0               	movwf	??_TMR1_ISR_
  6339  0231  3080               	movlw	128
  6340  0232  0270               	subwf	??_TMR1_ISR_,w
  6341  0233  1D03               	skipz
  6342  0234  2A37               	goto	u124_25
  6343  0235  302D               	movlw	45
  6344  0236  026B               	subwf	_count^(0+128),w
  6345  0237                     u124_25:
  6346  0237  1C03               	skipc
  6347  0238  2A3A               	goto	u124_21
  6348  0239  2A3B               	goto	u124_20
  6349  023A                     u124_21:
  6350  023A  2A7A               	goto	i1l2308
  6351  023B                     u124_20:
  6352  023B                     i1l2294:
  6353  023B  0141               	movlb	1	; select bank1
  6354  023C  086C               	movf	(_count+1)^(0+128),w
  6355  023D  3A80               	xorlw	128
  6356  023E  00F0               	movwf	??_TMR1_ISR_
  6357  023F  3080               	movlw	128
  6358  0240  0270               	subwf	??_TMR1_ISR_,w
  6359  0241  1D03               	skipz
  6360  0242  2A45               	goto	u125_25
  6361  0243  307D               	movlw	125
  6362  0244  026B               	subwf	_count^(0+128),w
  6363  0245                     u125_25:
  6364  0245  1803               	skipnc
  6365  0246  2A48               	goto	u125_21
  6366  0247  2A49               	goto	u125_20
  6367  0248                     u125_21:
  6368  0248  2A7A               	goto	i1l2308
  6369  0249                     u125_20:
  6370  0249                     i1l2296:
  6371                           
  6372                           ;main.c: 605:         {;main.c: 606:             for (int i = 0; i < 7; i++)
  6373  0249  0140               	movlb	0	; select bank0
  6374  024A  01BD               	clrf	TMR1_ISR_@i_1193
  6375  024B  01BE               	clrf	TMR1_ISR_@i_1193+1
  6376  024C                     i1l2302:
  6377                           
  6378                           ;main.c: 607:             {;main.c: 608:                 uint8_t lights = light_array[i]
      +                           >> 7;
  6379  024C  0140               	movlb	0	; select bank0
  6380  024D  083D               	movf	TMR1_ISR_@i_1193,w
  6381  024E  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6382  024F  0086               	movwf	6
  6383  0250  0187               	clrf	7
  6384  0251  0801               	movf	1,w
  6385  0252  00F0               	movwf	??_TMR1_ISR_
  6386  0253  3007               	movlw	7
  6387  0254                     u126_25:
  6388  0254  36F0               	lsrf	??_TMR1_ISR_,f
  6389  0255  0B89               	decfsz	9,f
  6390  0256  2A54               	goto	u126_25
  6391  0257  0870               	movf	??_TMR1_ISR_,w
  6392  0258  00F1               	movwf	??_TMR1_ISR_+1
  6393  0259  0871               	movf	??_TMR1_ISR_+1,w
  6394  025A  00A4               	movwf	TMR1_ISR_@lights_1194
  6395                           
  6396                           ;main.c: 609:                 light_array[i] = (light_array[i] << 1) + lights;
  6397  025B  083D               	movf	TMR1_ISR_@i_1193,w
  6398  025C  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6399  025D  0086               	movwf	6
  6400  025E  0187               	clrf	7
  6401  025F  3501               	lslf	1,w
  6402  0260  0724               	addwf	TMR1_ISR_@lights_1194,w
  6403  0261  00F0               	movwf	??_TMR1_ISR_
  6404  0262  083D               	movf	TMR1_ISR_@i_1193,w
  6405  0263  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6406  0264  0086               	movwf	6
  6407  0265  0187               	clrf	7
  6408  0266  0870               	movf	??_TMR1_ISR_,w
  6409  0267  0081               	movwf	1
  6410  0268                     i1l2304:
  6411                           
  6412                           ;main.c: 610:             }
  6413  0268  3001               	movlw	1
  6414  0269  07BD               	addwf	TMR1_ISR_@i_1193,f
  6415  026A  3000               	movlw	0
  6416  026B  3DBE               	addwfc	TMR1_ISR_@i_1193+1,f
  6417  026C                     i1l2306:
  6418  026C  083E               	movf	TMR1_ISR_@i_1193+1,w
  6419  026D  3A80               	xorlw	128
  6420  026E  00F0               	movwf	??_TMR1_ISR_
  6421  026F  3080               	movlw	128
  6422  0270  0270               	subwf	??_TMR1_ISR_,w
  6423  0271  1D03               	skipz
  6424  0272  2A75               	goto	u127_25
  6425  0273  3007               	movlw	7
  6426  0274  023D               	subwf	TMR1_ISR_@i_1193,w
  6427  0275                     u127_25:
  6428  0275  1C03               	skipc
  6429  0276  2A78               	goto	u127_21
  6430  0277  2A79               	goto	u127_20
  6431  0278                     u127_21:
  6432  0278  2A4C               	goto	i1l2302
  6433  0279                     u127_20:
  6434  0279  2AA6               	goto	i1l2320
  6435  027A                     i1l2308:
  6436                           
  6437                           ;main.c: 613:         {;main.c: 614:             for (int j = 0; j < 7; j++)
  6438  027A  0140               	movlb	0	; select bank0
  6439  027B  01BF               	clrf	TMR1_ISR_@j_1195
  6440  027C  01C0               	clrf	TMR1_ISR_@j_1195+1
  6441  027D                     i1l2310:
  6442  027D  0840               	movf	TMR1_ISR_@j_1195+1,w
  6443  027E  3A80               	xorlw	128
  6444  027F  00F0               	movwf	??_TMR1_ISR_
  6445  0280  3080               	movlw	128
  6446  0281  0270               	subwf	??_TMR1_ISR_,w
  6447  0282  1D03               	skipz
  6448  0283  2A86               	goto	u128_25
  6449  0284  3007               	movlw	7
  6450  0285  023F               	subwf	TMR1_ISR_@j_1195,w
  6451  0286                     u128_25:
  6452  0286  1C03               	skipc
  6453  0287  2A89               	goto	u128_21
  6454  0288  2A8A               	goto	u128_20
  6455  0289                     u128_21:
  6456  0289  2A8B               	goto	i1l2314
  6457  028A                     u128_20:
  6458  028A  2AA6               	goto	i1l2320
  6459  028B                     i1l2314:
  6460                           
  6461                           ;main.c: 615:             {;main.c: 616:                 uint8_t light = (~light_array[j
      +                          ]);
  6462  028B  0140               	movlb	0	; select bank0
  6463  028C  083F               	movf	TMR1_ISR_@j_1195,w
  6464  028D  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6465  028E  0086               	movwf	6
  6466  028F  0187               	clrf	7
  6467  0290  0901               	comf	1,w
  6468  0291  00F0               	movwf	??_TMR1_ISR_
  6469  0292  0870               	movf	??_TMR1_ISR_,w
  6470  0293  00A0               	movwf	TMR1_ISR_@light_1196
  6471                           
  6472                           ;main.c: 617:                 light_array[j] = (light_array[j] << 1) + 1;
  6473  0294  083F               	movf	TMR1_ISR_@j_1195,w
  6474  0295  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6475  0296  0086               	movwf	6
  6476  0297  0187               	clrf	7
  6477  0298  1403               	setc
  6478  0299  0D01               	rlf	1,w
  6479  029A  00F0               	movwf	??_TMR1_ISR_
  6480  029B  083F               	movf	TMR1_ISR_@j_1195,w
  6481  029C  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6482  029D  0086               	movwf	6
  6483  029E  0187               	clrf	7
  6484  029F  0870               	movf	??_TMR1_ISR_,w
  6485  02A0  0081               	movwf	1
  6486  02A1                     i1l2316:
  6487                           
  6488                           ;main.c: 618:             }
  6489  02A1  3001               	movlw	1
  6490  02A2  07BF               	addwf	TMR1_ISR_@j_1195,f
  6491  02A3  3000               	movlw	0
  6492  02A4  3DC0               	addwfc	TMR1_ISR_@j_1195+1,f
  6493  02A5  2A7D               	goto	i1l2310
  6494  02A6                     i1l2320:
  6495                           
  6496                           ;main.c: 651:     if (song3_playing)
  6497  02A6  0140               	movlb	0	; select bank0
  6498  02A7  085B               	movf	_song3_playing,w
  6499  02A8  1903               	btfsc	3,2
  6500  02A9  2AAB               	goto	u129_21
  6501  02AA  2AAC               	goto	u129_20
  6502  02AB                     u129_21:
  6503  02AB  2C26               	goto	i1l2422
  6504  02AC                     u129_20:
  6505  02AC                     i1l2322:
  6506                           
  6507                           ;main.c: 652:     {;main.c: 654:        if (count < 58)
  6508  02AC  0141               	movlb	1	; select bank1
  6509  02AD  086C               	movf	(_count+1)^(0+128),w
  6510  02AE  3A80               	xorlw	128
  6511  02AF  00F0               	movwf	??_TMR1_ISR_
  6512  02B0  3080               	movlw	128
  6513  02B1  0270               	subwf	??_TMR1_ISR_,w
  6514  02B2  1D03               	skipz
  6515  02B3  2AB6               	goto	u130_25
  6516  02B4  303A               	movlw	58
  6517  02B5  026B               	subwf	_count^(0+128),w
  6518  02B6                     u130_25:
  6519  02B6  1803               	skipnc
  6520  02B7  2AB9               	goto	u130_21
  6521  02B8  2ABA               	goto	u130_20
  6522  02B9                     u130_21:
  6523  02B9  2B2D               	goto	i1l2356
  6524  02BA                     u130_20:
  6525  02BA                     i1l2324:
  6526                           
  6527                           ;main.c: 655:        {;main.c: 656:            if ((last_prescale != song3_pre[count]) &
      +                          & (song3[count] != 0))
  6528  02BA  30A8               	movlw	168
  6529  02BB  00F0               	movwf	??_TMR1_ISR_
  6530  02BC  3022               	movlw	34
  6531  02BD  00F1               	movwf	??_TMR1_ISR_+1
  6532  02BE  0141               	movlb	1	; select bank1
  6533  02BF  086B               	movf	_count^(0+128),w
  6534  02C0  0770               	addwf	??_TMR1_ISR_,w
  6535  02C1  0086               	movwf	6
  6536  02C2  086C               	movf	(_count+1)^(0+128),w
  6537  02C3  3D71               	addwfc	??_TMR1_ISR_+1,w
  6538  02C4  0087               	movwf	7
  6539  02C5  0801               	movf	1,w
  6540  02C6  0140               	movlb	0	; select bank0
  6541  02C7  0658               	xorwf	_last_prescale,w
  6542  02C8  1903               	skipnz
  6543  02C9  2ACB               	goto	u131_21
  6544  02CA  2ACC               	goto	u131_20
  6545  02CB                     u131_21:
  6546  02CB  2C26               	goto	i1l2422
  6547  02CC                     u131_20:
  6548  02CC                     i1l2326:
  6549  02CC  3021               	movlw	33
  6550  02CD  00F0               	movwf	??_TMR1_ISR_
  6551  02CE  3023               	movlw	35
  6552  02CF  00F1               	movwf	??_TMR1_ISR_+1
  6553  02D0  0141               	movlb	1	; select bank1
  6554  02D1  086B               	movf	_count^(0+128),w
  6555  02D2  0770               	addwf	??_TMR1_ISR_,w
  6556  02D3  0086               	movwf	6
  6557  02D4  086C               	movf	(_count+1)^(0+128),w
  6558  02D5  3D71               	addwfc	??_TMR1_ISR_+1,w
  6559  02D6  0087               	movwf	7
  6560  02D7  0801               	movf	1,w
  6561  02D8  1903               	btfsc	3,2
  6562  02D9  2ADB               	goto	u132_21
  6563  02DA  2ADC               	goto	u132_20
  6564  02DB                     u132_21:
  6565  02DB  2C26               	goto	i1l2422
  6566  02DC                     u132_20:
  6567  02DC                     i1l2328:
  6568                           
  6569                           ;main.c: 657:            {;main.c: 658:                if (change_lights)
  6570  02DC  0140               	movlb	0	; select bank0
  6571  02DD  0857               	movf	_change_lights,w
  6572  02DE  1903               	btfsc	3,2
  6573  02DF  2AE1               	goto	u133_21
  6574  02E0  2AE2               	goto	u133_20
  6575  02E1                     u133_21:
  6576  02E1  2B07               	goto	i1l2344
  6577  02E2                     u133_20:
  6578  02E2                     i1l2330:
  6579                           
  6580                           ;main.c: 659:                {;main.c: 660:                    for (int i = 0; i < 7; i+
      +                          +)
  6581  02E2  01B1               	clrf	TMR1_ISR_@i_1197
  6582  02E3  01B2               	clrf	TMR1_ISR_@i_1197+1
  6583  02E4                     i1l2332:
  6584  02E4  0832               	movf	TMR1_ISR_@i_1197+1,w
  6585  02E5  3A80               	xorlw	128
  6586  02E6  00F0               	movwf	??_TMR1_ISR_
  6587  02E7  3080               	movlw	128
  6588  02E8  0270               	subwf	??_TMR1_ISR_,w
  6589  02E9  1D03               	skipz
  6590  02EA  2AED               	goto	u134_25
  6591  02EB  3007               	movlw	7
  6592  02EC  0231               	subwf	TMR1_ISR_@i_1197,w
  6593  02ED                     u134_25:
  6594  02ED  1C03               	skipc
  6595  02EE  2AF0               	goto	u134_21
  6596  02EF  2AF1               	goto	u134_20
  6597  02F0                     u134_21:
  6598  02F0  2AF2               	goto	i1l2336
  6599  02F1                     u134_20:
  6600  02F1  2B04               	goto	i1l2342
  6601  02F2                     i1l2336:
  6602                           
  6603                           ;main.c: 661:                     {;main.c: 662:                         light_array[i] 
      +                          = dream_lights[i];
  6604  02F2  0140               	movlb	0	; select bank0
  6605  02F3  0831               	movf	TMR1_ISR_@i_1197,w
  6606  02F4  3E41               	addlw	(low (_dream_lights| 0))& (0+255)
  6607  02F5  0086               	movwf	6
  6608  02F6  0187               	clrf	7
  6609  02F7  0801               	movf	1,w
  6610  02F8  00F0               	movwf	??_TMR1_ISR_
  6611  02F9  0831               	movf	TMR1_ISR_@i_1197,w
  6612  02FA  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6613  02FB  0086               	movwf	6
  6614  02FC  0187               	clrf	7
  6615  02FD  0870               	movf	??_TMR1_ISR_,w
  6616  02FE  0081               	movwf	1
  6617  02FF                     i1l2338:
  6618                           
  6619                           ;main.c: 663:                     }
  6620  02FF  3001               	movlw	1
  6621  0300  07B1               	addwf	TMR1_ISR_@i_1197,f
  6622  0301  3000               	movlw	0
  6623  0302  3DB2               	addwfc	TMR1_ISR_@i_1197+1,f
  6624  0303  2AE4               	goto	i1l2332
  6625  0304                     i1l2342:
  6626                           
  6627                           ;main.c: 664:                    change_lights = 0;
  6628  0304  0140               	movlb	0	; select bank0
  6629  0305  01D7               	clrf	_change_lights
  6630                           
  6631                           ;main.c: 665:                }
  6632  0306  2C26               	goto	i1l2422
  6633  0307                     i1l2344:
  6634                           
  6635                           ;main.c: 667:                {;main.c: 668:                    for (int i = 0; i < 7; i+
      +                          +)
  6636  0307  01B3               	clrf	TMR1_ISR_@i_1198
  6637  0308  01B4               	clrf	TMR1_ISR_@i_1198+1
  6638  0309                     i1l2346:
  6639  0309  0834               	movf	TMR1_ISR_@i_1198+1,w
  6640  030A  3A80               	xorlw	128
  6641  030B  00F0               	movwf	??_TMR1_ISR_
  6642  030C  3080               	movlw	128
  6643  030D  0270               	subwf	??_TMR1_ISR_,w
  6644  030E  1D03               	skipz
  6645  030F  2B12               	goto	u135_25
  6646  0310  3007               	movlw	7
  6647  0311  0233               	subwf	TMR1_ISR_@i_1198,w
  6648  0312                     u135_25:
  6649  0312  1C03               	skipc
  6650  0313  2B15               	goto	u135_21
  6651  0314  2B16               	goto	u135_20
  6652  0315                     u135_21:
  6653  0315  2B17               	goto	i1l2350
  6654  0316                     u135_20:
  6655  0316  2B29               	goto	i1l637
  6656  0317                     i1l2350:
  6657                           
  6658                           ;main.c: 669:                     {;main.c: 670:                         light_array[i] 
      +                          = ~dream_lights[i];
  6659  0317  0140               	movlb	0	; select bank0
  6660  0318  0833               	movf	TMR1_ISR_@i_1198,w
  6661  0319  3E41               	addlw	(low (_dream_lights| 0))& (0+255)
  6662  031A  0086               	movwf	6
  6663  031B  0187               	clrf	7
  6664  031C  0901               	comf	1,w
  6665  031D  00F0               	movwf	??_TMR1_ISR_
  6666  031E  0833               	movf	TMR1_ISR_@i_1198,w
  6667  031F  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6668  0320  0086               	movwf	6
  6669  0321  0187               	clrf	7
  6670  0322  0870               	movf	??_TMR1_ISR_,w
  6671  0323  0081               	movwf	1
  6672  0324                     i1l2352:
  6673                           
  6674                           ;main.c: 671:                     }
  6675  0324  3001               	movlw	1
  6676  0325  07B3               	addwf	TMR1_ISR_@i_1198,f
  6677  0326  3000               	movlw	0
  6678  0327  3DB4               	addwfc	TMR1_ISR_@i_1198+1,f
  6679  0328  2B09               	goto	i1l2346
  6680  0329                     i1l637:
  6681                           
  6682                           ;main.c: 672:                    change_lights = 1;
  6683  0329  0140               	movlb	0	; select bank0
  6684  032A  01D7               	clrf	_change_lights
  6685  032B  0AD7               	incf	_change_lights,f
  6686  032C  2C26               	goto	i1l2422
  6687  032D                     i1l2356:
  6688  032D  0141               	movlb	1	; select bank1
  6689  032E  086C               	movf	(_count+1)^(0+128),w
  6690  032F  3A80               	xorlw	128
  6691  0330  00F0               	movwf	??_TMR1_ISR_
  6692  0331  3080               	movlw	128
  6693  0332  0270               	subwf	??_TMR1_ISR_,w
  6694  0333  1D03               	skipz
  6695  0334  2B37               	goto	u136_25
  6696  0335  303E               	movlw	62
  6697  0336  026B               	subwf	_count^(0+128),w
  6698  0337                     u136_25:
  6699  0337  1803               	skipnc
  6700  0338  2B3A               	goto	u136_21
  6701  0339  2B3B               	goto	u136_20
  6702  033A                     u136_21:
  6703  033A  2B5A               	goto	i1l2370
  6704  033B                     u136_20:
  6705  033B                     i1l2358:
  6706                           
  6707                           ;main.c: 677:        {;main.c: 678:            for (int i = 0; i < 7; i++)
  6708  033B  0140               	movlb	0	; select bank0
  6709  033C  01A7               	clrf	TMR1_ISR_@i_1199
  6710  033D  01A8               	clrf	TMR1_ISR_@i_1199+1
  6711  033E                     i1l2360:
  6712  033E  0828               	movf	TMR1_ISR_@i_1199+1,w
  6713  033F  3A80               	xorlw	128
  6714  0340  00F0               	movwf	??_TMR1_ISR_
  6715  0341  3080               	movlw	128
  6716  0342  0270               	subwf	??_TMR1_ISR_,w
  6717  0343  1D03               	skipz
  6718  0344  2B47               	goto	u137_25
  6719  0345  3007               	movlw	7
  6720  0346  0227               	subwf	TMR1_ISR_@i_1199,w
  6721  0347                     u137_25:
  6722  0347  1C03               	skipc
  6723  0348  2B4A               	goto	u137_21
  6724  0349  2B4B               	goto	u137_20
  6725  034A                     u137_21:
  6726  034A  2B4C               	goto	i1l2364
  6727  034B                     u137_20:
  6728  034B  2C26               	goto	i1l2422
  6729  034C                     i1l2364:
  6730                           
  6731                           ;main.c: 679:             {;main.c: 680:                 light_array[i] = 0xFF;
  6732  034C  30FF               	movlw	255
  6733  034D  00F0               	movwf	??_TMR1_ISR_
  6734  034E  0140               	movlb	0	; select bank0
  6735  034F  0827               	movf	TMR1_ISR_@i_1199,w
  6736  0350  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6737  0351  0086               	movwf	6
  6738  0352  0187               	clrf	7
  6739  0353  0870               	movf	??_TMR1_ISR_,w
  6740  0354  0081               	movwf	1
  6741  0355                     i1l2366:
  6742                           
  6743                           ;main.c: 681:             }
  6744  0355  3001               	movlw	1
  6745  0356  07A7               	addwf	TMR1_ISR_@i_1199,f
  6746  0357  3000               	movlw	0
  6747  0358  3DA8               	addwfc	TMR1_ISR_@i_1199+1,f
  6748  0359  2B3E               	goto	i1l2360
  6749  035A                     i1l2370:
  6750                           
  6751                           ;main.c: 684:        {;main.c: 685:            if ((last_note != song3[count]) || (last_
      +                          prescale != song3_pre[count]))
  6752  035A  3021               	movlw	33
  6753  035B  00F0               	movwf	??_TMR1_ISR_
  6754  035C  3023               	movlw	35
  6755  035D  00F1               	movwf	??_TMR1_ISR_+1
  6756  035E  0141               	movlb	1	; select bank1
  6757  035F  086B               	movf	_count^(0+128),w
  6758  0360  0770               	addwf	??_TMR1_ISR_,w
  6759  0361  0086               	movwf	6
  6760  0362  086C               	movf	(_count+1)^(0+128),w
  6761  0363  3D71               	addwfc	??_TMR1_ISR_+1,w
  6762  0364  0087               	movwf	7
  6763  0365  0801               	movf	1,w
  6764  0366  0140               	movlb	0	; select bank0
  6765  0367  0659               	xorwf	_last_note,w
  6766  0368  1D03               	skipz
  6767  0369  2B6B               	goto	u138_21
  6768  036A  2B6C               	goto	u138_20
  6769  036B                     u138_21:
  6770  036B  2B7E               	goto	i1l2374
  6771  036C                     u138_20:
  6772  036C                     i1l2372:
  6773  036C  30A8               	movlw	168
  6774  036D  00F0               	movwf	??_TMR1_ISR_
  6775  036E  3022               	movlw	34
  6776  036F  00F1               	movwf	??_TMR1_ISR_+1
  6777  0370  0141               	movlb	1	; select bank1
  6778  0371  086B               	movf	_count^(0+128),w
  6779  0372  0770               	addwf	??_TMR1_ISR_,w
  6780  0373  0086               	movwf	6
  6781  0374  086C               	movf	(_count+1)^(0+128),w
  6782  0375  3D71               	addwfc	??_TMR1_ISR_+1,w
  6783  0376  0087               	movwf	7
  6784  0377  0801               	movf	1,w
  6785  0378  0140               	movlb	0	; select bank0
  6786  0379  0658               	xorwf	_last_prescale,w
  6787  037A  1903               	skipnz
  6788  037B  2B7D               	goto	u139_21
  6789  037C  2B7E               	goto	u139_20
  6790  037D                     u139_21:
  6791  037D  2C26               	goto	i1l638
  6792  037E                     u139_20:
  6793  037E                     i1l2374:
  6794                           
  6795                           ;main.c: 686:            {;main.c: 687:                 dream_sw++;
  6796  037E  3001               	movlw	1
  6797  037F  00F0               	movwf	??_TMR1_ISR_
  6798  0380  0870               	movf	??_TMR1_ISR_,w
  6799  0381  07D6               	addwf	_dream_sw,f
  6800  0382                     i1l2376:
  6801                           
  6802                           ;main.c: 688:                 if (song3[count] == 0) dream_sw = 4;
  6803  0382  3021               	movlw	33
  6804  0383  00F0               	movwf	??_TMR1_ISR_
  6805  0384  3023               	movlw	35
  6806  0385  00F1               	movwf	??_TMR1_ISR_+1
  6807  0386  0141               	movlb	1	; select bank1
  6808  0387  086B               	movf	_count^(0+128),w
  6809  0388  0770               	addwf	??_TMR1_ISR_,w
  6810  0389  0086               	movwf	6
  6811  038A  086C               	movf	(_count+1)^(0+128),w
  6812  038B  3D71               	addwfc	??_TMR1_ISR_+1,w
  6813  038C  0087               	movwf	7
  6814  038D  0801               	movf	1,w
  6815  038E  1D03               	btfss	3,2
  6816  038F  2B91               	goto	u140_21
  6817  0390  2B92               	goto	u140_20
  6818  0391                     u140_21:
  6819  0391  2C12               	goto	i1l2420
  6820  0392                     u140_20:
  6821  0392                     i1l2378:
  6822  0392  3004               	movlw	4
  6823  0393  00F0               	movwf	??_TMR1_ISR_
  6824  0394  0870               	movf	??_TMR1_ISR_,w
  6825  0395  0140               	movlb	0	; select bank0
  6826  0396  00D6               	movwf	_dream_sw
  6827  0397  2C12               	goto	i1l2420
  6828  0398                     i1l2380:
  6829                           
  6830                           ;main.c: 692:                     light_array[0] = 0xFF;
  6831  0398  30FF               	movlw	255
  6832  0399  00F0               	movwf	??_TMR1_ISR_
  6833  039A  0870               	movf	??_TMR1_ISR_,w
  6834  039B  0141               	movlb	1	; select bank1
  6835  039C  00D1               	movwf	_light_array^(0+128)
  6836                           
  6837                           ;main.c: 693:                     light_array[1] = 0xFF;
  6838  039D  30FF               	movlw	255
  6839  039E  00F0               	movwf	??_TMR1_ISR_
  6840  039F  0870               	movf	??_TMR1_ISR_,w
  6841  03A0  00D2               	movwf	(_light_array^(0+128)+1)
  6842                           
  6843                           ;main.c: 694:                     light_array[2] = 0xF3;
  6844  03A1  30F3               	movlw	243
  6845  03A2  00F0               	movwf	??_TMR1_ISR_
  6846  03A3  0870               	movf	??_TMR1_ISR_,w
  6847  03A4  00D3               	movwf	(_light_array^(0+128)+2)
  6848                           
  6849                           ;main.c: 695:                     light_array[3] = 0xE3;
  6850  03A5  30E3               	movlw	227
  6851  03A6  00F0               	movwf	??_TMR1_ISR_
  6852  03A7  0870               	movf	??_TMR1_ISR_,w
  6853  03A8  00D4               	movwf	(_light_array^(0+128)+3)
  6854                           
  6855                           ;main.c: 696:                     light_array[4] = 0xE3;
  6856  03A9  30E3               	movlw	227
  6857  03AA  00F0               	movwf	??_TMR1_ISR_
  6858  03AB  0870               	movf	??_TMR1_ISR_,w
  6859  03AC  00D5               	movwf	(_light_array^(0+128)+4)
  6860                           
  6861                           ;main.c: 697:                     light_array[5] = 0xFF;
  6862  03AD  30FF               	movlw	255
  6863  03AE  00F0               	movwf	??_TMR1_ISR_
  6864  03AF  0870               	movf	??_TMR1_ISR_,w
  6865  03B0  00D6               	movwf	(_light_array^(0+128)+5)
  6866                           
  6867                           ;main.c: 698:                     light_array[6] = 0xFF;
  6868  03B1  30FF               	movlw	255
  6869  03B2  00F0               	movwf	??_TMR1_ISR_
  6870  03B3  0870               	movf	??_TMR1_ISR_,w
  6871  03B4  00D7               	movwf	(_light_array^(0+128)+6)
  6872                           
  6873                           ;main.c: 699:                     break;
  6874  03B5  2C26               	goto	i1l2422
  6875  03B6                     i1l2382:
  6876                           
  6877                           ;main.c: 701:                     for (int i = 0; i < 7; i++)
  6878  03B6  01B5               	clrf	TMR1_ISR_@i_1200
  6879  03B7  01B6               	clrf	TMR1_ISR_@i_1200+1
  6880  03B8                     i1l2384:
  6881  03B8  0836               	movf	TMR1_ISR_@i_1200+1,w
  6882  03B9  3A80               	xorlw	128
  6883  03BA  00F0               	movwf	??_TMR1_ISR_
  6884  03BB  3080               	movlw	128
  6885  03BC  0270               	subwf	??_TMR1_ISR_,w
  6886  03BD  1D03               	skipz
  6887  03BE  2BC1               	goto	u141_25
  6888  03BF  3007               	movlw	7
  6889  03C0  0235               	subwf	TMR1_ISR_@i_1200,w
  6890  03C1                     u141_25:
  6891  03C1  1C03               	skipc
  6892  03C2  2BC4               	goto	u141_21
  6893  03C3  2BC5               	goto	u141_20
  6894  03C4                     u141_21:
  6895  03C4  2BC6               	goto	i1l2388
  6896  03C5                     u141_20:
  6897  03C5  2C26               	goto	i1l2422
  6898  03C6                     i1l2388:
  6899                           
  6900                           ;main.c: 702:                      {;main.c: 703:                          light_array[i
      +                          ] = ~dream_lights[i];
  6901  03C6  0140               	movlb	0	; select bank0
  6902  03C7  0835               	movf	TMR1_ISR_@i_1200,w
  6903  03C8  3E41               	addlw	(low (_dream_lights| 0))& (0+255)
  6904  03C9  0086               	movwf	6
  6905  03CA  0187               	clrf	7
  6906  03CB  0901               	comf	1,w
  6907  03CC  00F0               	movwf	??_TMR1_ISR_
  6908  03CD  0835               	movf	TMR1_ISR_@i_1200,w
  6909  03CE  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6910  03CF  0086               	movwf	6
  6911  03D0  0187               	clrf	7
  6912  03D1  0870               	movf	??_TMR1_ISR_,w
  6913  03D2  0081               	movwf	1
  6914  03D3                     i1l2390:
  6915                           
  6916                           ;main.c: 704:                      }
  6917  03D3  3001               	movlw	1
  6918  03D4  07B5               	addwf	TMR1_ISR_@i_1200,f
  6919  03D5  3000               	movlw	0
  6920  03D6  3DB6               	addwfc	TMR1_ISR_@i_1200+1,f
  6921  03D7  2BB8               	goto	i1l2384
  6922  03D8                     i1l2394:
  6923                           
  6924                           ;main.c: 707:                     for (int i = 0; i < 7; i++)
  6925  03D8  01A9               	clrf	TMR1_ISR_@i_1201
  6926  03D9  01AA               	clrf	TMR1_ISR_@i_1201+1
  6927  03DA                     i1l2396:
  6928  03DA  082A               	movf	TMR1_ISR_@i_1201+1,w
  6929  03DB  3A80               	xorlw	128
  6930  03DC  00F0               	movwf	??_TMR1_ISR_
  6931  03DD  3080               	movlw	128
  6932  03DE  0270               	subwf	??_TMR1_ISR_,w
  6933  03DF  1D03               	skipz
  6934  03E0  2BE3               	goto	u142_25
  6935  03E1  3007               	movlw	7
  6936  03E2  0229               	subwf	TMR1_ISR_@i_1201,w
  6937  03E3                     u142_25:
  6938  03E3  1C03               	skipc
  6939  03E4  2BE6               	goto	u142_21
  6940  03E5  2BE7               	goto	u142_20
  6941  03E6                     u142_21:
  6942  03E6  2BE8               	goto	i1l2400
  6943  03E7                     u142_20:
  6944  03E7  2C26               	goto	i1l2422
  6945  03E8                     i1l2400:
  6946                           
  6947                           ;main.c: 708:                      {;main.c: 709:                          light_array[i
      +                          ] = 0x00;
  6948  03E8  0140               	movlb	0	; select bank0
  6949  03E9  0829               	movf	TMR1_ISR_@i_1201,w
  6950  03EA  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6951  03EB  0086               	movwf	6
  6952  03EC  0187               	clrf	7
  6953  03ED  0181               	clrf	1
  6954  03EE                     i1l2402:
  6955                           
  6956                           ;main.c: 710:                      }
  6957  03EE  3001               	movlw	1
  6958  03EF  07A9               	addwf	TMR1_ISR_@i_1201,f
  6959  03F0  3000               	movlw	0
  6960  03F1  3DAA               	addwfc	TMR1_ISR_@i_1201+1,f
  6961  03F2  2BDA               	goto	i1l2396
  6962  03F3                     i1l2406:
  6963                           
  6964                           ;main.c: 713:                     dream_sw = 0;
  6965  03F3  01D6               	clrf	_dream_sw
  6966                           
  6967                           ;main.c: 714:                     for (int i = 0; i < 7; i++)
  6968  03F4  01AB               	clrf	TMR1_ISR_@i_1202
  6969  03F5  01AC               	clrf	TMR1_ISR_@i_1202+1
  6970  03F6                     i1l2408:
  6971  03F6  082C               	movf	TMR1_ISR_@i_1202+1,w
  6972  03F7  3A80               	xorlw	128
  6973  03F8  00F0               	movwf	??_TMR1_ISR_
  6974  03F9  3080               	movlw	128
  6975  03FA  0270               	subwf	??_TMR1_ISR_,w
  6976  03FB  1D03               	skipz
  6977  03FC  2BFF               	goto	u143_25
  6978  03FD  3007               	movlw	7
  6979  03FE  022B               	subwf	TMR1_ISR_@i_1202,w
  6980  03FF                     u143_25:
  6981  03FF  1C03               	skipc
  6982  0400  2C02               	goto	u143_21
  6983  0401  2C03               	goto	u143_20
  6984  0402                     u143_21:
  6985  0402  2C04               	goto	i1l2412
  6986  0403                     u143_20:
  6987  0403  2C26               	goto	i1l2422
  6988  0404                     i1l2412:
  6989                           
  6990                           ;main.c: 715:                      {;main.c: 716:                          light_array[i
      +                          ] = 0xFF;
  6991  0404  30FF               	movlw	255
  6992  0405  00F0               	movwf	??_TMR1_ISR_
  6993  0406  0140               	movlb	0	; select bank0
  6994  0407  082B               	movf	TMR1_ISR_@i_1202,w
  6995  0408  3ED1               	addlw	(low (_light_array| 0))& (0+255)
  6996  0409  0086               	movwf	6
  6997  040A  0187               	clrf	7
  6998  040B  0870               	movf	??_TMR1_ISR_,w
  6999  040C  0081               	movwf	1
  7000  040D                     i1l2414:
  7001                           
  7002                           ;main.c: 717:                      }
  7003  040D  3001               	movlw	1
  7004  040E  07AB               	addwf	TMR1_ISR_@i_1202,f
  7005  040F  3000               	movlw	0
  7006  0410  3DAC               	addwfc	TMR1_ISR_@i_1202+1,f
  7007  0411  2BF6               	goto	i1l2408
  7008  0412                     i1l2420:
  7009  0412  0140               	movlb	0	; select bank0
  7010  0413  0856               	movf	_dream_sw,w
  7011  0414  00F0               	movwf	??_TMR1_ISR_
  7012  0415  01F1               	clrf	??_TMR1_ISR_+1
  7013                           
  7014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7015                           ; Switch size 1, requested type "simple"
  7016                           ; Number of cases is 1, Range of values is 0 to 0
  7017                           ; switch strategies available:
  7018                           ; Name         Instructions Cycles
  7019                           ; simple_byte            4     3 (average)
  7020                           ; direct_byte            8     6 (fixed)
  7021                           ; jumptable            260     6 (fixed)
  7022                           ;	Chosen strategy is simple_byte
  7023  0416  0871               	movf	??_TMR1_ISR_+1,w
  7024  0417  3A00               	xorlw	0	; case 0
  7025  0418  1903               	skipnz
  7026  0419  2C1B               	goto	i1l3024
  7027  041A  2BF3               	goto	i1l2406
  7028  041B                     i1l3024:
  7029                           
  7030                           ; Switch size 1, requested type "simple"
  7031                           ; Number of cases is 3, Range of values is 1 to 3
  7032                           ; switch strategies available:
  7033                           ; Name         Instructions Cycles
  7034                           ; simple_byte           10     6 (average)
  7035                           ; direct_byte           15     9 (fixed)
  7036                           ; jumptable            263     9 (fixed)
  7037                           ;	Chosen strategy is simple_byte
  7038  041B  0870               	movf	??_TMR1_ISR_,w
  7039  041C  3A01               	xorlw	1	; case 1
  7040  041D  1903               	skipnz
  7041  041E  2B98               	goto	i1l2380
  7042  041F  3A03               	xorlw	3	; case 2
  7043  0420  1903               	skipnz
  7044  0421  2BB6               	goto	i1l2382
  7045  0422  3A01               	xorlw	1	; case 3
  7046  0423  1903               	skipnz
  7047  0424  2BD8               	goto	i1l2394
  7048  0425  2BF3               	goto	i1l2406
  7049  0426                     i1l638:
  7050  0426                     i1l2422:
  7051                           
  7052                           ;main.c: 768:     if (song2_playing)
  7053  0426  0140               	movlb	0	; select bank0
  7054  0427  085A               	movf	_song2_playing,w
  7055  0428  1903               	btfsc	3,2
  7056  0429  2C2B               	goto	u144_21
  7057  042A  2C2C               	goto	u144_20
  7058  042B                     u144_21:
  7059  042B  2C33               	goto	i1l2426
  7060  042C                     u144_20:
  7061  042C                     i1l2424:
  7062                           
  7063                           ;main.c: 769:     {;main.c: 773:         TMR1H = timer_high_2;
  7064  042C  084D               	movf	_timer_high_2,w
  7065  042D  0144               	movlb	4	; select bank4
  7066  042E  008D               	movwf	13	;volatile
  7067                           
  7068                           ;main.c: 774:         TMR1L = timer_low_2;
  7069  042F  0140               	movlb	0	; select bank0
  7070  0430  084C               	movf	_timer_low_2,w
  7071  0431  0144               	movlb	4	; select bank4
  7072  0432  008C               	movwf	12	;volatile
  7073  0433                     i1l2426:
  7074                           
  7075                           ;main.c: 778:     if (song3_playing)
  7076  0433  0140               	movlb	0	; select bank0
  7077  0434  085B               	movf	_song3_playing,w
  7078  0435  1903               	btfsc	3,2
  7079  0436  2C38               	goto	u145_21
  7080  0437  2C39               	goto	u145_20
  7081  0438                     u145_21:
  7082  0438  2C40               	goto	i1l660
  7083  0439                     u145_20:
  7084  0439                     i1l2428:
  7085                           
  7086                           ;main.c: 779:     {;main.c: 780:         TMR1H = timer_high_3;
  7087  0439  084A               	movf	_timer_high_3,w
  7088  043A  0144               	movlb	4	; select bank4
  7089  043B  008D               	movwf	13	;volatile
  7090                           
  7091                           ;main.c: 781:         TMR1L = timer_low_3;
  7092  043C  0140               	movlb	0	; select bank0
  7093  043D  0849               	movf	_timer_low_3,w
  7094  043E  0144               	movlb	4	; select bank4
  7095  043F  008C               	movwf	12	;volatile
  7096  0440                     i1l660:	
  7097                           ;main.c: 782:     }
  7098                           
  7099                           
  7100                           ;main.c: 785:     if ((count > 138) && silent_night_playing)
  7101  0440  0141               	movlb	1	; select bank1
  7102  0441  086C               	movf	(_count+1)^(0+128),w
  7103  0442  3A80               	xorlw	128
  7104  0443  00F0               	movwf	??_TMR1_ISR_
  7105  0444  3080               	movlw	128
  7106  0445  0270               	subwf	??_TMR1_ISR_,w
  7107  0446  1D03               	skipz
  7108  0447  2C4A               	goto	u146_25
  7109  0448  308B               	movlw	139
  7110  0449  026B               	subwf	_count^(0+128),w
  7111  044A                     u146_25:
  7112  044A  1C03               	skipc
  7113  044B  2C4D               	goto	u146_21
  7114  044C  2C4E               	goto	u146_20
  7115  044D                     u146_21:
  7116  044D  2C59               	goto	i1l2434
  7117  044E                     u146_20:
  7118  044E                     i1l2430:
  7119  044E  0140               	movlb	0	; select bank0
  7120  044F  085C               	movf	_silent_night_playing,w
  7121  0450  1903               	btfsc	3,2
  7122  0451  2C53               	goto	u147_21
  7123  0452  2C54               	goto	u147_20
  7124  0453                     u147_21:
  7125  0453  2C59               	goto	i1l2434
  7126  0454                     u147_20:
  7127  0454                     i1l2432:
  7128                           
  7129                           ;main.c: 786:     {;main.c: 787:         presses = 0;
  7130  0454  0141               	movlb	1	; select bank1
  7131  0455  01ED               	clrf	_presses^(0+128)
  7132                           
  7133                           ;main.c: 788:         count = 0;
  7134  0456  01EB               	clrf	_count^(0+128)
  7135  0457  01EC               	clrf	(_count+1)^(0+128)
  7136                           
  7137                           ;main.c: 789:     }
  7138  0458  2C81               	goto	i1l666
  7139  0459                     i1l2434:
  7140  0459  0141               	movlb	1	; select bank1
  7141  045A  086C               	movf	(_count+1)^(0+128),w
  7142  045B  3A80               	xorlw	128
  7143  045C  3C80               	sublw	128
  7144  045D  1D03               	skipz
  7145  045E  2C62               	goto	u148_25
  7146  045F  086B               	movf	_count^(0+128),w
  7147  0460  0140               	movlb	0	; select bank0
  7148  0461  024B               	subwf	_song2_length,w
  7149  0462                     u148_25:
  7150  0462  1803               	skipnc
  7151  0463  2C65               	goto	u148_21
  7152  0464  2C66               	goto	u148_20
  7153  0465                     u148_21:
  7154  0465  2C6D               	goto	i1l2440
  7155  0466                     u148_20:
  7156  0466                     i1l2436:
  7157  0466  0140               	movlb	0	; select bank0
  7158  0467  085A               	movf	_song2_playing,w
  7159  0468  1903               	btfsc	3,2
  7160  0469  2C6B               	goto	u149_21
  7161  046A  2C6C               	goto	u149_20
  7162  046B                     u149_21:
  7163  046B  2C6D               	goto	i1l2440
  7164  046C                     u149_20:
  7165  046C  2C54               	goto	i1l2432
  7166  046D                     i1l2440:
  7167  046D  0141               	movlb	1	; select bank1
  7168  046E  086C               	movf	(_count+1)^(0+128),w
  7169  046F  3A80               	xorlw	128
  7170  0470  3C80               	sublw	128
  7171  0471  1D03               	skipz
  7172  0472  2C76               	goto	u150_25
  7173  0473  086B               	movf	_count^(0+128),w
  7174  0474  0140               	movlb	0	; select bank0
  7175  0475  0248               	subwf	_song3_length,w
  7176  0476                     u150_25:
  7177  0476  1803               	skipnc
  7178  0477  2C79               	goto	u150_21
  7179  0478  2C7A               	goto	u150_20
  7180  0479                     u150_21:
  7181  0479  2C81               	goto	i1l666
  7182  047A                     u150_20:
  7183  047A                     i1l2442:
  7184  047A  0140               	movlb	0	; select bank0
  7185  047B  085B               	movf	_song3_playing,w
  7186  047C  1903               	btfsc	3,2
  7187  047D  2C7F               	goto	u151_21
  7188  047E  2C80               	goto	u151_20
  7189  047F                     u151_21:
  7190  047F  2C81               	goto	i1l666
  7191  0480                     u151_20:
  7192  0480  2C54               	goto	i1l2432
  7193  0481                     i1l666:
  7194  0481  0008               	return
  7195  0482                     __end_of_TMR1_ISR_:
  7196                           
  7197                           	psect	text23
  7198  0D6C                     __ptext23:	
  7199 ;; *************** function _TMR0_ISR *****************
  7200 ;; Defined at:
  7201 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2, status,0, pclath, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 1
  7222 ;; This function calls:
  7223 ;;		Absolute function
  7224 ;;		_TMR0_DefaultInterruptHandler
  7225 ;;		_TMR0_ISR_
  7226 ;; This function is called by:
  7227 ;;		_INTERRUPT_InterruptManager
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function _TMR0_ISR
  7233  0D6C                     _TMR0_ISR:
  7234  0D6C                     i1l2464:	
  7235                           ;incstack = 0
  7236                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7237                           
  7238                           
  7239                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  7240  0D6C  014E               	movlb	14	; select bank14
  7241  0D6D  128C               	bcf	12,5	;volatile
  7242  0D6E                     i1l2466:
  7243                           
  7244                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  7245  0D6E  0878               	movf	_timer0ReloadVal16bit+1,w	;volatile
  7246  0D6F  014B               	movlb	11	; select bank11
  7247  0D70  009D               	movwf	29	;volatile
  7248  0D71                     i1l2468:
  7249                           
  7250                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  7251  0D71  0877               	movf	_timer0ReloadVal16bit,w	;volatile
  7252  0D72  009C               	movwf	28	;volatile
  7253  0D73                     i1l2470:
  7254                           
  7255                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
  7256  0D73  0140               	movlb	0	; select bank0
  7257  0D74  0852               	movf	_TMR0_InterruptHandler,w
  7258  0D75  0453               	iorwf	_TMR0_InterruptHandler+1,w
  7259  0D76  1903               	btfsc	3,2
  7260  0D77  2D79               	goto	u152_21
  7261  0D78  2D7A               	goto	u152_20
  7262  0D79                     u152_21:
  7263  0D79  2D7F               	goto	i1l328
  7264  0D7A                     u152_20:
  7265  0D7A                     i1l2472:
  7266                           
  7267                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
  7268  0D7A  0853               	movf	_TMR0_InterruptHandler+1,w
  7269  0D7B  008A               	movwf	10
  7270  0D7C  0852               	movf	_TMR0_InterruptHandler,w
  7271  0D7D  000A               	callw
  7272  0D7E  318D               	pagesel	$
  7273  0D7F                     i1l328:
  7274  0D7F  0008               	return
  7275  0D80                     __end_of_TMR0_ISR:
  7276                           
  7277                           	psect	text24
  7278  0CDA                     __ptext24:	
  7279 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7280 ;; Defined at:
  7281 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;		None
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;		None
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1    wreg      void 
  7288 ;; Registers used:
  7289 ;;		None
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;Total ram usage:        0 bytes
  7300 ;; Hardware stack levels used: 1
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_TMR0_Initialize
  7305 ;;		_TMR0_ISR
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           
  7310                           ;psect for function _TMR0_DefaultInterruptHandler
  7311  0CDA                     _TMR0_DefaultInterruptHandler:
  7312  0CDA                     i1l334:	
  7313                           ;incstack = 0
  7314                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7315                           
  7316  0CDA  0008               	return
  7317  0CDB                     __end_of_TMR0_DefaultInterruptHandler:
  7318                           
  7319                           	psect	text25
  7320  0CDE                     __ptext25:	
  7321 ;; *************** function _TMR0_ISR_ *****************
  7322 ;; Defined at:
  7323 ;;		line 534 in file "main.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		None
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_main
  7347 ;;		_TMR0_ISR
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function _TMR0_ISR_
  7353  0CDE                     _TMR0_ISR_:
  7354  0CDE                     i1l2188:	
  7355                           ;incstack = 0
  7356                           ; Regs used in _TMR0_ISR_: []
  7357                           
  7358                           
  7359                           ;main.c: 536:     TMR0_complete = 1;
  7360  0CDE  0141               	movlb	1	; select bank1
  7361  0CDF  01EE               	clrf	_TMR0_complete^(0+128)
  7362  0CE0  0AEE               	incf	_TMR0_complete^(0+128),f
  7363  0CE1                     i1l591:
  7364  0CE1  0008               	return
  7365  0CE2                     __end_of_TMR0_ISR_:
  7366                           
  7367                           	psect	text26
  7368  0CE8                     __ptext26:	
  7369 ;; *************** function _INT_ISR *****************
  7370 ;; Defined at:
  7371 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;		None
  7374 ;; Auto vars:     Size  Location     Type
  7375 ;;		None
  7376 ;; Return value:  Size  Location     Type
  7377 ;;                  1    wreg      void 
  7378 ;; Registers used:
  7379 ;;		wreg, status,2, status,0, pclath, cstack
  7380 ;; Tracked objects:
  7381 ;;		On entry : 0/0
  7382 ;;		On exit  : 0/0
  7383 ;;		Unchanged: 0/0
  7384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;Total ram usage:        0 bytes
  7390 ;; Hardware stack levels used: 1
  7391 ;; Hardware stack levels required when called: 3
  7392 ;; This function calls:
  7393 ;;		_INT_CallBack
  7394 ;; This function is called by:
  7395 ;;		_INTERRUPT_InterruptManager
  7396 ;; This function uses a non-reentrant model
  7397 ;;
  7398                           
  7399                           
  7400                           ;psect for function _INT_ISR
  7401  0CE8                     _INT_ISR:
  7402  0CE8                     i1l2474:	
  7403                           ;incstack = 0
  7404                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  7405                           
  7406                           
  7407                           ;mcc_generated_files/ext_int.c: 47:     (PIR0bits.INTF = 0);
  7408  0CE8  014E               	movlb	14	; select bank14
  7409  0CE9  100C               	bcf	12,0	;volatile
  7410  0CEA                     i1l2476:
  7411                           
  7412                           ;mcc_generated_files/ext_int.c: 50:     INT_CallBack();
  7413  0CEA  318D  251A  318C   	fcall	_INT_CallBack
  7414  0CED                     i1l271:
  7415  0CED  0008               	return
  7416  0CEE                     __end_of_INT_ISR:
  7417                           
  7418                           	psect	text27
  7419  0D1A                     __ptext27:	
  7420 ;; *************** function _INT_CallBack *****************
  7421 ;; Defined at:
  7422 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;		None
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      void 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0, pclath, cstack
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;Total ram usage:        0 bytes
  7441 ;; Hardware stack levels used: 1
  7442 ;; Hardware stack levels required when called: 2
  7443 ;; This function calls:
  7444 ;;		Absolute function
  7445 ;;		_EXT_ISR
  7446 ;;		_INT_DefaultInterruptHandler
  7447 ;; This function is called by:
  7448 ;;		_INT_ISR
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function _INT_CallBack
  7454  0D1A                     _INT_CallBack:
  7455  0D1A                     i1l2164:	
  7456                           ;incstack = 0
  7457                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  7458                           
  7459                           
  7460                           ;mcc_generated_files/ext_int.c: 57:     if(INT_InterruptHandler)
  7461  0D1A  0140               	movlb	0	; select bank0
  7462  0D1B  0854               	movf	_INT_InterruptHandler,w
  7463  0D1C  0455               	iorwf	_INT_InterruptHandler+1,w
  7464  0D1D  1903               	btfsc	3,2
  7465  0D1E  2D20               	goto	u98_21
  7466  0D1F  2D21               	goto	u98_20
  7467  0D20                     u98_21:
  7468  0D20  2D26               	goto	i1l275
  7469  0D21                     u98_20:
  7470  0D21                     i1l2166:
  7471                           
  7472                           ;mcc_generated_files/ext_int.c: 58:     {;mcc_generated_files/ext_int.c: 59:         INT
      +                          _InterruptHandler();
  7473  0D21  0855               	movf	_INT_InterruptHandler+1,w
  7474  0D22  008A               	movwf	10
  7475  0D23  0854               	movf	_INT_InterruptHandler,w
  7476  0D24  000A               	callw
  7477  0D25  318D               	pagesel	$
  7478  0D26                     i1l275:
  7479  0D26  0008               	return
  7480  0D27                     __end_of_INT_CallBack:
  7481                           
  7482                           	psect	text28
  7483  07D6                     __ptext28:	
  7484 ;; *************** function _EXT_ISR *****************
  7485 ;; Defined at:
  7486 ;;		line 510 in file "main.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      void 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2, status,0, pclath, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;Total ram usage:        1 bytes
  7505 ;; Hardware stack levels used: 1
  7506 ;; Hardware stack levels required when called: 1
  7507 ;; This function calls:
  7508 ;;		_TMR0_Reload
  7509 ;; This function is called by:
  7510 ;;		_main
  7511 ;;		_INT_CallBack
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           
  7516                           ;psect for function _EXT_ISR
  7517  07D6                     _EXT_ISR:
  7518  07D6                     i1l2054:	
  7519                           ;incstack = 0
  7520                           ; Regs used in _EXT_ISR: [wreg+status,2+status,0+pclath+cstack]
  7521                           
  7522                           
  7523                           ;main.c: 512:     presses++;
  7524  07D6  3001               	movlw	1
  7525  07D7  00F0               	movwf	??_EXT_ISR
  7526  07D8  0870               	movf	??_EXT_ISR,w
  7527  07D9  0141               	movlb	1	; select bank1
  7528  07DA  07ED               	addwf	_presses^(0+128),f
  7529  07DB                     i1l2056:
  7530                           
  7531                           ;main.c: 513:     TMR0_Reload();
  7532  07DB  318C  24E2  3187   	fcall	_TMR0_Reload
  7533  07DE                     i1l2058:
  7534                           
  7535                           ;main.c: 516:     if (T1CONbits.TMR1ON)
  7536  07DE  0144               	movlb	4	; select bank4
  7537  07DF  1C0E               	btfss	14,0	;volatile
  7538  07E0  2FE2               	goto	u96_21
  7539  07E1  2FE3               	goto	u96_20
  7540  07E2                     u96_21:
  7541  07E2  2FE8               	goto	i1l2062
  7542  07E3                     u96_20:
  7543  07E3                     i1l2060:
  7544                           
  7545                           ;main.c: 517:     {;main.c: 518:         presses = 0;
  7546  07E3  0141               	movlb	1	; select bank1
  7547  07E4  01ED               	clrf	_presses^(0+128)
  7548                           
  7549                           ;main.c: 519:         count = 0;
  7550  07E5  01EB               	clrf	_count^(0+128)
  7551  07E6  01EC               	clrf	(_count+1)^(0+128)
  7552                           
  7553                           ;main.c: 520:     }
  7554  07E7  2FEA               	goto	i1l2064
  7555  07E8                     i1l2062:
  7556                           
  7557                           ;main.c: 523:     {;main.c: 524:         TMR0_complete = 0;
  7558  07E8  0141               	movlb	1	; select bank1
  7559  07E9  01EE               	clrf	_TMR0_complete^(0+128)
  7560  07EA                     i1l2064:
  7561                           
  7562                           ;main.c: 527:     if (presses > num_songs)
  7563  07EA  086D               	movf	_presses^(0+128),w
  7564  07EB  0279               	subwf	_num_songs,w
  7565  07EC  1803               	skipnc
  7566  07ED  2FEF               	goto	u97_21
  7567  07EE  2FF0               	goto	u97_20
  7568  07EF                     u97_21:
  7569  07EF  2FF1               	goto	i1l588
  7570  07F0                     u97_20:
  7571  07F0                     i1l2066:
  7572                           
  7573                           ;main.c: 528:     {;main.c: 529:         presses = 0;
  7574  07F0  01ED               	clrf	_presses^(0+128)
  7575  07F1                     i1l588:
  7576  07F1  0008               	return
  7577  07F2                     __end_of_EXT_ISR:
  7578                           
  7579                           	psect	text29
  7580  0CD9                     __ptext29:	
  7581 ;; *************** function _INT_DefaultInterruptHandler *****************
  7582 ;; Defined at:
  7583 ;;		line 67 in file "mcc_generated_files/ext_int.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;		None
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;		None
  7588 ;; Return value:  Size  Location     Type
  7589 ;;                  1    wreg      void 
  7590 ;; Registers used:
  7591 ;;		None
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;Total ram usage:        0 bytes
  7602 ;; Hardware stack levels used: 1
  7603 ;; This function calls:
  7604 ;;		Nothing
  7605 ;; This function is called by:
  7606 ;;		_EXT_INT_Initialize
  7607 ;;		_INT_CallBack
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           
  7612                           ;psect for function _INT_DefaultInterruptHandler
  7613  0CD9                     _INT_DefaultInterruptHandler:
  7614  0CD9                     i1l281:	
  7615                           ;incstack = 0
  7616                           ; Regs used in _INT_DefaultInterruptHandler: []
  7617                           
  7618  0CD9  0008               	return
  7619  0CDA                     __end_of_INT_DefaultInterruptHandler:
  7620                           
  7621                           	psect	text30
  7622  0CE2                     __ptext30:	
  7623 ;; *************** function _TMR0_Reload *****************
  7624 ;; Defined at:
  7625 ;;		line 127 in file "mcc_generated_files/tmr0.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;		None
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;Total ram usage:        0 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_EXT_ISR
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _TMR0_Reload
  7654  0CE2                     _TMR0_Reload:
  7655  0CE2                     i1l2038:	
  7656                           ;incstack = 0
  7657                           ; Regs used in _TMR0_Reload: [wreg+status,2]
  7658                           
  7659                           
  7660                           ;mcc_generated_files/tmr0.c: 130:     TMR0H = timer0ReloadVal16bit >> 8;
  7661  0CE2  0878               	movf	_timer0ReloadVal16bit+1,w	;volatile
  7662  0CE3  014B               	movlb	11	; select bank11
  7663  0CE4  009D               	movwf	29	;volatile
  7664  0CE5                     i1l2040:
  7665                           
  7666                           ;mcc_generated_files/tmr0.c: 131:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  7667  0CE5  0877               	movf	_timer0ReloadVal16bit,w	;volatile
  7668  0CE6  009C               	movwf	28	;volatile
  7669  0CE7                     i1l324:
  7670  0CE7  0008               	return
  7671  0CE8                     __end_of_TMR0_Reload:
  7672  007E                     btemp	set	126	;btemp
  7673  007E                     int$flags	set	126
  7674  007E                     wtemp0	set	126
  7675  2193                     
  7676                           	psect	config
  7677                           
  7678                           ;Config register CONFIG1 @ 0x8007
  7679                           ;	External Oscillator Mode Selection bits
  7680                           ;	FEXTOSC = OFF, Oscillator not enabled
  7681                           ;	Power-up Default Value for COSC bits
  7682                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  7683                           ;	Clock Out Enable bit
  7684                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  7685                           ;	VDD Range Analog Calibration Selection bit
  7686                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  7687  8007                     	org	32775
  7688  8007  3FED               	dw	16365
  7689                           
  7690                           ;Config register CONFIG2 @ 0x8008
  7691                           ;	Master Clear Enable bit
  7692                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  7693                           ;	Power-up Timer Selection bits
  7694                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  7695                           ;	WDT Operating Mode bits
  7696                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  7697                           ;	Brown-out Reset Enable bits
  7698                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  7699                           ;	Brown-out Reset Voltage Selection bit
  7700                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  7701                           ;	PPSLOCKED One-Way Set Enable bit
  7702                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  7703                           ;	Stack Overflow/Underflow Reset Enable bit
  7704                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  7705  8008                     	org	32776
  7706  8008  3FE7               	dw	16359
  7707                           
  7708                           ;Config register CONFIG4 @ 0x800A
  7709                           ;	Boot Block Size Selection bits
  7710                           ;	BBSIZE = BB512, 512 words boot block size
  7711                           ;	Boot Block Enable bit
  7712                           ;	BBEN = OFF, Boot Block is disabled
  7713                           ;	SAF Enable bit
  7714                           ;	SAFEN = OFF, SAF is disabled
  7715                           ;	Application Block Write Protection bit
  7716                           ;	WRTAPP = OFF, Application Block is not write-protected
  7717                           ;	Boot Block Write Protection bit
  7718                           ;	WRTB = OFF, Boot Block is not write-protected
  7719                           ;	Configuration Registers Write Protection bit
  7720                           ;	WRTC = OFF, Configuration Registers are not write-protected
  7721                           ;	Storage Area Flash (SAF) Write Protection bit
  7722                           ;	WRTSAF = OFF, SAF is not write-protected
  7723                           ;	Low Voltage Programming Enable bit
  7724                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  7725  800A                     	org	32778
  7726  800A  3FFF               	dw	16383
  7727                           
  7728                           ;Config register CONFIG5 @ 0x800B
  7729                           ;	User Program Flash Memory Code Protection bit
  7730                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  7731  800B                     	org	32779
  7732  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    11
    Data        675
    BSS         11
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     33      61
    BANK1            80     19      79
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5             3      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    displayMatrix@states	PTR unsigned char  size(1) Largest target is 7
		 -> light_array(BANK1[7]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_ISR_(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_ISR_(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXT_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXT_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    _main->_displayMatrix
    _displayMatrix->_shiftBytes
    _shiftBytes->_SPI1_ExchangeByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_ISR_
    _TMR1_ISR->_TMR1_WriteTimer
    _INT_CallBack->_EXT_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_ISR->_TMR1_ISR_

Critical Paths under _main in BANK1

    _main->_displayMatrix

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    3706
                                              4 BANK1     15    15      0
                 _EXT_INT_Initialize
            _INT_SetInterruptHandler
                    _PWM3_Initialize
                    _SPI1_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
           _TMR0_SetInterruptHandler
                    _TMR1_Initialize
           _TMR1_SetInterruptHandler
                    _TMR2_Initialize
                      _displayMatrix
                           _playNote
                         _shiftBytes
 ---------------------------------------------------------------------------------
 (1) _playNote                                             3     2      1     436
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _displayMatrix                                        6     6      0     775
                                              5 COMMON     2     2      0
                                              0 BANK1      4     4      0
                         _shiftBytes
 ---------------------------------------------------------------------------------
 (1) _shiftBytes                                           2     1      1     363
                                              3 COMMON     2     1      1
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _SPI1_ExchangeByte                                    1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1615
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1615
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _TMR1_ISR_ *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR_                                           35    35      0    1375
                                              0 COMMON     2     2      0
                                              0 BANK0     33    33      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _TMR0_ISR_ *
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR_                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
                            _EXT_ISR *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EXT_ISR                                              1     1      0       0
                                              0 COMMON     1     1      0
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EXT_INT_Initialize
     _INT_SetInterruptHandler
   _INT_SetInterruptHandler
   _PWM3_Initialize
   _SPI1_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR0_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_Initialize
   _displayMatrix
     _shiftBytes
       _SPI1_ExchangeByte
   _playNote
   _shiftBytes

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _EXT_ISR *
         _TMR0_Reload
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_ISR_ *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_ISR_ *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      96       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     21      3D       6       76.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                3      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      96      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 21 21:15:55 2021

                       _SPI1_ExchangeByte 0D34                                         _a 1004  
                                       _b 100A                                         _c 1009  
                                       _d 1008                                         _e 1007  
                                       _f 1006                                         _g 1005  
                                      l32 0CF9                                        l35 0CDD  
                                      l29 07D5                                        l64 0D94  
                                      l74 0D38                                        l76 0D3D  
                                      l77 0D40                        ?_SPI1_ExchangeByte 0070  
                                     l226 0D0D                                       l147 077A  
                                     l331 0CFF                                       l309 0DC4  
                                     l177 07FF                                       l284 0D33  
                                     l365 079A                                       l278 0CF3  
                                     l551 0E9B                                       l395 0D05  
                                     l670 07B0                                       l671 07B9  
                                     l559 0F25                                       l576 0FF9  
                                     l578 0FFB                                       l579 0FFC  
                                     l692 071A                                       l685 0D4D  
                                     l669 07A6                                       _PR2 028D  
                         _timer1ReloadVal 0050                       ??_SPI1_ExchangeByte 0072  
                         _TMR2_Initialize 07F2                                       wreg 0009  
                          ?_displayMatrix 0070                                      l2100 0770  
                                    l2110 0CF6                                      l2102 0773  
                                    l2112 0CF8                                      l2104 0775  
                                    l2120 07F5                                      l2106 0777  
                                    l2050 0CFA                                      l2130 077B  
                                    l2122 07F6                                      l2114 0CDB  
                                    l2108 0CF4                                      l2116 0D06  
                                    l2052 0D00                                      l2140 0786  
                                    l2132 077E                                      l2124 07F9  
                                    l2150 0D2A                                      l2070 0D8D  
                                    l2142 078E                                      l2134 0780  
                                    l2126 07FA                                      l2118 07F2  
                                    l3022 0F1A                                      l2048 0CEE  
                                    l2152 0D31                                      l2080 0756  
                                    l2072 0D8E                                      l2160 0DBA  
                                    l2144 0790                                      l2136 0782  
                                    l2128 07FC                                      l2090 0765  
                                    l2082 0758                                      l2074 0D90  
                                    l2162 0DC1                                      l2154 0DAC  
                                    l2146 0797                                      l2138 0784  
                                    l2148 0D27                                      l2092 0767  
                                    l2084 075A                                      l2076 0D92  
                                    l2068 0D80                                      l2156 0DB7  
                                    l2094 0769                                      l2086 075D  
                                    l2078 0753                                      l2158 0DB9  
                                    l2510 07AD                                      l2096 076B  
                                    l2088 0763                                      l2098 076E  
                                    l2450 07BA                                      l2506 079C  
                                    l2460 07CF                                      l2452 07C3  
                                    l2508 07A3                                      l2462 07D2  
                                    l2454 07C6                                      l2456 07C9  
                                    l2458 07CC                                      l2810 0DC8  
                                    l2900 0ED7                                      l2820 0DD2  
                                    l2812 0DC9                                      l2910 0F00  
                                    l2902 0EF3                                      l2830 0DFC  
                                    l2822 0DD3                                      l2814 0DCD  
                                    l2760 0D35                                      l2912 0F04  
                                    l2904 0EF7                                      l2832 0E01  
                                    l2824 0DDF                                      l2816 0DCF  
                                    l2808 0DC5                                      l2762 0D3E  
                                    l2770 0D4C                                      l2930 0F5E  
                                    l2914 0F08                                      l2906 0EF8  
                                    l2922 0F11                                      l2850 0E0B  
                                    l2834 0E03                                      l2826 0DEB  
                                    l2818 0DD1                                      l2780 06EA  
                                    l2772 06E1                                      l2940 0F91  
                                    l2932 0F6C                                      l2924 0F2A  
                                    l2916 0F0C                                      l2908 0EFC  
                                    l2852 0E0F                                      l2844 0E08  
                                    l2836 0E04                                      l2828 0DF7  
                                    l2766 0D42                                      l2790 070D  
                                    l2782 06EF                                      l2950 0FDC  
                                    l2934 0F7A                                      l2942 0F96  
                                    l2926 0F4A                                      l2918 0F0D  
                                    l2870 0E67                                      l2854 0E14  
                                    l2838 0E05                                      l2768 0D4A  
                                    l2784 06F3                                      l2960 0FF0  
                                    l2952 0FE1                                      l2936 0F80  
                                    l2928 0F51                                      l2944 0FAD  
                                    l2880 0E7C                                      l2864 0E32  
                                    l2856 0E21                                      l2786 0701  
                                    l2778 06E4                                      l2954 0FE3  
                                    l2946 0FB5                                      l2938 0F85  
                                    l2890 0EA9                                      l2882 0E89  
                                    l2866 0E55                                      l2858 0E2F  
                                    l2788 0708                                      l2948 0FD5  
                                    l2892 0EAF                                      l2956 0FE5  
                                    l2884 0E9D                                      l2876 0E6A  
                                    l2868 0E59                                      l2958 0FEB  
                                    l2894 0EB4                                      l2886 0EA6  
                                    l2878 0E78                                      l2896 0EB7  
                                    l2888 0EA8                                      l2898 0ED3  
                                    u2000 0F6C                                      u2001 0F6B  
                                    u2010 0F7A                                      u2011 0F79  
                                    u2020 0FB4                                      u2021 0FB3  
                                    u2005 0F68                                      u2030 0FDC  
                                    u2031 0FDB                                      u2015 0F76  
                                    u2040 0FEB                                      u2041 0FEA  
                                    u2050 0FF0                                      u2051 0FEF  
                                    _LATA 0018                           __end_of_INT_ISR 0CEE  
                                    _LATC 001A                                      u2067 0704  
                                    u1560 07A3                                      u1561 07A2  
                                    u1570 07AD                                      _T2PR 028D  
                                    u1571 07AC                                      u1900 0E2F  
                                    u1901 0E2E                                      u1840 0D3D  
                                    u1841 0D3C                                      u1905 0E2B  
                                    u1850 06EA                                      u1930 0E66  
                                    u1851 06E9                                      u1931 0E65  
                                    u1915 0E3A                                      u1860 071A  
                                    u1940 0E89                                      u1861 0719  
                                    u1941 0E88                                      u1925 0E45  
                                    u1950 0E9B                                      u1951 0E9A  
                                    u1935 0E62                                      u1960 0EAF  
                                    u1865 0716                                      u1961 0EAE  
                                    u1945 0E85                                      u1970 0EB4  
                                    u1890 0E21                                      u1971 0EB3  
                                    u1955 0E97                                      u1891 0E20  
                                    u1980 0F50                                      u1981 0F4F  
                                    u1990 0F5E                                      u1991 0F5D  
                                    u1895 0E1D                                      u1995 0F5A  
                         __end_of_EXT_ISR 07F2                                      _TMR2 028C  
                                    _WPUA 1F39                                      _WPUC 1F4F  
                                    _main 0DC5                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E       __end_of_INT_DefaultInterruptHandler 0CDA  
             _INT_DefaultInterruptHandler 0CD9                                      start 0031  
         __end_of_INT_SetInterruptHandler 0CF4                 __end_of_SPI1_ExchangeByte 0D41  
              ??_TMR1_SetInterruptHandler 0074                   __end_of_TMR0_Initialize 0DC5  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0006  
           __end_of_OSCILLATOR_Initialize 0CFA                                     ?_main 0070  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
                                   _T2TMR 028C                                     i1l250 0013  
                                   _T2RST 0291                                     i1l324 0CE7  
                                   i1l252 001F                                     i1l253 002F  
                                   i1l334 0CDA                                     i1l271 0CED  
                                   i1l328 0D7F                                     i1l281 0CD9  
                                   i1l601 0169                                     i1l258 002F  
                                   i1l275 0D26                                     i1l392 0DAB  
                                   i1l379 0D6B                                     i1l660 0440  
                                   i1l637 0329                                     i1l638 0426  
                                   i1l398 0002                                     i1l591 0CE1  
                                   i1l666 0481                                     i1l588 07F1  
                                   _OSCEN 0891                                     _TMR0H 059D  
                        playNote@prescale 0072                                     _TMR1H 020D  
                                   _TMR0L 059C                                     _TMR1L 020C  
                                   _TRISA 0012                                     _TRISC 0014  
                                   u96_20 07E3                                     u96_21 07E2  
                                   u97_20 07F0                                     u97_21 07EF  
                                   u98_20 0D21                                     u98_21 0D20  
                                   u99_20 0D60                                     u99_21 0D5F  
       __size_of_TMR0_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 0072  
                      __size_of_TMR0_ISR_ 0004                        __size_of_TMR1_ISR_ 0411  
                        __end_of_TMR0_ISR 0D80                          __end_of_TMR1_ISR 0DAC  
                          _WDT_Initialize 0CDB                                     _count 00EB  
                                   _song2 239A                                     _song3 2321  
                                   main@i 00E5                                     main@j 00E3  
                 __end_of_PWM3_Initialize 0D0E                   __end_of_TMR1_Initialize 079B  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0D5B  
                __size_of_SPI1_Initialize 0015                           __initialization 0033  
                            __end_of_main 1000                   __end_of_TMR2_Initialize 0800  
             ?_INTERRUPT_InterruptManager 0070                      TMR1_ISR_@lights_1194 0024  
                    TMR1_ISR_@lights_1188 0022                                    ??_main 00DC  
                         ??_displayMatrix 0075                    __end_of_WDT_Initialize 0CDE  
                               ??_INT_ISR 0071                                 ??_EXT_ISR 0070  
                                  _ANSELA 1F38                                    _ANSELC 1F4E  
                                  _T0CON0 059E                                    _T0CON1 059F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA5PPS 1F15                                    u100_20 007C  
                                  u100_21 007B                                    u101_20 008A  
                                  u101_21 0089                                    _RC3PPS 1F23  
                                  u101_25 0086                                    u110_20 0138  
                                  u102_20 0098                                    u110_21 0137  
                                  u102_21 0097                   TMR1_WriteTimer@timerVal 0070  
                                  u110_25 0134                                    u102_25 0094  
                                  i1l2040 0CE5                                    u103_20 00A6  
                                  i1l2200 00A6                                    u103_21 00A5  
                                  i1l2210 00D6                                    i1l2202 00B8  
                                  _RC5PPS 1F25                                    i1l2060 07E3  
                                  i1l2212 00DA                                    u111_25 0143  
                                  u103_25 00A2                                    i1l2038 0CE2  
                                  i1l2062 07E8                                    i1l2054 07D6  
                                  i1l2310 027D                                    i1l2302 024C  
                                  i1l2230 012A                                    i1l2214 00E8  
                                  i1l2064 07EA                                    i1l2056 07DB  
                                  i1l3024 041B                                    i1l2400 03E8  
                                  i1l2304 0268                                    u120_20 01F5  
                                  i1l2320 02A6                                    u112_20 0168  
                                  i1l2240 0157                                    i1l2232 0138  
                                  i1l2224 010A                                    i1l2216 00F6  
                                  i1l2208 00BA                                    u104_20 00B8  
                                  u120_21 01F4                                    u112_21 0167  
                                  u104_21 00B7                                    _ODCONA 1F3A  
                                  i1l2066 07F0                                    i1l2058 07DE  
                                  i1l2402 03EE                                    i1l2330 02E2  
                                  i1l2322 02AC                                    i1l2314 028B  
                                  i1l2306 026C                                    i1l2250 018F  
                                  i1l2242 015B                                    i1l2226 0118  
                                  i1l2218 0108                                    i1l2170 0D60  
                                  _ODCONC 1F50                                    i1l2164 0D1A  
                                  i1l2412 0404                                    i1l2420 0412  
                                  i1l2332 02E4                                    i1l2324 02BA  
                                  i1l2316 02A1                                    i1l2308 027A  
                                  i1l2260 01A2                                    i1l2228 011C  
                                  i1l2244 0169                                    i1l2180 0D69  
                                  i1l2172 0D61                                    u120_25 01F1  
                                  u112_25 0164                                    i1l2166 0D21  
                                  i1l2430 044E                                    i1l2414 040D  
                                  i1l2406 03F3                                    i1l2350 0317  
                                  i1l2342 0304                                    i1l2326 02CC  
                                  i1l2422 0426                                    i1l2270 01C1  
                                  i1l2262 01B0                                    i1l2246 016F  
                                  i1l2238 013B                                    i1l2190 0071  
                                  i1l2174 0D63                                    i1l2440 046D  
                                  i1l2432 0454                                    i1l2424 042C  
                                  i1l2408 03F6                                    i1l2360 033E  
                                  i1l2352 0324                                    i1l2336 02F2  
                                  i1l2344 0307                                    i1l2328 02DC  
                                  i1l2280 01F5                                    i1l2272 01C7  
                                  i1l2264 01BE                                    i1l2256 0191  
                                  i1l2248 017D                                    u113_20 016F  
                                  i1l2192 0076                                    i1l2176 0D65  
                                  i1l2168 0D5B                                    u113_21 016E  
                                  i1l2442 047A                                    i1l2434 0459  
                                  i1l2426 0433                                    i1l2370 035A  
                                  i1l2346 0309                                    i1l2338 02FF  
                                  i1l2290 021F                                    i1l2274 01CB  
                                  i1l2258 019E                                    i1l2194 007C  
                                  i1l2178 0D67                                    i1l2530 000B  
                                  i1l2188 0CDE                                    i1l2436 0466  
                                  i1l2428 0439                                    i1l2380 0398  
                                  i1l2372 036C                                    i1l2364 034C  
                                  i1l2356 032D                                    i1l2292 022D  
                                  i1l2276 01D9                                    i1l2196 008A  
                                  i1l2540 0027                                    i1l2532 000F  
                                  u121_25 0200                                    u105_25 00C2  
                                  i1l2470 0D73                                    i1l2390 03D3  
                                  i1l2382 03B6                                    i1l2374 037E  
                                  i1l2366 0355                                    i1l2358 033B  
                                  i1l2294 023B                                    i1l2286 01F8  
                                  i1l2278 01E7                                    i1l2198 0098  
                                  i1l2542 002B                                    i1l2534 0017  
                                  i1l2472 0D7A                                    i1l2464 0D6C  
                                  i1l2384 03B8                                    i1l2376 0382  
                                  u130_20 02BA                                    i1l2296 0249  
                                  i1l2288 021B                                    u114_20 017D  
                                  u106_20 00E7                                    i1l2480 0D97  
                                  i1l2536 001B                                    i1l2528 0006  
                                  u130_21 02B9                                    u114_21 017C  
                                  u106_21 00E6                                    i1l2474 0CE8  
                                  i1l2466 0D6E                                    i1l2394 03D8  
                                  i1l2378 0392                                    i1l2482 0D9F  
                                  i1l2538 0023                                    i1l2476 0CEA  
                                  i1l2468 0D71                                    i1l2396 03DA  
                                  i1l2388 03C6                                    i1l2484 0DA6  
                                  u130_25 02B6                                    u122_25 020B  
                                  u114_25 0179                                    u106_25 00E3  
                                  i1l2478 0D95                                    u131_20 02CC  
                                  u123_20 022C                                    u115_20 018F  
                                  u107_20 00F6                                    u131_21 02CB  
                                  u123_21 022B                                    u115_21 018E  
                                  u107_21 00F5                                    u123_25 0228  
                                  u107_25 00F2                                    u140_20 0392  
                                  u132_20 02DC                                    u124_20 023B  
                                  u116_20 01AF                                    u108_20 0108  
                                  u140_21 0391                                    u132_21 02DB  
                                  u124_21 023A                                    u116_21 01AE  
                                  u108_21 0107                                    u124_25 0237  
                                  u116_25 01AB                                    u141_20 03C5  
                                  u133_20 02E2                                    u125_20 0249  
                                  u117_20 01BE                                    u109_20 0129  
                                  u141_21 03C4                                    u133_21 02E1  
                                  u125_21 0248                                    u117_21 01BD  
                                  u109_21 0128                                    u141_25 03C1  
                                  u125_25 0245                                    u117_25 01BA  
                                  u109_25 0125                                    u150_20 047A  
                                  u142_20 03E7                                    u134_20 02F1  
                                  u118_20 01D8                                    u150_21 0479  
                                  u142_21 03E6                                    u134_21 02F0  
                                  u118_21 01D7                                    u150_25 0476  
                                  u142_25 03E3                                    u134_25 02ED  
                                  u126_25 0254                                    u118_25 01D4  
                                  u151_20 0480                                    u143_20 0403  
                                  u135_20 0316                                    u127_20 0279  
                                  u119_20 01E7                                    u151_21 047F  
                                  u143_21 0402                                    u135_21 0315  
                                  u127_21 0278                                    u119_21 01E6  
                                  u143_25 03FF                                    u135_25 0312  
                                  u127_25 0275                                    u119_25 01E3  
                                  u152_20 0D7A                                    u144_20 042C  
                                  u136_20 033B                                    u128_20 028A  
                                  u160_20 000B                                    u152_21 0D79  
                                  u144_21 042B                                    u136_21 033A  
                                  u128_21 0289                                    u160_21 000A  
                                  _INLVLA 1F3C                                    _INLVLC 1F52  
                                  u136_25 0337                                    u128_25 0286  
                                  u145_20 0439                                    u137_20 034B  
                                  u129_20 02AC                                    u153_20 0DA6  
                                  u161_20 000F                                    u145_21 0438  
                                  u137_21 034A                                    u129_21 02AB  
                                  u153_21 0DA5                                    u161_21 000E  
                                  u137_25 0347                                    u146_20 044E  
                                  u138_20 036C                                    u162_20 0017  
                                  u146_21 044D                                    u138_21 036B  
                                  u162_21 0016                                    u146_25 044A  
                                  u147_20 0454                                    u139_20 037E  
                                  u163_20 001B                                    u147_21 0453  
                                  u139_21 037D                                    u163_21 001A  
                                  u148_20 0466                                    u164_20 0023  
                                  u148_21 0465                                    u164_21 0022  
                                  u148_25 0462                                    u149_20 046C  
                                  u165_20 0027                                    u149_21 046B  
                                  u165_21 0026                                    u166_20 002B  
                                  u166_21 002A                                    _INTPPS 1E90  
                                  _OSCFRQ 0893                                    _WDTCON 080C  
              __size_of_SPI1_ExchangeByte 000D      __end_of_TMR1_DefaultInterruptHandler 0003  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0002  
                       __end_of_TMR0_ISR_ 0CE2                         __end_of_TMR1_ISR_ 0482  
                            ?_TMR0_Reload 0070                          ?_TMR0_Initialize 0070  
                           ?_INT_CallBack 0070                          __end_of_playNote 07BA  
                            __pdataBIGRAM 2193                              __pdataCOMMON 0079  
                         ?_WDT_Initialize 0070          __size_of_INT_SetInterruptHandler 0006  
TMR1_SetInterruptHandler@InterruptHandler 0072  TMR0_SetInterruptHandler@InterruptHandler 0072  
 INT_SetInterruptHandler@InterruptHandler 0072                   __end_of_TMR1_WriteTimer 0D6C  
                        ?_TMR1_Initialize 0070                          ?_PWM3_Initialize 0070  
                       _SYSTEM_Initialize 07BA                   __end_of__initialization 006D  
                      ?_SYSTEM_Initialize 0070                             _last_prescale 0058  
                    _silent_night_playing 005C                            __pcstackCOMMON 0070  
                            __pidataBANK0 0D4E                              __pidataBANK1 071B  
                     ??_SYSTEM_Initialize 0074                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                       ??_SPI1_Initialize 0072                          ?_TMR2_Initialize 0070  
                          ??_INT_CallBack 0071                     SPI1_ExchangeByte@data 0072  
                       shiftBytes@lowSide 0073                        _spi1_configuration 1000  
             __size_of_EXT_INT_Initialize 000D                 __end_of_SYSTEM_Initialize 07D6  
                              __pbssBANK0 0056                                __pbssBANK1 00EB  
                              __pnvCOMMON 0077                            TMR1_ISR_@light 0023  
                              __pmaintext 0DC5          __end_of_TMR0_SetInterruptHandler 0D00  
                              ??_TMR0_ISR 0070                                ??_TMR1_ISR 0072  
                              __pintentry 0004                      displayMatrix@lowSide 00DB  
                                 _INT_ISR 0CE8                                   _EXT_ISR 07D6  
                                 _OSCTUNE 0892                                   _PWM3DCH 0315  
                                 _PWM3DCL 0314                                   _PWM3CON 0316  
                                 _SSP1ADD 018D                                   _SLRCONA 1F3B  
                                 _SLRCONC 1F51                                   _SSP1BUF 018C  
                        ?_TMR1_WriteTimer 0070                                 ?_playNote 0072  
                    __size_of_TMR0_Reload 0006                                   __ptext1 079B  
                                 __ptext2 06DF                                   __ptext3 0D41  
                                 __ptext4 0D34                                   __ptext5 07BA  
                                 __ptext6 0CDB                                   __ptext7 07F2  
                                 __ptext8 077B                                   __ptext9 0D00  
          ??_TMR1_DefaultInterruptHandler 0070                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0CF4                                 _T2CONbits 028E  
                          displayMatrix@i 00D9         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0072                 ?_TMR1_SetInterruptHandler 0072  
                               _T2HLTbits 028F                   _INT_SetInterruptHandler 0CEE  
                                 _song2_2 00A0                                   _presses 00ED  
              __size_of_SYSTEM_Initialize 001C                                   main@pre 00E2  
                    end_of_initialization 006D                                 _T2RSTbits 0291  
                                 init_ram 0D0E                                   initloop 0D0F  
                    __end_of_INT_CallBack 0D27                              _dream_lights 0041  
                              _shiftBytes 0D41                                ??_playNote 0073  
                               _TMR0_ISR_ 0CDE                                 _TMR1_ISR_ 0071  
                        ??_WDT_Initialize 0072                  _TMR0_SetInterruptHandler 0CFA  
                               _TRISAbits 0012                                 _TRISCbits 0014  
                   __end_of_displayMatrix 071B                                main@j_1175 00E7  
                              main@j_1177 00E9                          _silent_night_pre 221E  
                         _SPI1_Initialize 0D80                             _change_lights 0057  
                    _timer0ReloadVal16bit 0077                             __pidataBIGRAM 0482  
                              ?_TMR0_ISR_ 0070                                ?_TMR1_ISR_ 0070  
                           __pidataCOMMON 0003                         __size_of_TMR0_ISR 0014  
                       __size_of_TMR1_ISR 0017                    ?_OSCILLATOR_Initialize 0070  
               ??_INT_SetInterruptHandler 0074                        shiftBytes@highSide 0074  
                     start_initialization 0033                       TMR1_ISR_@light_1196 0020  
                __size_of_TMR0_Initialize 0019           __size_of_PIN_MANAGER_Initialize 0028  
            ?_INT_DefaultInterruptHandler 0070                               ?_shiftBytes 0073  
                __size_of_PWM3_Initialize 0008                  __size_of_TMR1_Initialize 0020  
                             __pdataBANK0 0041                               __pdataBANK1 00A0  
              __end_of_EXT_INT_Initialize 0D34                               __pbssCOMMON 0000  
                               ___latbits 0002                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0020                             __pcstackBANK1 00D8  
                                ?_EXT_ISR 0070                  __size_of_TMR2_Initialize 000E  
                 __end_of_SPI1_Initialize 0D95                     __size_of_INT_CallBack 000D  
                               __end_of_a 1005                                 __end_of_b 100B  
                               __end_of_c 100A                                 __end_of_d 1009  
                               __end_of_e 1008                                 __end_of_f 1007  
                               __end_of_g 1006                           TMR1_ISR_@i_1200 0035  
                         TMR1_ISR_@i_1201 0029                           TMR1_ISR_@i_1202 002B  
                         TMR1_ISR_@i_1190 0025                           TMR1_ISR_@i_1193 003D  
                         TMR1_ISR_@i_1186 002D                           TMR1_ISR_@i_1187 0039  
                         TMR1_ISR_@i_1197 0031                           TMR1_ISR_@i_1189 002F  
                         TMR1_ISR_@i_1198 0033                           TMR1_ISR_@i_1199 0027  
                         TMR1_ISR_@j_1195 003F                     _TMR0_InterruptHandler 0052  
                               __pnvBANK0 004E                           TMR1_ISR_@lights 0021  
                  _PIN_MANAGER_Initialize 0753             ??_INT_DefaultInterruptHandler 0070  
                       __size_of_playNote 001F          __end_of_TMR1_SetInterruptHandler 0D06  
                             ??_TMR0_ISR_ 0070                               ??_TMR1_ISR_ 0070  
            ??_INTERRUPT_InterruptManager 0072                       displayMatrix@states 00D8  
                            _INT_CallBack 0D1A                              playNote@note 0074  
                     __size_of_shiftBytes 000D                                 _last_note 0059  
                              TMR1_ISR_@i 0037                                TMR1_ISR_@j 003B  
                                _T2CLKCON 0290                         ??_TMR0_Initialize 0074  
                                _LATCbits 001A                                  _PIE0bits 0716  
                                _PIE1bits 0717                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 002D                ??_TMR0_SetInterruptHandler 0074  
                                _PIR0bits 070C                                  _PIR1bits 070D  
                           ??_TMR0_Reload 0070                                 _song2_pre 0000  
                               _song3_pre 22A8                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0D6C  
                                _TMR1_ISR 0D95                                 _num_songs 0079  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 0074  
                       ??_PWM3_Initialize 0072                                 main@light 00E1  
    __size_of_INT_DefaultInterruptHandler 0001                          __size_of_INT_ISR 0006  
                        __size_of_EXT_ISR 001C                          ?_SPI1_Initialize 0070  
                       ??_TMR2_Initialize 0072                             _song2_playing 005A  
                           _song3_playing 005B                             _TMR0_complete 00EE  
                 ??_OSCILLATOR_Initialize 0072                               _light_array 00D1  
                _TMR1_SetInterruptHandler 0D00                       __end_of_TMR0_Reload 0CE8  
                   _TMR1_InterruptHandler 004E                                _T0CON0bits 059E  
                                __ptext10 0DAC                                  __ptext11 0CFA  
                                __ptext20 0D5B                                  __ptext12 0D80  
                                __ptext21 0002                                  __ptext13 0D06  
                              _T1GCONbits 020F                                  __ptext30 0CE2  
                                __ptext22 0071                                  __ptext14 0753  
                                __ptext23 0D6C                                  __ptext15 0CF4  
                                __ptext24 0CDA                                  __ptext16 0D27  
                                __ptext25 0CDE                                  __ptext17 0CEE  
                                __ptext26 0CE8                                  __ptext27 0D1A  
                                __ptext19 0D95                                  __ptext28 07D6  
                                __ptext29 0CD9                              _SSP1CON1bits 0190  
                                _dream_sw 0056                             __size_of_main 023B  
    __end_of_TMR0_DefaultInterruptHandler 0CDB     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0CDA                              ??_shiftBytes 0074  
                                _playNote 079B                    __size_of_displayMatrix 003C  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0031  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0072  
                            _song2_length 004B                              _song3_length 0048  
                              _INTCONbits 000B                      _INT_InterruptHandler 0054  
                      __end_of_shiftBytes 0D4E                              _silent_night 2193  
                      _EXT_INT_Initialize 0D27                   __size_of_WDT_Initialize 0003  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                     ?_EXT_INT_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                             _TMR0_Reload 0CE2                              _timer_high_2 004D  
                            _timer_high_3 004A                  ?_INT_SetInterruptHandler 0072  
                           __pstringtext1 1000                             __pstringtext2 1004  
                           __pstringtext3 1005                             __pstringtext4 1006  
                           __pstringtext5 1007                             __pstringtext6 1008  
                           __pstringtext7 1009                             __pstringtext8 100A  
                    ??_EXT_INT_Initialize 0074                                _SSP1DATPPS 1EC6  
                              _SSP1CLKPPS 1EC5                           _TMR0_Initialize 0DAC  
                             _timer_low_2 004C                               _timer_low_3 0049  
                           _displayMatrix 06DF            __end_of_PIN_MANAGER_Initialize 077B  
                         _TMR1_Initialize 077B                           _PWM3_Initialize 0D06  
              __end_of_spi1_configuration 1004  
