

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Dec 13 10:52:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15225
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	dataBIGRAM,global,delta=1
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    55                           	dabs	1,0x620,48
    56                           	dabs	1,0x5A0,80
    57                           	dabs	1,0x566,10
    58                           	dabs	1,0x520,70
    59                           	dabs	1,0x4AC,68
    60                           	dabs	1,0x22DC,0,_silent_night_pre
    61                           	dabs	1,0x2366,0,_silent_night
    62                           	dabs	1,0x7E,2
    63  0000                     
    64                           ; Version 2.35
    65                           ; Generated 13/04/2021 GMT
    66                           ; 
    67                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F15225 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000E                     	;# 
   113  0012                     	;# 
   114  0014                     	;# 
   115  0018                     	;# 
   116  001A                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011B                     	;# 
   130  011C                     	;# 
   131  011D                     	;# 
   132  011E                     	;# 
   133  011F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018E                     	;# 
   137  018F                     	;# 
   138  0190                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  020C                     	;# 
   142  020D                     	;# 
   143  020E                     	;# 
   144  020E                     	;# 
   145  020F                     	;# 
   146  020F                     	;# 
   147  0210                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0211                     	;# 
   151  028C                     	;# 
   152  028C                     	;# 
   153  028D                     	;# 
   154  028D                     	;# 
   155  028E                     	;# 
   156  028F                     	;# 
   157  0290                     	;# 
   158  0291                     	;# 
   159  030C                     	;# 
   160  030C                     	;# 
   161  030D                     	;# 
   162  030E                     	;# 
   163  030F                     	;# 
   164  0310                     	;# 
   165  0310                     	;# 
   166  0311                     	;# 
   167  0312                     	;# 
   168  0313                     	;# 
   169  0314                     	;# 
   170  0314                     	;# 
   171  0315                     	;# 
   172  0316                     	;# 
   173  0318                     	;# 
   174  0318                     	;# 
   175  0319                     	;# 
   176  031A                     	;# 
   177  059C                     	;# 
   178  059C                     	;# 
   179  059D                     	;# 
   180  059D                     	;# 
   181  059E                     	;# 
   182  059F                     	;# 
   183  070C                     	;# 
   184  070D                     	;# 
   185  070E                     	;# 
   186  0716                     	;# 
   187  0717                     	;# 
   188  0718                     	;# 
   189  080C                     	;# 
   190  0811                     	;# 
   191  0813                     	;# 
   192  0814                     	;# 
   193  081A                     	;# 
   194  081A                     	;# 
   195  081B                     	;# 
   196  081C                     	;# 
   197  081C                     	;# 
   198  081D                     	;# 
   199  081E                     	;# 
   200  081F                     	;# 
   201  088E                     	;# 
   202  0890                     	;# 
   203  0891                     	;# 
   204  0892                     	;# 
   205  0893                     	;# 
   206  090C                     	;# 
   207  1E8F                     	;# 
   208  1E90                     	;# 
   209  1E91                     	;# 
   210  1E92                     	;# 
   211  1E93                     	;# 
   212  1E9C                     	;# 
   213  1EA1                     	;# 
   214  1EA2                     	;# 
   215  1EC3                     	;# 
   216  1EC5                     	;# 
   217  1EC6                     	;# 
   218  1EC7                     	;# 
   219  1ECB                     	;# 
   220  1ECB                     	;# 
   221  1ECB                     	;# 
   222  1ECC                     	;# 
   223  1ECC                     	;# 
   224  1ECC                     	;# 
   225  1F10                     	;# 
   226  1F11                     	;# 
   227  1F12                     	;# 
   228  1F14                     	;# 
   229  1F15                     	;# 
   230  1F20                     	;# 
   231  1F21                     	;# 
   232  1F22                     	;# 
   233  1F23                     	;# 
   234  1F24                     	;# 
   235  1F25                     	;# 
   236  1F38                     	;# 
   237  1F39                     	;# 
   238  1F3A                     	;# 
   239  1F3B                     	;# 
   240  1F3C                     	;# 
   241  1F3D                     	;# 
   242  1F3E                     	;# 
   243  1F3F                     	;# 
   244  1F4E                     	;# 
   245  1F4F                     	;# 
   246  1F50                     	;# 
   247  1F51                     	;# 
   248  1F52                     	;# 
   249  1F53                     	;# 
   250  1F54                     	;# 
   251  1F55                     	;# 
   252  1FE4                     	;# 
   253  1FE5                     	;# 
   254  1FE6                     	;# 
   255  1FE7                     	;# 
   256  1FE8                     	;# 
   257  1FE8                     	;# 
   258  1FE9                     	;# 
   259  1FEA                     	;# 
   260  1FEB                     	;# 
   261  1FED                     	;# 
   262  1FEE                     	;# 
   263  1FEF                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000E                     	;# 
   278  0012                     	;# 
   279  0014                     	;# 
   280  0018                     	;# 
   281  001A                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0119                     	;# 
   292  011A                     	;# 
   293  011B                     	;# 
   294  011B                     	;# 
   295  011C                     	;# 
   296  011D                     	;# 
   297  011E                     	;# 
   298  011F                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  018E                     	;# 
   302  018F                     	;# 
   303  0190                     	;# 
   304  0191                     	;# 
   305  0192                     	;# 
   306  020C                     	;# 
   307  020D                     	;# 
   308  020E                     	;# 
   309  020E                     	;# 
   310  020F                     	;# 
   311  020F                     	;# 
   312  0210                     	;# 
   313  0210                     	;# 
   314  0211                     	;# 
   315  0211                     	;# 
   316  028C                     	;# 
   317  028C                     	;# 
   318  028D                     	;# 
   319  028D                     	;# 
   320  028E                     	;# 
   321  028F                     	;# 
   322  0290                     	;# 
   323  0291                     	;# 
   324  030C                     	;# 
   325  030C                     	;# 
   326  030D                     	;# 
   327  030E                     	;# 
   328  030F                     	;# 
   329  0310                     	;# 
   330  0310                     	;# 
   331  0311                     	;# 
   332  0312                     	;# 
   333  0313                     	;# 
   334  0314                     	;# 
   335  0314                     	;# 
   336  0315                     	;# 
   337  0316                     	;# 
   338  0318                     	;# 
   339  0318                     	;# 
   340  0319                     	;# 
   341  031A                     	;# 
   342  059C                     	;# 
   343  059C                     	;# 
   344  059D                     	;# 
   345  059D                     	;# 
   346  059E                     	;# 
   347  059F                     	;# 
   348  070C                     	;# 
   349  070D                     	;# 
   350  070E                     	;# 
   351  0716                     	;# 
   352  0717                     	;# 
   353  0718                     	;# 
   354  080C                     	;# 
   355  0811                     	;# 
   356  0813                     	;# 
   357  0814                     	;# 
   358  081A                     	;# 
   359  081A                     	;# 
   360  081B                     	;# 
   361  081C                     	;# 
   362  081C                     	;# 
   363  081D                     	;# 
   364  081E                     	;# 
   365  081F                     	;# 
   366  088E                     	;# 
   367  0890                     	;# 
   368  0891                     	;# 
   369  0892                     	;# 
   370  0893                     	;# 
   371  090C                     	;# 
   372  1E8F                     	;# 
   373  1E90                     	;# 
   374  1E91                     	;# 
   375  1E92                     	;# 
   376  1E93                     	;# 
   377  1E9C                     	;# 
   378  1EA1                     	;# 
   379  1EA2                     	;# 
   380  1EC3                     	;# 
   381  1EC5                     	;# 
   382  1EC6                     	;# 
   383  1EC7                     	;# 
   384  1ECB                     	;# 
   385  1ECB                     	;# 
   386  1ECB                     	;# 
   387  1ECC                     	;# 
   388  1ECC                     	;# 
   389  1ECC                     	;# 
   390  1F10                     	;# 
   391  1F11                     	;# 
   392  1F12                     	;# 
   393  1F14                     	;# 
   394  1F15                     	;# 
   395  1F20                     	;# 
   396  1F21                     	;# 
   397  1F22                     	;# 
   398  1F23                     	;# 
   399  1F24                     	;# 
   400  1F25                     	;# 
   401  1F38                     	;# 
   402  1F39                     	;# 
   403  1F3A                     	;# 
   404  1F3B                     	;# 
   405  1F3C                     	;# 
   406  1F3D                     	;# 
   407  1F3E                     	;# 
   408  1F3F                     	;# 
   409  1F4E                     	;# 
   410  1F4F                     	;# 
   411  1F50                     	;# 
   412  1F51                     	;# 
   413  1F52                     	;# 
   414  1F53                     	;# 
   415  1F54                     	;# 
   416  1F55                     	;# 
   417  1FE4                     	;# 
   418  1FE5                     	;# 
   419  1FE6                     	;# 
   420  1FE7                     	;# 
   421  1FE8                     	;# 
   422  1FE8                     	;# 
   423  1FE9                     	;# 
   424  1FEA                     	;# 
   425  1FEB                     	;# 
   426  1FED                     	;# 
   427  1FEE                     	;# 
   428  1FEF                     	;# 
   429  0000                     	;# 
   430  0001                     	;# 
   431  0002                     	;# 
   432  0003                     	;# 
   433  0004                     	;# 
   434  0005                     	;# 
   435  0006                     	;# 
   436  0007                     	;# 
   437  0008                     	;# 
   438  0009                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000E                     	;# 
   443  0012                     	;# 
   444  0014                     	;# 
   445  0018                     	;# 
   446  001A                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0119                     	;# 
   457  011A                     	;# 
   458  011B                     	;# 
   459  011B                     	;# 
   460  011C                     	;# 
   461  011D                     	;# 
   462  011E                     	;# 
   463  011F                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466  018E                     	;# 
   467  018F                     	;# 
   468  0190                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  020C                     	;# 
   472  020D                     	;# 
   473  020E                     	;# 
   474  020E                     	;# 
   475  020F                     	;# 
   476  020F                     	;# 
   477  0210                     	;# 
   478  0210                     	;# 
   479  0211                     	;# 
   480  0211                     	;# 
   481  028C                     	;# 
   482  028C                     	;# 
   483  028D                     	;# 
   484  028D                     	;# 
   485  028E                     	;# 
   486  028F                     	;# 
   487  0290                     	;# 
   488  0291                     	;# 
   489  030C                     	;# 
   490  030C                     	;# 
   491  030D                     	;# 
   492  030E                     	;# 
   493  030F                     	;# 
   494  0310                     	;# 
   495  0310                     	;# 
   496  0311                     	;# 
   497  0312                     	;# 
   498  0313                     	;# 
   499  0314                     	;# 
   500  0314                     	;# 
   501  0315                     	;# 
   502  0316                     	;# 
   503  0318                     	;# 
   504  0318                     	;# 
   505  0319                     	;# 
   506  031A                     	;# 
   507  059C                     	;# 
   508  059C                     	;# 
   509  059D                     	;# 
   510  059D                     	;# 
   511  059E                     	;# 
   512  059F                     	;# 
   513  070C                     	;# 
   514  070D                     	;# 
   515  070E                     	;# 
   516  0716                     	;# 
   517  0717                     	;# 
   518  0718                     	;# 
   519  080C                     	;# 
   520  0811                     	;# 
   521  0813                     	;# 
   522  0814                     	;# 
   523  081A                     	;# 
   524  081A                     	;# 
   525  081B                     	;# 
   526  081C                     	;# 
   527  081C                     	;# 
   528  081D                     	;# 
   529  081E                     	;# 
   530  081F                     	;# 
   531  088E                     	;# 
   532  0890                     	;# 
   533  0891                     	;# 
   534  0892                     	;# 
   535  0893                     	;# 
   536  090C                     	;# 
   537  1E8F                     	;# 
   538  1E90                     	;# 
   539  1E91                     	;# 
   540  1E92                     	;# 
   541  1E93                     	;# 
   542  1E9C                     	;# 
   543  1EA1                     	;# 
   544  1EA2                     	;# 
   545  1EC3                     	;# 
   546  1EC5                     	;# 
   547  1EC6                     	;# 
   548  1EC7                     	;# 
   549  1ECB                     	;# 
   550  1ECB                     	;# 
   551  1ECB                     	;# 
   552  1ECC                     	;# 
   553  1ECC                     	;# 
   554  1ECC                     	;# 
   555  1F10                     	;# 
   556  1F11                     	;# 
   557  1F12                     	;# 
   558  1F14                     	;# 
   559  1F15                     	;# 
   560  1F20                     	;# 
   561  1F21                     	;# 
   562  1F22                     	;# 
   563  1F23                     	;# 
   564  1F24                     	;# 
   565  1F25                     	;# 
   566  1F38                     	;# 
   567  1F39                     	;# 
   568  1F3A                     	;# 
   569  1F3B                     	;# 
   570  1F3C                     	;# 
   571  1F3D                     	;# 
   572  1F3E                     	;# 
   573  1F3F                     	;# 
   574  1F4E                     	;# 
   575  1F4F                     	;# 
   576  1F50                     	;# 
   577  1F51                     	;# 
   578  1F52                     	;# 
   579  1F53                     	;# 
   580  1F54                     	;# 
   581  1F55                     	;# 
   582  1FE4                     	;# 
   583  1FE5                     	;# 
   584  1FE6                     	;# 
   585  1FE7                     	;# 
   586  1FE8                     	;# 
   587  1FE8                     	;# 
   588  1FE9                     	;# 
   589  1FEA                     	;# 
   590  1FEB                     	;# 
   591  1FED                     	;# 
   592  1FEE                     	;# 
   593  1FEF                     	;# 
   594  0000                     	;# 
   595  0001                     	;# 
   596  0002                     	;# 
   597  0003                     	;# 
   598  0004                     	;# 
   599  0005                     	;# 
   600  0006                     	;# 
   601  0007                     	;# 
   602  0008                     	;# 
   603  0009                     	;# 
   604  000A                     	;# 
   605  000B                     	;# 
   606  000C                     	;# 
   607  000E                     	;# 
   608  0012                     	;# 
   609  0014                     	;# 
   610  0018                     	;# 
   611  001A                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  009F                     	;# 
   619  010E                     	;# 
   620  010F                     	;# 
   621  0119                     	;# 
   622  011A                     	;# 
   623  011B                     	;# 
   624  011B                     	;# 
   625  011C                     	;# 
   626  011D                     	;# 
   627  011E                     	;# 
   628  011F                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  018E                     	;# 
   632  018F                     	;# 
   633  0190                     	;# 
   634  0191                     	;# 
   635  0192                     	;# 
   636  020C                     	;# 
   637  020D                     	;# 
   638  020E                     	;# 
   639  020E                     	;# 
   640  020F                     	;# 
   641  020F                     	;# 
   642  0210                     	;# 
   643  0210                     	;# 
   644  0211                     	;# 
   645  0211                     	;# 
   646  028C                     	;# 
   647  028C                     	;# 
   648  028D                     	;# 
   649  028D                     	;# 
   650  028E                     	;# 
   651  028F                     	;# 
   652  0290                     	;# 
   653  0291                     	;# 
   654  030C                     	;# 
   655  030C                     	;# 
   656  030D                     	;# 
   657  030E                     	;# 
   658  030F                     	;# 
   659  0310                     	;# 
   660  0310                     	;# 
   661  0311                     	;# 
   662  0312                     	;# 
   663  0313                     	;# 
   664  0314                     	;# 
   665  0314                     	;# 
   666  0315                     	;# 
   667  0316                     	;# 
   668  0318                     	;# 
   669  0318                     	;# 
   670  0319                     	;# 
   671  031A                     	;# 
   672  059C                     	;# 
   673  059C                     	;# 
   674  059D                     	;# 
   675  059D                     	;# 
   676  059E                     	;# 
   677  059F                     	;# 
   678  070C                     	;# 
   679  070D                     	;# 
   680  070E                     	;# 
   681  0716                     	;# 
   682  0717                     	;# 
   683  0718                     	;# 
   684  080C                     	;# 
   685  0811                     	;# 
   686  0813                     	;# 
   687  0814                     	;# 
   688  081A                     	;# 
   689  081A                     	;# 
   690  081B                     	;# 
   691  081C                     	;# 
   692  081C                     	;# 
   693  081D                     	;# 
   694  081E                     	;# 
   695  081F                     	;# 
   696  088E                     	;# 
   697  0890                     	;# 
   698  0891                     	;# 
   699  0892                     	;# 
   700  0893                     	;# 
   701  090C                     	;# 
   702  1E8F                     	;# 
   703  1E90                     	;# 
   704  1E91                     	;# 
   705  1E92                     	;# 
   706  1E93                     	;# 
   707  1E9C                     	;# 
   708  1EA1                     	;# 
   709  1EA2                     	;# 
   710  1EC3                     	;# 
   711  1EC5                     	;# 
   712  1EC6                     	;# 
   713  1EC7                     	;# 
   714  1ECB                     	;# 
   715  1ECB                     	;# 
   716  1ECB                     	;# 
   717  1ECC                     	;# 
   718  1ECC                     	;# 
   719  1ECC                     	;# 
   720  1F10                     	;# 
   721  1F11                     	;# 
   722  1F12                     	;# 
   723  1F14                     	;# 
   724  1F15                     	;# 
   725  1F20                     	;# 
   726  1F21                     	;# 
   727  1F22                     	;# 
   728  1F23                     	;# 
   729  1F24                     	;# 
   730  1F25                     	;# 
   731  1F38                     	;# 
   732  1F39                     	;# 
   733  1F3A                     	;# 
   734  1F3B                     	;# 
   735  1F3C                     	;# 
   736  1F3D                     	;# 
   737  1F3E                     	;# 
   738  1F3F                     	;# 
   739  1F4E                     	;# 
   740  1F4F                     	;# 
   741  1F50                     	;# 
   742  1F51                     	;# 
   743  1F52                     	;# 
   744  1F53                     	;# 
   745  1F54                     	;# 
   746  1F55                     	;# 
   747  1FE4                     	;# 
   748  1FE5                     	;# 
   749  1FE6                     	;# 
   750  1FE7                     	;# 
   751  1FE8                     	;# 
   752  1FE8                     	;# 
   753  1FE9                     	;# 
   754  1FEA                     	;# 
   755  1FEB                     	;# 
   756  1FED                     	;# 
   757  1FEE                     	;# 
   758  1FEF                     	;# 
   759  0000                     	;# 
   760  0001                     	;# 
   761  0002                     	;# 
   762  0003                     	;# 
   763  0004                     	;# 
   764  0005                     	;# 
   765  0006                     	;# 
   766  0007                     	;# 
   767  0008                     	;# 
   768  0009                     	;# 
   769  000A                     	;# 
   770  000B                     	;# 
   771  000C                     	;# 
   772  000E                     	;# 
   773  0012                     	;# 
   774  0014                     	;# 
   775  0018                     	;# 
   776  001A                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  010E                     	;# 
   785  010F                     	;# 
   786  0119                     	;# 
   787  011A                     	;# 
   788  011B                     	;# 
   789  011B                     	;# 
   790  011C                     	;# 
   791  011D                     	;# 
   792  011E                     	;# 
   793  011F                     	;# 
   794  018C                     	;# 
   795  018D                     	;# 
   796  018E                     	;# 
   797  018F                     	;# 
   798  0190                     	;# 
   799  0191                     	;# 
   800  0192                     	;# 
   801  020C                     	;# 
   802  020D                     	;# 
   803  020E                     	;# 
   804  020E                     	;# 
   805  020F                     	;# 
   806  020F                     	;# 
   807  0210                     	;# 
   808  0210                     	;# 
   809  0211                     	;# 
   810  0211                     	;# 
   811  028C                     	;# 
   812  028C                     	;# 
   813  028D                     	;# 
   814  028D                     	;# 
   815  028E                     	;# 
   816  028F                     	;# 
   817  0290                     	;# 
   818  0291                     	;# 
   819  030C                     	;# 
   820  030C                     	;# 
   821  030D                     	;# 
   822  030E                     	;# 
   823  030F                     	;# 
   824  0310                     	;# 
   825  0310                     	;# 
   826  0311                     	;# 
   827  0312                     	;# 
   828  0313                     	;# 
   829  0314                     	;# 
   830  0314                     	;# 
   831  0315                     	;# 
   832  0316                     	;# 
   833  0318                     	;# 
   834  0318                     	;# 
   835  0319                     	;# 
   836  031A                     	;# 
   837  059C                     	;# 
   838  059C                     	;# 
   839  059D                     	;# 
   840  059D                     	;# 
   841  059E                     	;# 
   842  059F                     	;# 
   843  070C                     	;# 
   844  070D                     	;# 
   845  070E                     	;# 
   846  0716                     	;# 
   847  0717                     	;# 
   848  0718                     	;# 
   849  080C                     	;# 
   850  0811                     	;# 
   851  0813                     	;# 
   852  0814                     	;# 
   853  081A                     	;# 
   854  081A                     	;# 
   855  081B                     	;# 
   856  081C                     	;# 
   857  081C                     	;# 
   858  081D                     	;# 
   859  081E                     	;# 
   860  081F                     	;# 
   861  088E                     	;# 
   862  0890                     	;# 
   863  0891                     	;# 
   864  0892                     	;# 
   865  0893                     	;# 
   866  090C                     	;# 
   867  1E8F                     	;# 
   868  1E90                     	;# 
   869  1E91                     	;# 
   870  1E92                     	;# 
   871  1E93                     	;# 
   872  1E9C                     	;# 
   873  1EA1                     	;# 
   874  1EA2                     	;# 
   875  1EC3                     	;# 
   876  1EC5                     	;# 
   877  1EC6                     	;# 
   878  1EC7                     	;# 
   879  1ECB                     	;# 
   880  1ECB                     	;# 
   881  1ECB                     	;# 
   882  1ECC                     	;# 
   883  1ECC                     	;# 
   884  1ECC                     	;# 
   885  1F10                     	;# 
   886  1F11                     	;# 
   887  1F12                     	;# 
   888  1F14                     	;# 
   889  1F15                     	;# 
   890  1F20                     	;# 
   891  1F21                     	;# 
   892  1F22                     	;# 
   893  1F23                     	;# 
   894  1F24                     	;# 
   895  1F25                     	;# 
   896  1F38                     	;# 
   897  1F39                     	;# 
   898  1F3A                     	;# 
   899  1F3B                     	;# 
   900  1F3C                     	;# 
   901  1F3D                     	;# 
   902  1F3E                     	;# 
   903  1F3F                     	;# 
   904  1F4E                     	;# 
   905  1F4F                     	;# 
   906  1F50                     	;# 
   907  1F51                     	;# 
   908  1F52                     	;# 
   909  1F53                     	;# 
   910  1F54                     	;# 
   911  1F55                     	;# 
   912  1FE4                     	;# 
   913  1FE5                     	;# 
   914  1FE6                     	;# 
   915  1FE7                     	;# 
   916  1FE8                     	;# 
   917  1FE8                     	;# 
   918  1FE9                     	;# 
   919  1FEA                     	;# 
   920  1FEB                     	;# 
   921  1FED                     	;# 
   922  1FEE                     	;# 
   923  1FEF                     	;# 
   924  0000                     	;# 
   925  0001                     	;# 
   926  0002                     	;# 
   927  0003                     	;# 
   928  0004                     	;# 
   929  0005                     	;# 
   930  0006                     	;# 
   931  0007                     	;# 
   932  0008                     	;# 
   933  0009                     	;# 
   934  000A                     	;# 
   935  000B                     	;# 
   936  000C                     	;# 
   937  000E                     	;# 
   938  0012                     	;# 
   939  0014                     	;# 
   940  0018                     	;# 
   941  001A                     	;# 
   942  009A                     	;# 
   943  009B                     	;# 
   944  009B                     	;# 
   945  009C                     	;# 
   946  009D                     	;# 
   947  009E                     	;# 
   948  009F                     	;# 
   949  010E                     	;# 
   950  010F                     	;# 
   951  0119                     	;# 
   952  011A                     	;# 
   953  011B                     	;# 
   954  011B                     	;# 
   955  011C                     	;# 
   956  011D                     	;# 
   957  011E                     	;# 
   958  011F                     	;# 
   959  018C                     	;# 
   960  018D                     	;# 
   961  018E                     	;# 
   962  018F                     	;# 
   963  0190                     	;# 
   964  0191                     	;# 
   965  0192                     	;# 
   966  020C                     	;# 
   967  020D                     	;# 
   968  020E                     	;# 
   969  020E                     	;# 
   970  020F                     	;# 
   971  020F                     	;# 
   972  0210                     	;# 
   973  0210                     	;# 
   974  0211                     	;# 
   975  0211                     	;# 
   976  028C                     	;# 
   977  028C                     	;# 
   978  028D                     	;# 
   979  028D                     	;# 
   980  028E                     	;# 
   981  028F                     	;# 
   982  0290                     	;# 
   983  0291                     	;# 
   984  030C                     	;# 
   985  030C                     	;# 
   986  030D                     	;# 
   987  030E                     	;# 
   988  030F                     	;# 
   989  0310                     	;# 
   990  0310                     	;# 
   991  0311                     	;# 
   992  0312                     	;# 
   993  0313                     	;# 
   994  0314                     	;# 
   995  0314                     	;# 
   996  0315                     	;# 
   997  0316                     	;# 
   998  0318                     	;# 
   999  0318                     	;# 
  1000  0319                     	;# 
  1001  031A                     	;# 
  1002  059C                     	;# 
  1003  059C                     	;# 
  1004  059D                     	;# 
  1005  059D                     	;# 
  1006  059E                     	;# 
  1007  059F                     	;# 
  1008  070C                     	;# 
  1009  070D                     	;# 
  1010  070E                     	;# 
  1011  0716                     	;# 
  1012  0717                     	;# 
  1013  0718                     	;# 
  1014  080C                     	;# 
  1015  0811                     	;# 
  1016  0813                     	;# 
  1017  0814                     	;# 
  1018  081A                     	;# 
  1019  081A                     	;# 
  1020  081B                     	;# 
  1021  081C                     	;# 
  1022  081C                     	;# 
  1023  081D                     	;# 
  1024  081E                     	;# 
  1025  081F                     	;# 
  1026  088E                     	;# 
  1027  0890                     	;# 
  1028  0891                     	;# 
  1029  0892                     	;# 
  1030  0893                     	;# 
  1031  090C                     	;# 
  1032  1E8F                     	;# 
  1033  1E90                     	;# 
  1034  1E91                     	;# 
  1035  1E92                     	;# 
  1036  1E93                     	;# 
  1037  1E9C                     	;# 
  1038  1EA1                     	;# 
  1039  1EA2                     	;# 
  1040  1EC3                     	;# 
  1041  1EC5                     	;# 
  1042  1EC6                     	;# 
  1043  1EC7                     	;# 
  1044  1ECB                     	;# 
  1045  1ECB                     	;# 
  1046  1ECB                     	;# 
  1047  1ECC                     	;# 
  1048  1ECC                     	;# 
  1049  1ECC                     	;# 
  1050  1F10                     	;# 
  1051  1F11                     	;# 
  1052  1F12                     	;# 
  1053  1F14                     	;# 
  1054  1F15                     	;# 
  1055  1F20                     	;# 
  1056  1F21                     	;# 
  1057  1F22                     	;# 
  1058  1F23                     	;# 
  1059  1F24                     	;# 
  1060  1F25                     	;# 
  1061  1F38                     	;# 
  1062  1F39                     	;# 
  1063  1F3A                     	;# 
  1064  1F3B                     	;# 
  1065  1F3C                     	;# 
  1066  1F3D                     	;# 
  1067  1F3E                     	;# 
  1068  1F3F                     	;# 
  1069  1F4E                     	;# 
  1070  1F4F                     	;# 
  1071  1F50                     	;# 
  1072  1F51                     	;# 
  1073  1F52                     	;# 
  1074  1F53                     	;# 
  1075  1F54                     	;# 
  1076  1F55                     	;# 
  1077  1FE4                     	;# 
  1078  1FE5                     	;# 
  1079  1FE6                     	;# 
  1080  1FE7                     	;# 
  1081  1FE8                     	;# 
  1082  1FE8                     	;# 
  1083  1FE9                     	;# 
  1084  1FEA                     	;# 
  1085  1FEB                     	;# 
  1086  1FED                     	;# 
  1087  1FEE                     	;# 
  1088  1FEF                     	;# 
  1089  0000                     	;# 
  1090  0001                     	;# 
  1091  0002                     	;# 
  1092  0003                     	;# 
  1093  0004                     	;# 
  1094  0005                     	;# 
  1095  0006                     	;# 
  1096  0007                     	;# 
  1097  0008                     	;# 
  1098  0009                     	;# 
  1099  000A                     	;# 
  1100  000B                     	;# 
  1101  000C                     	;# 
  1102  000E                     	;# 
  1103  0012                     	;# 
  1104  0014                     	;# 
  1105  0018                     	;# 
  1106  001A                     	;# 
  1107  009A                     	;# 
  1108  009B                     	;# 
  1109  009B                     	;# 
  1110  009C                     	;# 
  1111  009D                     	;# 
  1112  009E                     	;# 
  1113  009F                     	;# 
  1114  010E                     	;# 
  1115  010F                     	;# 
  1116  0119                     	;# 
  1117  011A                     	;# 
  1118  011B                     	;# 
  1119  011B                     	;# 
  1120  011C                     	;# 
  1121  011D                     	;# 
  1122  011E                     	;# 
  1123  011F                     	;# 
  1124  018C                     	;# 
  1125  018D                     	;# 
  1126  018E                     	;# 
  1127  018F                     	;# 
  1128  0190                     	;# 
  1129  0191                     	;# 
  1130  0192                     	;# 
  1131  020C                     	;# 
  1132  020D                     	;# 
  1133  020E                     	;# 
  1134  020E                     	;# 
  1135  020F                     	;# 
  1136  020F                     	;# 
  1137  0210                     	;# 
  1138  0210                     	;# 
  1139  0211                     	;# 
  1140  0211                     	;# 
  1141  028C                     	;# 
  1142  028C                     	;# 
  1143  028D                     	;# 
  1144  028D                     	;# 
  1145  028E                     	;# 
  1146  028F                     	;# 
  1147  0290                     	;# 
  1148  0291                     	;# 
  1149  030C                     	;# 
  1150  030C                     	;# 
  1151  030D                     	;# 
  1152  030E                     	;# 
  1153  030F                     	;# 
  1154  0310                     	;# 
  1155  0310                     	;# 
  1156  0311                     	;# 
  1157  0312                     	;# 
  1158  0313                     	;# 
  1159  0314                     	;# 
  1160  0314                     	;# 
  1161  0315                     	;# 
  1162  0316                     	;# 
  1163  0318                     	;# 
  1164  0318                     	;# 
  1165  0319                     	;# 
  1166  031A                     	;# 
  1167  059C                     	;# 
  1168  059C                     	;# 
  1169  059D                     	;# 
  1170  059D                     	;# 
  1171  059E                     	;# 
  1172  059F                     	;# 
  1173  070C                     	;# 
  1174  070D                     	;# 
  1175  070E                     	;# 
  1176  0716                     	;# 
  1177  0717                     	;# 
  1178  0718                     	;# 
  1179  080C                     	;# 
  1180  0811                     	;# 
  1181  0813                     	;# 
  1182  0814                     	;# 
  1183  081A                     	;# 
  1184  081A                     	;# 
  1185  081B                     	;# 
  1186  081C                     	;# 
  1187  081C                     	;# 
  1188  081D                     	;# 
  1189  081E                     	;# 
  1190  081F                     	;# 
  1191  088E                     	;# 
  1192  0890                     	;# 
  1193  0891                     	;# 
  1194  0892                     	;# 
  1195  0893                     	;# 
  1196  090C                     	;# 
  1197  1E8F                     	;# 
  1198  1E90                     	;# 
  1199  1E91                     	;# 
  1200  1E92                     	;# 
  1201  1E93                     	;# 
  1202  1E9C                     	;# 
  1203  1EA1                     	;# 
  1204  1EA2                     	;# 
  1205  1EC3                     	;# 
  1206  1EC5                     	;# 
  1207  1EC6                     	;# 
  1208  1EC7                     	;# 
  1209  1ECB                     	;# 
  1210  1ECB                     	;# 
  1211  1ECB                     	;# 
  1212  1ECC                     	;# 
  1213  1ECC                     	;# 
  1214  1ECC                     	;# 
  1215  1F10                     	;# 
  1216  1F11                     	;# 
  1217  1F12                     	;# 
  1218  1F14                     	;# 
  1219  1F15                     	;# 
  1220  1F20                     	;# 
  1221  1F21                     	;# 
  1222  1F22                     	;# 
  1223  1F23                     	;# 
  1224  1F24                     	;# 
  1225  1F25                     	;# 
  1226  1F38                     	;# 
  1227  1F39                     	;# 
  1228  1F3A                     	;# 
  1229  1F3B                     	;# 
  1230  1F3C                     	;# 
  1231  1F3D                     	;# 
  1232  1F3E                     	;# 
  1233  1F3F                     	;# 
  1234  1F4E                     	;# 
  1235  1F4F                     	;# 
  1236  1F50                     	;# 
  1237  1F51                     	;# 
  1238  1F52                     	;# 
  1239  1F53                     	;# 
  1240  1F54                     	;# 
  1241  1F55                     	;# 
  1242  1FE4                     	;# 
  1243  1FE5                     	;# 
  1244  1FE6                     	;# 
  1245  1FE7                     	;# 
  1246  1FE8                     	;# 
  1247  1FE8                     	;# 
  1248  1FE9                     	;# 
  1249  1FEA                     	;# 
  1250  1FEB                     	;# 
  1251  1FED                     	;# 
  1252  1FEE                     	;# 
  1253  1FEF                     	;# 
  1254  0000                     	;# 
  1255  0001                     	;# 
  1256  0002                     	;# 
  1257  0003                     	;# 
  1258  0004                     	;# 
  1259  0005                     	;# 
  1260  0006                     	;# 
  1261  0007                     	;# 
  1262  0008                     	;# 
  1263  0009                     	;# 
  1264  000A                     	;# 
  1265  000B                     	;# 
  1266  000C                     	;# 
  1267  000E                     	;# 
  1268  0012                     	;# 
  1269  0014                     	;# 
  1270  0018                     	;# 
  1271  001A                     	;# 
  1272  009A                     	;# 
  1273  009B                     	;# 
  1274  009B                     	;# 
  1275  009C                     	;# 
  1276  009D                     	;# 
  1277  009E                     	;# 
  1278  009F                     	;# 
  1279  010E                     	;# 
  1280  010F                     	;# 
  1281  0119                     	;# 
  1282  011A                     	;# 
  1283  011B                     	;# 
  1284  011B                     	;# 
  1285  011C                     	;# 
  1286  011D                     	;# 
  1287  011E                     	;# 
  1288  011F                     	;# 
  1289  018C                     	;# 
  1290  018D                     	;# 
  1291  018E                     	;# 
  1292  018F                     	;# 
  1293  0190                     	;# 
  1294  0191                     	;# 
  1295  0192                     	;# 
  1296  020C                     	;# 
  1297  020D                     	;# 
  1298  020E                     	;# 
  1299  020E                     	;# 
  1300  020F                     	;# 
  1301  020F                     	;# 
  1302  0210                     	;# 
  1303  0210                     	;# 
  1304  0211                     	;# 
  1305  0211                     	;# 
  1306  028C                     	;# 
  1307  028C                     	;# 
  1308  028D                     	;# 
  1309  028D                     	;# 
  1310  028E                     	;# 
  1311  028F                     	;# 
  1312  0290                     	;# 
  1313  0291                     	;# 
  1314  030C                     	;# 
  1315  030C                     	;# 
  1316  030D                     	;# 
  1317  030E                     	;# 
  1318  030F                     	;# 
  1319  0310                     	;# 
  1320  0310                     	;# 
  1321  0311                     	;# 
  1322  0312                     	;# 
  1323  0313                     	;# 
  1324  0314                     	;# 
  1325  0314                     	;# 
  1326  0315                     	;# 
  1327  0316                     	;# 
  1328  0318                     	;# 
  1329  0318                     	;# 
  1330  0319                     	;# 
  1331  031A                     	;# 
  1332  059C                     	;# 
  1333  059C                     	;# 
  1334  059D                     	;# 
  1335  059D                     	;# 
  1336  059E                     	;# 
  1337  059F                     	;# 
  1338  070C                     	;# 
  1339  070D                     	;# 
  1340  070E                     	;# 
  1341  0716                     	;# 
  1342  0717                     	;# 
  1343  0718                     	;# 
  1344  080C                     	;# 
  1345  0811                     	;# 
  1346  0813                     	;# 
  1347  0814                     	;# 
  1348  081A                     	;# 
  1349  081A                     	;# 
  1350  081B                     	;# 
  1351  081C                     	;# 
  1352  081C                     	;# 
  1353  081D                     	;# 
  1354  081E                     	;# 
  1355  081F                     	;# 
  1356  088E                     	;# 
  1357  0890                     	;# 
  1358  0891                     	;# 
  1359  0892                     	;# 
  1360  0893                     	;# 
  1361  090C                     	;# 
  1362  1E8F                     	;# 
  1363  1E90                     	;# 
  1364  1E91                     	;# 
  1365  1E92                     	;# 
  1366  1E93                     	;# 
  1367  1E9C                     	;# 
  1368  1EA1                     	;# 
  1369  1EA2                     	;# 
  1370  1EC3                     	;# 
  1371  1EC5                     	;# 
  1372  1EC6                     	;# 
  1373  1EC7                     	;# 
  1374  1ECB                     	;# 
  1375  1ECB                     	;# 
  1376  1ECB                     	;# 
  1377  1ECC                     	;# 
  1378  1ECC                     	;# 
  1379  1ECC                     	;# 
  1380  1F10                     	;# 
  1381  1F11                     	;# 
  1382  1F12                     	;# 
  1383  1F14                     	;# 
  1384  1F15                     	;# 
  1385  1F20                     	;# 
  1386  1F21                     	;# 
  1387  1F22                     	;# 
  1388  1F23                     	;# 
  1389  1F24                     	;# 
  1390  1F25                     	;# 
  1391  1F38                     	;# 
  1392  1F39                     	;# 
  1393  1F3A                     	;# 
  1394  1F3B                     	;# 
  1395  1F3C                     	;# 
  1396  1F3D                     	;# 
  1397  1F3E                     	;# 
  1398  1F3F                     	;# 
  1399  1F4E                     	;# 
  1400  1F4F                     	;# 
  1401  1F50                     	;# 
  1402  1F51                     	;# 
  1403  1F52                     	;# 
  1404  1F53                     	;# 
  1405  1F54                     	;# 
  1406  1F55                     	;# 
  1407  1FE4                     	;# 
  1408  1FE5                     	;# 
  1409  1FE6                     	;# 
  1410  1FE7                     	;# 
  1411  1FE8                     	;# 
  1412  1FE8                     	;# 
  1413  1FE9                     	;# 
  1414  1FEA                     	;# 
  1415  1FEB                     	;# 
  1416  1FED                     	;# 
  1417  1FEE                     	;# 
  1418  1FEF                     	;# 
  1419  0000                     	;# 
  1420  0001                     	;# 
  1421  0002                     	;# 
  1422  0003                     	;# 
  1423  0004                     	;# 
  1424  0005                     	;# 
  1425  0006                     	;# 
  1426  0007                     	;# 
  1427  0008                     	;# 
  1428  0009                     	;# 
  1429  000A                     	;# 
  1430  000B                     	;# 
  1431  000C                     	;# 
  1432  000E                     	;# 
  1433  0012                     	;# 
  1434  0014                     	;# 
  1435  0018                     	;# 
  1436  001A                     	;# 
  1437  009A                     	;# 
  1438  009B                     	;# 
  1439  009B                     	;# 
  1440  009C                     	;# 
  1441  009D                     	;# 
  1442  009E                     	;# 
  1443  009F                     	;# 
  1444  010E                     	;# 
  1445  010F                     	;# 
  1446  0119                     	;# 
  1447  011A                     	;# 
  1448  011B                     	;# 
  1449  011B                     	;# 
  1450  011C                     	;# 
  1451  011D                     	;# 
  1452  011E                     	;# 
  1453  011F                     	;# 
  1454  018C                     	;# 
  1455  018D                     	;# 
  1456  018E                     	;# 
  1457  018F                     	;# 
  1458  0190                     	;# 
  1459  0191                     	;# 
  1460  0192                     	;# 
  1461  020C                     	;# 
  1462  020D                     	;# 
  1463  020E                     	;# 
  1464  020E                     	;# 
  1465  020F                     	;# 
  1466  020F                     	;# 
  1467  0210                     	;# 
  1468  0210                     	;# 
  1469  0211                     	;# 
  1470  0211                     	;# 
  1471  028C                     	;# 
  1472  028C                     	;# 
  1473  028D                     	;# 
  1474  028D                     	;# 
  1475  028E                     	;# 
  1476  028F                     	;# 
  1477  0290                     	;# 
  1478  0291                     	;# 
  1479  030C                     	;# 
  1480  030C                     	;# 
  1481  030D                     	;# 
  1482  030E                     	;# 
  1483  030F                     	;# 
  1484  0310                     	;# 
  1485  0310                     	;# 
  1486  0311                     	;# 
  1487  0312                     	;# 
  1488  0313                     	;# 
  1489  0314                     	;# 
  1490  0314                     	;# 
  1491  0315                     	;# 
  1492  0316                     	;# 
  1493  0318                     	;# 
  1494  0318                     	;# 
  1495  0319                     	;# 
  1496  031A                     	;# 
  1497  059C                     	;# 
  1498  059C                     	;# 
  1499  059D                     	;# 
  1500  059D                     	;# 
  1501  059E                     	;# 
  1502  059F                     	;# 
  1503  070C                     	;# 
  1504  070D                     	;# 
  1505  070E                     	;# 
  1506  0716                     	;# 
  1507  0717                     	;# 
  1508  0718                     	;# 
  1509  080C                     	;# 
  1510  0811                     	;# 
  1511  0813                     	;# 
  1512  0814                     	;# 
  1513  081A                     	;# 
  1514  081A                     	;# 
  1515  081B                     	;# 
  1516  081C                     	;# 
  1517  081C                     	;# 
  1518  081D                     	;# 
  1519  081E                     	;# 
  1520  081F                     	;# 
  1521  088E                     	;# 
  1522  0890                     	;# 
  1523  0891                     	;# 
  1524  0892                     	;# 
  1525  0893                     	;# 
  1526  090C                     	;# 
  1527  1E8F                     	;# 
  1528  1E90                     	;# 
  1529  1E91                     	;# 
  1530  1E92                     	;# 
  1531  1E93                     	;# 
  1532  1E9C                     	;# 
  1533  1EA1                     	;# 
  1534  1EA2                     	;# 
  1535  1EC3                     	;# 
  1536  1EC5                     	;# 
  1537  1EC6                     	;# 
  1538  1EC7                     	;# 
  1539  1ECB                     	;# 
  1540  1ECB                     	;# 
  1541  1ECB                     	;# 
  1542  1ECC                     	;# 
  1543  1ECC                     	;# 
  1544  1ECC                     	;# 
  1545  1F10                     	;# 
  1546  1F11                     	;# 
  1547  1F12                     	;# 
  1548  1F14                     	;# 
  1549  1F15                     	;# 
  1550  1F20                     	;# 
  1551  1F21                     	;# 
  1552  1F22                     	;# 
  1553  1F23                     	;# 
  1554  1F24                     	;# 
  1555  1F25                     	;# 
  1556  1F38                     	;# 
  1557  1F39                     	;# 
  1558  1F3A                     	;# 
  1559  1F3B                     	;# 
  1560  1F3C                     	;# 
  1561  1F3D                     	;# 
  1562  1F3E                     	;# 
  1563  1F3F                     	;# 
  1564  1F4E                     	;# 
  1565  1F4F                     	;# 
  1566  1F50                     	;# 
  1567  1F51                     	;# 
  1568  1F52                     	;# 
  1569  1F53                     	;# 
  1570  1F54                     	;# 
  1571  1F55                     	;# 
  1572  1FE4                     	;# 
  1573  1FE5                     	;# 
  1574  1FE6                     	;# 
  1575  1FE7                     	;# 
  1576  1FE8                     	;# 
  1577  1FE8                     	;# 
  1578  1FE9                     	;# 
  1579  1FEA                     	;# 
  1580  1FEB                     	;# 
  1581  1FED                     	;# 
  1582  1FEE                     	;# 
  1583  1FEF                     	;# 
  1584  0000                     	;# 
  1585  0001                     	;# 
  1586  0002                     	;# 
  1587  0003                     	;# 
  1588  0004                     	;# 
  1589  0005                     	;# 
  1590  0006                     	;# 
  1591  0007                     	;# 
  1592  0008                     	;# 
  1593  0009                     	;# 
  1594  000A                     	;# 
  1595  000B                     	;# 
  1596  000C                     	;# 
  1597  000E                     	;# 
  1598  0012                     	;# 
  1599  0014                     	;# 
  1600  0018                     	;# 
  1601  001A                     	;# 
  1602  009A                     	;# 
  1603  009B                     	;# 
  1604  009B                     	;# 
  1605  009C                     	;# 
  1606  009D                     	;# 
  1607  009E                     	;# 
  1608  009F                     	;# 
  1609  010E                     	;# 
  1610  010F                     	;# 
  1611  0119                     	;# 
  1612  011A                     	;# 
  1613  011B                     	;# 
  1614  011B                     	;# 
  1615  011C                     	;# 
  1616  011D                     	;# 
  1617  011E                     	;# 
  1618  011F                     	;# 
  1619  018C                     	;# 
  1620  018D                     	;# 
  1621  018E                     	;# 
  1622  018F                     	;# 
  1623  0190                     	;# 
  1624  0191                     	;# 
  1625  0192                     	;# 
  1626  020C                     	;# 
  1627  020D                     	;# 
  1628  020E                     	;# 
  1629  020E                     	;# 
  1630  020F                     	;# 
  1631  020F                     	;# 
  1632  0210                     	;# 
  1633  0210                     	;# 
  1634  0211                     	;# 
  1635  0211                     	;# 
  1636  028C                     	;# 
  1637  028C                     	;# 
  1638  028D                     	;# 
  1639  028D                     	;# 
  1640  028E                     	;# 
  1641  028F                     	;# 
  1642  0290                     	;# 
  1643  0291                     	;# 
  1644  030C                     	;# 
  1645  030C                     	;# 
  1646  030D                     	;# 
  1647  030E                     	;# 
  1648  030F                     	;# 
  1649  0310                     	;# 
  1650  0310                     	;# 
  1651  0311                     	;# 
  1652  0312                     	;# 
  1653  0313                     	;# 
  1654  0314                     	;# 
  1655  0314                     	;# 
  1656  0315                     	;# 
  1657  0316                     	;# 
  1658  0318                     	;# 
  1659  0318                     	;# 
  1660  0319                     	;# 
  1661  031A                     	;# 
  1662  059C                     	;# 
  1663  059C                     	;# 
  1664  059D                     	;# 
  1665  059D                     	;# 
  1666  059E                     	;# 
  1667  059F                     	;# 
  1668  070C                     	;# 
  1669  070D                     	;# 
  1670  070E                     	;# 
  1671  0716                     	;# 
  1672  0717                     	;# 
  1673  0718                     	;# 
  1674  080C                     	;# 
  1675  0811                     	;# 
  1676  0813                     	;# 
  1677  0814                     	;# 
  1678  081A                     	;# 
  1679  081A                     	;# 
  1680  081B                     	;# 
  1681  081C                     	;# 
  1682  081C                     	;# 
  1683  081D                     	;# 
  1684  081E                     	;# 
  1685  081F                     	;# 
  1686  088E                     	;# 
  1687  0890                     	;# 
  1688  0891                     	;# 
  1689  0892                     	;# 
  1690  0893                     	;# 
  1691  090C                     	;# 
  1692  1E8F                     	;# 
  1693  1E90                     	;# 
  1694  1E91                     	;# 
  1695  1E92                     	;# 
  1696  1E93                     	;# 
  1697  1E9C                     	;# 
  1698  1EA1                     	;# 
  1699  1EA2                     	;# 
  1700  1EC3                     	;# 
  1701  1EC5                     	;# 
  1702  1EC6                     	;# 
  1703  1EC7                     	;# 
  1704  1ECB                     	;# 
  1705  1ECB                     	;# 
  1706  1ECB                     	;# 
  1707  1ECC                     	;# 
  1708  1ECC                     	;# 
  1709  1ECC                     	;# 
  1710  1F10                     	;# 
  1711  1F11                     	;# 
  1712  1F12                     	;# 
  1713  1F14                     	;# 
  1714  1F15                     	;# 
  1715  1F20                     	;# 
  1716  1F21                     	;# 
  1717  1F22                     	;# 
  1718  1F23                     	;# 
  1719  1F24                     	;# 
  1720  1F25                     	;# 
  1721  1F38                     	;# 
  1722  1F39                     	;# 
  1723  1F3A                     	;# 
  1724  1F3B                     	;# 
  1725  1F3C                     	;# 
  1726  1F3D                     	;# 
  1727  1F3E                     	;# 
  1728  1F3F                     	;# 
  1729  1F4E                     	;# 
  1730  1F4F                     	;# 
  1731  1F50                     	;# 
  1732  1F51                     	;# 
  1733  1F52                     	;# 
  1734  1F53                     	;# 
  1735  1F54                     	;# 
  1736  1F55                     	;# 
  1737  1FE4                     	;# 
  1738  1FE5                     	;# 
  1739  1FE6                     	;# 
  1740  1FE7                     	;# 
  1741  1FE8                     	;# 
  1742  1FE8                     	;# 
  1743  1FE9                     	;# 
  1744  1FEA                     	;# 
  1745  1FEB                     	;# 
  1746  1FED                     	;# 
  1747  1FEE                     	;# 
  1748  1FEF                     	;_silent_night_pre
  1749                           
  1750                           	psect	idataBIGRAM
  1751  0568                     __pidataBIGRAM:
  1752                           
  1753                           ;initializer for _silent_night_pre
  1754  0568  34D0               	retlw	208
  1755  0569  34D0               	retlw	208
  1756  056A  34D0               	retlw	208
  1757  056B  34D0               	retlw	208
  1758  056C  34D0               	retlw	208
  1759  056D  34D0               	retlw	208
  1760  056E  34D0               	retlw	208
  1761  056F  34D0               	retlw	208
  1762  0570  34D0               	retlw	208
  1763  0571  34D0               	retlw	208
  1764  0572  34D0               	retlw	208
  1765  0573  34D0               	retlw	208
  1766  0574  34D0               	retlw	208
  1767  0575  34D0               	retlw	208
  1768  0576  34D0               	retlw	208
  1769  0577  34D0               	retlw	208
  1770  0578  34D0               	retlw	208
  1771  0579  34D0               	retlw	208
  1772  057A  34D0               	retlw	208
  1773  057B  34D0               	retlw	208
  1774  057C  34D0               	retlw	208
  1775  057D  34D0               	retlw	208
  1776  057E  34D0               	retlw	208
  1777  057F  34D0               	retlw	208
  1778  0580  34C0               	retlw	192
  1779  0581  34C0               	retlw	192
  1780  0582  34C0               	retlw	192
  1781  0583  34C0               	retlw	192
  1782  0584  34C0               	retlw	192
  1783  0585  34C0               	retlw	192
  1784  0586  34C0               	retlw	192
  1785  0587  34C0               	retlw	192
  1786  0588  34C0               	retlw	192
  1787  0589  34C0               	retlw	192
  1788  058A  34C0               	retlw	192
  1789  058B  34C0               	retlw	192
  1790  058C  34C0               	retlw	192
  1791  058D  34C0               	retlw	192
  1792  058E  34C0               	retlw	192
  1793  058F  34C0               	retlw	192
  1794  0590  34C0               	retlw	192
  1795  0591  34C0               	retlw	192
  1796  0592  34D0               	retlw	208
  1797  0593  34D0               	retlw	208
  1798  0594  34D0               	retlw	208
  1799  0595  34D0               	retlw	208
  1800  0596  34D0               	retlw	208
  1801  0597  34D0               	retlw	208
  1802  0598  34D0               	retlw	208
  1803  0599  34D0               	retlw	208
  1804  059A  34D0               	retlw	208
  1805  059B  34D0               	retlw	208
  1806  059C  34D0               	retlw	208
  1807  059D  34D0               	retlw	208
  1808  059E  34C0               	retlw	192
  1809  059F  34C0               	retlw	192
  1810  05A0  34C0               	retlw	192
  1811  05A1  34C0               	retlw	192
  1812  05A2  34D0               	retlw	208
  1813  05A3  34D0               	retlw	208
  1814  05A4  34D0               	retlw	208
  1815  05A5  34D0               	retlw	208
  1816  05A6  34D0               	retlw	208
  1817  05A7  34D0               	retlw	208
  1818  05A8  34D0               	retlw	208
  1819  05A9  34D0               	retlw	208
  1820  05AA  34D0               	retlw	208
  1821  05AB  34D0               	retlw	208
  1822  05AC  34D0               	retlw	208
  1823  05AD  34D0               	retlw	208
  1824  05AE  34D0               	retlw	208
  1825  05AF  34D0               	retlw	208
  1826  05B0  34D0               	retlw	208
  1827  05B1  34D0               	retlw	208
  1828  05B2  34D0               	retlw	208
  1829  05B3  34D0               	retlw	208
  1830  05B4  34D0               	retlw	208
  1831  05B5  34D0               	retlw	208
  1832  05B6  34C0               	retlw	192
  1833  05B7  34C0               	retlw	192
  1834  05B8  34C0               	retlw	192
  1835  05B9  34C0               	retlw	192
  1836  05BA  34D0               	retlw	208
  1837  05BB  34D0               	retlw	208
  1838  05BC  34D0               	retlw	208
  1839  05BD  34D0               	retlw	208
  1840  05BE  34D0               	retlw	208
  1841  05BF  34D0               	retlw	208
  1842  05C0  34D0               	retlw	208
  1843  05C1  34D0               	retlw	208
  1844  05C2  34D0               	retlw	208
  1845  05C3  34D0               	retlw	208
  1846  05C4  34D0               	retlw	208
  1847  05C5  34D0               	retlw	208
  1848  05C6  34D0               	retlw	208
  1849  05C7  34D0               	retlw	208
  1850  05C8  34C0               	retlw	192
  1851  05C9  34C0               	retlw	192
  1852  05CA  34C0               	retlw	192
  1853  05CB  34C0               	retlw	192
  1854  05CC  34C0               	retlw	192
  1855  05CD  34C0               	retlw	192
  1856  05CE  34C0               	retlw	192
  1857  05CF  34C0               	retlw	192
  1858  05D0  34C0               	retlw	192
  1859  05D1  34C0               	retlw	192
  1860  05D2  34C0               	retlw	192
  1861  05D3  34C0               	retlw	192
  1862  05D4  34C0               	retlw	192
  1863  05D5  34C0               	retlw	192
  1864  05D6  34C0               	retlw	192
  1865  05D7  34C0               	retlw	192
  1866  05D8  34C0               	retlw	192
  1867  05D9  34C0               	retlw	192
  1868  05DA  34C0               	retlw	192
  1869  05DB  34C0               	retlw	192
  1870  05DC  34C0               	retlw	192
  1871  05DD  34C0               	retlw	192
  1872  05DE  34C0               	retlw	192
  1873  05DF  34C0               	retlw	192
  1874  05E0  34C0               	retlw	192
  1875  05E1  34C0               	retlw	192
  1876  05E2  34D0               	retlw	208
  1877  05E3  34D0               	retlw	208
  1878  05E4  34D0               	retlw	208
  1879  05E5  34D0               	retlw	208
  1880  05E6  34D0               	retlw	208
  1881  05E7  34D0               	retlw	208
  1882  05E8  34D0               	retlw	208
  1883  05E9  34D0               	retlw	208
  1884  05EA  34D0               	retlw	208
  1885  05EB  34D0               	retlw	208
  1886  05EC  34D0               	retlw	208
  1887  05ED  34D0               	retlw	208
  1888  05EE  34D0               	retlw	208
  1889  05EF  34D0               	retlw	208
  1890  05F0  34D0               	retlw	208
  1891  05F1  34D0               	retlw	208
  1892                           
  1893                           ;initializer for _silent_night
  1894  05F2  349E               	retlw	158
  1895  05F3  349E               	retlw	158
  1896  05F4  349E               	retlw	158
  1897  05F5  348D               	retlw	141
  1898  05F6  349E               	retlw	158
  1899  05F7  349E               	retlw	158
  1900  05F8  34BC               	retlw	188
  1901  05F9  34BC               	retlw	188
  1902  05FA  34BC               	retlw	188
  1903  05FB  34BC               	retlw	188
  1904  05FC  34BC               	retlw	188
  1905  05FD  34BC               	retlw	188
  1906  05FE  349E               	retlw	158
  1907  05FF  349E               	retlw	158
  1908  0600  349E               	retlw	158
  1909  0601  348D               	retlw	141
  1910  0602  349E               	retlw	158
  1911  0603  349E               	retlw	158
  1912  0604  34BC               	retlw	188
  1913  0605  34BC               	retlw	188
  1914  0606  34BC               	retlw	188
  1915  0607  34BC               	retlw	188
  1916  0608  34BC               	retlw	188
  1917  0609  34BC               	retlw	188
  1918  060A  34D3               	retlw	211
  1919  060B  34D3               	retlw	211
  1920  060C  34D3               	retlw	211
  1921  060D  34D3               	retlw	211
  1922  060E  34D3               	retlw	211
  1923  060F  34D3               	retlw	211
  1924  0610  34FC               	retlw	252
  1925  0611  34FC               	retlw	252
  1926  0612  34FC               	retlw	252
  1927  0613  34FC               	retlw	252
  1928  0614  34FC               	retlw	252
  1929  0615  34FC               	retlw	252
  1930  0616  34EE               	retlw	238
  1931  0617  34EE               	retlw	238
  1932  0618  34EE               	retlw	238
  1933  0619  34EE               	retlw	238
  1934  061A  34EE               	retlw	238
  1935  061B  34EE               	retlw	238
  1936  061C  349E               	retlw	158
  1937  061D  349E               	retlw	158
  1938  061E  349E               	retlw	158
  1939  061F  349E               	retlw	158
  1940  0620  349E               	retlw	158
  1941  0621  349E               	retlw	158
  1942  0622  348D               	retlw	141
  1943  0623  348D               	retlw	141
  1944  0624  348D               	retlw	141
  1945  0625  348D               	retlw	141
  1946  0626  348D               	retlw	141
  1947  0627  348D               	retlw	141
  1948  0628  34ED               	retlw	237
  1949  0629  34ED               	retlw	237
  1950  062A  34ED               	retlw	237
  1951  062B  34FC               	retlw	252
  1952  062C  348D               	retlw	141
  1953  062D  348D               	retlw	141
  1954  062E  349E               	retlw	158
  1955  062F  349E               	retlw	158
  1956  0630  349E               	retlw	158
  1957  0631  348D               	retlw	141
  1958  0632  349E               	retlw	158
  1959  0633  349E               	retlw	158
  1960  0634  34BC               	retlw	188
  1961  0635  34BC               	retlw	188
  1962  0636  34BC               	retlw	188
  1963  0637  34BC               	retlw	188
  1964  0638  34BC               	retlw	188
  1965  0639  34BC               	retlw	188
  1966  063A  348D               	retlw	141
  1967  063B  348D               	retlw	141
  1968  063C  348D               	retlw	141
  1969  063D  348D               	retlw	141
  1970  063E  348D               	retlw	141
  1971  063F  348D               	retlw	141
  1972  0640  34ED               	retlw	237
  1973  0641  34ED               	retlw	237
  1974  0642  34ED               	retlw	237
  1975  0643  34FC               	retlw	252
  1976  0644  348D               	retlw	141
  1977  0645  348D               	retlw	141
  1978  0646  349E               	retlw	158
  1979  0647  349E               	retlw	158
  1980  0648  349E               	retlw	158
  1981  0649  348D               	retlw	141
  1982  064A  349E               	retlw	158
  1983  064B  349E               	retlw	158
  1984  064C  34BC               	retlw	188
  1985  064D  34BC               	retlw	188
  1986  064E  34BC               	retlw	188
  1987  064F  34BC               	retlw	188
  1988  0650  34BC               	retlw	188
  1989  0651  34BC               	retlw	188
  1990  0652  34D3               	retlw	211
  1991  0653  34D3               	retlw	211
  1992  0654  34D3               	retlw	211
  1993  0655  34D3               	retlw	211
  1994  0656  34D3               	retlw	211
  1995  0657  34D3               	retlw	211
  1996  0658  34B1               	retlw	177
  1997  0659  34B1               	retlw	177
  1998  065A  34B1               	retlw	177
  1999  065B  34D3               	retlw	211
  2000  065C  34FC               	retlw	252
  2001  065D  34FC               	retlw	252
  2002  065E  34ED               	retlw	237
  2003  065F  34ED               	retlw	237
  2004  0660  34ED               	retlw	237
  2005  0661  34ED               	retlw	237
  2006  0662  34ED               	retlw	237
  2007  0663  34ED               	retlw	237
  2008  0664  34BC               	retlw	188
  2009  0665  34BC               	retlw	188
  2010  0666  34BC               	retlw	188
  2011  0667  34BC               	retlw	188
  2012  0668  34BC               	retlw	188
  2013  0669  34BC               	retlw	188
  2014  066A  34ED               	retlw	237
  2015  066B  34ED               	retlw	237
  2016  066C  349E               	retlw	158
  2017  066D  349E               	retlw	158
  2018  066E  34BC               	retlw	188
  2019  066F  34BC               	retlw	188
  2020  0670  349E               	retlw	158
  2021  0671  349E               	retlw	158
  2022  0672  349E               	retlw	158
  2023  0673  34B1               	retlw	177
  2024  0674  34D3               	retlw	211
  2025  0675  34D3               	retlw	211
  2026  0676  34EE               	retlw	238
  2027  0677  34EE               	retlw	238
  2028  0678  34EE               	retlw	238
  2029  0679  34EE               	retlw	238
  2030  067A  34EE               	retlw	238
  2031  067B  34EE               	retlw	238
  2032                           
  2033                           	psect	idataBANK0
  2034  0FCD                     __pidataBANK0:
  2035                           
  2036                           ;initializer for _song3_length
  2037  0FCD  341F               	retlw	31
  2038                           
  2039                           ;initializer for _timer_low_3
  2040  0FCE  34D6               	retlw	214
  2041                           
  2042                           ;initializer for _timer_high_3
  2043  0FCF  34ED               	retlw	237
  2044                           
  2045                           ;initializer for _song2_length
  2046  0FD0  3410               	retlw	16
  2047                           
  2048                           ;initializer for _timer_low_2
  2049  0FD1  34E4               	retlw	228
  2050                           
  2051                           ;initializer for _timer_high_2
  2052  0FD2  34F3               	retlw	243
  2053                           
  2054                           ;initializer for _num_songs
  2055  0FD3  3403               	retlw	3
  2056                           
  2057                           ;initializer for _light_array
  2058  0FD4  34FE               	retlw	254
  2059  0FD5  34FF               	retlw	255
  2060  0FD6  34FE               	retlw	254
  2061  0FD7  34FF               	retlw	255
  2062  0FD8  34FE               	retlw	254
  2063  0FD9  34FF               	retlw	255
  2064  0FDA  34FE               	retlw	254
  2065                           
  2066                           	psect	idataBANK1
  2067  067C                     __pidataBANK1:
  2068                           
  2069                           ;initializer for _song3
  2070  067C  34D4               	retlw	212
  2071  067D  3400               	retlw	0
  2072  067E  34D4               	retlw	212
  2073  067F  34EE               	retlw	238
  2074  0680  34FC               	retlw	252
  2075  0681  34EE               	retlw	238
  2076  0682  34FC               	retlw	252
  2077  0683  348D               	retlw	141
  2078  0684  349E               	retlw	158
  2079  0685  349E               	retlw	158
  2080  0686  34D4               	retlw	212
  2081  0687  3400               	retlw	0
  2082  0688  34D4               	retlw	212
  2083  0689  34D4               	retlw	212
  2084  068A  3400               	retlw	0
  2085  068B  3400               	retlw	0
  2086  068C  3400               	retlw	0
  2087  068D  3400               	retlw	0
  2088  068E  34D4               	retlw	212
  2089  068F  34EE               	retlw	238
  2090  0690  34FC               	retlw	252
  2091  0691  34EE               	retlw	238
  2092  0692  34FC               	retlw	252
  2093  0693  348D               	retlw	141
  2094  0694  349E               	retlw	158
  2095  0695  349E               	retlw	158
  2096  0696  34D4               	retlw	212
  2097  0697  3400               	retlw	0
  2098  0698  34D4               	retlw	212
  2099  0699  34D4               	retlw	212
  2100  069A  3400               	retlw	0
  2101  069B  3400               	retlw	0
  2102                           
  2103                           ;initializer for _song2_pre
  2104  069C  34C0               	retlw	192
  2105  069D  34C0               	retlw	192
  2106  069E  34C0               	retlw	192
  2107  069F  34B0               	retlw	176
  2108  06A0  34B0               	retlw	176
  2109  06A1  34B0               	retlw	176
  2110  06A2  34B0               	retlw	176
  2111  06A3  34B0               	retlw	176
  2112  06A4  34B0               	retlw	176
  2113  06A5  34D0               	retlw	208
  2114  06A6  34D0               	retlw	208
  2115  06A7  34D0               	retlw	208
  2116  06A8  34D0               	retlw	208
  2117  06A9  34D0               	retlw	208
  2118  06AA  34D0               	retlw	208
  2119  06AB  34D0               	retlw	208
  2120  06AC  34D0               	retlw	208
  2121  06AD  34D0               	retlw	208
  2122                           
  2123                           ;initializer for _song2
  2124  06AE  34D3               	retlw	211
  2125  06AF  349E               	retlw	158
  2126  06B0  348D               	retlw	141
  2127  06B1  34D3               	retlw	211
  2128  06B2  34BC               	retlw	188
  2129  06B3  34BC               	retlw	188
  2130  06B4  3400               	retlw	0
  2131  06B5  3400               	retlw	0
  2132  06B6  3400               	retlw	0
  2133  06B7  34BC               	retlw	188
  2134  06B8  34BC               	retlw	188
  2135  06B9  349E               	retlw	158
  2136  06BA  349E               	retlw	158
  2137  06BB  34BC               	retlw	188
  2138  06BC  34BC               	retlw	188
  2139  06BD  348D               	retlw	141
  2140  06BE  348D               	retlw	141
  2141  06BF  348D               	retlw	141
  2142                           
  2143                           	psect	idataBANK2
  2144  0724                     __pidataBANK2:
  2145                           
  2146                           ;initializer for _song3_pre
  2147  0724  34D0               	retlw	208
  2148  0725  34D0               	retlw	208
  2149  0726  34D0               	retlw	208
  2150  0727  34D0               	retlw	208
  2151  0728  34D0               	retlw	208
  2152  0729  34D0               	retlw	208
  2153  072A  34D0               	retlw	208
  2154  072B  34E0               	retlw	224
  2155  072C  34E0               	retlw	224
  2156  072D  34E0               	retlw	224
  2157  072E  34E0               	retlw	224
  2158  072F  34E0               	retlw	224
  2159  0730  34E0               	retlw	224
  2160  0731  34E0               	retlw	224
  2161  0732  34D0               	retlw	208
  2162  0733  34D0               	retlw	208
  2163  0734  34D0               	retlw	208
  2164  0735  34D0               	retlw	208
  2165  0736  34D0               	retlw	208
  2166  0737  34D0               	retlw	208
  2167  0738  34D0               	retlw	208
  2168  0739  34D0               	retlw	208
  2169  073A  34D0               	retlw	208
  2170  073B  34E0               	retlw	224
  2171  073C  34E0               	retlw	224
  2172  073D  34E0               	retlw	224
  2173  073E  34E0               	retlw	224
  2174  073F  34E0               	retlw	224
  2175  0740  34E0               	retlw	224
  2176  0741  34E0               	retlw	224
  2177  0742  34D0               	retlw	208
  2178  0743  34D0               	retlw	208
  2179                           
  2180                           	psect	stringtext1
  2181  1000                     __pstringtext1:
  2182  1000                     _spi1_configuration:
  2183  1000  3400               	retlw	0
  2184  1001  3440               	retlw	64
  2185  1002  3401               	retlw	1
  2186  1003  3400               	retlw	0
  2187  1004                     __end_of_spi1_configuration:
  2188                           
  2189                           	psect	nvCOMMON
  2190  0077                     __pnvCOMMON:
  2191  0077                     _timer0ReloadVal16bit:
  2192  0077                     	ds	2
  2193                           
  2194                           	psect	nvBANK0
  2195  004F                     __pnvBANK0:
  2196  004F                     _TMR1_InterruptHandler:
  2197  004F                     	ds	2
  2198  0051                     _timer1ReloadVal:
  2199  0051                     	ds	2
  2200  0053                     _TMR0_InterruptHandler:
  2201  0053                     	ds	2
  2202  0055                     _INT_InterruptHandler:
  2203  0055                     	ds	2
  2204  001A                     _LATCbits	set	26
  2205  0012                     _TRISAbits	set	18
  2206  000B                     _INTCONbits	set	11
  2207  0014                     _TRISC	set	20
  2208  0012                     _TRISA	set	18
  2209  001A                     _LATC	set	26
  2210  0018                     _LATA	set	24
  2211  0014                     _TRISCbits	set	20
  2212  018C                     _SSP1BUF	set	396
  2213  0191                     _SSP1CON2	set	401
  2214  0190                     _SSP1CON1bits	set	400
  2215  018D                     _SSP1ADD	set	397
  2216  0190                     _SSP1CON1	set	400
  2217  018F                     _SSP1STAT	set	399
  2218  020F                     _T1GCONbits	set	527
  2219  020E                     _T1CONbits	set	526
  2220  020E                     _T1CON	set	526
  2221  020C                     _TMR1L	set	524
  2222  020D                     _TMR1H	set	525
  2223  0211                     _T1CLK	set	529
  2224  0210                     _T1GATE	set	528
  2225  020F                     _T1GCON	set	527
  2226  028D                     _PR2	set	653
  2227  028C                     _TMR2	set	652
  2228  028E                     _T2CONbits	set	654
  2229  0291                     _T2RSTbits	set	657
  2230  028F                     _T2HLTbits	set	655
  2231  028E                     _T2CON	set	654
  2232  028C                     _T2TMR	set	652
  2233  028D                     _T2PR	set	653
  2234  0291                     _T2RST	set	657
  2235  028F                     _T2HLT	set	655
  2236  0290                     _T2CLKCON	set	656
  2237  0314                     _PWM3DCL	set	788
  2238  0315                     _PWM3DCH	set	789
  2239  0316                     _PWM3CON	set	790
  2240  059E                     _T0CON0bits	set	1438
  2241  059E                     _T0CON0	set	1438
  2242  059C                     _TMR0L	set	1436
  2243  059D                     _TMR0H	set	1437
  2244  059F                     _T0CON1	set	1439
  2245  0717                     _PIE1bits	set	1815
  2246  070C                     _PIR0bits	set	1804
  2247  0716                     _PIE0bits	set	1814
  2248  070D                     _PIR1bits	set	1805
  2249  080C                     _WDTCON	set	2060
  2250  0892                     _OSCTUNE	set	2194
  2251  0893                     _OSCFRQ	set	2195
  2252  0891                     _OSCEN	set	2193
  2253  1E90                     _INTPPS	set	7824
  2254  1EC6                     _SSP1DATPPS	set	7878
  2255  1EC5                     _SSP1CLKPPS	set	7877
  2256  1F15                     _RA5PPS	set	7957
  2257  1F52                     _INLVLC	set	8018
  2258  1F3C                     _INLVLA	set	7996
  2259  1F51                     _SLRCONC	set	8017
  2260  1F3B                     _SLRCONA	set	7995
  2261  1F50                     _ODCONC	set	8016
  2262  1F3A                     _ODCONA	set	7994
  2263  1F4F                     _WPUC	set	8015
  2264  1F39                     _WPUA	set	7993
  2265  1F38                     _ANSELA	set	7992
  2266  1F4E                     _ANSELC	set	8014
  2267  1F23                     _RC3PPS	set	7971
  2268  1F25                     _RC5PPS	set	7973
  2269                           
  2270                           	psect	cinit
  2271  0033                     start_initialization:	
  2272                           ; #config settings
  2273                           
  2274  0033                     __initialization:	;BIGRAM
  2275                           
  2276                           ; Initialize objects allocated to BIGRAM
  2277  0033  3068               	movlw	low __pidataBIGRAM
  2278  0034  0084               	movwf	4
  2279  0035  3085               	movlw	(high __pidataBIGRAM)| (0+128)
  2280  0036  0085               	movwf	5
  2281  0037  30DC               	movlw	low (0+8924)
  2282  0038  0086               	movwf	6
  2283  0039  3022               	movlw	high (0+8924)
  2284  003A  0087               	movwf	7
  2285  003B  3001               	movlw	1
  2286  003C  00FF               	movwf	btemp+1
  2287  003D  3014               	movlw	20
  2288  003E  318F  277F  3180   	fcall	init_ram
  2289                           
  2290                           ; Initialize objects allocated to BANK0
  2291  0041  30CD               	movlw	low __pidataBANK0
  2292  0042  0084               	movwf	4
  2293  0043  308F               	movlw	(high __pidataBANK0)| (0+128)
  2294  0044  0085               	movwf	5
  2295  0045  3038               	movlw	low __pdataBANK0
  2296  0046  0086               	movwf	6
  2297  0047  3000               	movlw	high __pdataBANK0
  2298  0048  0087               	movwf	7
  2299  0049  3000               	movlw	0
  2300  004A  00FF               	movwf	btemp+1
  2301  004B  300E               	movlw	14
  2302  004C  318F  277F  3180   	fcall	init_ram
  2303                           
  2304                           ; Initialize objects allocated to BANK1
  2305  004F  307C               	movlw	low __pidataBANK1
  2306  0050  0084               	movwf	4
  2307  0051  3086               	movlw	(high __pidataBANK1)| (0+128)
  2308  0052  0085               	movwf	5
  2309  0053  30A0               	movlw	low __pdataBANK1
  2310  0054  0086               	movwf	6
  2311  0055  3000               	movlw	high __pdataBANK1
  2312  0056  0087               	movwf	7
  2313  0057  3000               	movlw	0
  2314  0058  00FF               	movwf	btemp+1
  2315  0059  3044               	movlw	68
  2316  005A  318F  277F  3180   	fcall	init_ram
  2317                           
  2318                           ; Initialize objects allocated to BANK2
  2319  005D  3024               	movlw	low __pidataBANK2
  2320  005E  0084               	movwf	4
  2321  005F  3087               	movlw	(high __pidataBANK2)| (0+128)
  2322  0060  0085               	movwf	5
  2323  0061  3020               	movlw	low __pdataBANK2
  2324  0062  0086               	movwf	6
  2325  0063  3001               	movlw	high __pdataBANK2
  2326  0064  0087               	movwf	7
  2327  0065  3000               	movlw	0
  2328  0066  00FF               	movwf	btemp+1
  2329  0067  3020               	movlw	32
  2330  0068  318F  277F  3180   	fcall	init_ram
  2331                           
  2332                           ; Clear objects allocated to COMMON
  2333  006B  01F9               	clrf	__pbssCOMMON& (0+127)
  2334                           
  2335                           ; Clear objects allocated to BANK0
  2336  006C  01C6               	clrf	__pbssBANK0& (0+127)
  2337  006D  01C7               	clrf	(__pbssBANK0+1)& (0+127)
  2338  006E  01C8               	clrf	(__pbssBANK0+2)& (0+127)
  2339  006F  01C9               	clrf	(__pbssBANK0+3)& (0+127)
  2340  0070  01CA               	clrf	(__pbssBANK0+4)& (0+127)
  2341  0071  01CB               	clrf	(__pbssBANK0+5)& (0+127)
  2342  0072  01CC               	clrf	(__pbssBANK0+6)& (0+127)
  2343  0073  01CD               	clrf	(__pbssBANK0+7)& (0+127)
  2344  0074  01CE               	clrf	(__pbssBANK0+8)& (0+127)
  2345  0075                     end_of_initialization:	
  2346                           ;End of C runtime variable initialization code
  2347                           
  2348  0075                     __end_of__initialization:
  2349  0075  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2350  0076  0140               	movlb	0
  2351  0077  3183  2B36         	ljmp	_main	;jump to C main() function
  2352                           
  2353                           	psect	bssCOMMON
  2354  0079                     __pbssCOMMON:
  2355  0079                     _last_prescale:
  2356  0079                     	ds	1
  2357                           
  2358                           	psect	bssBANK0
  2359  0046                     __pbssBANK0:
  2360  0046                     _count:
  2361  0046                     	ds	2
  2362  0048                     _cole_counter:
  2363  0048                     	ds	1
  2364  0049                     _presses:
  2365  0049                     	ds	1
  2366  004A                     _last_note:
  2367  004A                     	ds	1
  2368  004B                     _TMR0_complete:
  2369  004B                     	ds	1
  2370  004C                     _song2_playing:
  2371  004C                     	ds	1
  2372  004D                     _song3_playing:
  2373  004D                     	ds	1
  2374  004E                     _silent_night_playing:
  2375  004E                     	ds	1
  2376                           
  2377                           	psect	dataBANK0
  2378  0038                     __pdataBANK0:
  2379  0038                     _song3_length:
  2380  0038                     	ds	1
  2381  0039                     _timer_low_3:
  2382  0039                     	ds	1
  2383  003A                     _timer_high_3:
  2384  003A                     	ds	1
  2385  003B                     _song2_length:
  2386  003B                     	ds	1
  2387  003C                     _timer_low_2:
  2388  003C                     	ds	1
  2389  003D                     _timer_high_2:
  2390  003D                     	ds	1
  2391  003E                     _num_songs:
  2392  003E                     	ds	1
  2393  003F                     _light_array:
  2394  003F                     	ds	7
  2395                           
  2396                           	psect	dataBANK1
  2397  00A0                     __pdataBANK1:
  2398  00A0                     _song3:
  2399  00A0                     	ds	32
  2400  00C0                     _song2_pre:
  2401  00C0                     	ds	18
  2402  00D2                     _song2:
  2403  00D2                     	ds	18
  2404                           
  2405                           	psect	dataBANK2
  2406  0120                     __pdataBANK2:
  2407  0120                     _song3_pre:
  2408  0120                     	ds	32
  2409                           
  2410                           	psect	inittext
  2411  0F7F                     init_ram:
  2412  0F7F  00FE               	movwf	btemp
  2413  0F80                     initloop:
  2414  0F80  0012               	moviw fsr0++
  2415  0F81  001E               	movwi fsr1++
  2416  0F82  3001               	movlw	1
  2417  0F83  02FE               	subwf	btemp,f
  2418  0F84  3000               	movlw	0
  2419  0F85  3BFF               	subwfb	btemp+1,f
  2420  0F86  087F               	movf	btemp+1,w
  2421  0F87  047E               	iorwf	btemp,w
  2422  0F88  1D03               	skipz
  2423  0F89  2F80               	goto	initloop
  2424  0F8A  3400               	retlw	0
  2425                           
  2426                           	psect	cstackBANK2
  2427  0140                     __pcstackBANK2:
  2428  0140                     main@light:
  2429                           
  2430                           ; 1 bytes @ 0x0
  2431  0140                     	ds	1
  2432  0141                     main@j:
  2433                           
  2434                           ; 2 bytes @ 0x1
  2435  0141                     	ds	2
  2436  0143                     main@i:
  2437                           
  2438                           ; 2 bytes @ 0x3
  2439  0143                     	ds	2
  2440  0145                     main@j_1165:
  2441                           
  2442                           ; 2 bytes @ 0x5
  2443  0145                     	ds	2
  2444  0147                     main@j_1167:
  2445                           
  2446                           ; 2 bytes @ 0x7
  2447  0147                     	ds	2
  2448                           
  2449                           	psect	cstackBANK1
  2450  00E4                     __pcstackBANK1:
  2451  00E4                     displayMatrix@states:
  2452                           
  2453                           ; 1 bytes @ 0x0
  2454  00E4                     	ds	1
  2455  00E5                     displayMatrix@i:
  2456                           
  2457                           ; 2 bytes @ 0x1
  2458  00E5                     	ds	2
  2459  00E7                     displayMatrix@lowSide:
  2460                           
  2461                           ; 1 bytes @ 0x3
  2462  00E7                     	ds	1
  2463  00E8                     ??_main:
  2464                           
  2465                           ; 1 bytes @ 0x4
  2466  00E8                     	ds	5
  2467                           
  2468                           	psect	cstackCOMMON
  2469  0070                     __pcstackCOMMON:
  2470  0070                     ?_SPI1_Initialize:
  2471  0070                     ?_PIN_MANAGER_Initialize:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_OSCILLATOR_Initialize:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ?_WDT_Initialize:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_PWM3_Initialize:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ?_TMR2_Initialize:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_TMR1_Initialize:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ?_EXT_INT_Initialize:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ?_TMR0_Initialize:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?_TMR0_ISR:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ??_TMR0_ISR:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0070                     ?_INT_ISR:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0070                     ?_TMR1_ISR:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0070                     ?_INT_CallBack:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510  0070                     ?_TMR0_DefaultInterruptHandler:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0070                     ??_TMR0_DefaultInterruptHandler:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516  0070                     ?_TMR1_DefaultInterruptHandler:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519  0070                     ??_TMR1_DefaultInterruptHandler:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522  0070                     ?_EXT_ISR:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525  0070                     ??_EXT_ISR:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528  0070                     ?_TMR0_ISR_:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531  0070                     ??_TMR0_ISR_:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534  0070                     ?_TMR1_ISR_:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537  0070                     ??_TMR1_ISR_:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540  0070                     ?_displayMatrix:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543  0070                     ?_SYSTEM_Initialize:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546  0070                     ?_SPI1_ExchangeByte:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549  0070                     ?_INTERRUPT_InterruptManager:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552  0070                     ?_INT_DefaultInterruptHandler:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555  0070                     ??_INT_DefaultInterruptHandler:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558  0070                     ?_TMR0_Reload:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561  0070                     ??_TMR0_Reload:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564  0070                     ?_TMR1_WriteTimer:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567  0070                     ?_main:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570  0070                     TMR1_WriteTimer@timerVal:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573                           
  2574                           ; 2 bytes @ 0x0
  2575  0070                     	ds	1
  2576  0071                     ??_INT_ISR:
  2577  0071                     ??_INT_CallBack:	
  2578                           ; 1 bytes @ 0x1
  2579                           
  2580                           
  2581                           ; 1 bytes @ 0x1
  2582  0071                     	ds	1
  2583  0072                     ??_SPI1_Initialize:
  2584  0072                     ??_PIN_MANAGER_Initialize:	
  2585                           ; 1 bytes @ 0x2
  2586                           
  2587  0072                     ??_OSCILLATOR_Initialize:	
  2588                           ; 1 bytes @ 0x2
  2589                           
  2590  0072                     ??_WDT_Initialize:	
  2591                           ; 1 bytes @ 0x2
  2592                           
  2593  0072                     ??_PWM3_Initialize:	
  2594                           ; 1 bytes @ 0x2
  2595                           
  2596  0072                     ??_TMR2_Initialize:	
  2597                           ; 1 bytes @ 0x2
  2598                           
  2599  0072                     ??_TMR1_ISR:	
  2600                           ; 1 bytes @ 0x2
  2601                           
  2602  0072                     ?_TMR0_SetInterruptHandler:	
  2603                           ; 1 bytes @ 0x2
  2604                           
  2605  0072                     ?_TMR1_SetInterruptHandler:	
  2606                           ; 1 bytes @ 0x2
  2607                           
  2608  0072                     ?_playNote:	
  2609                           ; 1 bytes @ 0x2
  2610                           
  2611  0072                     ??_SPI1_ExchangeByte:	
  2612                           ; 1 bytes @ 0x2
  2613                           
  2614  0072                     ??_INTERRUPT_InterruptManager:	
  2615                           ; 1 bytes @ 0x2
  2616                           
  2617  0072                     ?_INT_SetInterruptHandler:	
  2618                           ; 1 bytes @ 0x2
  2619                           
  2620  0072                     ??_TMR1_WriteTimer:	
  2621                           ; 1 bytes @ 0x2
  2622                           
  2623  0072                     SPI1_ExchangeByte@data:	
  2624                           ; 1 bytes @ 0x2
  2625                           
  2626  0072                     playNote@prescale:	
  2627                           ; 1 bytes @ 0x2
  2628                           
  2629  0072                     INT_SetInterruptHandler@InterruptHandler:	
  2630                           ; 1 bytes @ 0x2
  2631                           
  2632  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  2633                           ; 2 bytes @ 0x2
  2634                           
  2635  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2636                           ; 2 bytes @ 0x2
  2637                           
  2638                           
  2639                           ; 2 bytes @ 0x2
  2640  0072                     	ds	1
  2641  0073                     ?_shiftBytes:
  2642  0073                     ??_playNote:	
  2643                           ; 1 bytes @ 0x3
  2644                           
  2645  0073                     shiftBytes@lowSide:	
  2646                           ; 1 bytes @ 0x3
  2647                           
  2648                           
  2649                           ; 1 bytes @ 0x3
  2650  0073                     	ds	1
  2651  0074                     ??_TMR1_Initialize:
  2652  0074                     ??_EXT_INT_Initialize:	
  2653                           ; 1 bytes @ 0x4
  2654                           
  2655  0074                     ??_TMR0_Initialize:	
  2656                           ; 1 bytes @ 0x4
  2657                           
  2658  0074                     ??_TMR0_SetInterruptHandler:	
  2659                           ; 1 bytes @ 0x4
  2660                           
  2661  0074                     ??_TMR1_SetInterruptHandler:	
  2662                           ; 1 bytes @ 0x4
  2663                           
  2664  0074                     ??_shiftBytes:	
  2665                           ; 1 bytes @ 0x4
  2666                           
  2667  0074                     ??_SYSTEM_Initialize:	
  2668                           ; 1 bytes @ 0x4
  2669                           
  2670  0074                     ??_INT_SetInterruptHandler:	
  2671                           ; 1 bytes @ 0x4
  2672                           
  2673  0074                     playNote@note:	
  2674                           ; 1 bytes @ 0x4
  2675                           
  2676  0074                     shiftBytes@highSide:	
  2677                           ; 1 bytes @ 0x4
  2678                           
  2679                           
  2680                           ; 1 bytes @ 0x4
  2681  0074                     	ds	1
  2682  0075                     ??_displayMatrix:
  2683                           
  2684                           ; 1 bytes @ 0x5
  2685  0075                     	ds	2
  2686                           
  2687                           	psect	cstackBANK0
  2688  0020                     __pcstackBANK0:
  2689  0020                     TMR1_ISR_@lights:
  2690                           
  2691                           ; 1 bytes @ 0x0
  2692  0020                     	ds	1
  2693  0021                     TMR1_ISR_@lights_1177:
  2694                           
  2695                           ; 1 bytes @ 0x1
  2696  0021                     	ds	1
  2697  0022                     TMR1_ISR_@lights_1180:
  2698                           
  2699                           ; 1 bytes @ 0x2
  2700  0022                     	ds	1
  2701  0023                     TMR1_ISR_@i_1179:
  2702                           
  2703                           ; 2 bytes @ 0x3
  2704  0023                     	ds	2
  2705  0025                     TMR1_ISR_@i_1182:
  2706                           
  2707                           ; 2 bytes @ 0x5
  2708  0025                     	ds	2
  2709  0027                     TMR1_ISR_@i_1183:
  2710                           
  2711                           ; 2 bytes @ 0x7
  2712  0027                     	ds	2
  2713  0029                     TMR1_ISR_@i_1184:
  2714                           
  2715                           ; 2 bytes @ 0x9
  2716  0029                     	ds	2
  2717  002B                     TMR1_ISR_@i_1175:
  2718                           
  2719                           ; 2 bytes @ 0xB
  2720  002B                     	ds	2
  2721  002D                     TMR1_ISR_@i_1178:
  2722                           
  2723                           ; 2 bytes @ 0xD
  2724  002D                     	ds	2
  2725  002F                     TMR1_ISR_@i_1181:
  2726                           
  2727                           ; 2 bytes @ 0xF
  2728  002F                     	ds	2
  2729  0031                     TMR1_ISR_@lights_1186:
  2730                           
  2731                           ; 1 bytes @ 0x11
  2732  0031                     	ds	1
  2733  0032                     TMR1_ISR_@i:
  2734                           
  2735                           ; 2 bytes @ 0x12
  2736  0032                     	ds	2
  2737  0034                     TMR1_ISR_@i_1176:
  2738                           
  2739                           ; 2 bytes @ 0x14
  2740  0034                     	ds	2
  2741  0036                     TMR1_ISR_@i_1185:
  2742                           
  2743                           ; 2 bytes @ 0x16
  2744  0036                     	ds	2
  2745                           
  2746                           	psect	maintext
  2747  0336                     __pmaintext:	
  2748 ;;
  2749 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  2750 ;;
  2751 ;; *************** function _main *****************
  2752 ;; Defined at:
  2753 ;;		line 238 in file "main.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;		None
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  light           1    0        unsigned char 
  2758 ;;  light           1    0[BANK2 ] unsigned char 
  2759 ;;  j               2    7[BANK2 ] int 
  2760 ;;  j               2    5[BANK2 ] int 
  2761 ;;  j               2    1[BANK2 ] int 
  2762 ;;  i               2    3[BANK2 ] int 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : B3F/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2773 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Totals:         0       0       5       9       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;Total ram usage:       14 bytes
  2777 ;; Hardware stack levels required when called: 8
  2778 ;; This function calls:
  2779 ;;		_EXT_INT_Initialize
  2780 ;;		_INT_SetInterruptHandler
  2781 ;;		_PWM3_Initialize
  2782 ;;		_SPI1_Initialize
  2783 ;;		_SYSTEM_Initialize
  2784 ;;		_TMR0_Initialize
  2785 ;;		_TMR0_SetInterruptHandler
  2786 ;;		_TMR1_Initialize
  2787 ;;		_TMR1_SetInterruptHandler
  2788 ;;		_TMR2_Initialize
  2789 ;;		_displayMatrix
  2790 ;;		_playNote
  2791 ;;		_shiftBytes
  2792 ;; This function is called by:
  2793 ;;		Startup code after reset
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _main
  2799  0336                     _main:
  2800  0336                     l2663:	
  2801                           ;incstack = 0
  2802                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2803                           
  2804                           
  2805                           ;main.c: 241:     SYSTEM_Initialize();
  2806  0336  3187  2782  3183   	fcall	_SYSTEM_Initialize
  2807  0339                     l2665:
  2808                           
  2809                           ;main.c: 247:     (INTCONbits.GIE = 1);
  2810  0339  178B               	bsf	11,7	;volatile
  2811  033A                     l2667:
  2812                           
  2813                           ;main.c: 250:     (INTCONbits.PEIE = 1);
  2814  033A  170B               	bsf	11,6	;volatile
  2815                           
  2816                           ;main.c: 259:     SPI1_Initialize();
  2817  033B  3187  27EA  3183   	fcall	_SPI1_Initialize
  2818  033E                     l2669:
  2819                           
  2820                           ;main.c: 260:     SSP1CON1bits.SSPEN = 0;
  2821  033E  0143               	movlb	3	; select bank3
  2822  033F  1290               	bcf	16,5	;volatile
  2823  0340                     l2671:
  2824                           
  2825                           ;main.c: 261:     TRISCbits.TRISC3 = 0;
  2826  0340  0140               	movlb	0	; select bank0
  2827  0341  1194               	bcf	20,3	;volatile
  2828  0342                     l2673:
  2829                           
  2830                           ;main.c: 262:     TRISAbits.TRISA4 = 1;
  2831  0342  1612               	bsf	18,4	;volatile
  2832  0343                     l2675:
  2833                           
  2834                           ;main.c: 263:     TRISCbits.TRISC5 = 0;
  2835  0343  1294               	bcf	20,5	;volatile
  2836  0344                     l2677:
  2837                           
  2838                           ;main.c: 266:     SSP1CON1bits.SSPEN = 1;
  2839  0344  0143               	movlb	3	; select bank3
  2840  0345  1690               	bsf	16,5	;volatile
  2841                           
  2842                           ;main.c: 269:     EXT_INT_Initialize();
  2843  0346  318F  2798  3183   	fcall	_EXT_INT_Initialize
  2844                           
  2845                           ;main.c: 270:     INT_SetInterruptHandler(EXT_ISR);
  2846  0349  309E               	movlw	low _EXT_ISR
  2847  034A  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
  2848  034B  3007               	movlw	high _EXT_ISR
  2849  034C  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  2850  034D  318F  275F  3183   	fcall	_INT_SetInterruptHandler
  2851  0350                     l2679:
  2852                           
  2853                           ;main.c: 271:     PIE0bits.INTE = 1;
  2854  0350  014E               	movlb	14	; select bank14
  2855  0351  1416               	bsf	22,0	;volatile
  2856                           
  2857                           ;main.c: 274:     TMR0_Initialize();
  2858  0352  3187  27BA  3183   	fcall	_TMR0_Initialize
  2859                           
  2860                           ;main.c: 275:     TMR0_SetInterruptHandler(TMR0_ISR_);
  2861  0355  304F               	movlw	low _TMR0_ISR_
  2862  0356  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2863  0357  300F               	movlw	high _TMR0_ISR_
  2864  0358  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2865  0359  318F  276B  3183   	fcall	_TMR0_SetInterruptHandler
  2866  035C                     l2681:
  2867                           
  2868                           ;main.c: 276:     T0CON0bits.T0EN = 0;
  2869  035C  014B               	movlb	11	; select bank11
  2870  035D  139E               	bcf	30,7	;volatile
  2871                           
  2872                           ;main.c: 279:     TMR1_Initialize();
  2873  035E  3187  2744  3183   	fcall	_TMR1_Initialize
  2874                           
  2875                           ;main.c: 280:     TMR1_SetInterruptHandler(TMR1_ISR_);
  2876  0361  3079               	movlw	low _TMR1_ISR_
  2877  0362  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2878  0363  3000               	movlw	high _TMR1_ISR_
  2879  0364  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2880  0365  318F  2771  3183   	fcall	_TMR1_SetInterruptHandler
  2881  0368                     l2683:
  2882                           
  2883                           ;main.c: 281:     T1CONbits.TMR1ON = 0;
  2884  0368  0144               	movlb	4	; select bank4
  2885  0369  100E               	bcf	14,0	;volatile
  2886                           
  2887                           ;main.c: 284:     TMR2_Initialize();
  2888  036A  318F  27BF  3183   	fcall	_TMR2_Initialize
  2889  036D                     l2685:
  2890                           
  2891                           ;main.c: 285:     T2CONbits.TMR2ON = 0;
  2892  036D  0145               	movlb	5	; select bank5
  2893  036E  138E               	bcf	14,7	;volatile
  2894                           
  2895                           ;main.c: 288:     PWM3_Initialize();
  2896  036F  318F  2777  3183   	fcall	_PWM3_Initialize
  2897  0372                     l2687:
  2898  0372  0140               	movlb	0	; select bank0
  2899  0373  111A               	bcf	26,2	;volatile
  2900  0374                     l2689:
  2901  0374  121A               	bcf	26,4	;volatile
  2902  0375                     l2691:
  2903  0375  101A               	bcf	26,0	;volatile
  2904  0376                     l2693:
  2905                           
  2906                           ;main.c: 298:     for (int i = 0; i < 15; i++)
  2907  0376  0142               	movlb	2	; select bank2
  2908  0377  01C3               	clrf	main@i^(0+256)
  2909  0378  01C4               	clrf	(main@i+1)^(0+256)
  2910  0379                     l2699:
  2911                           
  2912                           ;main.c: 299:     {;main.c: 300:         for (int j = 0; j < 12; j++)
  2913  0379  0142               	movlb	2	; select bank2
  2914  037A  01C1               	clrf	main@j^(0+256)
  2915  037B  01C2               	clrf	(main@j+1)^(0+256)
  2916  037C                     l2705:
  2917                           
  2918                           ;main.c: 301:         {;main.c: 302:             displayMatrix(light_array);
  2919  037C  303F               	movlw	(low (_light_array| 0))& (0+255)
  2920  037D  3186  26C0  3183   	fcall	_displayMatrix
  2921  0380                     l2707:
  2922                           
  2923                           ;main.c: 303:         }
  2924  0380  3001               	movlw	1
  2925  0381  0142               	movlb	2	; select bank2
  2926  0382  07C1               	addwf	main@j^(0+256),f
  2927  0383  3000               	movlw	0
  2928  0384  3DC2               	addwfc	(main@j+1)^(0+256),f
  2929  0385                     l2709:
  2930  0385  0842               	movf	(main@j+1)^(0+256),w
  2931  0386  3A80               	xorlw	128
  2932  0387  0141               	movlb	1	; select bank1
  2933  0388  00E8               	movwf	??_main^(0+128)
  2934  0389  3080               	movlw	128
  2935  038A  0268               	subwf	??_main^(0+128),w
  2936  038B  1D03               	skipz
  2937  038C  2B90               	goto	u1655
  2938  038D  300C               	movlw	12
  2939  038E  0142               	movlb	2	; select bank2
  2940  038F  0241               	subwf	main@j^(0+256),w
  2941  0390                     u1655:
  2942  0390  1C03               	skipc
  2943  0391  2B93               	goto	u1651
  2944  0392  2B94               	goto	u1650
  2945  0393                     u1651:
  2946  0393  2B7C               	goto	l2705
  2947  0394                     u1650:
  2948  0394                     l2711:
  2949                           
  2950                           ;main.c: 304:         if (i < 7)
  2951  0394  0142               	movlb	2	; select bank2
  2952  0395  0844               	movf	(main@i+1)^(0+256),w
  2953  0396  3A80               	xorlw	128
  2954  0397  0141               	movlb	1	; select bank1
  2955  0398  00E8               	movwf	??_main^(0+128)
  2956  0399  3080               	movlw	128
  2957  039A  0268               	subwf	??_main^(0+128),w
  2958  039B  1D03               	skipz
  2959  039C  2BA0               	goto	u1665
  2960  039D  3007               	movlw	7
  2961  039E  0142               	movlb	2	; select bank2
  2962  039F  0243               	subwf	main@i^(0+256),w
  2963  03A0                     u1665:
  2964  03A0  1803               	skipnc
  2965  03A1  2BA3               	goto	u1661
  2966  03A2  2BA4               	goto	u1660
  2967  03A3                     u1661:
  2968  03A3  2BE6               	goto	l2725
  2969  03A4                     u1660:
  2970  03A4                     l2713:
  2971                           
  2972                           ;main.c: 305:         {;main.c: 306:             for (int j = 0; j < 7; j++)
  2973  03A4  0142               	movlb	2	; select bank2
  2974  03A5  01C5               	clrf	main@j_1165^(0+256)
  2975  03A6  01C6               	clrf	(main@j_1165+1)^(0+256)
  2976  03A7                     l2719:
  2977                           
  2978                           ;main.c: 307:             {;main.c: 308:                 uint8_t light = (~light_array[j
      +                          ]) << 7;
  2979  03A7  0142               	movlb	2	; select bank2
  2980  03A8  0845               	movf	main@j_1165^(0+256),w
  2981  03A9  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  2982  03AA  0086               	movwf	6
  2983  03AB  0187               	clrf	7
  2984  03AC  0901               	comf	1,w
  2985  03AD  0141               	movlb	1	; select bank1
  2986  03AE  00E8               	movwf	??_main^(0+128)
  2987  03AF  3006               	movlw	6
  2988  03B0                     u1675:
  2989  03B0  35E8               	lslf	??_main^(0+128),f
  2990  03B1  3EFF               	addlw	-1
  2991  03B2  1D03               	skipz
  2992  03B3  2BB0               	goto	u1675
  2993  03B4  3568               	lslf	??_main^(0+128),w
  2994  03B5  00E9               	movwf	(??_main+1)^(0+128)
  2995  03B6  0869               	movf	(??_main+1)^(0+128),w
  2996  03B7  0142               	movlb	2	; select bank2
  2997  03B8  00C0               	movwf	main@light^(0+256)
  2998                           
  2999                           ;main.c: 309:                 light_array[j] = (light_array[j] << 1) + (light >> 7);
  3000  03B9  0840               	movf	main@light^(0+256),w
  3001  03BA  0141               	movlb	1	; select bank1
  3002  03BB  00E8               	movwf	??_main^(0+128)
  3003  03BC  3007               	movlw	7
  3004  03BD                     u1685:
  3005  03BD  36E8               	lsrf	??_main^(0+128),f
  3006  03BE  0B89               	decfsz	9,f
  3007  03BF  2BBD               	goto	u1685
  3008  03C0  0142               	movlb	2	; select bank2
  3009  03C1  0845               	movf	main@j_1165^(0+256),w
  3010  03C2  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  3011  03C3  0086               	movwf	6
  3012  03C4  0187               	clrf	7
  3013  03C5  3501               	lslf	1,w
  3014  03C6  0141               	movlb	1	; select bank1
  3015  03C7  0768               	addwf	??_main^(0+128),w
  3016  03C8  00E9               	movwf	(??_main+1)^(0+128)
  3017  03C9  0142               	movlb	2	; select bank2
  3018  03CA  0845               	movf	main@j_1165^(0+256),w
  3019  03CB  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  3020  03CC  0086               	movwf	6
  3021  03CD  0187               	clrf	7
  3022  03CE  0141               	movlb	1	; select bank1
  3023  03CF  0869               	movf	(??_main+1)^(0+128),w
  3024  03D0  0081               	movwf	1
  3025  03D1                     l2721:
  3026                           
  3027                           ;main.c: 310:             }
  3028  03D1  3001               	movlw	1
  3029  03D2  0142               	movlb	2	; select bank2
  3030  03D3  07C5               	addwf	main@j_1165^(0+256),f
  3031  03D4  3000               	movlw	0
  3032  03D5  3DC6               	addwfc	(main@j_1165+1)^(0+256),f
  3033  03D6                     l2723:
  3034  03D6  0846               	movf	(main@j_1165+1)^(0+256),w
  3035  03D7  3A80               	xorlw	128
  3036  03D8  0141               	movlb	1	; select bank1
  3037  03D9  00E8               	movwf	??_main^(0+128)
  3038  03DA  3080               	movlw	128
  3039  03DB  0268               	subwf	??_main^(0+128),w
  3040  03DC  1D03               	skipz
  3041  03DD  2BE1               	goto	u1695
  3042  03DE  3007               	movlw	7
  3043  03DF  0142               	movlb	2	; select bank2
  3044  03E0  0245               	subwf	main@j_1165^(0+256),w
  3045  03E1                     u1695:
  3046  03E1  1C03               	skipc
  3047  03E2  2BE4               	goto	u1691
  3048  03E3  2BE5               	goto	u1690
  3049  03E4                     u1691:
  3050  03E4  2BA7               	goto	l2719
  3051  03E5                     u1690:
  3052  03E5  2C0E               	goto	l2737
  3053  03E6                     l2725:
  3054                           
  3055                           ;main.c: 313:         {;main.c: 314:             for (int j = 0; j < 7; j++)
  3056  03E6  0142               	movlb	2	; select bank2
  3057  03E7  01C7               	clrf	main@j_1167^(0+256)
  3058  03E8  01C8               	clrf	(main@j_1167+1)^(0+256)
  3059  03E9                     l2731:
  3060                           
  3061                           ;main.c: 317:                 light_array[j] = (light_array[j] << 1) + 1;
  3062  03E9  0142               	movlb	2	; select bank2
  3063  03EA  0847               	movf	main@j_1167^(0+256),w
  3064  03EB  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  3065  03EC  0086               	movwf	6
  3066  03ED  0187               	clrf	7
  3067  03EE  1403               	setc
  3068  03EF  0D01               	rlf	1,w
  3069  03F0  0141               	movlb	1	; select bank1
  3070  03F1  00E8               	movwf	??_main^(0+128)
  3071  03F2  0142               	movlb	2	; select bank2
  3072  03F3  0847               	movf	main@j_1167^(0+256),w
  3073  03F4  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  3074  03F5  0086               	movwf	6
  3075  03F6  0187               	clrf	7
  3076  03F7  0141               	movlb	1	; select bank1
  3077  03F8  0868               	movf	??_main^(0+128),w
  3078  03F9  0081               	movwf	1
  3079  03FA                     l2733:
  3080                           
  3081                           ;main.c: 318:             }
  3082  03FA  3001               	movlw	1
  3083  03FB  0142               	movlb	2	; select bank2
  3084  03FC  07C7               	addwf	main@j_1167^(0+256),f
  3085  03FD  3000               	movlw	0
  3086  03FE  3DC8               	addwfc	(main@j_1167+1)^(0+256),f
  3087  03FF                     l2735:
  3088  03FF  0848               	movf	(main@j_1167+1)^(0+256),w
  3089  0400  3A80               	xorlw	128
  3090  0401  0141               	movlb	1	; select bank1
  3091  0402  00E8               	movwf	??_main^(0+128)
  3092  0403  3080               	movlw	128
  3093  0404  0268               	subwf	??_main^(0+128),w
  3094  0405  1D03               	skipz
  3095  0406  2C0A               	goto	u1705
  3096  0407  3007               	movlw	7
  3097  0408  0142               	movlb	2	; select bank2
  3098  0409  0247               	subwf	main@j_1167^(0+256),w
  3099  040A                     u1705:
  3100  040A  1C03               	skipc
  3101  040B  2C0D               	goto	u1701
  3102  040C  2C0E               	goto	u1700
  3103  040D                     u1701:
  3104  040D  2BE9               	goto	l2731
  3105  040E                     u1700:
  3106  040E                     l2737:
  3107                           
  3108                           ;main.c: 320:     }
  3109  040E  3001               	movlw	1
  3110  040F  0142               	movlb	2	; select bank2
  3111  0410  07C3               	addwf	main@i^(0+256),f
  3112  0411  3000               	movlw	0
  3113  0412  3DC4               	addwfc	(main@i+1)^(0+256),f
  3114  0413  0844               	movf	(main@i+1)^(0+256),w
  3115  0414  3A80               	xorlw	128
  3116  0415  0141               	movlb	1	; select bank1
  3117  0416  00E8               	movwf	??_main^(0+128)
  3118  0417  3080               	movlw	128
  3119  0418  0268               	subwf	??_main^(0+128),w
  3120  0419  1D03               	skipz
  3121  041A  2C1E               	goto	u1715
  3122  041B  300F               	movlw	15
  3123  041C  0142               	movlb	2	; select bank2
  3124  041D  0243               	subwf	main@i^(0+256),w
  3125  041E                     u1715:
  3126  041E  1C03               	skipc
  3127  041F  2C21               	goto	u1711
  3128  0420  2C22               	goto	u1710
  3129  0421                     u1711:
  3130  0421  2B79               	goto	l2699
  3131  0422                     u1710:
  3132  0422                     l531:	
  3133                           ;main.c: 328:     while (1)
  3134                           
  3135                           
  3136                           ;main.c: 329:     {;main.c: 330:         T0CON0bits.T0EN = 1;
  3137  0422  014B               	movlb	11	; select bank11
  3138  0423  179E               	bsf	30,7	;volatile
  3139  0424                     l2739:
  3140                           
  3141                           ;main.c: 331:         shiftBytes(0x02, 0x01);
  3142  0424  01F3               	clrf	shiftBytes@lowSide
  3143  0425  0AF3               	incf	shiftBytes@lowSide,f
  3144  0426  3002               	movlw	2
  3145  0427  318F  27B2  3183   	fcall	_shiftBytes
  3146  042A                     l2741:
  3147  042A  0140               	movlb	0	; select bank0
  3148  042B  111A               	bcf	26,2	;volatile
  3149  042C                     l2743:
  3150  042C  101A               	bcf	26,0	;volatile
  3151  042D                     l2745:
  3152                           
  3153                           ;main.c: 334:         if (presses && TMR0_complete)
  3154  042D  0849               	movf	_presses,w
  3155  042E  1903               	btfsc	3,2
  3156  042F  2C31               	goto	u1721
  3157  0430  2C32               	goto	u1720
  3158  0431                     u1721:
  3159  0431  2D4D               	goto	l2787
  3160  0432                     u1720:
  3161  0432                     l2747:
  3162  0432  084B               	movf	_TMR0_complete,w
  3163  0433  1903               	btfsc	3,2
  3164  0434  2C36               	goto	u1731
  3165  0435  2C37               	goto	u1730
  3166  0436                     u1731:
  3167  0436  2D4D               	goto	l2787
  3168  0437                     u1730:
  3169  0437                     l2749:
  3170                           
  3171                           ;main.c: 335:         {;main.c: 336:             T0CON0bits.T0EN = 0;
  3172  0437  014B               	movlb	11	; select bank11
  3173  0438  139E               	bcf	30,7	;volatile
  3174                           
  3175                           ;main.c: 339:             switch (presses)
  3176  0439  2CBF               	goto	l2767
  3177  043A                     l2751:
  3178                           
  3179                           ;main.c: 342:                     light_array[0] = 0x88;
  3180  043A  3088               	movlw	136
  3181  043B  00E8               	movwf	??_main^(0+128)
  3182  043C  0868               	movf	??_main^(0+128),w
  3183  043D  0140               	movlb	0	; select bank0
  3184  043E  00BF               	movwf	_light_array
  3185                           
  3186                           ;main.c: 343:                     light_array[1] = 0x44;
  3187  043F  3044               	movlw	68
  3188  0440  0141               	movlb	1	; select bank1
  3189  0441  00E8               	movwf	??_main^(0+128)
  3190  0442  0868               	movf	??_main^(0+128),w
  3191  0443  0140               	movlb	0	; select bank0
  3192  0444  00C0               	movwf	_light_array+1
  3193                           
  3194                           ;main.c: 344:                     light_array[2] = 0x22;
  3195  0445  3022               	movlw	34
  3196  0446  0141               	movlb	1	; select bank1
  3197  0447  00E8               	movwf	??_main^(0+128)
  3198  0448  0868               	movf	??_main^(0+128),w
  3199  0449  0140               	movlb	0	; select bank0
  3200  044A  00C1               	movwf	_light_array+2
  3201                           
  3202                           ;main.c: 345:                     light_array[3] = 0x11;
  3203  044B  3011               	movlw	17
  3204  044C  0141               	movlb	1	; select bank1
  3205  044D  00E8               	movwf	??_main^(0+128)
  3206  044E  0868               	movf	??_main^(0+128),w
  3207  044F  0140               	movlb	0	; select bank0
  3208  0450  00C2               	movwf	_light_array+3
  3209                           
  3210                           ;main.c: 346:                     light_array[4] = 0x88;
  3211  0451  3088               	movlw	136
  3212  0452  0141               	movlb	1	; select bank1
  3213  0453  00E8               	movwf	??_main^(0+128)
  3214  0454  0868               	movf	??_main^(0+128),w
  3215  0455  0140               	movlb	0	; select bank0
  3216  0456  00C3               	movwf	_light_array+4
  3217                           
  3218                           ;main.c: 347:                     light_array[5] = 0x44;
  3219  0457  3044               	movlw	68
  3220  0458  0141               	movlb	1	; select bank1
  3221  0459  00E8               	movwf	??_main^(0+128)
  3222  045A  0868               	movf	??_main^(0+128),w
  3223  045B  0140               	movlb	0	; select bank0
  3224  045C  00C4               	movwf	_light_array+5
  3225                           
  3226                           ;main.c: 348:                     light_array[6] = 0x22;
  3227  045D  3022               	movlw	34
  3228  045E  0141               	movlb	1	; select bank1
  3229  045F  00E8               	movwf	??_main^(0+128)
  3230  0460  0868               	movf	??_main^(0+128),w
  3231  0461  0140               	movlb	0	; select bank0
  3232  0462  00C5               	movwf	_light_array+6
  3233  0463                     l2753:
  3234                           
  3235                           ;main.c: 349:                     silent_night_playing = 1;
  3236  0463  01CE               	clrf	_silent_night_playing
  3237  0464  0ACE               	incf	_silent_night_playing,f
  3238                           
  3239                           ;main.c: 350:                     break;
  3240  0465  2CD4               	goto	l539
  3241  0466                     l2755:
  3242                           
  3243                           ;main.c: 352:                     light_array[0] = 0xFE;
  3244  0466  30FE               	movlw	254
  3245  0467  00E8               	movwf	??_main^(0+128)
  3246  0468  0868               	movf	??_main^(0+128),w
  3247  0469  0140               	movlb	0	; select bank0
  3248  046A  00BF               	movwf	_light_array
  3249                           
  3250                           ;main.c: 353:                     light_array[1] = 0xFE;
  3251  046B  30FE               	movlw	254
  3252  046C  0141               	movlb	1	; select bank1
  3253  046D  00E8               	movwf	??_main^(0+128)
  3254  046E  0868               	movf	??_main^(0+128),w
  3255  046F  0140               	movlb	0	; select bank0
  3256  0470  00C0               	movwf	_light_array+1
  3257                           
  3258                           ;main.c: 354:                     light_array[2] = 0xFE;
  3259  0471  30FE               	movlw	254
  3260  0472  0141               	movlb	1	; select bank1
  3261  0473  00E8               	movwf	??_main^(0+128)
  3262  0474  0868               	movf	??_main^(0+128),w
  3263  0475  0140               	movlb	0	; select bank0
  3264  0476  00C1               	movwf	_light_array+2
  3265                           
  3266                           ;main.c: 355:                     light_array[3] = 0xFE;
  3267  0477  30FE               	movlw	254
  3268  0478  0141               	movlb	1	; select bank1
  3269  0479  00E8               	movwf	??_main^(0+128)
  3270  047A  0868               	movf	??_main^(0+128),w
  3271  047B  0140               	movlb	0	; select bank0
  3272  047C  00C2               	movwf	_light_array+3
  3273                           
  3274                           ;main.c: 356:                     light_array[4] = 0xFE;
  3275  047D  30FE               	movlw	254
  3276  047E  0141               	movlb	1	; select bank1
  3277  047F  00E8               	movwf	??_main^(0+128)
  3278  0480  0868               	movf	??_main^(0+128),w
  3279  0481  0140               	movlb	0	; select bank0
  3280  0482  00C3               	movwf	_light_array+4
  3281                           
  3282                           ;main.c: 357:                     light_array[5] = 0xFE;
  3283  0483  30FE               	movlw	254
  3284  0484  0141               	movlb	1	; select bank1
  3285  0485  00E8               	movwf	??_main^(0+128)
  3286  0486  0868               	movf	??_main^(0+128),w
  3287  0487  0140               	movlb	0	; select bank0
  3288  0488  00C4               	movwf	_light_array+5
  3289                           
  3290                           ;main.c: 358:                     light_array[6] = 0xFE;
  3291  0489  30FE               	movlw	254
  3292  048A  0141               	movlb	1	; select bank1
  3293  048B  00E8               	movwf	??_main^(0+128)
  3294  048C  0868               	movf	??_main^(0+128),w
  3295  048D  0140               	movlb	0	; select bank0
  3296  048E  00C5               	movwf	_light_array+6
  3297  048F                     l2757:
  3298                           
  3299                           ;main.c: 359:                     song2_playing = 1;
  3300  048F  01CC               	clrf	_song2_playing
  3301  0490  0ACC               	incf	_song2_playing,f
  3302                           
  3303                           ;main.c: 360:                     break;
  3304  0491  2CD4               	goto	l539
  3305  0492                     l2759:
  3306                           
  3307                           ;main.c: 372:                     light_array[0] = 0xFF;
  3308  0492  30FF               	movlw	255
  3309  0493  00E8               	movwf	??_main^(0+128)
  3310  0494  0868               	movf	??_main^(0+128),w
  3311  0495  0140               	movlb	0	; select bank0
  3312  0496  00BF               	movwf	_light_array
  3313                           
  3314                           ;main.c: 373:                     light_array[1] = 0xFF;
  3315  0497  30FF               	movlw	255
  3316  0498  0141               	movlb	1	; select bank1
  3317  0499  00E8               	movwf	??_main^(0+128)
  3318  049A  0868               	movf	??_main^(0+128),w
  3319  049B  0140               	movlb	0	; select bank0
  3320  049C  00C0               	movwf	_light_array+1
  3321                           
  3322                           ;main.c: 374:                     light_array[2] = 0xFF;
  3323  049D  30FF               	movlw	255
  3324  049E  0141               	movlb	1	; select bank1
  3325  049F  00E8               	movwf	??_main^(0+128)
  3326  04A0  0868               	movf	??_main^(0+128),w
  3327  04A1  0140               	movlb	0	; select bank0
  3328  04A2  00C1               	movwf	_light_array+2
  3329                           
  3330                           ;main.c: 375:                     light_array[3] = 0xFF;
  3331  04A3  30FF               	movlw	255
  3332  04A4  0141               	movlb	1	; select bank1
  3333  04A5  00E8               	movwf	??_main^(0+128)
  3334  04A6  0868               	movf	??_main^(0+128),w
  3335  04A7  0140               	movlb	0	; select bank0
  3336  04A8  00C2               	movwf	_light_array+3
  3337                           
  3338                           ;main.c: 376:                     light_array[4] = 0xFF;
  3339  04A9  30FF               	movlw	255
  3340  04AA  0141               	movlb	1	; select bank1
  3341  04AB  00E8               	movwf	??_main^(0+128)
  3342  04AC  0868               	movf	??_main^(0+128),w
  3343  04AD  0140               	movlb	0	; select bank0
  3344  04AE  00C3               	movwf	_light_array+4
  3345                           
  3346                           ;main.c: 377:                     light_array[5] = 0xFF;
  3347  04AF  30FF               	movlw	255
  3348  04B0  0141               	movlb	1	; select bank1
  3349  04B1  00E8               	movwf	??_main^(0+128)
  3350  04B2  0868               	movf	??_main^(0+128),w
  3351  04B3  0140               	movlb	0	; select bank0
  3352  04B4  00C4               	movwf	_light_array+5
  3353                           
  3354                           ;main.c: 378:                     light_array[6] = 0xFF;
  3355  04B5  30FF               	movlw	255
  3356  04B6  0141               	movlb	1	; select bank1
  3357  04B7  00E8               	movwf	??_main^(0+128)
  3358  04B8  0868               	movf	??_main^(0+128),w
  3359  04B9  0140               	movlb	0	; select bank0
  3360  04BA  00C5               	movwf	_light_array+6
  3361  04BB                     l2761:
  3362                           
  3363                           ;main.c: 379:                     cole_counter = 0;
  3364  04BB  01C8               	clrf	_cole_counter
  3365  04BC                     l2763:
  3366                           
  3367                           ;main.c: 382:                     song3_playing = 1;
  3368  04BC  01CD               	clrf	_song3_playing
  3369  04BD  0ACD               	incf	_song3_playing,f
  3370                           
  3371                           ;main.c: 383:                     break;
  3372  04BE  2CD4               	goto	l539
  3373  04BF                     l2767:
  3374  04BF  0140               	movlb	0	; select bank0
  3375  04C0  0849               	movf	_presses,w
  3376  04C1  0141               	movlb	1	; select bank1
  3377  04C2  00E8               	movwf	??_main^(0+128)
  3378  04C3  01E9               	clrf	(??_main^(0+128)+1)
  3379                           
  3380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3381                           ; Switch size 1, requested type "simple"
  3382                           ; Number of cases is 1, Range of values is 0 to 0
  3383                           ; switch strategies available:
  3384                           ; Name         Instructions Cycles
  3385                           ; simple_byte            4     3 (average)
  3386                           ; direct_byte            8     6 (fixed)
  3387                           ; jumptable            260     6 (fixed)
  3388                           ;	Chosen strategy is simple_byte
  3389  04C4  0869               	movf	(??_main+1)^(0+128),w
  3390  04C5  3A00               	xorlw	0	; case 0
  3391  04C6  1903               	skipnz
  3392  04C7  2CC9               	goto	l2821
  3393  04C8  2CD4               	goto	l539
  3394  04C9                     l2821:
  3395                           
  3396                           ; Switch size 1, requested type "simple"
  3397                           ; Number of cases is 3, Range of values is 1 to 3
  3398                           ; switch strategies available:
  3399                           ; Name         Instructions Cycles
  3400                           ; simple_byte           10     6 (average)
  3401                           ; direct_byte           15     9 (fixed)
  3402                           ; jumptable            263     9 (fixed)
  3403                           ;	Chosen strategy is simple_byte
  3404  04C9  0868               	movf	??_main^(0+128),w
  3405  04CA  3A01               	xorlw	1	; case 1
  3406  04CB  1903               	skipnz
  3407  04CC  2C3A               	goto	l2751
  3408  04CD  3A03               	xorlw	3	; case 2
  3409  04CE  1903               	skipnz
  3410  04CF  2C66               	goto	l2755
  3411  04D0  3A01               	xorlw	1	; case 3
  3412  04D1  1903               	skipnz
  3413  04D2  2C92               	goto	l2759
  3414  04D3  2CD4               	goto	l539
  3415  04D4                     l539:
  3416                           
  3417                           ;main.c: 385:             T1CONbits.TMR1ON = 1;
  3418  04D4  0144               	movlb	4	; select bank4
  3419  04D5  140E               	bsf	14,0	;volatile
  3420                           
  3421                           ;main.c: 386:             T2CONbits.TMR2ON = 1;
  3422  04D6  0145               	movlb	5	; select bank5
  3423  04D7  178E               	bsf	14,7	;volatile
  3424                           
  3425                           ;main.c: 389:             while (presses == 1)
  3426  04D8  2D02               	goto	l2771
  3427  04D9                     l2769:
  3428                           
  3429                           ;main.c: 390:             {;main.c: 391:                 playNote(silent_night[count], s
      +                          ilent_night_pre[count]);
  3430  04D9  30DC               	movlw	220
  3431  04DA  0141               	movlb	1	; select bank1
  3432  04DB  00E8               	movwf	??_main^(0+128)
  3433  04DC  3022               	movlw	34
  3434  04DD  00E9               	movwf	(??_main^(0+128)+1)
  3435  04DE  0140               	movlb	0	; select bank0
  3436  04DF  0846               	movf	_count,w
  3437  04E0  0141               	movlb	1	; select bank1
  3438  04E1  0768               	addwf	??_main^(0+128),w
  3439  04E2  0086               	movwf	6
  3440  04E3  0140               	movlb	0	; select bank0
  3441  04E4  0847               	movf	_count+1,w
  3442  04E5  0141               	movlb	1	; select bank1
  3443  04E6  3D69               	addwfc	(??_main+1)^(0+128),w
  3444  04E7  0087               	movwf	7
  3445  04E8  0801               	movf	1,w
  3446  04E9  00EA               	movwf	(??_main+2)^(0+128)
  3447  04EA  086A               	movf	(??_main+2)^(0+128),w
  3448  04EB  00F2               	movwf	playNote@prescale
  3449  04EC  3066               	movlw	102
  3450  04ED  00EB               	movwf	(??_main+3)^(0+128)
  3451  04EE  3023               	movlw	35
  3452  04EF  00EC               	movwf	((??_main+3)^(0+128)+1)
  3453  04F0  0140               	movlb	0	; select bank0
  3454  04F1  0846               	movf	_count,w
  3455  04F2  0141               	movlb	1	; select bank1
  3456  04F3  076B               	addwf	(??_main+3)^(0+128),w
  3457  04F4  0086               	movwf	6
  3458  04F5  0140               	movlb	0	; select bank0
  3459  04F6  0847               	movf	_count+1,w
  3460  04F7  0141               	movlb	1	; select bank1
  3461  04F8  3D6C               	addwfc	(??_main+4)^(0+128),w
  3462  04F9  0087               	movwf	7
  3463  04FA  0801               	movf	1,w
  3464  04FB  3187  2764  3183   	fcall	_playNote
  3465                           
  3466                           ;main.c: 392:                 displayMatrix(light_array);
  3467  04FE  303F               	movlw	(low (_light_array| 0))& (0+255)
  3468  04FF  3186  26C0  3183   	fcall	_displayMatrix
  3469  0502                     l2771:
  3470                           
  3471                           ;main.c: 389:             while (presses == 1)
  3472  0502  0140               	movlb	0	; select bank0
  3473  0503  0349               	decf	_presses,w
  3474  0504  1903               	btfsc	3,2
  3475  0505  2D07               	goto	u1741
  3476  0506  2D08               	goto	u1740
  3477  0507                     u1741:
  3478  0507  2CD9               	goto	l2769
  3479  0508                     u1740:
  3480  0508  2D1F               	goto	l2775
  3481  0509                     l2773:
  3482                           
  3483                           ;main.c: 396:             {;main.c: 397:                 playNote(song2[count], song2_pr
      +                          e[count]);
  3484  0509  0846               	movf	_count,w
  3485  050A  3EC0               	addlw	(low (_song2_pre| 0))& (0+255)
  3486  050B  0086               	movwf	6
  3487  050C  0187               	clrf	7
  3488  050D  0801               	movf	1,w
  3489  050E  0141               	movlb	1	; select bank1
  3490  050F  00E8               	movwf	??_main^(0+128)
  3491  0510  0868               	movf	??_main^(0+128),w
  3492  0511  00F2               	movwf	playNote@prescale
  3493  0512  0140               	movlb	0	; select bank0
  3494  0513  0846               	movf	_count,w
  3495  0514  3ED2               	addlw	(low (_song2| 0))& (0+255)
  3496  0515  0086               	movwf	6
  3497  0516  0187               	clrf	7
  3498  0517  0801               	movf	1,w
  3499  0518  3187  2764  3183   	fcall	_playNote
  3500                           
  3501                           ;main.c: 398:                 displayMatrix(light_array);
  3502  051B  303F               	movlw	(low (_light_array| 0))& (0+255)
  3503  051C  3186  26C0  3183   	fcall	_displayMatrix
  3504  051F                     l2775:
  3505                           
  3506                           ;main.c: 395:             while (presses == 2)
  3507  051F  3002               	movlw	2
  3508  0520  0140               	movlb	0	; select bank0
  3509  0521  0649               	xorwf	_presses,w
  3510  0522  1903               	btfsc	3,2
  3511  0523  2D25               	goto	u1751
  3512  0524  2D26               	goto	u1750
  3513  0525                     u1751:
  3514  0525  2D09               	goto	l2773
  3515  0526                     u1750:
  3516  0526  2D3E               	goto	l2779
  3517  0527                     l2777:
  3518                           
  3519                           ;main.c: 402:             {;main.c: 403:                 playNote(song3[count], song3_pr
      +                          e[count]);
  3520  0527  0846               	movf	_count,w
  3521  0528  3E20               	addlw	(low (_song3_pre| (0+256)))& (0+255)
  3522  0529  0086               	movwf	6
  3523  052A  3001               	movlw	1	; select bank2/3
  3524  052B  0087               	movwf	7
  3525  052C  0801               	movf	1,w
  3526  052D  0141               	movlb	1	; select bank1
  3527  052E  00E8               	movwf	??_main^(0+128)
  3528  052F  0868               	movf	??_main^(0+128),w
  3529  0530  00F2               	movwf	playNote@prescale
  3530  0531  0140               	movlb	0	; select bank0
  3531  0532  0846               	movf	_count,w
  3532  0533  3EA0               	addlw	(low (_song3| 0))& (0+255)
  3533  0534  0086               	movwf	6
  3534  0535  0187               	clrf	7
  3535  0536  0801               	movf	1,w
  3536  0537  3187  2764  3183   	fcall	_playNote
  3537                           
  3538                           ;main.c: 404:                 displayMatrix(light_array);
  3539  053A  303F               	movlw	(low (_light_array| 0))& (0+255)
  3540  053B  3186  26C0  3183   	fcall	_displayMatrix
  3541  053E                     l2779:
  3542                           
  3543                           ;main.c: 401:             while (presses == 3)
  3544  053E  3003               	movlw	3
  3545  053F  0140               	movlb	0	; select bank0
  3546  0540  0649               	xorwf	_presses,w
  3547  0541  1903               	btfsc	3,2
  3548  0542  2D44               	goto	u1761
  3549  0543  2D45               	goto	u1760
  3550  0544                     u1761:
  3551  0544  2D27               	goto	l2777
  3552  0545                     u1760:
  3553  0545                     l2781:
  3554                           
  3555                           ;main.c: 406:             presses = 0;
  3556  0545  01C9               	clrf	_presses
  3557                           
  3558                           ;main.c: 407:             silent_night_playing = 0;
  3559  0546  01CE               	clrf	_silent_night_playing
  3560                           
  3561                           ;main.c: 408:             song2_playing = 0;
  3562  0547  01CC               	clrf	_song2_playing
  3563                           
  3564                           ;main.c: 409:             song3_playing = 0;
  3565  0548  01CD               	clrf	_song3_playing
  3566  0549                     l2783:
  3567                           
  3568                           ;main.c: 410:             T1CONbits.TMR1ON = 0;
  3569  0549  0144               	movlb	4	; select bank4
  3570  054A  100E               	bcf	14,0	;volatile
  3571  054B                     l2785:
  3572                           
  3573                           ;main.c: 411:             T2CONbits.TMR2ON = 0;
  3574  054B  0145               	movlb	5	; select bank5
  3575  054C  138E               	bcf	14,7	;volatile
  3576  054D                     l2787:
  3577                           
  3578                           ;main.c: 414:         if (TMR0_complete && (!presses))
  3579  054D  0140               	movlb	0	; select bank0
  3580  054E  084B               	movf	_TMR0_complete,w
  3581  054F  1903               	btfsc	3,2
  3582  0550  2D52               	goto	u1771
  3583  0551  2D53               	goto	u1770
  3584  0552                     u1771:
  3585  0552  2C22               	goto	l531
  3586  0553                     u1770:
  3587  0553                     l2789:
  3588  0553  0849               	movf	_presses,w
  3589  0554  1D03               	btfss	3,2
  3590  0555  2D57               	goto	u1781
  3591  0556  2D58               	goto	u1780
  3592  0557                     u1781:
  3593  0557  2C22               	goto	l531
  3594  0558                     u1780:
  3595  0558                     l2791:
  3596                           
  3597                           ;main.c: 415:         {;main.c: 416:             T0CON0bits.T0EN = 0;
  3598  0558  014B               	movlb	11	; select bank11
  3599  0559  139E               	bcf	30,7	;volatile
  3600                           
  3601                           ;main.c: 417:             T1CONbits.TMR1ON = 0;
  3602  055A  0144               	movlb	4	; select bank4
  3603  055B  100E               	bcf	14,0	;volatile
  3604                           
  3605                           ;main.c: 418:             T2CONbits.TMR2ON = 0;
  3606  055C  0145               	movlb	5	; select bank5
  3607  055D  138E               	bcf	14,7	;volatile
  3608                           
  3609                           ;main.c: 419:             PIR0bits.INTF = 0;
  3610  055E  014E               	movlb	14	; select bank14
  3611  055F  100C               	bcf	12,0	;volatile
  3612                           
  3613                           ;main.c: 420:             PIE0bits.INTE = 1;
  3614  0560  1416               	bsf	22,0	;volatile
  3615  0561                     l552:	
  3616                           ;main.c: 421:             do { LATCbits.LATC2 = 1; } while(0);
  3617                           
  3618  0561  0140               	movlb	0	; select bank0
  3619  0562  151A               	bsf	26,2	;volatile
  3620  0563                     l554:	
  3621                           ;main.c: 422:             do { LATCbits.LATC0 = 1; } while(0);
  3622                           
  3623  0563  141A               	bsf	26,0	;volatile
  3624  0564                     l555:
  3625  0564  0063               	sleep	;# 
  3626  0565  2C22               	goto	l531
  3627  0566  3180  2831         	ljmp	start
  3628  0568                     __end_of_main:
  3629                           
  3630                           	psect	text1
  3631  0764                     __ptext1:	
  3632 ;; *************** function _playNote *****************
  3633 ;; Defined at:
  3634 ;;		line 682 in file "main.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  note            1    wreg     unsigned char 
  3637 ;;  prescale        1    2[COMMON] unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  note            1    4[COMMON] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3649 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3652 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3653 ;;Total ram usage:        3 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 5
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_main
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           
  3664                           ;psect for function _playNote
  3665  0764                     _playNote:
  3666                           
  3667                           ;incstack = 0
  3668                           ; Regs used in _playNote: [wreg]
  3669                           ;playNote@note stored from wreg
  3670  0764  00F4               	movwf	playNote@note
  3671  0765                     l2641:
  3672                           
  3673                           ;main.c: 682: void playNote(uint8_t note, uint8_t prescale);main.c: 683: {;main.c: 685: 
      +                              if (note != last_note)
  3674  0765  0874               	movf	playNote@note,w
  3675  0766  0140               	movlb	0	; select bank0
  3676  0767  064A               	xorwf	_last_note,w
  3677  0768  1903               	skipnz
  3678  0769  2F6B               	goto	u1611
  3679  076A  2F6C               	goto	u1610
  3680  076B                     u1611:
  3681  076B  2F6F               	goto	l626
  3682  076C                     u1610:
  3683  076C                     l2643:
  3684                           
  3685                           ;main.c: 686:     {;main.c: 687:         T2PR = note;
  3686  076C  0874               	movf	playNote@note,w
  3687  076D  0145               	movlb	5	; select bank5
  3688  076E  008D               	movwf	13	;volatile
  3689  076F                     l626:	
  3690                           ;main.c: 688:     }
  3691                           
  3692                           
  3693                           ;main.c: 690:     if (prescale != last_prescale)
  3694  076F  0872               	movf	playNote@prescale,w
  3695  0770  0679               	xorwf	_last_prescale,w
  3696  0771  1903               	skipnz
  3697  0772  2F74               	goto	u1621
  3698  0773  2F75               	goto	u1620
  3699  0774                     u1621:
  3700  0774  2F78               	goto	l627
  3701  0775                     u1620:
  3702  0775                     l2645:
  3703                           
  3704                           ;main.c: 691:     {;main.c: 692:         T2CON = prescale;
  3705  0775  0872               	movf	playNote@prescale,w
  3706  0776  0145               	movlb	5	; select bank5
  3707  0777  008E               	movwf	14	;volatile
  3708  0778                     l627:	
  3709                           ;main.c: 693:     }
  3710                           
  3711                           
  3712                           ;main.c: 694:     last_note = note;
  3713  0778  0874               	movf	playNote@note,w
  3714  0779  00F3               	movwf	??_playNote
  3715  077A  0873               	movf	??_playNote,w
  3716  077B  0140               	movlb	0	; select bank0
  3717  077C  00CA               	movwf	_last_note
  3718                           
  3719                           ;main.c: 695:     last_prescale = prescale;
  3720  077D  0872               	movf	playNote@prescale,w
  3721  077E  00F3               	movwf	??_playNote
  3722  077F  0873               	movf	??_playNote,w
  3723  0780  00F9               	movwf	_last_prescale
  3724  0781                     l628:
  3725  0781  0008               	return
  3726  0782                     __end_of_playNote:
  3727                           
  3728                           	psect	text2
  3729  06C0                     __ptext2:	
  3730 ;; *************** function _displayMatrix *****************
  3731 ;; Defined at:
  3732 ;;		line 720 in file "main.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  states          1    wreg     PTR unsigned char 
  3735 ;;		 -> light_array(7), 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  states          1    0[BANK1 ] PTR unsigned char 
  3738 ;;		 -> light_array(7), 
  3739 ;;  i               2    1[BANK1 ] int 
  3740 ;;  lowSide         1    3[BANK1 ] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3753 ;;      Totals:         2       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3754 ;;Total ram usage:        6 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 7
  3757 ;; This function calls:
  3758 ;;		_shiftBytes
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _displayMatrix
  3766  06C0                     _displayMatrix:
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in _displayMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3770                           ;displayMatrix@states stored from wreg
  3771  06C0  0141               	movlb	1	; select bank1
  3772  06C1  00E4               	movwf	displayMatrix@states^(0+128)
  3773  06C2                     l2621:
  3774                           
  3775                           ;main.c: 720: void displayMatrix(uint8_t states[8]);main.c: 721: {;main.c: 724:     uint
      +                          8_t lowSide = 0x00;
  3776  06C2  01E7               	clrf	displayMatrix@lowSide^(0+128)
  3777                           
  3778                           ;main.c: 725:     for (int i = 0; i < 7; i++)
  3779  06C3  01E5               	clrf	displayMatrix@i^(0+128)
  3780  06C4  01E6               	clrf	(displayMatrix@i+1)^(0+128)
  3781  06C5                     l2627:
  3782                           
  3783                           ;main.c: 726:     {;main.c: 727:         if (!lowSide)
  3784  06C5  0141               	movlb	1	; select bank1
  3785  06C6  0867               	movf	displayMatrix@lowSide^(0+128),w
  3786  06C7  1D03               	btfss	3,2
  3787  06C8  2ECA               	goto	u1591
  3788  06C9  2ECB               	goto	u1590
  3789  06CA                     u1591:
  3790  06CA  2ED0               	goto	l2631
  3791  06CB                     u1590:
  3792  06CB                     l2629:
  3793                           
  3794                           ;main.c: 728:         {;main.c: 729:             lowSide++;
  3795  06CB  3001               	movlw	1
  3796  06CC  00F5               	movwf	??_displayMatrix
  3797  06CD  0875               	movf	??_displayMatrix,w
  3798  06CE  07E7               	addwf	displayMatrix@lowSide^(0+128),f
  3799                           
  3800                           ;main.c: 730:         }
  3801  06CF  2ED4               	goto	l2633
  3802  06D0                     l2631:
  3803                           
  3804                           ;main.c: 732:         {;main.c: 733:             lowSide = lowSide << 1;
  3805  06D0  3567               	lslf	displayMatrix@lowSide^(0+128),w
  3806  06D1  00F5               	movwf	??_displayMatrix
  3807  06D2  0875               	movf	??_displayMatrix,w
  3808  06D3  00E7               	movwf	displayMatrix@lowSide^(0+128)
  3809  06D4                     l2633:
  3810                           
  3811                           ;main.c: 736:         shiftBytes(states[i], lowSide);
  3812  06D4  0867               	movf	displayMatrix@lowSide^(0+128),w
  3813  06D5  00F5               	movwf	??_displayMatrix
  3814  06D6  0875               	movf	??_displayMatrix,w
  3815  06D7  00F3               	movwf	shiftBytes@lowSide
  3816  06D8  0865               	movf	displayMatrix@i^(0+128),w
  3817  06D9  0764               	addwf	displayMatrix@states^(0+128),w
  3818  06DA  00F6               	movwf	??_displayMatrix+1
  3819  06DB  0876               	movf	??_displayMatrix+1,w
  3820  06DC  0086               	movwf	6
  3821  06DD  0187               	clrf	7
  3822  06DE  0801               	movf	1,w
  3823  06DF  318F  27B2  3186   	fcall	_shiftBytes
  3824  06E2                     l2635:
  3825                           
  3826                           ;main.c: 737:         _delay((unsigned long)((1)*(8000000/4000.0)));
  3827  06E2  3003               	movlw	3
  3828  06E3  00F5               	movwf	??_displayMatrix
  3829  06E4  3098               	movlw	152
  3830  06E5                     u1797:
  3831  06E5  0B89               	decfsz	9,f
  3832  06E6  2EE5               	goto	u1797
  3833  06E7  0BF5               	decfsz	??_displayMatrix,f
  3834  06E8  2EE5               	goto	u1797
  3835  06E9                     l2637:
  3836                           
  3837                           ;main.c: 738:     }
  3838  06E9  3001               	movlw	1
  3839  06EA  0141               	movlb	1	; select bank1
  3840  06EB  07E5               	addwf	displayMatrix@i^(0+128),f
  3841  06EC  3000               	movlw	0
  3842  06ED  3DE6               	addwfc	(displayMatrix@i+1)^(0+128),f
  3843  06EE                     l2639:
  3844  06EE  0866               	movf	(displayMatrix@i+1)^(0+128),w
  3845  06EF  3A80               	xorlw	128
  3846  06F0  00F5               	movwf	??_displayMatrix
  3847  06F1  3080               	movlw	128
  3848  06F2  0275               	subwf	??_displayMatrix,w
  3849  06F3  1D03               	skipz
  3850  06F4  2EF7               	goto	u1605
  3851  06F5  3007               	movlw	7
  3852  06F6  0265               	subwf	displayMatrix@i^(0+128),w
  3853  06F7                     u1605:
  3854  06F7  1C03               	skipc
  3855  06F8  2EFA               	goto	u1601
  3856  06F9  2EFB               	goto	u1600
  3857  06FA                     u1601:
  3858  06FA  2EC5               	goto	l2627
  3859  06FB                     u1600:
  3860  06FB                     l649:
  3861  06FB  0008               	return
  3862  06FC                     __end_of_displayMatrix:
  3863                           
  3864                           	psect	text3
  3865  0FB2                     __ptext3:	
  3866 ;; *************** function _shiftBytes *****************
  3867 ;; Defined at:
  3868 ;;		line 708 in file "main.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  highSide        1    wreg     unsigned char 
  3871 ;;  lowSide         1    3[COMMON] unsigned char 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  highSide        1    4[COMMON] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0, pclath, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3883 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3887 ;;Total ram usage:        2 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 6
  3890 ;; This function calls:
  3891 ;;		_SPI1_ExchangeByte
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;;		_displayMatrix
  3895 ;;		_Initialize_Matrix
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           
  3900                           ;psect for function _shiftBytes
  3901  0FB2                     _shiftBytes:
  3902                           
  3903                           ;incstack = 0
  3904                           ; Regs used in _shiftBytes: [wreg+status,2+status,0+pclath+cstack]
  3905                           ;shiftBytes@highSide stored from wreg
  3906  0FB2  00F4               	movwf	shiftBytes@highSide
  3907  0FB3                     l2601:
  3908                           
  3909                           ;main.c: 708: void shiftBytes(uint8_t highSide, uint8_t lowSide);main.c: 709: {;main.c: 
      +                          711:     SPI1_ExchangeByte(lowSide);
  3910  0FB3  0873               	movf	shiftBytes@lowSide,w
  3911  0FB4  318F  27A5  318F   	fcall	_SPI1_ExchangeByte
  3912                           
  3913                           ;main.c: 712:     SPI1_ExchangeByte(highSide);
  3914  0FB7  0874               	movf	shiftBytes@highSide,w
  3915  0FB8  318F  27A5  318F   	fcall	_SPI1_ExchangeByte
  3916  0FBB                     l2603:
  3917  0FBB  0140               	movlb	0	; select bank0
  3918  0FBC  161A               	bsf	26,4	;volatile
  3919  0FBD                     l2605:
  3920  0FBD  121A               	bcf	26,4	;volatile
  3921  0FBE                     l642:
  3922  0FBE  0008               	return
  3923  0FBF                     __end_of_shiftBytes:
  3924                           
  3925                           	psect	text4
  3926  0FA5                     __ptext4:	
  3927 ;; *************** function _SPI1_ExchangeByte *****************
  3928 ;; Defined at:
  3929 ;;		line 97 in file "mcc_generated_files/spi1.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  data            1    wreg     unsigned char 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  data            1    2[COMMON] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      unsigned char 
  3936 ;; Registers used:
  3937 ;;		wreg
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;Total ram usage:        1 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 5
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_shiftBytes
  3954 ;;		_SPI1_WriteBlock
  3955 ;;		_SPI1_ReadBlock
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           
  3960                           ;psect for function _SPI1_ExchangeByte
  3961  0FA5                     _SPI1_ExchangeByte:
  3962                           
  3963                           ;incstack = 0
  3964                           ; Regs used in _SPI1_ExchangeByte: [wreg]
  3965                           ;SPI1_ExchangeByte@data stored from wreg
  3966  0FA5  00F2               	movwf	SPI1_ExchangeByte@data
  3967  0FA6                     l2493:
  3968                           
  3969                           ;mcc_generated_files/spi1.c: 97: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 98: {;mcc_generated_files/spi1.c: 99:     SSP1BUF = data;
  3970  0FA6  0872               	movf	SPI1_ExchangeByte@data,w
  3971  0FA7  0143               	movlb	3	; select bank3
  3972  0FA8  008C               	movwf	12	;volatile
  3973  0FA9                     l74:	
  3974                           ;mcc_generated_files/spi1.c: 100:     while(!PIR1bits.SSP1IF);
  3975                           
  3976  0FA9  014E               	movlb	14	; select bank14
  3977  0FAA  1C8D               	btfss	13,1	;volatile
  3978  0FAB  2FAD               	goto	u1581
  3979  0FAC  2FAE               	goto	u1580
  3980  0FAD                     u1581:
  3981  0FAD  2FA9               	goto	l74
  3982  0FAE                     u1580:
  3983  0FAE                     l76:
  3984                           
  3985                           ;mcc_generated_files/spi1.c: 101:     PIR1bits.SSP1IF = 0;
  3986  0FAE  108D               	bcf	13,1	;volatile
  3987  0FAF                     l2495:
  3988                           
  3989                           ;mcc_generated_files/spi1.c: 102:     return SSP1BUF;
  3990  0FAF  0143               	movlb	3	; select bank3
  3991  0FB0  080C               	movf	12,w	;volatile
  3992  0FB1                     l77:
  3993  0FB1  0008               	return
  3994  0FB2                     __end_of_SPI1_ExchangeByte:
  3995                           
  3996                           	psect	text5
  3997  0782                     __ptext5:	
  3998 ;; *************** function _SYSTEM_Initialize *****************
  3999 ;; Defined at:
  4000 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;		None
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0, pclath, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4018 ;;Total ram usage:        0 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; Hardware stack levels required when called: 7
  4021 ;; This function calls:
  4022 ;;		_EXT_INT_Initialize
  4023 ;;		_OSCILLATOR_Initialize
  4024 ;;		_PIN_MANAGER_Initialize
  4025 ;;		_PWM3_Initialize
  4026 ;;		_SPI1_Initialize
  4027 ;;		_TMR0_Initialize
  4028 ;;		_TMR1_Initialize
  4029 ;;		_TMR2_Initialize
  4030 ;;		_WDT_Initialize
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           
  4037                           ;psect for function _SYSTEM_Initialize
  4038  0782                     _SYSTEM_Initialize:
  4039  0782                     l2607:	
  4040                           ;incstack = 0
  4041                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4042                           
  4043                           
  4044                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  4045  0782  3187  27EA  3187   	fcall	_SPI1_Initialize
  4046                           
  4047                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4048  0785  3186  26FC  3187   	fcall	_PIN_MANAGER_Initialize
  4049                           
  4050                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4051  0788  318F  2765  3187   	fcall	_OSCILLATOR_Initialize
  4052  078B                     l2609:
  4053                           
  4054                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4055  078B  318F  274C  3187   	fcall	_WDT_Initialize
  4056  078E                     l2611:
  4057                           
  4058                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  4059  078E  318F  2777  3187   	fcall	_PWM3_Initialize
  4060  0791                     l2613:
  4061                           
  4062                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  4063  0791  318F  27BF  3187   	fcall	_TMR2_Initialize
  4064  0794                     l2615:
  4065                           
  4066                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  4067  0794  3187  2744  3187   	fcall	_TMR1_Initialize
  4068  0797                     l2617:
  4069                           
  4070                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
  4071  0797  318F  2798  3187   	fcall	_EXT_INT_Initialize
  4072  079A                     l2619:
  4073                           
  4074                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4075  079A  3187  27BA  3187   	fcall	_TMR0_Initialize
  4076  079D                     l29:
  4077  079D  0008               	return
  4078  079E                     __end_of_SYSTEM_Initialize:
  4079                           
  4080                           	psect	text6
  4081  0F4C                     __ptext6:	
  4082 ;; *************** function _WDT_Initialize *****************
  4083 ;; Defined at:
  4084 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		status,2
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;Total ram usage:        0 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 5
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_SYSTEM_Initialize
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           
  4113                           ;psect for function _WDT_Initialize
  4114  0F4C                     _WDT_Initialize:
  4115  0F4C                     l2551:	
  4116                           ;incstack = 0
  4117                           ; Regs used in _WDT_Initialize: [status,2]
  4118                           
  4119                           
  4120                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x00;
  4121  0F4C  0150               	movlb	16	; select bank16
  4122  0F4D  018C               	clrf	12	;volatile
  4123  0F4E                     l35:
  4124  0F4E  0008               	return
  4125  0F4F                     __end_of_WDT_Initialize:
  4126                           
  4127                           	psect	text7
  4128  0FBF                     __ptext7:	
  4129 ;; *************** function _TMR2_Initialize *****************
  4130 ;; Defined at:
  4131 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 5
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_SYSTEM_Initialize
  4156 ;;		_main
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function _TMR2_Initialize
  4162  0FBF                     _TMR2_Initialize:
  4163  0FBF                     l2555:	
  4164                           ;incstack = 0
  4165                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4166                           
  4167                           
  4168                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  4169  0FBF  3001               	movlw	1
  4170  0FC0  0145               	movlb	5	; select bank5
  4171  0FC1  0090               	movwf	16	;volatile
  4172  0FC2                     l2557:
  4173                           
  4174                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  4175  0FC2  018F               	clrf	15	;volatile
  4176  0FC3                     l2559:
  4177                           
  4178                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  4179  0FC3  0191               	clrf	17	;volatile
  4180                           
  4181                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  4182  0FC4  30FF               	movlw	255
  4183  0FC5  008D               	movwf	13	;volatile
  4184  0FC6                     l2561:
  4185                           
  4186                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  4187  0FC6  018C               	clrf	12	;volatile
  4188  0FC7                     l2563:
  4189                           
  4190                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  4191  0FC7  014E               	movlb	14	; select bank14
  4192  0FC8  130D               	bcf	13,6	;volatile
  4193  0FC9                     l2565:
  4194                           
  4195                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  4196  0FC9  30B0               	movlw	176
  4197  0FCA  0145               	movlb	5	; select bank5
  4198  0FCB  008E               	movwf	14	;volatile
  4199  0FCC                     l177:
  4200  0FCC  0008               	return
  4201  0FCD                     __end_of_TMR2_Initialize:
  4202                           
  4203                           	psect	text8
  4204  0744                     __ptext8:	
  4205 ;; *************** function _TMR1_Initialize *****************
  4206 ;; Defined at:
  4207 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;Total ram usage:        0 bytes
  4226 ;; Hardware stack levels used: 1
  4227 ;; Hardware stack levels required when called: 6
  4228 ;; This function calls:
  4229 ;;		_TMR1_SetInterruptHandler
  4230 ;; This function is called by:
  4231 ;;		_SYSTEM_Initialize
  4232 ;;		_main
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function _TMR1_Initialize
  4238  0744                     _TMR1_Initialize:
  4239  0744                     l2567:	
  4240                           ;incstack = 0
  4241                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4242                           
  4243                           
  4244                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4245  0744  0144               	movlb	4	; select bank4
  4246  0745  018F               	clrf	15	;volatile
  4247                           
  4248                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  4249  0746  0190               	clrf	16	;volatile
  4250  0747                     l2569:
  4251                           
  4252                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  4253  0747  3004               	movlw	4
  4254  0748  0091               	movwf	17	;volatile
  4255  0749                     l2571:
  4256                           
  4257                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
  4258  0749  30E1               	movlw	225
  4259  074A  008D               	movwf	13	;volatile
  4260  074B                     l2573:
  4261                           
  4262                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
  4263  074B  30BA               	movlw	186
  4264  074C  008C               	movwf	12	;volatile
  4265  074D                     l2575:
  4266                           
  4267                           ;mcc_generated_files/tmr1.c: 84:     PIR1bits.TMR1IF = 0;
  4268  074D  014E               	movlb	14	; select bank14
  4269  074E  128D               	bcf	13,5	;volatile
  4270  074F                     l2577:
  4271                           
  4272                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4273  074F  0144               	movlb	4	; select bank4
  4274  0750  080D               	movf	13,w	;volatile
  4275  0751  0140               	movlb	0	; select bank0
  4276  0752  00D2               	movwf	_timer1ReloadVal+1	;volatile
  4277  0753  0144               	movlb	4	; select bank4
  4278  0754  080C               	movf	12,w	;volatile
  4279  0755  0140               	movlb	0	; select bank0
  4280  0756  00D1               	movwf	_timer1ReloadVal	;volatile
  4281  0757                     l2579:
  4282                           
  4283                           ;mcc_generated_files/tmr1.c: 90:     PIE1bits.TMR1IE = 1;
  4284  0757  014E               	movlb	14	; select bank14
  4285  0758  1697               	bsf	23,5	;volatile
  4286  0759                     l2581:
  4287                           
  4288                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4289  0759  30FF               	movlw	low _TMR1_DefaultInterruptHandler
  4290  075A  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  4291  075B  3007               	movlw	high _TMR1_DefaultInterruptHandler
  4292  075C  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  4293  075D  318F  2771  3187   	fcall	_TMR1_SetInterruptHandler
  4294  0760                     l2583:
  4295                           
  4296                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
  4297  0760  3005               	movlw	5
  4298  0761  0144               	movlb	4	; select bank4
  4299  0762  008E               	movwf	14	;volatile
  4300  0763                     l365:
  4301  0763  0008               	return
  4302  0764                     __end_of_TMR1_Initialize:
  4303                           
  4304                           	psect	text9
  4305  0F71                     __ptext9:	
  4306 ;; *************** function _TMR1_SetInterruptHandler *****************
  4307 ;; Defined at:
  4308 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4311 ;;		 -> TMR1_ISR_(1), TMR1_DefaultInterruptHandler(1), 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 5
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_TMR1_Initialize
  4334 ;;		_main
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _TMR1_SetInterruptHandler
  4340  0F71                     _TMR1_SetInterruptHandler:
  4341  0F71                     l2503:	
  4342                           ;incstack = 0
  4343                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4344                           
  4345                           
  4346                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4347  0F71  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  4348  0F72  0140               	movlb	0	; select bank0
  4349  0F73  00D0               	movwf	_TMR1_InterruptHandler+1
  4350  0F74  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  4351  0F75  00CF               	movwf	_TMR1_InterruptHandler
  4352  0F76                     l395:
  4353  0F76  0008               	return
  4354  0F77                     __end_of_TMR1_SetInterruptHandler:
  4355                           
  4356                           	psect	text10
  4357  07BA                     __ptext10:	
  4358 ;; *************** function _TMR0_Initialize *****************
  4359 ;; Defined at:
  4360 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;		None
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      void 
  4367 ;; Registers used:
  4368 ;;		wreg, status,2, status,0, pclath, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;Total ram usage:        0 bytes
  4379 ;; Hardware stack levels used: 1
  4380 ;; Hardware stack levels required when called: 6
  4381 ;; This function calls:
  4382 ;;		_TMR0_SetInterruptHandler
  4383 ;; This function is called by:
  4384 ;;		_SYSTEM_Initialize
  4385 ;;		_main
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           
  4390                           ;psect for function _TMR0_Initialize
  4391  07BA                     _TMR0_Initialize:
  4392  07BA                     l2591:	
  4393                           ;incstack = 0
  4394                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4395                           
  4396                           
  4397                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x90;
  4398  07BA  3090               	movlw	144
  4399  07BB  014B               	movlb	11	; select bank11
  4400  07BC  009F               	movwf	31	;volatile
  4401                           
  4402                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x86;
  4403  07BD  3086               	movlw	134
  4404  07BE  009D               	movwf	29	;volatile
  4405                           
  4406                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xE8;
  4407  07BF  30E8               	movlw	232
  4408  07C0  009C               	movwf	28	;volatile
  4409                           
  4410                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  4411  07C1  081D               	movf	29,w	;volatile
  4412  07C2  00F8               	movwf	_timer0ReloadVal16bit+1	;volatile
  4413  07C3  081C               	movf	28,w	;volatile
  4414  07C4  00F7               	movwf	_timer0ReloadVal16bit	;volatile
  4415  07C5                     l2593:
  4416                           
  4417                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  4418  07C5  014E               	movlb	14	; select bank14
  4419  07C6  128C               	bcf	12,5	;volatile
  4420  07C7                     l2595:
  4421                           
  4422                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  4423  07C7  1696               	bsf	22,5	;volatile
  4424  07C8                     l2597:
  4425                           
  4426                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4427  07C8  3003               	movlw	low _TMR0_DefaultInterruptHandler
  4428  07C9  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4429  07CA  3000               	movlw	high _TMR0_DefaultInterruptHandler
  4430  07CB  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4431  07CC  318F  276B  3187   	fcall	_TMR0_SetInterruptHandler
  4432  07CF                     l2599:
  4433                           
  4434                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  4435  07CF  3090               	movlw	144
  4436  07D0  014B               	movlb	11	; select bank11
  4437  07D1  009E               	movwf	30	;volatile
  4438  07D2                     l309:
  4439  07D2  0008               	return
  4440  07D3                     __end_of_TMR0_Initialize:
  4441                           
  4442                           	psect	text11
  4443  0F6B                     __ptext11:	
  4444 ;; *************** function _TMR0_SetInterruptHandler *****************
  4445 ;; Defined at:
  4446 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4449 ;;		 -> TMR0_ISR_(1), TMR0_DefaultInterruptHandler(1), 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;Total ram usage:        2 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 5
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_TMR0_Initialize
  4472 ;;		_main
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _TMR0_SetInterruptHandler
  4478  0F6B                     _TMR0_SetInterruptHandler:
  4479  0F6B                     l2501:	
  4480                           ;incstack = 0
  4481                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4482                           
  4483                           
  4484                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  4485  0F6B  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4486  0F6C  0140               	movlb	0	; select bank0
  4487  0F6D  00D4               	movwf	_TMR0_InterruptHandler+1
  4488  0F6E  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4489  0F6F  00D3               	movwf	_TMR0_InterruptHandler
  4490  0F70                     l331:
  4491  0F70  0008               	return
  4492  0F71                     __end_of_TMR0_SetInterruptHandler:
  4493                           
  4494                           	psect	text12
  4495  07EA                     __ptext12:	
  4496 ;; *************** function _SPI1_Initialize *****************
  4497 ;; Defined at:
  4498 ;;		line 62 in file "mcc_generated_files/spi1.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      void 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4516 ;;Total ram usage:        0 bytes
  4517 ;; Hardware stack levels used: 1
  4518 ;; Hardware stack levels required when called: 5
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_SYSTEM_Initialize
  4523 ;;		_main
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _SPI1_Initialize
  4529  07EA                     _SPI1_Initialize:
  4530  07EA                     l2505:	
  4531                           ;incstack = 0
  4532                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  4533                           
  4534                           
  4535                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 21;
  4536  07EA  3015               	movlw	21
  4537  07EB  017D               	movlb	61	; select bank61
  4538  07EC  00C5               	movwf	69	;volatile
  4539                           
  4540                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 4;
  4541  07ED  3004               	movlw	4
  4542  07EE  00C6               	movwf	70	;volatile
  4543                           
  4544                           ;mcc_generated_files/spi1.c: 67:     RC5PPS = 7;
  4545  07EF  3007               	movlw	7
  4546  07F0  017E               	movlb	62	; select bank62
  4547  07F1  00A5               	movwf	37	;volatile
  4548                           
  4549                           ;mcc_generated_files/spi1.c: 68:     RC3PPS = 8;
  4550  07F2  3008               	movlw	8
  4551  07F3  00A3               	movwf	35	;volatile
  4552                           
  4553                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x40;
  4554  07F4  3040               	movlw	64
  4555  07F5  0143               	movlb	3	; select bank3
  4556  07F6  008F               	movwf	15	;volatile
  4557  07F7                     l2507:
  4558                           
  4559                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x00;
  4560  07F7  0190               	clrf	16	;volatile
  4561  07F8                     l2509:
  4562                           
  4563                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x01;
  4564  07F8  3001               	movlw	1
  4565  07F9  008D               	movwf	13	;volatile
  4566  07FA                     l2511:
  4567                           
  4568                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC5 = 0;
  4569  07FA  0140               	movlb	0	; select bank0
  4570  07FB  1294               	bcf	20,5	;volatile
  4571  07FC                     l2513:
  4572                           
  4573                           ;mcc_generated_files/spi1.c: 74:     SSP1CON1bits.SSPEN = 0;
  4574  07FC  0143               	movlb	3	; select bank3
  4575  07FD  1290               	bcf	16,5	;volatile
  4576  07FE                     l64:
  4577  07FE  0008               	return
  4578  07FF                     __end_of_SPI1_Initialize:
  4579                           
  4580                           	psect	text13
  4581  0F77                     __ptext13:	
  4582 ;; *************** function _PWM3_Initialize *****************
  4583 ;; Defined at:
  4584 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;		None
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 5
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_SYSTEM_Initialize
  4609 ;;		_main
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _PWM3_Initialize
  4615  0F77                     _PWM3_Initialize:
  4616  0F77                     l2553:	
  4617                           ;incstack = 0
  4618                           ; Regs used in _PWM3_Initialize: [wreg]
  4619                           
  4620                           
  4621                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  4622  0F77  3080               	movlw	128
  4623  0F78  0146               	movlb	6	; select bank6
  4624  0F79  0096               	movwf	22	;volatile
  4625                           
  4626                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  4627  0F7A  307F               	movlw	127
  4628  0F7B  0095               	movwf	21	;volatile
  4629                           
  4630                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  4631  0F7C  30C0               	movlw	192
  4632  0F7D  0094               	movwf	20	;volatile
  4633  0F7E                     l226:
  4634  0F7E  0008               	return
  4635  0F7F                     __end_of_PWM3_Initialize:
  4636                           
  4637                           	psect	text14
  4638  06FC                     __ptext14:	
  4639 ;; *************** function _PIN_MANAGER_Initialize *****************
  4640 ;; Defined at:
  4641 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 5
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_SYSTEM_Initialize
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _PIN_MANAGER_Initialize
  4671  06FC                     _PIN_MANAGER_Initialize:
  4672  06FC                     l2515:	
  4673                           ;incstack = 0
  4674                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4675                           
  4676                           
  4677                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4678  06FC  0140               	movlb	0	; select bank0
  4679  06FD  0198               	clrf	24	;volatile
  4680                           
  4681                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  4682  06FE  019A               	clrf	26	;volatile
  4683  06FF                     l2517:
  4684                           
  4685                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x1F;
  4686  06FF  301F               	movlw	31
  4687  0700  0092               	movwf	18	;volatile
  4688  0701                     l2519:
  4689                           
  4690                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x02;
  4691  0701  3002               	movlw	2
  4692  0702  0094               	movwf	20	;volatile
  4693  0703                     l2521:
  4694                           
  4695                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x1F;
  4696  0703  301F               	movlw	31
  4697  0704  017E               	movlb	62	; select bank62
  4698  0705  00CE               	movwf	78	;volatile
  4699  0706                     l2523:
  4700                           
  4701                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x23;
  4702  0706  3023               	movlw	35
  4703  0707  00B8               	movwf	56	;volatile
  4704                           
  4705                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  4706  0708  01B9               	clrf	57	;volatile
  4707                           
  4708                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  4709  0709  01CF               	clrf	79	;volatile
  4710                           
  4711                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  4712  070A  01BA               	clrf	58	;volatile
  4713                           
  4714                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  4715  070B  01D0               	clrf	80	;volatile
  4716  070C                     l2525:
  4717                           
  4718                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  4719  070C  3037               	movlw	55
  4720  070D  00BB               	movwf	59	;volatile
  4721  070E                     l2527:
  4722                           
  4723                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  4724  070E  303F               	movlw	63
  4725  070F  00D1               	movwf	81	;volatile
  4726  0710                     l2529:
  4727                           
  4728                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  4729  0710  303F               	movlw	63
  4730  0711  00BC               	movwf	60	;volatile
  4731  0712                     l2531:
  4732                           
  4733                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  4734  0712  303F               	movlw	63
  4735  0713  00D2               	movwf	82	;volatile
  4736  0714                     l2533:
  4737                           
  4738                           ;mcc_generated_files/pin_manager.c: 106:     INTPPS = 0x02;
  4739  0714  3002               	movlw	2
  4740  0715  017D               	movlb	61	; select bank61
  4741  0716  0090               	movwf	16	;volatile
  4742  0717                     l2535:
  4743                           
  4744                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x15;
  4745  0717  3015               	movlw	21
  4746  0718  00C5               	movwf	69	;volatile
  4747  0719                     l2537:
  4748                           
  4749                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x08;
  4750  0719  3008               	movlw	8
  4751  071A  017E               	movlb	62	; select bank62
  4752  071B  00A3               	movwf	35	;volatile
  4753  071C                     l2539:
  4754                           
  4755                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x03;
  4756  071C  3003               	movlw	3
  4757  071D  0095               	movwf	21	;volatile
  4758  071E                     l2541:
  4759                           
  4760                           ;mcc_generated_files/pin_manager.c: 110:     RC5PPS = 0x07;
  4761  071E  3007               	movlw	7
  4762  071F  00A5               	movwf	37	;volatile
  4763  0720                     l2543:
  4764                           
  4765                           ;mcc_generated_files/pin_manager.c: 111:     SSP1DATPPS = 0x04;
  4766  0720  3004               	movlw	4
  4767  0721  017D               	movlb	61	; select bank61
  4768  0722  00C6               	movwf	70	;volatile
  4769  0723                     l147:
  4770  0723  0008               	return
  4771  0724                     __end_of_PIN_MANAGER_Initialize:
  4772                           
  4773                           	psect	text15
  4774  0F65                     __ptext15:	
  4775 ;; *************** function _OSCILLATOR_Initialize *****************
  4776 ;; Defined at:
  4777 ;;		line 64 in file "mcc_generated_files/mcc.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;		None
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;		None
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, status,2
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;Total ram usage:        0 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 5
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_SYSTEM_Initialize
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           
  4806                           ;psect for function _OSCILLATOR_Initialize
  4807  0F65                     _OSCILLATOR_Initialize:
  4808  0F65                     l2545:	
  4809                           ;incstack = 0
  4810                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4811                           
  4812                           
  4813                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  4814  0F65  0151               	movlb	17	; select bank17
  4815  0F66  0191               	clrf	17	;volatile
  4816  0F67                     l2547:
  4817                           
  4818                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  4819  0F67  3003               	movlw	3
  4820  0F68  0093               	movwf	19	;volatile
  4821  0F69                     l2549:
  4822                           
  4823                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  4824  0F69  0192               	clrf	18	;volatile
  4825  0F6A                     l32:
  4826  0F6A  0008               	return
  4827  0F6B                     __end_of_OSCILLATOR_Initialize:
  4828                           
  4829                           	psect	text16
  4830  0F98                     __ptext16:	
  4831 ;; *************** function _EXT_INT_Initialize *****************
  4832 ;; Defined at:
  4833 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;		None
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      void 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0, pclath, cstack
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4851 ;;Total ram usage:        0 bytes
  4852 ;; Hardware stack levels used: 1
  4853 ;; Hardware stack levels required when called: 6
  4854 ;; This function calls:
  4855 ;;		_INT_SetInterruptHandler
  4856 ;; This function is called by:
  4857 ;;		_SYSTEM_Initialize
  4858 ;;		_main
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function _EXT_INT_Initialize
  4864  0F98                     _EXT_INT_Initialize:
  4865  0F98                     l2585:	
  4866                           ;incstack = 0
  4867                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4868                           
  4869                           
  4870                           ;mcc_generated_files/ext_int.c: 77:     (PIR0bits.INTF = 0);
  4871  0F98  014E               	movlb	14	; select bank14
  4872  0F99  100C               	bcf	12,0	;volatile
  4873                           
  4874                           ;mcc_generated_files/ext_int.c: 78:     (INTCONbits.INTEDG = 1);
  4875  0F9A  140B               	bsf	11,0	;volatile
  4876  0F9B                     l2587:
  4877                           
  4878                           ;mcc_generated_files/ext_int.c: 80:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
  4879  0F9B  3002               	movlw	low _INT_DefaultInterruptHandler
  4880  0F9C  00F2               	movwf	INT_SetInterruptHandler@InterruptHandler
  4881  0F9D  3000               	movlw	high _INT_DefaultInterruptHandler
  4882  0F9E  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  4883  0F9F  318F  275F  318F   	fcall	_INT_SetInterruptHandler
  4884  0FA2                     l2589:
  4885                           
  4886                           ;mcc_generated_files/ext_int.c: 81:     (PIE0bits.INTE = 1);
  4887  0FA2  014E               	movlb	14	; select bank14
  4888  0FA3  1416               	bsf	22,0	;volatile
  4889  0FA4                     l284:
  4890  0FA4  0008               	return
  4891  0FA5                     __end_of_EXT_INT_Initialize:
  4892                           
  4893                           	psect	text17
  4894  0F5F                     __ptext17:	
  4895 ;; *************** function _INT_SetInterruptHandler *****************
  4896 ;; Defined at:
  4897 ;;		line 63 in file "mcc_generated_files/ext_int.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  4900 ;;		 -> EXT_ISR(1), INT_DefaultInterruptHandler(1), 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;Total ram usage:        2 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; Hardware stack levels required when called: 5
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_EXT_INT_Initialize
  4923 ;;		_main
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           
  4928                           ;psect for function _INT_SetInterruptHandler
  4929  0F5F                     _INT_SetInterruptHandler:
  4930  0F5F                     l2499:	
  4931                           ;incstack = 0
  4932                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  4933                           
  4934                           
  4935                           ;mcc_generated_files/ext_int.c: 64:     INT_InterruptHandler = InterruptHandler;
  4936  0F5F  0873               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  4937  0F60  0140               	movlb	0	; select bank0
  4938  0F61  00D6               	movwf	_INT_InterruptHandler+1
  4939  0F62  0872               	movf	INT_SetInterruptHandler@InterruptHandler,w
  4940  0F63  00D5               	movwf	_INT_InterruptHandler
  4941  0F64                     l278:
  4942  0F64  0008               	return
  4943  0F65                     __end_of_INT_SetInterruptHandler:
  4944                           
  4945                           	psect	intentry
  4946  0004                     __pintentry:	
  4947 ;; *************** function _INTERRUPT_InterruptManager *****************
  4948 ;; Defined at:
  4949 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used: 1
  4969 ;; Hardware stack levels required when called: 4
  4970 ;; This function calls:
  4971 ;;		_INT_ISR
  4972 ;;		_TMR0_ISR
  4973 ;;		_TMR1_ISR
  4974 ;; This function is called by:
  4975 ;;		Interrupt level 1
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979  0004                     _INTERRUPT_InterruptManager:
  4980                           
  4981                           ;incstack = 0
  4982  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4983                           
  4984                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4985  0005  3180               	pagesel	$
  4986  0006                     i1l2317:
  4987                           
  4988                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  4989  0006  014E               	movlb	14	; select bank14
  4990  0007  1E96               	btfss	22,5	;volatile
  4991  0008  280A               	goto	u137_21
  4992  0009  280B               	goto	u137_20
  4993  000A                     u137_21:
  4994  000A  2813               	goto	i1l250
  4995  000B                     u137_20:
  4996  000B                     i1l2319:
  4997  000B  1E8C               	btfss	12,5	;volatile
  4998  000C  280E               	goto	u138_21
  4999  000D  280F               	goto	u138_20
  5000  000E                     u138_21:
  5001  000E  2813               	goto	i1l250
  5002  000F                     u138_20:
  5003  000F                     i1l2321:
  5004                           
  5005                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5006  000F  318F  27EC  3180   	fcall	_TMR0_ISR
  5007                           
  5008                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5009  0012  282F               	goto	i1l258
  5010  0013                     i1l250:	
  5011                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.INTE == 1 && PIR0bits
      +                          .INTF == 1)
  5012                           
  5013  0013  1C16               	btfss	22,0	;volatile
  5014  0014  2816               	goto	u139_21
  5015  0015  2817               	goto	u139_20
  5016  0016                     u139_21:
  5017  0016  281F               	goto	i1l252
  5018  0017                     u139_20:
  5019  0017                     i1l2323:
  5020  0017  1C0C               	btfss	12,0	;volatile
  5021  0018  281A               	goto	u140_21
  5022  0019  281B               	goto	u140_20
  5023  001A                     u140_21:
  5024  001A  281F               	goto	i1l252
  5025  001B                     u140_20:
  5026  001B                     i1l2325:
  5027                           
  5028                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         INT_ISR();
  5029  001B  318F  2759  3180   	fcall	_INT_ISR
  5030                           
  5031                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  5032  001E  282F               	goto	i1l258
  5033  001F                     i1l252:	
  5034                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  5035                           
  5036  001F  1F0B               	btfss	11,6	;volatile
  5037  0020  2822               	goto	u141_21
  5038  0021  2823               	goto	u141_20
  5039  0022                     u141_21:
  5040  0022  282F               	goto	i1l253
  5041  0023                     u141_20:
  5042  0023                     i1l2327:
  5043                           
  5044                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5045  0023  1E97               	btfss	23,5	;volatile
  5046  0024  2826               	goto	u142_21
  5047  0025  2827               	goto	u142_20
  5048  0026                     u142_21:
  5049  0026  282F               	goto	i1l253
  5050  0027                     u142_20:
  5051  0027                     i1l2329:
  5052  0027  1E8D               	btfss	13,5	;volatile
  5053  0028  282A               	goto	u143_21
  5054  0029  282B               	goto	u143_20
  5055  002A                     u143_21:
  5056  002A  282F               	goto	i1l253
  5057  002B                     u143_20:
  5058  002B                     i1l2331:
  5059                           
  5060                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  5061  002B  3187  27D3  3180   	fcall	_TMR1_ISR
  5062                           
  5063                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5064  002E  282F               	goto	i1l258
  5065  002F                     i1l253:
  5066  002F                     i1l258:
  5067  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5068  0030  0009               	retfie
  5069  0031                     __end_of_INTERRUPT_InterruptManager:
  5070                           
  5071                           	psect	text19
  5072  07D3                     __ptext19:	
  5073 ;; *************** function _TMR1_ISR *****************
  5074 ;; Defined at:
  5075 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;		None
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;Total ram usage:        0 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 1
  5096 ;; This function calls:
  5097 ;;		Absolute function
  5098 ;;		_TMR1_DefaultInterruptHandler
  5099 ;;		_TMR1_ISR_
  5100 ;;		_TMR1_WriteTimer
  5101 ;; This function is called by:
  5102 ;;		_INTERRUPT_InterruptManager
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           
  5107                           ;psect for function _TMR1_ISR
  5108  07D3                     _TMR1_ISR:
  5109  07D3                     i1l2267:	
  5110                           ;incstack = 0
  5111                           ; Regs used in _TMR1_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5112                           
  5113                           
  5114                           ;mcc_generated_files/tmr1.c: 168:     PIR1bits.TMR1IF = 0;
  5115  07D3  014E               	movlb	14	; select bank14
  5116  07D4  128D               	bcf	13,5	;volatile
  5117  07D5                     i1l2269:
  5118                           
  5119                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  5120  07D5  0140               	movlb	0	; select bank0
  5121  07D6  0852               	movf	_timer1ReloadVal+1,w	;volatile
  5122  07D7  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5123  07D8  0851               	movf	_timer1ReloadVal,w	;volatile
  5124  07D9  00F0               	movwf	TMR1_WriteTimer@timerVal
  5125  07DA  318F  27DB  3187   	fcall	_TMR1_WriteTimer
  5126  07DD                     i1l2271:
  5127                           
  5128                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  5129  07DD  0140               	movlb	0	; select bank0
  5130  07DE  084F               	movf	_TMR1_InterruptHandler,w
  5131  07DF  0450               	iorwf	_TMR1_InterruptHandler+1,w
  5132  07E0  1903               	btfsc	3,2
  5133  07E1  2FE3               	goto	u130_21
  5134  07E2  2FE4               	goto	u130_20
  5135  07E3                     u130_21:
  5136  07E3  2FE9               	goto	i1l392
  5137  07E4                     u130_20:
  5138  07E4                     i1l2273:
  5139                           
  5140                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  5141  07E4  0850               	movf	_TMR1_InterruptHandler+1,w
  5142  07E5  008A               	movwf	10
  5143  07E6  084F               	movf	_TMR1_InterruptHandler,w
  5144  07E7  000A               	callw
  5145  07E8  3187               	pagesel	$
  5146  07E9                     i1l392:
  5147  07E9  0008               	return
  5148  07EA                     __end_of_TMR1_ISR:
  5149                           
  5150                           	psect	text20
  5151  0FDB                     __ptext20:	
  5152 ;; *************** function _TMR1_WriteTimer *****************
  5153 ;; Defined at:
  5154 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  timerVal        2    0[COMMON] unsigned short 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;Total ram usage:        2 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_TMR1_ISR
  5178 ;;		_TMR1_Reload
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           
  5183                           ;psect for function _TMR1_WriteTimer
  5184  0FDB                     _TMR1_WriteTimer:
  5185  0FDB                     i1l2019:	
  5186                           ;incstack = 0
  5187                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5188                           
  5189                           
  5190                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
  5191  0FDB  0144               	movlb	4	; select bank4
  5192  0FDC  1D0E               	btfss	14,2	;volatile
  5193  0FDD  2FDF               	goto	u86_21
  5194  0FDE  2FE0               	goto	u86_20
  5195  0FDF                     u86_21:
  5196  0FDF  2FE7               	goto	i1l2029
  5197  0FE0                     u86_20:
  5198  0FE0                     i1l2021:
  5199                           
  5200                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  5201  0FE0  100E               	bcf	14,0	;volatile
  5202  0FE1                     i1l2023:
  5203                           
  5204                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
  5205  0FE1  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5206  0FE2  008D               	movwf	13	;volatile
  5207  0FE3                     i1l2025:
  5208                           
  5209                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
  5210  0FE3  0870               	movf	TMR1_WriteTimer@timerVal,w
  5211  0FE4  008C               	movwf	12	;volatile
  5212  0FE5                     i1l2027:
  5213                           
  5214                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  5215  0FE5  140E               	bsf	14,0	;volatile
  5216                           
  5217                           ;mcc_generated_files/tmr1.c: 140:     }
  5218  0FE6  2FEB               	goto	i1l379
  5219  0FE7                     i1l2029:
  5220                           
  5221                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  5222  0FE7  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5223  0FE8  008D               	movwf	13	;volatile
  5224  0FE9                     i1l2031:
  5225                           
  5226                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
  5227  0FE9  0870               	movf	TMR1_WriteTimer@timerVal,w
  5228  0FEA  008C               	movwf	12	;volatile
  5229  0FEB                     i1l379:
  5230  0FEB  0008               	return
  5231  0FEC                     __end_of_TMR1_WriteTimer:
  5232                           
  5233                           	psect	text21
  5234  07FF                     __ptext21:	
  5235 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5236 ;; Defined at:
  5237 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      void 
  5244 ;; Registers used:
  5245 ;;		None
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;Total ram usage:        0 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_TMR1_Initialize
  5261 ;;		_TMR1_ISR
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           
  5266                           ;psect for function _TMR1_DefaultInterruptHandler
  5267  07FF                     _TMR1_DefaultInterruptHandler:
  5268  07FF                     i1l398:	
  5269                           ;incstack = 0
  5270                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5271                           
  5272  07FF  0008               	return
  5273  0800                     __end_of_TMR1_DefaultInterruptHandler:
  5274                           
  5275                           	psect	text22
  5276  0079                     __ptext22:	
  5277 ;; *************** function _TMR1_ISR_ *****************
  5278 ;; Defined at:
  5279 ;;		line 462 in file "main.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;  lights          1   17[BANK0 ] unsigned char 
  5284 ;;  i               2   22[BANK0 ] int 
  5285 ;;  lights          1    0[BANK0 ] unsigned char 
  5286 ;;  i               2    9[BANK0 ] int 
  5287 ;;  i               2   15[BANK0 ] int 
  5288 ;;  lights          1    1[BANK0 ] unsigned char 
  5289 ;;  i               2   18[BANK0 ] int 
  5290 ;;  i               2    7[BANK0 ] int 
  5291 ;;  i               2    5[BANK0 ] int 
  5292 ;;  lights          1    2[BANK0 ] unsigned char 
  5293 ;;  i               2    3[BANK0 ] int 
  5294 ;;  i               2   13[BANK0 ] int 
  5295 ;;  i               2   20[BANK0 ] int 
  5296 ;;  i               2   11[BANK0 ] int 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Totals:         2      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;Total ram usage:       26 bytes
  5311 ;; Hardware stack levels used: 1
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_main
  5316 ;;		_TMR1_ISR
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           
  5321                           ;psect for function _TMR1_ISR_
  5322  0079                     _TMR1_ISR_:
  5323  0079                     i1l2041:	
  5324                           ;incstack = 0
  5325                           ; Regs used in _TMR1_ISR_: [wreg+fsr1l+fsr1h+status,2+status,0]
  5326                           
  5327                           
  5328                           ;main.c: 464:     count++;
  5329  0079  3001               	movlw	1
  5330  007A  0140               	movlb	0	; select bank0
  5331  007B  07C6               	addwf	_count,f
  5332  007C  3000               	movlw	0
  5333  007D  3DC7               	addwfc	_count+1,f
  5334  007E                     i1l2043:
  5335                           
  5336                           ;main.c: 467:     if (silent_night_playing)
  5337  007E  084E               	movf	_silent_night_playing,w
  5338  007F  1903               	btfsc	3,2
  5339  0080  2882               	goto	u87_21
  5340  0081  2883               	goto	u87_20
  5341  0082                     u87_21:
  5342  0082  296D               	goto	i1l2095
  5343  0083                     u87_20:
  5344  0083                     i1l2045:
  5345                           
  5346                           ;main.c: 468:     {;main.c: 469:         if (count < 24 || ((count > 48) && (count < 96)
      +                          ))
  5347  0083  0847               	movf	_count+1,w
  5348  0084  3A80               	xorlw	128
  5349  0085  00F0               	movwf	??_TMR1_ISR_
  5350  0086  3080               	movlw	128
  5351  0087  0270               	subwf	??_TMR1_ISR_,w
  5352  0088  1D03               	skipz
  5353  0089  288C               	goto	u88_25
  5354  008A  3018               	movlw	24
  5355  008B  0246               	subwf	_count,w
  5356  008C                     u88_25:
  5357  008C  1C03               	skipc
  5358  008D  288F               	goto	u88_21
  5359  008E  2890               	goto	u88_20
  5360  008F                     u88_21:
  5361  008F  28AC               	goto	i1l2051
  5362  0090                     u88_20:
  5363  0090                     i1l2047:
  5364  0090  0140               	movlb	0	; select bank0
  5365  0091  0847               	movf	_count+1,w
  5366  0092  3A80               	xorlw	128
  5367  0093  00F0               	movwf	??_TMR1_ISR_
  5368  0094  3080               	movlw	128
  5369  0095  0270               	subwf	??_TMR1_ISR_,w
  5370  0096  1D03               	skipz
  5371  0097  289A               	goto	u89_25
  5372  0098  3031               	movlw	49
  5373  0099  0246               	subwf	_count,w
  5374  009A                     u89_25:
  5375  009A  1C03               	skipc
  5376  009B  289D               	goto	u89_21
  5377  009C  289E               	goto	u89_20
  5378  009D                     u89_21:
  5379  009D  28ED               	goto	i1l2065
  5380  009E                     u89_20:
  5381  009E                     i1l2049:
  5382  009E  0140               	movlb	0	; select bank0
  5383  009F  0847               	movf	_count+1,w
  5384  00A0  3A80               	xorlw	128
  5385  00A1  00F0               	movwf	??_TMR1_ISR_
  5386  00A2  3080               	movlw	128
  5387  00A3  0270               	subwf	??_TMR1_ISR_,w
  5388  00A4  1D03               	skipz
  5389  00A5  28A8               	goto	u90_25
  5390  00A6  3060               	movlw	96
  5391  00A7  0246               	subwf	_count,w
  5392  00A8                     u90_25:
  5393  00A8  1803               	skipnc
  5394  00A9  28AB               	goto	u90_21
  5395  00AA  28AC               	goto	u90_20
  5396  00AB                     u90_21:
  5397  00AB  28ED               	goto	i1l2065
  5398  00AC                     u90_20:
  5399  00AC                     i1l2051:
  5400                           
  5401                           ;main.c: 470:         {;main.c: 471:             if (last_note != silent_night[count])
  5402  00AC  3066               	movlw	102
  5403  00AD  00F0               	movwf	??_TMR1_ISR_
  5404  00AE  3023               	movlw	35
  5405  00AF  00F1               	movwf	??_TMR1_ISR_+1
  5406  00B0  0140               	movlb	0	; select bank0
  5407  00B1  0846               	movf	_count,w
  5408  00B2  0770               	addwf	??_TMR1_ISR_,w
  5409  00B3  0086               	movwf	6
  5410  00B4  0847               	movf	_count+1,w
  5411  00B5  3D71               	addwfc	??_TMR1_ISR_+1,w
  5412  00B6  0087               	movwf	7
  5413  00B7  0801               	movf	1,w
  5414  00B8  064A               	xorwf	_last_note,w
  5415  00B9  1903               	skipnz
  5416  00BA  28BC               	goto	u91_21
  5417  00BB  28BD               	goto	u91_20
  5418  00BC                     u91_21:
  5419  00BC  296D               	goto	i1l2095
  5420  00BD                     u91_20:
  5421  00BD                     i1l2053:
  5422                           
  5423                           ;main.c: 472:             {;main.c: 473:                 for (int i = 0; i < 7; i++)
  5424  00BD  01B2               	clrf	TMR1_ISR_@i
  5425  00BE  01B3               	clrf	TMR1_ISR_@i+1
  5426  00BF                     i1l2059:
  5427                           
  5428                           ;main.c: 474:                 {;main.c: 475:                     uint8_t lights = light_
      +                          array[i] >> 7;
  5429  00BF  0140               	movlb	0	; select bank0
  5430  00C0  0832               	movf	TMR1_ISR_@i,w
  5431  00C1  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5432  00C2  0086               	movwf	6
  5433  00C3  0187               	clrf	7
  5434  00C4  0801               	movf	1,w
  5435  00C5  00F0               	movwf	??_TMR1_ISR_
  5436  00C6  3007               	movlw	7
  5437  00C7                     u92_25:
  5438  00C7  36F0               	lsrf	??_TMR1_ISR_,f
  5439  00C8  0B89               	decfsz	9,f
  5440  00C9  28C7               	goto	u92_25
  5441  00CA  0870               	movf	??_TMR1_ISR_,w
  5442  00CB  00F1               	movwf	??_TMR1_ISR_+1
  5443  00CC  0871               	movf	??_TMR1_ISR_+1,w
  5444  00CD  00A0               	movwf	TMR1_ISR_@lights
  5445                           
  5446                           ;main.c: 476:                     light_array[i] = (light_array[i] << 1) + lights;
  5447  00CE  0832               	movf	TMR1_ISR_@i,w
  5448  00CF  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5449  00D0  0086               	movwf	6
  5450  00D1  0187               	clrf	7
  5451  00D2  3501               	lslf	1,w
  5452  00D3  0720               	addwf	TMR1_ISR_@lights,w
  5453  00D4  00F0               	movwf	??_TMR1_ISR_
  5454  00D5  0832               	movf	TMR1_ISR_@i,w
  5455  00D6  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5456  00D7  0086               	movwf	6
  5457  00D8  0187               	clrf	7
  5458  00D9  0870               	movf	??_TMR1_ISR_,w
  5459  00DA  0081               	movwf	1
  5460  00DB                     i1l2061:
  5461                           
  5462                           ;main.c: 477:                 }
  5463  00DB  3001               	movlw	1
  5464  00DC  07B2               	addwf	TMR1_ISR_@i,f
  5465  00DD  3000               	movlw	0
  5466  00DE  3DB3               	addwfc	TMR1_ISR_@i+1,f
  5467  00DF                     i1l2063:
  5468  00DF  0833               	movf	TMR1_ISR_@i+1,w
  5469  00E0  3A80               	xorlw	128
  5470  00E1  00F0               	movwf	??_TMR1_ISR_
  5471  00E2  3080               	movlw	128
  5472  00E3  0270               	subwf	??_TMR1_ISR_,w
  5473  00E4  1D03               	skipz
  5474  00E5  28E8               	goto	u93_25
  5475  00E6  3007               	movlw	7
  5476  00E7  0232               	subwf	TMR1_ISR_@i,w
  5477  00E8                     u93_25:
  5478  00E8  1C03               	skipc
  5479  00E9  28EB               	goto	u93_21
  5480  00EA  28EC               	goto	u93_20
  5481  00EB                     u93_21:
  5482  00EB  28BF               	goto	i1l2059
  5483  00EC                     u93_20:
  5484  00EC  296D               	goto	i1l2095
  5485  00ED                     i1l2065:
  5486  00ED  0140               	movlb	0	; select bank0
  5487  00EE  0847               	movf	_count+1,w
  5488  00EF  3A80               	xorlw	128
  5489  00F0  00F0               	movwf	??_TMR1_ISR_
  5490  00F1  3080               	movlw	128
  5491  00F2  0270               	subwf	??_TMR1_ISR_,w
  5492  00F3  1D03               	skipz
  5493  00F4  28F7               	goto	u94_25
  5494  00F5  3078               	movlw	120
  5495  00F6  0246               	subwf	_count,w
  5496  00F7                     u94_25:
  5497  00F7  1C03               	skipc
  5498  00F8  28FA               	goto	u94_21
  5499  00F9  28FB               	goto	u94_20
  5500  00FA                     u94_21:
  5501  00FA  292E               	goto	i1l2081
  5502  00FB                     u94_20:
  5503  00FB                     i1l2067:
  5504  00FB  3066               	movlw	102
  5505  00FC  00F0               	movwf	??_TMR1_ISR_
  5506  00FD  3023               	movlw	35
  5507  00FE  00F1               	movwf	??_TMR1_ISR_+1
  5508  00FF  0140               	movlb	0	; select bank0
  5509  0100  0846               	movf	_count,w
  5510  0101  0770               	addwf	??_TMR1_ISR_,w
  5511  0102  0086               	movwf	6
  5512  0103  0847               	movf	_count+1,w
  5513  0104  3D71               	addwfc	??_TMR1_ISR_+1,w
  5514  0105  0087               	movwf	7
  5515  0106  0801               	movf	1,w
  5516  0107  064A               	xorwf	_last_note,w
  5517  0108  1903               	skipnz
  5518  0109  290B               	goto	u95_21
  5519  010A  290C               	goto	u95_20
  5520  010B                     u95_21:
  5521  010B  292E               	goto	i1l2081
  5522  010C                     u95_20:
  5523  010C                     i1l2069:
  5524                           
  5525                           ;main.c: 481:         {;main.c: 482:             for (int i = 0; i < 7; i++)
  5526  010C  01AB               	clrf	TMR1_ISR_@i_1175
  5527  010D  01AC               	clrf	TMR1_ISR_@i_1175+1
  5528  010E                     i1l2075:
  5529                           
  5530                           ;main.c: 483:             {;main.c: 484:                 light_array[i] = (light_array[i
      +                          ] << 1) + 1;
  5531  010E  0140               	movlb	0	; select bank0
  5532  010F  082B               	movf	TMR1_ISR_@i_1175,w
  5533  0110  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5534  0111  0086               	movwf	6
  5535  0112  0187               	clrf	7
  5536  0113  1403               	setc
  5537  0114  0D01               	rlf	1,w
  5538  0115  00F0               	movwf	??_TMR1_ISR_
  5539  0116  082B               	movf	TMR1_ISR_@i_1175,w
  5540  0117  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5541  0118  0086               	movwf	6
  5542  0119  0187               	clrf	7
  5543  011A  0870               	movf	??_TMR1_ISR_,w
  5544  011B  0081               	movwf	1
  5545  011C                     i1l2077:
  5546                           
  5547                           ;main.c: 485:             }
  5548  011C  3001               	movlw	1
  5549  011D  07AB               	addwf	TMR1_ISR_@i_1175,f
  5550  011E  3000               	movlw	0
  5551  011F  3DAC               	addwfc	TMR1_ISR_@i_1175+1,f
  5552  0120                     i1l2079:
  5553  0120  082C               	movf	TMR1_ISR_@i_1175+1,w
  5554  0121  3A80               	xorlw	128
  5555  0122  00F0               	movwf	??_TMR1_ISR_
  5556  0123  3080               	movlw	128
  5557  0124  0270               	subwf	??_TMR1_ISR_,w
  5558  0125  1D03               	skipz
  5559  0126  2929               	goto	u96_25
  5560  0127  3007               	movlw	7
  5561  0128  022B               	subwf	TMR1_ISR_@i_1175,w
  5562  0129                     u96_25:
  5563  0129  1C03               	skipc
  5564  012A  292C               	goto	u96_21
  5565  012B  292D               	goto	u96_20
  5566  012C                     u96_21:
  5567  012C  290E               	goto	i1l2075
  5568  012D                     u96_20:
  5569  012D  296D               	goto	i1l2095
  5570  012E                     i1l2081:
  5571  012E  0140               	movlb	0	; select bank0
  5572  012F  0847               	movf	_count+1,w
  5573  0130  3A80               	xorlw	128
  5574  0131  00F0               	movwf	??_TMR1_ISR_
  5575  0132  3080               	movlw	128
  5576  0133  0270               	subwf	??_TMR1_ISR_,w
  5577  0134  1D03               	skipz
  5578  0135  2938               	goto	u97_25
  5579  0136  3078               	movlw	120
  5580  0137  0246               	subwf	_count,w
  5581  0138                     u97_25:
  5582  0138  1803               	skipnc
  5583  0139  293B               	goto	u97_21
  5584  013A  293C               	goto	u97_20
  5585  013B                     u97_21:
  5586  013B  296D               	goto	i1l577
  5587  013C                     u97_20:
  5588  013C                     i1l2083:
  5589                           
  5590                           ;main.c: 488:         {;main.c: 489:             for (int i = 0; i < 7; i++)
  5591  013C  0140               	movlb	0	; select bank0
  5592  013D  01B4               	clrf	TMR1_ISR_@i_1176
  5593  013E  01B5               	clrf	TMR1_ISR_@i_1176+1
  5594  013F                     i1l2089:
  5595                           
  5596                           ;main.c: 490:             {;main.c: 491:                 uint8_t lights = light_array[i]
      +                           >> 7;
  5597  013F  0140               	movlb	0	; select bank0
  5598  0140  0834               	movf	TMR1_ISR_@i_1176,w
  5599  0141  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5600  0142  0086               	movwf	6
  5601  0143  0187               	clrf	7
  5602  0144  0801               	movf	1,w
  5603  0145  00F0               	movwf	??_TMR1_ISR_
  5604  0146  3007               	movlw	7
  5605  0147                     u98_25:
  5606  0147  36F0               	lsrf	??_TMR1_ISR_,f
  5607  0148  0B89               	decfsz	9,f
  5608  0149  2947               	goto	u98_25
  5609  014A  0870               	movf	??_TMR1_ISR_,w
  5610  014B  00F1               	movwf	??_TMR1_ISR_+1
  5611  014C  0871               	movf	??_TMR1_ISR_+1,w
  5612  014D  00A1               	movwf	TMR1_ISR_@lights_1177
  5613                           
  5614                           ;main.c: 492:                 light_array[i] = (light_array[i] << 1) + lights;
  5615  014E  0834               	movf	TMR1_ISR_@i_1176,w
  5616  014F  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5617  0150  0086               	movwf	6
  5618  0151  0187               	clrf	7
  5619  0152  3501               	lslf	1,w
  5620  0153  0721               	addwf	TMR1_ISR_@lights_1177,w
  5621  0154  00F0               	movwf	??_TMR1_ISR_
  5622  0155  0834               	movf	TMR1_ISR_@i_1176,w
  5623  0156  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5624  0157  0086               	movwf	6
  5625  0158  0187               	clrf	7
  5626  0159  0870               	movf	??_TMR1_ISR_,w
  5627  015A  0081               	movwf	1
  5628  015B                     i1l2091:
  5629                           
  5630                           ;main.c: 493:             }
  5631  015B  3001               	movlw	1
  5632  015C  07B4               	addwf	TMR1_ISR_@i_1176,f
  5633  015D  3000               	movlw	0
  5634  015E  3DB5               	addwfc	TMR1_ISR_@i_1176+1,f
  5635  015F                     i1l2093:
  5636  015F  0835               	movf	TMR1_ISR_@i_1176+1,w
  5637  0160  3A80               	xorlw	128
  5638  0161  00F0               	movwf	??_TMR1_ISR_
  5639  0162  3080               	movlw	128
  5640  0163  0270               	subwf	??_TMR1_ISR_,w
  5641  0164  1D03               	skipz
  5642  0165  2968               	goto	u99_25
  5643  0166  3007               	movlw	7
  5644  0167  0234               	subwf	TMR1_ISR_@i_1176,w
  5645  0168                     u99_25:
  5646  0168  1C03               	skipc
  5647  0169  296B               	goto	u99_21
  5648  016A  296C               	goto	u99_20
  5649  016B                     u99_21:
  5650  016B  293F               	goto	i1l2089
  5651  016C                     u99_20:
  5652  016C  296D               	goto	i1l2095
  5653  016D                     i1l577:
  5654  016D                     i1l2095:
  5655                           
  5656                           ;main.c: 498:     if (song2_playing)
  5657  016D  0140               	movlb	0	; select bank0
  5658  016E  084C               	movf	_song2_playing,w
  5659  016F  1903               	btfsc	3,2
  5660  0170  2972               	goto	u100_21
  5661  0171  2973               	goto	u100_20
  5662  0172                     u100_21:
  5663  0172  29F7               	goto	i1l2139
  5664  0173                     u100_20:
  5665  0173                     i1l2097:
  5666                           
  5667                           ;main.c: 499:     {;main.c: 501:         if (count < 8)
  5668  0173  0847               	movf	_count+1,w
  5669  0174  3A80               	xorlw	128
  5670  0175  00F0               	movwf	??_TMR1_ISR_
  5671  0176  3080               	movlw	128
  5672  0177  0270               	subwf	??_TMR1_ISR_,w
  5673  0178  1D03               	skipz
  5674  0179  297C               	goto	u101_25
  5675  017A  3008               	movlw	8
  5676  017B  0246               	subwf	_count,w
  5677  017C                     u101_25:
  5678  017C  1803               	skipnc
  5679  017D  297F               	goto	u101_21
  5680  017E  2980               	goto	u101_20
  5681  017F                     u101_21:
  5682  017F  29A2               	goto	i1l2111
  5683  0180                     u101_20:
  5684  0180                     i1l2099:
  5685                           
  5686                           ;main.c: 502:         {;main.c: 503:           for (int i = 0; i < 7; i++)
  5687  0180  0140               	movlb	0	; select bank0
  5688  0181  01AD               	clrf	TMR1_ISR_@i_1178
  5689  0182  01AE               	clrf	TMR1_ISR_@i_1178+1
  5690  0183                     i1l2105:
  5691                           
  5692                           ;main.c: 504:             {;main.c: 505:                 light_array[i] = (light_array[i
      +                          ] << 1);
  5693  0183  0140               	movlb	0	; select bank0
  5694  0184  082D               	movf	TMR1_ISR_@i_1178,w
  5695  0185  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5696  0186  0086               	movwf	6
  5697  0187  0187               	clrf	7
  5698  0188  3501               	lslf	1,w
  5699  0189  00F0               	movwf	??_TMR1_ISR_
  5700  018A  082D               	movf	TMR1_ISR_@i_1178,w
  5701  018B  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5702  018C  0086               	movwf	6
  5703  018D  0187               	clrf	7
  5704  018E  0870               	movf	??_TMR1_ISR_,w
  5705  018F  0081               	movwf	1
  5706  0190                     i1l2107:
  5707                           
  5708                           ;main.c: 506:             }
  5709  0190  3001               	movlw	1
  5710  0191  07AD               	addwf	TMR1_ISR_@i_1178,f
  5711  0192  3000               	movlw	0
  5712  0193  3DAE               	addwfc	TMR1_ISR_@i_1178+1,f
  5713  0194                     i1l2109:
  5714  0194  082E               	movf	TMR1_ISR_@i_1178+1,w
  5715  0195  3A80               	xorlw	128
  5716  0196  00F0               	movwf	??_TMR1_ISR_
  5717  0197  3080               	movlw	128
  5718  0198  0270               	subwf	??_TMR1_ISR_,w
  5719  0199  1D03               	skipz
  5720  019A  299D               	goto	u102_25
  5721  019B  3007               	movlw	7
  5722  019C  022D               	subwf	TMR1_ISR_@i_1178,w
  5723  019D                     u102_25:
  5724  019D  1C03               	skipc
  5725  019E  29A0               	goto	u102_21
  5726  019F  29A1               	goto	u102_20
  5727  01A0                     u102_21:
  5728  01A0  2983               	goto	i1l2105
  5729  01A1                     u102_20:
  5730  01A1  29F7               	goto	i1l2139
  5731  01A2                     i1l2111:
  5732  01A2  3008               	movlw	8
  5733  01A3  0140               	movlb	0	; select bank0
  5734  01A4  0646               	xorwf	_count,w
  5735  01A5  0447               	iorwf	_count+1,w
  5736  01A6  1D03               	btfss	3,2
  5737  01A7  29A9               	goto	u103_21
  5738  01A8  29AA               	goto	u103_20
  5739  01A9                     u103_21:
  5740  01A9  29C7               	goto	i1l590
  5741  01AA                     u103_20:
  5742  01AA                     i1l2113:
  5743                           
  5744                           ;main.c: 509:         {;main.c: 510:             for (int i = 0; i < 7; i++)
  5745  01AA  01A3               	clrf	TMR1_ISR_@i_1179
  5746  01AB  01A4               	clrf	TMR1_ISR_@i_1179+1
  5747  01AC                     i1l2119:
  5748                           
  5749                           ;main.c: 511:             {;main.c: 512:                 light_array[i] = 0xAA;
  5750  01AC  30AA               	movlw	170
  5751  01AD  00F0               	movwf	??_TMR1_ISR_
  5752  01AE  0140               	movlb	0	; select bank0
  5753  01AF  0823               	movf	TMR1_ISR_@i_1179,w
  5754  01B0  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5755  01B1  0086               	movwf	6
  5756  01B2  0187               	clrf	7
  5757  01B3  0870               	movf	??_TMR1_ISR_,w
  5758  01B4  0081               	movwf	1
  5759  01B5                     i1l2121:
  5760                           
  5761                           ;main.c: 513:             }
  5762  01B5  3001               	movlw	1
  5763  01B6  07A3               	addwf	TMR1_ISR_@i_1179,f
  5764  01B7  3000               	movlw	0
  5765  01B8  3DA4               	addwfc	TMR1_ISR_@i_1179+1,f
  5766  01B9                     i1l2123:
  5767  01B9  0824               	movf	TMR1_ISR_@i_1179+1,w
  5768  01BA  3A80               	xorlw	128
  5769  01BB  00F0               	movwf	??_TMR1_ISR_
  5770  01BC  3080               	movlw	128
  5771  01BD  0270               	subwf	??_TMR1_ISR_,w
  5772  01BE  1D03               	skipz
  5773  01BF  29C2               	goto	u104_25
  5774  01C0  3007               	movlw	7
  5775  01C1  0223               	subwf	TMR1_ISR_@i_1179,w
  5776  01C2                     u104_25:
  5777  01C2  1C03               	skipc
  5778  01C3  29C5               	goto	u104_21
  5779  01C4  29C6               	goto	u104_20
  5780  01C5                     u104_21:
  5781  01C5  29AC               	goto	i1l2119
  5782  01C6                     u104_20:
  5783  01C6  29F7               	goto	i1l2139
  5784  01C7                     i1l590:	
  5785                           ;main.c: 515:         else
  5786                           
  5787                           
  5788                           ;main.c: 516:         {;main.c: 517:             if (count & 0x01)
  5789  01C7  1C46               	btfss	_count,0
  5790  01C8  29CA               	goto	u105_21
  5791  01C9  29CB               	goto	u105_20
  5792  01CA                     u105_21:
  5793  01CA  29F7               	goto	i1l589
  5794  01CB                     u105_20:
  5795  01CB                     i1l2125:
  5796                           
  5797                           ;main.c: 518:             {;main.c: 519:                 uint8_t lights = light_array[0]
      +                           >> 7;
  5798  01CB  083F               	movf	_light_array,w
  5799  01CC  00F0               	movwf	??_TMR1_ISR_
  5800  01CD  3007               	movlw	7
  5801  01CE                     u106_25:
  5802  01CE  36F0               	lsrf	??_TMR1_ISR_,f
  5803  01CF  0B89               	decfsz	9,f
  5804  01D0  29CE               	goto	u106_25
  5805  01D1  0870               	movf	??_TMR1_ISR_,w
  5806  01D2  00F1               	movwf	??_TMR1_ISR_+1
  5807  01D3  0871               	movf	??_TMR1_ISR_+1,w
  5808  01D4  00A2               	movwf	TMR1_ISR_@lights_1180
  5809  01D5                     i1l2127:
  5810                           
  5811                           ;main.c: 520:                 for (int i = 0; i < 7; i++)
  5812  01D5  01AF               	clrf	TMR1_ISR_@i_1181
  5813  01D6  01B0               	clrf	TMR1_ISR_@i_1181+1
  5814  01D7                     i1l2133:
  5815                           
  5816                           ;main.c: 521:                 {;main.c: 522:                     light_array[i] = (light
      +                          _array[i] << 1) + lights;
  5817  01D7  0140               	movlb	0	; select bank0
  5818  01D8  082F               	movf	TMR1_ISR_@i_1181,w
  5819  01D9  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5820  01DA  0086               	movwf	6
  5821  01DB  0187               	clrf	7
  5822  01DC  3501               	lslf	1,w
  5823  01DD  0722               	addwf	TMR1_ISR_@lights_1180,w
  5824  01DE  00F0               	movwf	??_TMR1_ISR_
  5825  01DF  082F               	movf	TMR1_ISR_@i_1181,w
  5826  01E0  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5827  01E1  0086               	movwf	6
  5828  01E2  0187               	clrf	7
  5829  01E3  0870               	movf	??_TMR1_ISR_,w
  5830  01E4  0081               	movwf	1
  5831  01E5                     i1l2135:
  5832                           
  5833                           ;main.c: 523:                 }
  5834  01E5  3001               	movlw	1
  5835  01E6  07AF               	addwf	TMR1_ISR_@i_1181,f
  5836  01E7  3000               	movlw	0
  5837  01E8  3DB0               	addwfc	TMR1_ISR_@i_1181+1,f
  5838  01E9                     i1l2137:
  5839  01E9  0830               	movf	TMR1_ISR_@i_1181+1,w
  5840  01EA  3A80               	xorlw	128
  5841  01EB  00F0               	movwf	??_TMR1_ISR_
  5842  01EC  3080               	movlw	128
  5843  01ED  0270               	subwf	??_TMR1_ISR_,w
  5844  01EE  1D03               	skipz
  5845  01EF  29F2               	goto	u107_25
  5846  01F0  3007               	movlw	7
  5847  01F1  022F               	subwf	TMR1_ISR_@i_1181,w
  5848  01F2                     u107_25:
  5849  01F2  1C03               	skipc
  5850  01F3  29F5               	goto	u107_21
  5851  01F4  29F6               	goto	u107_20
  5852  01F5                     u107_21:
  5853  01F5  29D7               	goto	i1l2133
  5854  01F6                     u107_20:
  5855  01F6  29F7               	goto	i1l2139
  5856  01F7                     i1l589:
  5857  01F7                     i1l2139:
  5858                           
  5859                           ;main.c: 530:     if (song3_playing)
  5860  01F7  0140               	movlb	0	; select bank0
  5861  01F8  084D               	movf	_song3_playing,w
  5862  01F9  1903               	btfsc	3,2
  5863  01FA  29FC               	goto	u108_21
  5864  01FB  29FD               	goto	u108_20
  5865  01FC                     u108_21:
  5866  01FC  2ACA               	goto	i1l2207
  5867  01FD                     u108_20:
  5868  01FD                     i1l2141:
  5869                           
  5870                           ;main.c: 531:     {;main.c: 592:        if (song3[count] == 212)
  5871  01FD  0846               	movf	_count,w
  5872  01FE  3EA0               	addlw	(low (_song3| 0))& (0+255)
  5873  01FF  0086               	movwf	6
  5874  0200  0187               	clrf	7
  5875  0201  30D4               	movlw	212
  5876  0202  0601               	xorwf	1,w
  5877  0203  1D03               	btfss	3,2
  5878  0204  2A06               	goto	u109_21
  5879  0205  2A07               	goto	u109_20
  5880  0206                     u109_21:
  5881  0206  2A21               	goto	i1l2155
  5882  0207                     u109_20:
  5883  0207                     i1l2143:
  5884                           
  5885                           ;main.c: 593:        {;main.c: 594:            for (int i = 0; i < 7; i++)
  5886  0207  01A5               	clrf	TMR1_ISR_@i_1182
  5887  0208  01A6               	clrf	TMR1_ISR_@i_1182+1
  5888  0209                     i1l2149:
  5889                           
  5890                           ;main.c: 595:             {;main.c: 596:                 light_array[i] = 0x00;
  5891  0209  0140               	movlb	0	; select bank0
  5892  020A  0825               	movf	TMR1_ISR_@i_1182,w
  5893  020B  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5894  020C  0086               	movwf	6
  5895  020D  0187               	clrf	7
  5896  020E  0181               	clrf	1
  5897  020F                     i1l2151:
  5898                           
  5899                           ;main.c: 597:             }
  5900  020F  3001               	movlw	1
  5901  0210  07A5               	addwf	TMR1_ISR_@i_1182,f
  5902  0211  3000               	movlw	0
  5903  0212  3DA6               	addwfc	TMR1_ISR_@i_1182+1,f
  5904  0213                     i1l2153:
  5905  0213  0826               	movf	TMR1_ISR_@i_1182+1,w
  5906  0214  3A80               	xorlw	128
  5907  0215  00F0               	movwf	??_TMR1_ISR_
  5908  0216  3080               	movlw	128
  5909  0217  0270               	subwf	??_TMR1_ISR_,w
  5910  0218  1D03               	skipz
  5911  0219  2A1C               	goto	u110_25
  5912  021A  3007               	movlw	7
  5913  021B  0225               	subwf	TMR1_ISR_@i_1182,w
  5914  021C                     u110_25:
  5915  021C  1C03               	skipc
  5916  021D  2A1F               	goto	u110_21
  5917  021E  2A20               	goto	u110_20
  5918  021F                     u110_21:
  5919  021F  2A09               	goto	i1l2149
  5920  0220                     u110_20:
  5921  0220  2ACA               	goto	i1l2207
  5922  0221                     i1l2155:
  5923  0221  0846               	movf	_count,w
  5924  0222  3EA0               	addlw	(low (_song3| 0))& (0+255)
  5925  0223  0086               	movwf	6
  5926  0224  0187               	clrf	7
  5927  0225  0801               	movf	1,w
  5928  0226  1D03               	btfss	3,2
  5929  0227  2A29               	goto	u111_21
  5930  0228  2A2A               	goto	u111_20
  5931  0229                     u111_21:
  5932  0229  2A47               	goto	i1l2169
  5933  022A                     u111_20:
  5934  022A                     i1l2157:
  5935                           
  5936                           ;main.c: 600:        {;main.c: 601:            for (int i = 0; i < 7; i++)
  5937  022A  01A7               	clrf	TMR1_ISR_@i_1183
  5938  022B  01A8               	clrf	TMR1_ISR_@i_1183+1
  5939  022C                     i1l2163:
  5940                           
  5941                           ;main.c: 602:             {;main.c: 603:                 light_array[i] = 0xFF;
  5942  022C  30FF               	movlw	255
  5943  022D  00F0               	movwf	??_TMR1_ISR_
  5944  022E  0140               	movlb	0	; select bank0
  5945  022F  0827               	movf	TMR1_ISR_@i_1183,w
  5946  0230  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  5947  0231  0086               	movwf	6
  5948  0232  0187               	clrf	7
  5949  0233  0870               	movf	??_TMR1_ISR_,w
  5950  0234  0081               	movwf	1
  5951  0235                     i1l2165:
  5952                           
  5953                           ;main.c: 604:             }
  5954  0235  3001               	movlw	1
  5955  0236  07A7               	addwf	TMR1_ISR_@i_1183,f
  5956  0237  3000               	movlw	0
  5957  0238  3DA8               	addwfc	TMR1_ISR_@i_1183+1,f
  5958  0239                     i1l2167:
  5959  0239  0828               	movf	TMR1_ISR_@i_1183+1,w
  5960  023A  3A80               	xorlw	128
  5961  023B  00F0               	movwf	??_TMR1_ISR_
  5962  023C  3080               	movlw	128
  5963  023D  0270               	subwf	??_TMR1_ISR_,w
  5964  023E  1D03               	skipz
  5965  023F  2A42               	goto	u112_25
  5966  0240  3007               	movlw	7
  5967  0241  0227               	subwf	TMR1_ISR_@i_1183,w
  5968  0242                     u112_25:
  5969  0242  1C03               	skipc
  5970  0243  2A45               	goto	u112_21
  5971  0244  2A46               	goto	u112_20
  5972  0245                     u112_21:
  5973  0245  2A2C               	goto	i1l2163
  5974  0246                     u112_20:
  5975  0246  2ACA               	goto	i1l2207
  5976  0247                     i1l2169:
  5977                           
  5978                           ;main.c: 607:        {;main.c: 608:            if ((light_array[1] == 0x00) || (light_ar
      +                          ray[1] == 0xFF))
  5979  0247  0840               	movf	_light_array+1,w
  5980  0248  1903               	btfsc	3,2
  5981  0249  2A4B               	goto	u113_21
  5982  024A  2A4C               	goto	u113_20
  5983  024B                     u113_21:
  5984  024B  2A51               	goto	i1l2173
  5985  024C                     u113_20:
  5986  024C                     i1l2171:
  5987  024C  0A40               	incf	_light_array+1,w
  5988  024D  1D03               	btfss	3,2
  5989  024E  2A50               	goto	u114_21
  5990  024F  2A51               	goto	u114_20
  5991  0250                     u114_21:
  5992  0250  2A6E               	goto	i1l2185
  5993  0251                     u114_20:
  5994  0251                     i1l2173:
  5995                           
  5996                           ;main.c: 609:            {;main.c: 610:                 for (int i = 0; i < 7; i++)
  5997  0251  01A9               	clrf	TMR1_ISR_@i_1184
  5998  0252  01AA               	clrf	TMR1_ISR_@i_1184+1
  5999  0253                     i1l2179:
  6000                           
  6001                           ;main.c: 611:                 {;main.c: 612:                     light_array[i] = 0xF9;
  6002  0253  30F9               	movlw	249
  6003  0254  00F0               	movwf	??_TMR1_ISR_
  6004  0255  0140               	movlb	0	; select bank0
  6005  0256  0829               	movf	TMR1_ISR_@i_1184,w
  6006  0257  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  6007  0258  0086               	movwf	6
  6008  0259  0187               	clrf	7
  6009  025A  0870               	movf	??_TMR1_ISR_,w
  6010  025B  0081               	movwf	1
  6011  025C                     i1l2181:
  6012                           
  6013                           ;main.c: 613:                 }
  6014  025C  3001               	movlw	1
  6015  025D  07A9               	addwf	TMR1_ISR_@i_1184,f
  6016  025E  3000               	movlw	0
  6017  025F  3DAA               	addwfc	TMR1_ISR_@i_1184+1,f
  6018  0260                     i1l2183:
  6019  0260  082A               	movf	TMR1_ISR_@i_1184+1,w
  6020  0261  3A80               	xorlw	128
  6021  0262  00F0               	movwf	??_TMR1_ISR_
  6022  0263  3080               	movlw	128
  6023  0264  0270               	subwf	??_TMR1_ISR_,w
  6024  0265  1D03               	skipz
  6025  0266  2A69               	goto	u115_25
  6026  0267  3007               	movlw	7
  6027  0268  0229               	subwf	TMR1_ISR_@i_1184,w
  6028  0269                     u115_25:
  6029  0269  1C03               	skipc
  6030  026A  2A6C               	goto	u115_21
  6031  026B  2A6D               	goto	u115_20
  6032  026C                     u115_21:
  6033  026C  2A53               	goto	i1l2179
  6034  026D                     u115_20:
  6035  026D  2ACA               	goto	i1l2207
  6036  026E                     i1l2185:
  6037                           
  6038                           ;main.c: 616:            {;main.c: 617:                 if (last_note != song3[count])
  6039  026E  0846               	movf	_count,w
  6040  026F  3EA0               	addlw	(low (_song3| 0))& (0+255)
  6041  0270  0086               	movwf	6
  6042  0271  0187               	clrf	7
  6043  0272  0801               	movf	1,w
  6044  0273  064A               	xorwf	_last_note,w
  6045  0274  1903               	skipnz
  6046  0275  2A77               	goto	u116_21
  6047  0276  2A78               	goto	u116_20
  6048  0277                     u116_21:
  6049  0277  2ACA               	goto	i1l2207
  6050  0278                     u116_20:
  6051  0278                     i1l2187:
  6052                           
  6053                           ;main.c: 618:                 {;main.c: 619:                     for (int i = 0; i < 7; 
      +                          i++)
  6054  0278  01B6               	clrf	TMR1_ISR_@i_1185
  6055  0279  01B7               	clrf	TMR1_ISR_@i_1185+1
  6056  027A                     i1l2193:
  6057                           
  6058                           ;main.c: 620:                     {;main.c: 621:                         uint8_t lights 
      +                          = (light_array[i]) << 1;
  6059  027A  0140               	movlb	0	; select bank0
  6060  027B  0836               	movf	TMR1_ISR_@i_1185,w
  6061  027C  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  6062  027D  0086               	movwf	6
  6063  027E  0187               	clrf	7
  6064  027F  3501               	lslf	1,w
  6065  0280  00F0               	movwf	??_TMR1_ISR_
  6066  0281  0870               	movf	??_TMR1_ISR_,w
  6067  0282  00B1               	movwf	TMR1_ISR_@lights_1186
  6068  0283                     i1l2195:
  6069                           
  6070                           ;main.c: 622:                         lights = lights >> 7;
  6071  0283  0831               	movf	TMR1_ISR_@lights_1186,w
  6072  0284  00F0               	movwf	??_TMR1_ISR_
  6073  0285  3007               	movlw	7
  6074  0286                     u117_25:
  6075  0286  36F0               	lsrf	??_TMR1_ISR_,f
  6076  0287  0B89               	decfsz	9,f
  6077  0288  2A86               	goto	u117_25
  6078  0289  0870               	movf	??_TMR1_ISR_,w
  6079  028A  00F1               	movwf	??_TMR1_ISR_+1
  6080  028B  0871               	movf	??_TMR1_ISR_+1,w
  6081  028C  00B1               	movwf	TMR1_ISR_@lights_1186
  6082  028D                     i1l2197:
  6083                           
  6084                           ;main.c: 623:                         light_array[i] = (light_array[i] << 1) + lights;
  6085  028D  0836               	movf	TMR1_ISR_@i_1185,w
  6086  028E  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  6087  028F  0086               	movwf	6
  6088  0290  0187               	clrf	7
  6089  0291  3501               	lslf	1,w
  6090  0292  0731               	addwf	TMR1_ISR_@lights_1186,w
  6091  0293  00F0               	movwf	??_TMR1_ISR_
  6092  0294  0836               	movf	TMR1_ISR_@i_1185,w
  6093  0295  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  6094  0296  0086               	movwf	6
  6095  0297  0187               	clrf	7
  6096  0298  0870               	movf	??_TMR1_ISR_,w
  6097  0299  0081               	movwf	1
  6098  029A                     i1l2199:
  6099                           
  6100                           ;main.c: 624:                         lights = (light_array[i]) << 1;
  6101  029A  0836               	movf	TMR1_ISR_@i_1185,w
  6102  029B  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  6103  029C  0086               	movwf	6
  6104  029D  0187               	clrf	7
  6105  029E  3501               	lslf	1,w
  6106  029F  00F0               	movwf	??_TMR1_ISR_
  6107  02A0  0870               	movf	??_TMR1_ISR_,w
  6108  02A1  00B1               	movwf	TMR1_ISR_@lights_1186
  6109  02A2                     i1l2201:
  6110                           
  6111                           ;main.c: 625:                         lights = lights >> 7;
  6112  02A2  0831               	movf	TMR1_ISR_@lights_1186,w
  6113  02A3  00F0               	movwf	??_TMR1_ISR_
  6114  02A4  3007               	movlw	7
  6115  02A5                     u118_25:
  6116  02A5  36F0               	lsrf	??_TMR1_ISR_,f
  6117  02A6  0B89               	decfsz	9,f
  6118  02A7  2AA5               	goto	u118_25
  6119  02A8  0870               	movf	??_TMR1_ISR_,w
  6120  02A9  00F1               	movwf	??_TMR1_ISR_+1
  6121  02AA  0871               	movf	??_TMR1_ISR_+1,w
  6122  02AB  00B1               	movwf	TMR1_ISR_@lights_1186
  6123                           
  6124                           ;main.c: 626:                         light_array[i] = (light_array[i] << 1) + lights;
  6125  02AC  0836               	movf	TMR1_ISR_@i_1185,w
  6126  02AD  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  6127  02AE  0086               	movwf	6
  6128  02AF  0187               	clrf	7
  6129  02B0  3501               	lslf	1,w
  6130  02B1  0731               	addwf	TMR1_ISR_@lights_1186,w
  6131  02B2  00F0               	movwf	??_TMR1_ISR_
  6132  02B3  0836               	movf	TMR1_ISR_@i_1185,w
  6133  02B4  3E3F               	addlw	(low (_light_array| 0))& (0+255)
  6134  02B5  0086               	movwf	6
  6135  02B6  0187               	clrf	7
  6136  02B7  0870               	movf	??_TMR1_ISR_,w
  6137  02B8  0081               	movwf	1
  6138  02B9                     i1l2203:
  6139                           
  6140                           ;main.c: 627:                     }
  6141  02B9  3001               	movlw	1
  6142  02BA  07B6               	addwf	TMR1_ISR_@i_1185,f
  6143  02BB  3000               	movlw	0
  6144  02BC  3DB7               	addwfc	TMR1_ISR_@i_1185+1,f
  6145  02BD                     i1l2205:
  6146  02BD  0837               	movf	TMR1_ISR_@i_1185+1,w
  6147  02BE  3A80               	xorlw	128
  6148  02BF  00F0               	movwf	??_TMR1_ISR_
  6149  02C0  3080               	movlw	128
  6150  02C1  0270               	subwf	??_TMR1_ISR_,w
  6151  02C2  1D03               	skipz
  6152  02C3  2AC6               	goto	u119_25
  6153  02C4  3007               	movlw	7
  6154  02C5  0236               	subwf	TMR1_ISR_@i_1185,w
  6155  02C6                     u119_25:
  6156  02C6  1C03               	skipc
  6157  02C7  2AC9               	goto	u119_21
  6158  02C8  2ACA               	goto	u119_20
  6159  02C9                     u119_21:
  6160  02C9  2A7A               	goto	i1l2193
  6161  02CA                     u119_20:
  6162  02CA                     i1l2207:
  6163                           
  6164                           ;main.c: 636:     if (song2_playing)
  6165  02CA  0140               	movlb	0	; select bank0
  6166  02CB  084C               	movf	_song2_playing,w
  6167  02CC  1903               	btfsc	3,2
  6168  02CD  2ACF               	goto	u120_21
  6169  02CE  2AD0               	goto	u120_20
  6170  02CF                     u120_21:
  6171  02CF  2AD7               	goto	i1l2211
  6172  02D0                     u120_20:
  6173  02D0                     i1l2209:
  6174                           
  6175                           ;main.c: 637:     {;main.c: 638:         TMR1H = timer_high_2;
  6176  02D0  083D               	movf	_timer_high_2,w
  6177  02D1  0144               	movlb	4	; select bank4
  6178  02D2  008D               	movwf	13	;volatile
  6179                           
  6180                           ;main.c: 639:         TMR1L = timer_low_2;
  6181  02D3  0140               	movlb	0	; select bank0
  6182  02D4  083C               	movf	_timer_low_2,w
  6183  02D5  0144               	movlb	4	; select bank4
  6184  02D6  008C               	movwf	12	;volatile
  6185  02D7                     i1l2211:
  6186                           
  6187                           ;main.c: 643:     if (song3_playing)
  6188  02D7  0140               	movlb	0	; select bank0
  6189  02D8  084D               	movf	_song3_playing,w
  6190  02D9  1903               	btfsc	3,2
  6191  02DA  2ADC               	goto	u121_21
  6192  02DB  2ADD               	goto	u121_20
  6193  02DC                     u121_21:
  6194  02DC  2AE4               	goto	i1l616
  6195  02DD                     u121_20:
  6196  02DD                     i1l2213:
  6197                           
  6198                           ;main.c: 644:     {;main.c: 645:         TMR1H = timer_high_3;
  6199  02DD  083A               	movf	_timer_high_3,w
  6200  02DE  0144               	movlb	4	; select bank4
  6201  02DF  008D               	movwf	13	;volatile
  6202                           
  6203                           ;main.c: 646:         TMR1L = timer_low_3;
  6204  02E0  0140               	movlb	0	; select bank0
  6205  02E1  0839               	movf	_timer_low_3,w
  6206  02E2  0144               	movlb	4	; select bank4
  6207  02E3  008C               	movwf	12	;volatile
  6208  02E4                     i1l616:	
  6209                           ;main.c: 647:     }
  6210                           
  6211                           
  6212                           ;main.c: 650:     if ((count > 138) && silent_night_playing)
  6213  02E4  0140               	movlb	0	; select bank0
  6214  02E5  0847               	movf	_count+1,w
  6215  02E6  3A80               	xorlw	128
  6216  02E7  00F0               	movwf	??_TMR1_ISR_
  6217  02E8  3080               	movlw	128
  6218  02E9  0270               	subwf	??_TMR1_ISR_,w
  6219  02EA  1D03               	skipz
  6220  02EB  2AEE               	goto	u122_25
  6221  02EC  308B               	movlw	139
  6222  02ED  0246               	subwf	_count,w
  6223  02EE                     u122_25:
  6224  02EE  1C03               	skipc
  6225  02EF  2AF1               	goto	u122_21
  6226  02F0  2AF2               	goto	u122_20
  6227  02F1                     u122_21:
  6228  02F1  2AFC               	goto	i1l2219
  6229  02F2                     u122_20:
  6230  02F2                     i1l2215:
  6231  02F2  0140               	movlb	0	; select bank0
  6232  02F3  084E               	movf	_silent_night_playing,w
  6233  02F4  1903               	btfsc	3,2
  6234  02F5  2AF7               	goto	u123_21
  6235  02F6  2AF8               	goto	u123_20
  6236  02F7                     u123_21:
  6237  02F7  2AFC               	goto	i1l2219
  6238  02F8                     u123_20:
  6239  02F8                     i1l2217:
  6240                           
  6241                           ;main.c: 651:     {;main.c: 652:         presses = 0;
  6242  02F8  01C9               	clrf	_presses
  6243                           
  6244                           ;main.c: 653:         count = 0;
  6245  02F9  01C6               	clrf	_count
  6246  02FA  01C7               	clrf	_count+1
  6247                           
  6248                           ;main.c: 654:     }
  6249  02FB  2B35               	goto	i1l623
  6250  02FC                     i1l2219:
  6251  02FC  0140               	movlb	0	; select bank0
  6252  02FD  0847               	movf	_count+1,w
  6253  02FE  3A80               	xorlw	128
  6254  02FF  3C80               	sublw	128
  6255  0300  1D03               	skipz
  6256  0301  2B04               	goto	u124_25
  6257  0302  0846               	movf	_count,w
  6258  0303  023B               	subwf	_song2_length,w
  6259  0304                     u124_25:
  6260  0304  1803               	skipnc
  6261  0305  2B07               	goto	u124_21
  6262  0306  2B08               	goto	u124_20
  6263  0307                     u124_21:
  6264  0307  2B0F               	goto	i1l2225
  6265  0308                     u124_20:
  6266  0308                     i1l2221:
  6267  0308  0140               	movlb	0	; select bank0
  6268  0309  084C               	movf	_song2_playing,w
  6269  030A  1903               	btfsc	3,2
  6270  030B  2B0D               	goto	u125_21
  6271  030C  2B0E               	goto	u125_20
  6272  030D                     u125_21:
  6273  030D  2B0F               	goto	i1l2225
  6274  030E                     u125_20:
  6275  030E  2AF8               	goto	i1l2217
  6276  030F                     i1l2225:
  6277  030F  0140               	movlb	0	; select bank0
  6278  0310  0847               	movf	_count+1,w
  6279  0311  3A80               	xorlw	128
  6280  0312  3C80               	sublw	128
  6281  0313  1D03               	skipz
  6282  0314  2B17               	goto	u126_25
  6283  0315  0846               	movf	_count,w
  6284  0316  0238               	subwf	_song3_length,w
  6285  0317                     u126_25:
  6286  0317  1803               	skipnc
  6287  0318  2B1A               	goto	u126_21
  6288  0319  2B1B               	goto	u126_20
  6289  031A                     u126_21:
  6290  031A  2B35               	goto	i1l623
  6291  031B                     u126_20:
  6292  031B                     i1l2227:
  6293  031B  0140               	movlb	0	; select bank0
  6294  031C  084D               	movf	_song3_playing,w
  6295  031D  1903               	btfsc	3,2
  6296  031E  2B20               	goto	u127_21
  6297  031F  2B21               	goto	u127_20
  6298  0320                     u127_21:
  6299  0320  2B35               	goto	i1l623
  6300  0321                     u127_20:
  6301  0321                     i1l2229:
  6302                           
  6303                           ;main.c: 665:     {;main.c: 666:         presses = 0;
  6304  0321  01C9               	clrf	_presses
  6305                           
  6306                           ;main.c: 667:         count = 0;
  6307  0322  01C6               	clrf	_count
  6308  0323  01C7               	clrf	_count+1
  6309  0324                     i1l2231:
  6310                           
  6311                           ;main.c: 669:         if (cole_counter < 2)
  6312  0324  3002               	movlw	2
  6313  0325  0248               	subwf	_cole_counter,w
  6314  0326  1803               	skipnc
  6315  0327  2B29               	goto	u128_21
  6316  0328  2B2A               	goto	u128_20
  6317  0329                     u128_21:
  6318  0329  2B35               	goto	i1l620
  6319  032A                     u128_20:
  6320  032A                     i1l2233:
  6321                           
  6322                           ;main.c: 670:         {;main.c: 671:             count = 0;
  6323  032A  01C6               	clrf	_count
  6324  032B  01C7               	clrf	_count+1
  6325  032C                     i1l2235:
  6326                           
  6327                           ;main.c: 672:             presses = 3;
  6328  032C  3003               	movlw	3
  6329  032D  00F0               	movwf	??_TMR1_ISR_
  6330  032E  0870               	movf	??_TMR1_ISR_,w
  6331  032F  00C9               	movwf	_presses
  6332  0330                     i1l2237:
  6333                           
  6334                           ;main.c: 673:             cole_counter++;
  6335  0330  3001               	movlw	1
  6336  0331  00F0               	movwf	??_TMR1_ISR_
  6337  0332  0870               	movf	??_TMR1_ISR_,w
  6338  0333  07C8               	addwf	_cole_counter,f
  6339  0334  2B35               	goto	i1l623
  6340  0335                     i1l620:
  6341  0335                     i1l623:
  6342  0335  0008               	return
  6343  0336                     __end_of_TMR1_ISR_:
  6344                           
  6345                           	psect	text23
  6346  0FEC                     __ptext23:	
  6347 ;; *************** function _TMR0_ISR *****************
  6348 ;; Defined at:
  6349 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0, pclath, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6367 ;;Total ram usage:        0 bytes
  6368 ;; Hardware stack levels used: 1
  6369 ;; Hardware stack levels required when called: 1
  6370 ;; This function calls:
  6371 ;;		Absolute function
  6372 ;;		_TMR0_DefaultInterruptHandler
  6373 ;;		_TMR0_ISR_
  6374 ;; This function is called by:
  6375 ;;		_INTERRUPT_InterruptManager
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           
  6380                           ;psect for function _TMR0_ISR
  6381  0FEC                     _TMR0_ISR:
  6382  0FEC                     i1l2253:	
  6383                           ;incstack = 0
  6384                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  6385                           
  6386                           
  6387                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  6388  0FEC  014E               	movlb	14	; select bank14
  6389  0FED  128C               	bcf	12,5	;volatile
  6390  0FEE                     i1l2255:
  6391                           
  6392                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  6393  0FEE  0878               	movf	_timer0ReloadVal16bit+1,w	;volatile
  6394  0FEF  014B               	movlb	11	; select bank11
  6395  0FF0  009D               	movwf	29	;volatile
  6396  0FF1                     i1l2257:
  6397                           
  6398                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  6399  0FF1  0877               	movf	_timer0ReloadVal16bit,w	;volatile
  6400  0FF2  009C               	movwf	28	;volatile
  6401  0FF3                     i1l2259:
  6402                           
  6403                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
  6404  0FF3  0140               	movlb	0	; select bank0
  6405  0FF4  0853               	movf	_TMR0_InterruptHandler,w
  6406  0FF5  0454               	iorwf	_TMR0_InterruptHandler+1,w
  6407  0FF6  1903               	btfsc	3,2
  6408  0FF7  2FF9               	goto	u129_21
  6409  0FF8  2FFA               	goto	u129_20
  6410  0FF9                     u129_21:
  6411  0FF9  2FFF               	goto	i1l328
  6412  0FFA                     u129_20:
  6413  0FFA                     i1l2261:
  6414                           
  6415                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
  6416  0FFA  0854               	movf	_TMR0_InterruptHandler+1,w
  6417  0FFB  008A               	movwf	10
  6418  0FFC  0853               	movf	_TMR0_InterruptHandler,w
  6419  0FFD  000A               	callw
  6420  0FFE  318F               	pagesel	$
  6421  0FFF                     i1l328:
  6422  0FFF  0008               	return
  6423  1000                     __end_of_TMR0_ISR:
  6424                           
  6425                           	psect	text24
  6426  0003                     __ptext24:	
  6427 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6428 ;; Defined at:
  6429 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;		None
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		None
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;Total ram usage:        0 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_TMR0_Initialize
  6453 ;;		_TMR0_ISR
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           
  6458                           ;psect for function _TMR0_DefaultInterruptHandler
  6459  0003                     _TMR0_DefaultInterruptHandler:
  6460  0003                     i1l334:	
  6461                           ;incstack = 0
  6462                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  6463                           
  6464  0003  0008               	return
  6465  0004                     __end_of_TMR0_DefaultInterruptHandler:
  6466                           
  6467                           	psect	text25
  6468  0F4F                     __ptext25:	
  6469 ;; *************** function _TMR0_ISR_ *****************
  6470 ;; Defined at:
  6471 ;;		line 456 in file "main.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      void 
  6478 ;; Registers used:
  6479 ;;		None
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used: 1
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_main
  6495 ;;		_TMR0_ISR
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           
  6500                           ;psect for function _TMR0_ISR_
  6501  0F4F                     _TMR0_ISR_:
  6502  0F4F                     i1l2039:	
  6503                           ;incstack = 0
  6504                           ; Regs used in _TMR0_ISR_: []
  6505                           
  6506                           
  6507                           ;main.c: 458:     TMR0_complete = 1;
  6508  0F4F  0140               	movlb	0	; select bank0
  6509  0F50  01CB               	clrf	_TMR0_complete
  6510  0F51  0ACB               	incf	_TMR0_complete,f
  6511  0F52                     i1l567:
  6512  0F52  0008               	return
  6513  0F53                     __end_of_TMR0_ISR_:
  6514                           
  6515                           	psect	text26
  6516  0F59                     __ptext26:	
  6517 ;; *************** function _INT_ISR *****************
  6518 ;; Defined at:
  6519 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, pclath, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; Hardware stack levels required when called: 3
  6540 ;; This function calls:
  6541 ;;		_INT_CallBack
  6542 ;; This function is called by:
  6543 ;;		_INTERRUPT_InterruptManager
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           
  6548                           ;psect for function _INT_ISR
  6549  0F59                     _INT_ISR:
  6550  0F59                     i1l2263:	
  6551                           ;incstack = 0
  6552                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  6553                           
  6554                           
  6555                           ;mcc_generated_files/ext_int.c: 47:     (PIR0bits.INTF = 0);
  6556  0F59  014E               	movlb	14	; select bank14
  6557  0F5A  100C               	bcf	12,0	;volatile
  6558  0F5B                     i1l2265:
  6559                           
  6560                           ;mcc_generated_files/ext_int.c: 50:     INT_CallBack();
  6561  0F5B  318F  278B  318F   	fcall	_INT_CallBack
  6562  0F5E                     i1l271:
  6563  0F5E  0008               	return
  6564  0F5F                     __end_of_INT_ISR:
  6565                           
  6566                           	psect	text27
  6567  0F8B                     __ptext27:	
  6568 ;; *************** function _INT_CallBack *****************
  6569 ;; Defined at:
  6570 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      void 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0, pclath, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;Total ram usage:        0 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 2
  6591 ;; This function calls:
  6592 ;;		Absolute function
  6593 ;;		_EXT_ISR
  6594 ;;		_INT_DefaultInterruptHandler
  6595 ;; This function is called by:
  6596 ;;		_INT_ISR
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           
  6601                           ;psect for function _INT_CallBack
  6602  0F8B                     _INT_CallBack:
  6603  0F8B                     i1l2015:	
  6604                           ;incstack = 0
  6605                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  6606                           
  6607                           
  6608                           ;mcc_generated_files/ext_int.c: 57:     if(INT_InterruptHandler)
  6609  0F8B  0140               	movlb	0	; select bank0
  6610  0F8C  0855               	movf	_INT_InterruptHandler,w
  6611  0F8D  0456               	iorwf	_INT_InterruptHandler+1,w
  6612  0F8E  1903               	btfsc	3,2
  6613  0F8F  2F91               	goto	u85_21
  6614  0F90  2F92               	goto	u85_20
  6615  0F91                     u85_21:
  6616  0F91  2F97               	goto	i1l275
  6617  0F92                     u85_20:
  6618  0F92                     i1l2017:
  6619                           
  6620                           ;mcc_generated_files/ext_int.c: 58:     {;mcc_generated_files/ext_int.c: 59:         INT
      +                          _InterruptHandler();
  6621  0F92  0856               	movf	_INT_InterruptHandler+1,w
  6622  0F93  008A               	movwf	10
  6623  0F94  0855               	movf	_INT_InterruptHandler,w
  6624  0F95  000A               	callw
  6625  0F96  318F               	pagesel	$
  6626  0F97                     i1l275:
  6627  0F97  0008               	return
  6628  0F98                     __end_of_INT_CallBack:
  6629                           
  6630                           	psect	text28
  6631  079E                     __ptext28:	
  6632 ;; *************** function _EXT_ISR *****************
  6633 ;; Defined at:
  6634 ;;		line 432 in file "main.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;		None
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, status,2, status,0, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6652 ;;Total ram usage:        1 bytes
  6653 ;; Hardware stack levels used: 1
  6654 ;; Hardware stack levels required when called: 1
  6655 ;; This function calls:
  6656 ;;		_TMR0_Reload
  6657 ;; This function is called by:
  6658 ;;		_main
  6659 ;;		_INT_CallBack
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           
  6664                           ;psect for function _EXT_ISR
  6665  079E                     _EXT_ISR:
  6666  079E                     i1l1905:	
  6667                           ;incstack = 0
  6668                           ; Regs used in _EXT_ISR: [wreg+status,2+status,0+pclath+cstack]
  6669                           
  6670                           
  6671                           ;main.c: 434:     presses++;
  6672  079E  3001               	movlw	1
  6673  079F  00F0               	movwf	??_EXT_ISR
  6674  07A0  0870               	movf	??_EXT_ISR,w
  6675  07A1  0140               	movlb	0	; select bank0
  6676  07A2  07C9               	addwf	_presses,f
  6677  07A3                     i1l1907:
  6678                           
  6679                           ;main.c: 435:     TMR0_Reload();
  6680  07A3  318F  2753  3187   	fcall	_TMR0_Reload
  6681  07A6                     i1l1909:
  6682                           
  6683                           ;main.c: 438:     if (T1CONbits.TMR1ON)
  6684  07A6  0144               	movlb	4	; select bank4
  6685  07A7  1C0E               	btfss	14,0	;volatile
  6686  07A8  2FAA               	goto	u83_21
  6687  07A9  2FAB               	goto	u83_20
  6688  07AA                     u83_21:
  6689  07AA  2FB0               	goto	i1l1913
  6690  07AB                     u83_20:
  6691  07AB                     i1l1911:
  6692                           
  6693                           ;main.c: 439:     {;main.c: 440:         presses = 0;
  6694  07AB  0140               	movlb	0	; select bank0
  6695  07AC  01C9               	clrf	_presses
  6696                           
  6697                           ;main.c: 441:         count = 0;
  6698  07AD  01C6               	clrf	_count
  6699  07AE  01C7               	clrf	_count+1
  6700                           
  6701                           ;main.c: 442:     }
  6702  07AF  2FB2               	goto	i1l1915
  6703  07B0                     i1l1913:
  6704                           
  6705                           ;main.c: 445:     {;main.c: 446:         TMR0_complete = 0;
  6706  07B0  0140               	movlb	0	; select bank0
  6707  07B1  01CB               	clrf	_TMR0_complete
  6708  07B2                     i1l1915:
  6709                           
  6710                           ;main.c: 449:     if (presses > num_songs)
  6711  07B2  0849               	movf	_presses,w
  6712  07B3  023E               	subwf	_num_songs,w
  6713  07B4  1803               	skipnc
  6714  07B5  2FB7               	goto	u84_21
  6715  07B6  2FB8               	goto	u84_20
  6716  07B7                     u84_21:
  6717  07B7  2FB9               	goto	i1l564
  6718  07B8                     u84_20:
  6719  07B8                     i1l1917:
  6720                           
  6721                           ;main.c: 450:     {;main.c: 451:         presses = 0;
  6722  07B8  01C9               	clrf	_presses
  6723  07B9                     i1l564:
  6724  07B9  0008               	return
  6725  07BA                     __end_of_EXT_ISR:
  6726                           
  6727                           	psect	text29
  6728  0002                     __ptext29:	
  6729 ;; *************** function _INT_DefaultInterruptHandler *****************
  6730 ;; Defined at:
  6731 ;;		line 67 in file "mcc_generated_files/ext_int.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      void 
  6738 ;; Registers used:
  6739 ;;		None
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6749 ;;Total ram usage:        0 bytes
  6750 ;; Hardware stack levels used: 1
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		_EXT_INT_Initialize
  6755 ;;		_INT_CallBack
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           
  6760                           ;psect for function _INT_DefaultInterruptHandler
  6761  0002                     _INT_DefaultInterruptHandler:
  6762  0002                     i1l281:	
  6763                           ;incstack = 0
  6764                           ; Regs used in _INT_DefaultInterruptHandler: []
  6765                           
  6766  0002  0008               	return
  6767  0003                     __end_of_INT_DefaultInterruptHandler:
  6768                           
  6769                           	psect	text30
  6770  0F53                     __ptext30:	
  6771 ;; *************** function _TMR0_Reload *****************
  6772 ;; Defined at:
  6773 ;;		line 127 in file "mcc_generated_files/tmr0.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;		None
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;		None
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  1    wreg      void 
  6780 ;; Registers used:
  6781 ;;		wreg, status,2
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;Total ram usage:        0 bytes
  6792 ;; Hardware stack levels used: 1
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_EXT_ISR
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           
  6801                           ;psect for function _TMR0_Reload
  6802  0F53                     _TMR0_Reload:
  6803  0F53                     i1l1889:	
  6804                           ;incstack = 0
  6805                           ; Regs used in _TMR0_Reload: [wreg+status,2]
  6806                           
  6807                           
  6808                           ;mcc_generated_files/tmr0.c: 130:     TMR0H = timer0ReloadVal16bit >> 8;
  6809  0F53  0878               	movf	_timer0ReloadVal16bit+1,w	;volatile
  6810  0F54  014B               	movlb	11	; select bank11
  6811  0F55  009D               	movwf	29	;volatile
  6812  0F56                     i1l1891:
  6813                           
  6814                           ;mcc_generated_files/tmr0.c: 131:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  6815  0F56  0877               	movf	_timer0ReloadVal16bit,w	;volatile
  6816  0F57  009C               	movwf	28	;volatile
  6817  0F58                     i1l324:
  6818  0F58  0008               	return
  6819  0F59                     __end_of_TMR0_Reload:
  6820  007E                     btemp	set	126	;btemp
  6821  007E                     int$flags	set	126
  6822  007E                     wtemp0	set	126
  6823  22DC                     
  6824                           	psect	config
  6825                           
  6826                           ;Config register CONFIG1 @ 0x8007
  6827                           ;	External Oscillator Mode Selection bits
  6828                           ;	FEXTOSC = OFF, Oscillator not enabled
  6829                           ;	Power-up Default Value for COSC bits
  6830                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  6831                           ;	Clock Out Enable bit
  6832                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6833                           ;	VDD Range Analog Calibration Selection bit
  6834                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6835  8007                     	org	32775
  6836  8007  3FED               	dw	16365
  6837                           
  6838                           ;Config register CONFIG2 @ 0x8008
  6839                           ;	Master Clear Enable bit
  6840                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6841                           ;	Power-up Timer Selection bits
  6842                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  6843                           ;	WDT Operating Mode bits
  6844                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  6845                           ;	Brown-out Reset Enable bits
  6846                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6847                           ;	Brown-out Reset Voltage Selection bit
  6848                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6849                           ;	PPSLOCKED One-Way Set Enable bit
  6850                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  6851                           ;	Stack Overflow/Underflow Reset Enable bit
  6852                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6853  8008                     	org	32776
  6854  8008  3FE7               	dw	16359
  6855                           
  6856                           ;Config register CONFIG4 @ 0x800A
  6857                           ;	Boot Block Size Selection bits
  6858                           ;	BBSIZE = BB512, 512 words boot block size
  6859                           ;	Boot Block Enable bit
  6860                           ;	BBEN = OFF, Boot Block is disabled
  6861                           ;	SAF Enable bit
  6862                           ;	SAFEN = OFF, SAF is disabled
  6863                           ;	Application Block Write Protection bit
  6864                           ;	WRTAPP = OFF, Application Block is not write-protected
  6865                           ;	Boot Block Write Protection bit
  6866                           ;	WRTB = OFF, Boot Block is not write-protected
  6867                           ;	Configuration Registers Write Protection bit
  6868                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6869                           ;	Storage Area Flash (SAF) Write Protection bit
  6870                           ;	WRTSAF = OFF, SAF is not write-protected
  6871                           ;	Low Voltage Programming Enable bit
  6872                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6873  800A                     	org	32778
  6874  800A  3FFF               	dw	16383
  6875                           
  6876                           ;Config register CONFIG5 @ 0x800B
  6877                           ;	User Program Flash Memory Code Protection bit
  6878                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6879  800B                     	org	32779
  6880  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    4
    Data        390
    BSS         10
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     24      55
    BANK1            80      9      77
    BANK2            80      9      41
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            12      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    displayMatrix@states	PTR unsigned char  size(1) Largest target is 7
		 -> light_array(BANK0[7]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_ISR_(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_ISR_(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXT_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXT_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    _main->_displayMatrix
    _displayMatrix->_shiftBytes
    _shiftBytes->_SPI1_ExchangeByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_ISR_
    _TMR1_ISR->_TMR1_WriteTimer
    _INT_CallBack->_EXT_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_ISR->_TMR1_ISR_

Critical Paths under _main in BANK1

    _main->_displayMatrix

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    3983
                                              4 BANK1      5     5      0
                                              0 BANK2      9     9      0
                 _EXT_INT_Initialize
            _INT_SetInterruptHandler
                    _PWM3_Initialize
                    _SPI1_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
           _TMR0_SetInterruptHandler
                    _TMR1_Initialize
           _TMR1_SetInterruptHandler
                    _TMR2_Initialize
                      _displayMatrix
                           _playNote
                         _shiftBytes
 ---------------------------------------------------------------------------------
 (1) _playNote                                             3     2      1     456
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _displayMatrix                                        6     6      0     739
                                              5 COMMON     2     2      0
                                              0 BANK1      4     4      0
                         _shiftBytes
 ---------------------------------------------------------------------------------
 (1) _shiftBytes                                           2     1      1     363
                                              3 COMMON     2     1      1
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _SPI1_ExchangeByte                                    1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1345
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1345
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _TMR1_ISR_ *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR_                                           26    26      0    1105
                                              0 COMMON     2     2      0
                                              0 BANK0     24    24      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _TMR0_ISR_ *
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR_                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
                            _EXT_ISR *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EXT_ISR                                              1     1      0       0
                                              0 COMMON     1     1      0
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EXT_INT_Initialize
     _INT_SetInterruptHandler
   _INT_SetInterruptHandler
   _PWM3_Initialize
   _SPI1_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR0_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_Initialize
   _displayMatrix
     _shiftBytes
       _SPI1_ExchangeByte
   _playNote
   _shiftBytes

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _EXT_ISR *
         _TMR0_Reload
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_ISR_ *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_ISR_ *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      9      4D       8       96.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      9      29      10       51.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9                C      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Dec 13 10:52:26 2021

                       _SPI1_ExchangeByte 0FA5                                        l32 0F6A  
                                      l35 0F4E                                        l29 079D  
                                      l64 07FE                                        l74 0FA9  
                                      l76 0FAE                                        l77 0FB1  
                      ?_SPI1_ExchangeByte 0070                                       l226 0F7E  
                                     l147 0723                                       l331 0F70  
                                     l309 07D2                                       l177 0FCC  
                                     l531 0422                                       l284 0FA4  
                                     l365 0763                                       l278 0F64  
                                     l552 0561                                       l642 0FBE  
                                     l626 076F                                       l554 0563  
                                     l395 0F76                                       l627 0778  
                                     l555 0564                                       l539 04D4  
                                     l628 0781                                       l649 06FB  
                                     _PR2 028D                           _timer1ReloadVal 0051  
                     ??_SPI1_ExchangeByte 0072                           _TMR2_Initialize 0FBF  
                                     wreg 0009                            ?_displayMatrix 0070  
                                    l2501 0F6B                                      l2511 07FA  
                                    l2503 0F71                                      l2521 0703  
                                    l2513 07FC                                      l2505 07EA  
                                    l2601 0FB3                                      l2531 0712  
                                    l2523 0706                                      l2515 06FC  
                                    l2507 07F7                                      l2611 078E  
                                    l2603 0FBB                                      l2541 071E  
                                    l2533 0714                                      l2525 070C  
                                    l2517 06FF                                      l2509 07F8  
                                    l2613 0791                                      l2605 0FBD  
                                    l2621 06C2                                      l2543 0720  
                                    l2535 0717                                      l2527 070E  
                                    l2519 0701                                      l2551 0F4C  
                                    l2615 0794                                      l2607 0782  
                                    l2631 06D0                                      l2711 0394  
                                    l2545 0F65                                      l2537 0719  
                                    l2529 0710                                      l2553 0F77  
                                    l2561 0FC6                                      l2617 0797  
                                    l2609 078B                                      l2633 06D4  
                                    l2641 0765                                      l2721 03D1  
                                    l2713 03A4                                      l2705 037C  
                                    l2547 0F67                                      l2539 071C  
                                    l2571 0749                                      l2563 0FC7  
                                    l2555 0FBF                                      l2619 079A  
                                    l2635 06E2                                      l2627 06C5  
                                    l2643 076C                                      l2731 03E9  
                                    l2723 03D6                                      l2707 0380  
                                    l2549 0F69                                      l2581 0759  
                                    l2573 074B                                      l2565 0FC9  
                                    l2557 0FC2                                      l2493 0FA6  
                                    l2637 06E9                                      l2629 06CB  
                                    l2645 0775                                      l2821 04C9  
                                    l2741 042A                                      l2733 03FA  
                                    l2725 03E6                                      l2709 0385  
                                    l2591 07BA                                      l2583 0760  
                                    l2575 074D                                      l2567 0744  
                                    l2559 0FC3                                      l2495 0FAF  
                                    l2639 06EE                                      l2751 043A  
                                    l2743 042C                                      l2735 03FF  
                                    l2719 03A7                                      l2671 0340  
                                    l2663 0336                                      l2585 0F98  
                                    l2593 07C5                                      l2577 074F  
                                    l2569 0747                                      l2761 04BB  
                                    l2753 0463                                      l2745 042D  
                                    l2737 040E                                      l2681 035C  
                                    l2673 0342                                      l2665 0339  
                                    l2499 0F5F                                      l2587 0F9B  
                                    l2595 07C7                                      l2579 0757  
                                    l2771 0502                                      l2763 04BC  
                                    l2755 0466                                      l2747 0432  
                                    l2739 0424                                      l2691 0375  
                                    l2683 0368                                      l2675 0343  
                                    l2667 033A                                      l2589 0FA2  
                                    l2597 07C8                                      l2781 0545  
                                    l2773 0509                                      l2757 048F  
                                    l2749 0437                                      l2693 0376  
                                    l2685 036D                                      l2677 0344  
                                    l2669 033E                                      l2599 07CF  
                                    l2791 0558                                      l2783 0549  
                                    l2775 051F                                      l2759 0492  
                                    l2767 04BF                                      l2687 0372  
                                    l2679 0350                                      l2785 054B  
                                    l2777 0527                                      l2769 04D9  
                                    l2689 0374                                      l2779 053E  
                                    l2787 054D                                      l2699 0379  
                                    l2789 0553                                      _LATA 0018  
                         __end_of_INT_ISR 0F5F                                      _LATC 001A  
                                    u1600 06FB                                      u1601 06FA  
                                    u1610 076C                                      u1611 076B  
                                    u1620 0775                                      u1700 040E  
                                    u1605 06F7                                      u1621 0774  
                                    u1701 040D                                      u1710 0422  
                                    u1711 0421                                      u1720 0432  
                                    u1721 0431                                      u1705 040A  
                                    u1730 0437                                      u1650 0394  
                                    _T2PR 028D                                      u1731 0436  
                                    u1715 041E                                      u1651 0393  
                                    u1580 0FAE                                      u1740 0508  
                                    u1660 03A4                                      u1581 0FAD  
                                    u1741 0507                                      u1661 03A3  
                                    u1590 06CB                                      u1750 0526  
                                    u1591 06CA                                      u1751 0525  
                                    u1655 0390                                      u1760 0545  
                                    u1761 0544                                      u1665 03A0  
                                    u1770 0553                                      u1690 03E5  
                                    u1771 0552                                      u1691 03E4  
                                    u1675 03B0                                      u1780 0558  
                                    u1781 0557                                      u1685 03BD  
                                    u1695 03E1                                      u1797 06E5  
                         __end_of_EXT_ISR 07BA                                      _TMR2 028C  
                                    _WPUA 1F39                                      _WPUC 1F4F  
                                    _main 0336                                      fsr0h 0005  
                                    fsr1h 0007                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E       __end_of_INT_DefaultInterruptHandler 0003  
             _INT_DefaultInterruptHandler 0002                                      start 0031  
         __end_of_INT_SetInterruptHandler 0F65                 __end_of_SPI1_ExchangeByte 0FB2  
              ??_TMR1_SetInterruptHandler 0074                   __end_of_TMR0_Initialize 07D3  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0006  
           __end_of_OSCILLATOR_Initialize 0F6B                                     ?_main 0070  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
                                   _T2TMR 028C                                     i1l250 0013  
                                   _T2RST 0291                                     i1l324 0F58  
                                   i1l252 001F                                     i1l253 002F  
                                   i1l334 0003                                     i1l271 0F5E  
                                   i1l328 0FFF                                     i1l281 0002  
                                   i1l258 002F                                     i1l275 0F97  
                                   i1l620 0335                                     i1l623 0335  
                                   i1l616 02E4                                     i1l392 07E9  
                                   i1l379 0FEB                                     i1l564 07B9  
                                   i1l590 01C7                                     i1l398 07FF  
                                   i1l567 0F52                                     i1l577 016D  
                                   i1l589 01F7                                     _OSCEN 0891  
                                   _TMR0H 059D                          playNote@prescale 0072  
                                   _TMR1H 020D                                     _TMR0L 059C  
                                   _TMR1L 020C                                     _TRISA 0012  
                                   _TRISC 0014                                     u90_20 00AC  
                                   u90_21 00AB                                     u90_25 00A8  
                                   u83_20 07AB                                     u91_20 00BD  
                                   u83_21 07AA                                     u91_21 00BC  
                                   u84_20 07B8                                     u84_21 07B7  
                                   u92_25 00C7                                     u85_20 0F92  
                                   u93_20 00EC                                     u85_21 0F91  
                                   u93_21 00EB                                     u93_25 00E8  
                                   u94_20 00FB                                     u86_20 0FE0  
                                   u94_21 00FA                                     u86_21 0FDF  
                                   u94_25 00F7                                     u95_20 010C  
                                   u87_20 0083                                     u95_21 010B  
                                   u87_21 0082                                     u96_20 012D  
                                   u88_20 0090                                     u96_21 012C  
                                   u88_21 008F                                     u96_25 0129  
                                   u88_25 008C                                     u97_20 013C  
                                   u89_20 009E                                     u97_21 013B  
                                   u89_21 009D                                     u97_25 0138  
                                   u89_25 009A                                     u98_25 0147  
                                   u99_20 016C                                     u99_21 016B  
                                   u99_25 0168         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0072                        __size_of_TMR0_ISR_ 0004  
                      __size_of_TMR1_ISR_ 02BD                          __end_of_TMR0_ISR 1000  
                        __end_of_TMR1_ISR 07EA                            _WDT_Initialize 0F4C  
                                   _count 0046                                     _song2 00D2  
                                   _song3 00A0                                     main@i 0143  
                                   main@j 0141                   __end_of_PWM3_Initialize 0F7F  
                 __end_of_TMR1_Initialize 0764                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0FDB                  __size_of_SPI1_Initialize 0015  
                         __initialization 0033                              __end_of_main 0568  
                 __end_of_TMR2_Initialize 0FCD               ?_INTERRUPT_InterruptManager 0070  
                    TMR1_ISR_@lights_1180 0022                      TMR1_ISR_@lights_1177 0021  
                    TMR1_ISR_@lights_1186 0031                                    ??_main 00E8  
                         ??_displayMatrix 0075                    __end_of_WDT_Initialize 0F4F  
                               ??_INT_ISR 0071                                 ??_EXT_ISR 0070  
                                  _ANSELA 1F38                                    _ANSELC 1F4E  
                                  _T0CON0 059E                                    _T0CON1 059F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA5PPS 1F15                                    u100_20 0173  
                                  u100_21 0172                                    u101_20 0180  
                                  u101_21 017F                                    _RC3PPS 1F23  
                                  u101_25 017C                                    u110_20 0220  
                                  u102_20 01A1                                    u110_21 021F  
                                  u102_21 01A0                   TMR1_WriteTimer@timerVal 0070  
                                  u110_25 021C                                    u102_25 019D  
                                  i1l2021 0FE0                                    i1l2015 0F8B  
                                  i1l2111 01A2                                    i1l2031 0FE9  
                                  i1l2023 0FE1                                    u111_20 022A  
                                  u103_20 01AA                                    i1l2017 0F92  
                                  i1l2201 02A2                                    u111_21 0229  
                                  i1l2121 01B5                                    i1l2113 01AA  
                                  u103_21 01A9                                    i1l2105 0183  
                                  i1l2041 0079                                    i1l2025 0FE3  
                                  i1l2211 02D7                                    i1l2203 02B9  
                                  i1l2123 01B9                                    i1l2107 0190  
                                  i1l2051 00AC                                    i1l2043 007E  
                                  i1l2027 0FE5                                    i1l2019 0FDB  
                                  _RC5PPS 1F25                                    i1l2221 0308  
                                  i1l2213 02DD                                    i1l2205 02BD  
                                  i1l2141 01FD                                    i1l2133 01D7  
                                  i1l2125 01CB                                    i1l2109 0194  
                                  i1l2061 00DB                                    i1l2053 00BD  
                                  i1l2045 0083                                    i1l2029 0FE7  
                                  i1l2039 0F4F                                    i1l2231 0324  
                                  i1l2215 02F2                                    i1l2151 020F  
                                  i1l2143 0207                                    i1l2207 02CA  
                                  i1l2135 01E5                                    i1l2127 01D5  
                                  i1l2119 01AC                                    i1l2063 00DF  
                                  i1l2047 0090                                    u120_20 02D0  
                                  u112_20 0246                                    u104_20 01C6  
                                  i1l2233 032A                                    i1l2225 030F  
                                  i1l2217 02F8                                    i1l2209 02D0  
                                  u120_21 02CF                                    u112_21 0245  
                                  i1l2153 0213                                    i1l2137 01E9  
                                  u104_21 01C5                                    i1l2081 012E  
                                  i1l2049 009E                                    i1l2065 00ED  
                                  i1l2321 000F                                    _ODCONA 1F3A  
                                  i1l2235 032C                                    i1l2227 031B  
                                  i1l2219 02FC                                    i1l2171 024C  
                                  i1l2163 022C                                    i1l2155 0221  
                                  i1l2139 01F7                                    i1l2091 015B  
                                  i1l2083 013C                                    i1l2075 010E  
                                  i1l2067 00FB                                    i1l2059 00BF  
                                  i1l2331 002B                                    i1l2323 0017  
                                  _ODCONC 1F50                                    i1l2261 0FFA  
                                  i1l2253 0FEC                                    i1l2237 0330  
                                  i1l2229 0321                                    i1l2181 025C  
                                  i1l2173 0251                                    u112_25 0242  
                                  i1l2165 0235                                    i1l2157 022A  
                                  i1l2149 0209                                    u104_25 01C2  
                                  i1l2093 015F                                    i1l2077 011C  
                                  i1l2069 010C                                    i1l2325 001B  
                                  i1l2317 0006                                    i1l2263 0F59  
                                  i1l2255 0FEE                                    i1l2183 0260  
                                  i1l2167 0239                                    i1l2079 0120  
                                  i1l2095 016D                                    i1l2271 07DD  
                                  i1l2327 0023                                    i1l2319 000B  
                                  u121_20 02DD                                    u113_20 024C  
                                  u105_20 01CB                                    i1l2265 0F5B  
                                  i1l2257 0FF1                                    u121_21 02DC  
                                  i1l2193 027A                                    i1l2185 026E  
                                  u113_21 024B                                    i1l2169 0247  
                                  u105_21 01CA                                    i1l2097 0173  
                                  i1l2089 013F                                    i1l2273 07E4  
                                  i1l2329 0027                                    i1l2259 0FF3  
                                  i1l2195 0283                                    i1l2187 0278  
                                  i1l2179 0253                                    i1l2099 0180  
                                  i1l2267 07D3                                    i1l2197 028D  
                                  i1l2269 07D5                                    i1l1911 07AB  
                                  i1l2199 029A                                    u122_20 02F2  
                                  u114_20 0251                                    u130_20 07E4  
                                  i1l1913 07B0                                    i1l1905 079E  
                                  u122_21 02F1                                    u114_21 0250  
                                  u130_21 07E3                                    i1l1915 07B2  
                                  i1l1907 07A3                                    i1l1917 07B8  
                                  i1l1909 07A6                                    u122_25 02EE  
                                  u106_25 01CE                                    u123_20 02F8  
                                  u115_20 026D                                    u107_20 01F6  
                                  u123_21 02F7                                    u115_21 026C  
                                  u107_21 01F5                                    i1l1891 0F56  
                                  u115_25 0269                                    u107_25 01F2  
                                  u124_20 0308                                    u116_20 0278  
                                  u108_20 01FD                                    u140_20 001B  
                                  i1l1889 0F53                                    u124_21 0307  
                                  u116_21 0277                                    u108_21 01FC  
                                  u140_21 001A                                    u124_25 0304  
                                  u125_20 030E                                    u109_20 0207  
                                  u141_20 0023                                    u125_21 030D  
                                  u109_21 0206                                    u141_21 0022  
                                  u117_25 0286                                    u126_20 031B  
                                  u142_20 0027                                    u126_21 031A  
                                  u142_21 0026                                    u126_25 0317  
                                  u118_25 02A5                                    u127_20 0321  
                                  u119_20 02CA                                    u143_20 002B  
                                  u127_21 0320                                    u119_21 02C9  
                                  u143_21 002A                                    u119_25 02C6  
                                  u128_20 032A                                    u128_21 0329  
                                  _INLVLA 1F3C                                    _INLVLC 1F52  
                                  u129_20 0FFA                                    u137_20 000B  
                                  u129_21 0FF9                                    u137_21 000A  
                                  u138_20 000F                                    u138_21 000E  
                                  u139_20 0017                                    u139_21 0016  
                                  _INTPPS 1E90                                    _OSCFRQ 0893  
                                  _WDTCON 080C                __size_of_SPI1_ExchangeByte 000D  
    __end_of_TMR1_DefaultInterruptHandler 0800     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 07FF                         __end_of_TMR0_ISR_ 0F53  
                       __end_of_TMR1_ISR_ 0336                              ?_TMR0_Reload 0070  
                        ?_TMR0_Initialize 0070                             ?_INT_CallBack 0070  
                        __end_of_playNote 0782                              __pdataBIGRAM 22DC  
                         ?_WDT_Initialize 0070          __size_of_INT_SetInterruptHandler 0006  
TMR1_SetInterruptHandler@InterruptHandler 0072  TMR0_SetInterruptHandler@InterruptHandler 0072  
 INT_SetInterruptHandler@InterruptHandler 0072                   __end_of_TMR1_WriteTimer 0FEC  
                        ?_TMR1_Initialize 0070                          ?_PWM3_Initialize 0070  
                       _SYSTEM_Initialize 0782                   __end_of__initialization 0075  
                      ?_SYSTEM_Initialize 0070                             _last_prescale 0079  
                    _silent_night_playing 004E                            __pcstackCOMMON 0070  
                            __pidataBANK0 0FCD                              __pidataBANK1 067C  
                            __pidataBANK2 0724                       ??_SYSTEM_Initialize 0074  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                         ??_SPI1_Initialize 0072  
                        ?_TMR2_Initialize 0070                            ??_INT_CallBack 0071  
                   SPI1_ExchangeByte@data 0072                         shiftBytes@lowSide 0073  
                      _spi1_configuration 1000               __size_of_EXT_INT_Initialize 000D  
               __end_of_SYSTEM_Initialize 079E                                __pbssBANK0 0046  
                              __pnvCOMMON 0077                                __pmaintext 0336  
        __end_of_TMR0_SetInterruptHandler 0F71                                ??_TMR0_ISR 0070  
                              ??_TMR1_ISR 0072                                __pintentry 0004  
                    displayMatrix@lowSide 00E7                                   _INT_ISR 0F59  
                                 _EXT_ISR 079E                                   _OSCTUNE 0892  
                                 _PWM3DCH 0315                                   _PWM3DCL 0314  
                                 _PWM3CON 0316                                   _SSP1ADD 018D  
                                 _SLRCONA 1F3B                                   _SLRCONC 1F51  
                                 _SSP1BUF 018C                          ?_TMR1_WriteTimer 0070  
                               ?_playNote 0072                      __size_of_TMR0_Reload 0006  
                                 __ptext1 0764                                   __ptext2 06C0  
                                 __ptext3 0FB2                                   __ptext4 0FA5  
                                 __ptext5 0782                                   __ptext6 0F4C  
                                 __ptext7 0FBF                                   __ptext8 0744  
                                 __ptext9 0F71            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0F65  
                               _T2CONbits 028E                            displayMatrix@i 00E5  
                            _cole_counter 0048         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0072                 ?_TMR1_SetInterruptHandler 0072  
                               _T2HLTbits 028F                   _INT_SetInterruptHandler 0F5F  
                                 _presses 0049                __size_of_SYSTEM_Initialize 001C  
                    end_of_initialization 0075                                 _T2RSTbits 0291  
                                 init_ram 0F7F                                   initloop 0F80  
                    __end_of_INT_CallBack 0F98                                _shiftBytes 0FB2  
                              ??_playNote 0073                                 _TMR0_ISR_ 0F4F  
                               _TMR1_ISR_ 0079                          ??_WDT_Initialize 0072  
                _TMR0_SetInterruptHandler 0F6B                                 _TRISAbits 0012  
                               _TRISCbits 0014                     __end_of_displayMatrix 06FC  
                              main@j_1165 0145                                main@j_1167 0147  
                        _silent_night_pre 22DC                           _SPI1_Initialize 07EA  
                    _timer0ReloadVal16bit 0077                             __pidataBIGRAM 0568  
                              ?_TMR0_ISR_ 0070                                ?_TMR1_ISR_ 0070  
                       __size_of_TMR0_ISR 0014                         __size_of_TMR1_ISR 0017  
                  ?_OSCILLATOR_Initialize 0070                 ??_INT_SetInterruptHandler 0074  
                      shiftBytes@highSide 0074                       start_initialization 0033  
                __size_of_TMR0_Initialize 0019           __size_of_PIN_MANAGER_Initialize 0028  
            ?_INT_DefaultInterruptHandler 0070                               ?_shiftBytes 0073  
                __size_of_PWM3_Initialize 0008                  __size_of_TMR1_Initialize 0020  
                             __pdataBANK0 0038                               __pdataBANK1 00A0  
                             __pdataBANK2 0120                __end_of_EXT_INT_Initialize 0FA5  
                             __pbssCOMMON 0079                                 ___latbits 0002  
                                ?_INT_ISR 0070                             __pcstackBANK0 0020  
                           __pcstackBANK1 00E4                             __pcstackBANK2 0140  
                                ?_EXT_ISR 0070                  __size_of_TMR2_Initialize 000E  
                 __end_of_SPI1_Initialize 07FF                     __size_of_INT_CallBack 000D  
                         TMR1_ISR_@i_1181 002F                           TMR1_ISR_@i_1182 0025  
                         TMR1_ISR_@i_1175 002B                           TMR1_ISR_@i_1183 0027  
                         TMR1_ISR_@i_1176 0034                           TMR1_ISR_@i_1184 0029  
                         TMR1_ISR_@i_1185 0036                           TMR1_ISR_@i_1178 002D  
                         TMR1_ISR_@i_1179 0023                     _TMR0_InterruptHandler 0053  
                               __pnvBANK0 004F                           TMR1_ISR_@lights 0020  
                  _PIN_MANAGER_Initialize 06FC             ??_INT_DefaultInterruptHandler 0070  
                       __size_of_playNote 001E          __end_of_TMR1_SetInterruptHandler 0F77  
                             ??_TMR0_ISR_ 0070                               ??_TMR1_ISR_ 0070  
            ??_INTERRUPT_InterruptManager 0072                       displayMatrix@states 00E4  
                            _INT_CallBack 0F8B                              playNote@note 0074  
                     __size_of_shiftBytes 000D                                 _last_note 004A  
                              TMR1_ISR_@i 0032                                  _T2CLKCON 0290  
                       ??_TMR0_Initialize 0074                                  _LATCbits 001A  
                                _PIE0bits 0716                                  _PIE1bits 0717  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 002D  
              ??_TMR0_SetInterruptHandler 0074                                  _PIR0bits 070C  
                                _PIR1bits 070D                             ??_TMR0_Reload 0070  
                               _song2_pre 00C0                                 _song3_pre 0120  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 0FEC                                  _TMR1_ISR 07D3  
                               _num_songs 003E                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 0074                         ??_PWM3_Initialize 0072  
                               main@light 0140      __size_of_INT_DefaultInterruptHandler 0001  
                        __size_of_INT_ISR 0006                          __size_of_EXT_ISR 001C  
                        ?_SPI1_Initialize 0070                         ??_TMR2_Initialize 0072  
                           _song2_playing 004C                             _song3_playing 004D  
                           _TMR0_complete 004B                   ??_OSCILLATOR_Initialize 0072  
                             _light_array 003F                  _TMR1_SetInterruptHandler 0F71  
                     __end_of_TMR0_Reload 0F59                     _TMR1_InterruptHandler 004F  
                              _T0CON0bits 059E                                  __ptext10 07BA  
                                __ptext11 0F6B                                  __ptext20 0FDB  
                                __ptext12 07EA                                  __ptext21 07FF  
                                __ptext13 0F77                                _T1GCONbits 020F  
                                __ptext30 0F53                                  __ptext22 0079  
                                __ptext14 06FC                                  __ptext23 0FEC  
                                __ptext15 0F65                                  __ptext24 0003  
                                __ptext16 0F98                                  __ptext25 0F4F  
                                __ptext17 0F5F                                  __ptext26 0F59  
                                __ptext27 0F8B                                  __ptext19 07D3  
                                __ptext28 079E                                  __ptext29 0002  
                            _SSP1CON1bits 0190                             __size_of_main 0232  
    __end_of_TMR0_DefaultInterruptHandler 0004     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0003                              ??_shiftBytes 0074  
                                _playNote 0764                    __size_of_displayMatrix 003C  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0031  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0072  
                            _song2_length 003B                              _song3_length 0038  
                              _INTCONbits 000B                      _INT_InterruptHandler 0055  
                      __end_of_shiftBytes 0FBF                              _silent_night 2366  
                      _EXT_INT_Initialize 0F98                   __size_of_WDT_Initialize 0003  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                     ?_EXT_INT_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                             _TMR0_Reload 0F53                              _timer_high_2 003D  
                            _timer_high_3 003A                  ?_INT_SetInterruptHandler 0072  
                           __pstringtext1 1000                      ??_EXT_INT_Initialize 0074  
                              _SSP1DATPPS 1EC6                                _SSP1CLKPPS 1EC5  
                         _TMR0_Initialize 07BA                               _timer_low_2 003C  
                             _timer_low_3 0039                             _displayMatrix 06C0  
          __end_of_PIN_MANAGER_Initialize 0724                           _TMR1_Initialize 0744  
                         _PWM3_Initialize 0F77                __end_of_spi1_configuration 1004  
