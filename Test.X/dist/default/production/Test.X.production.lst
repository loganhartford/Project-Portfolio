

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Dec 25 06:58:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15225
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	dataBIGRAM,global,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x566,10
    57                           	dabs	1,0x520,70
    58                           	dabs	1,0x4AB,69
    59                           	dabs	1,0x4A0,11
    60                           	dabs	1,0x420,80
    61                           	dabs	1,0x3BB,53
    62                           	dabs	1,0x3A0,27
    63                           	dabs	1,0x320,80
    64                           	dabs	1,0x2CA,38
    65                           	dabs	1,0x2A0,42
    66                           	dabs	1,0x220,80
    67                           	dabs	1,0x1CC,36
    68                           	dabs	1,0x1A0,44
    69                           	dabs	1,0x120,80
    70                           	dabs	1,0xCE,34
    71                           	dabs	1,0x207E,0,_song3_pre
    72                           	dabs	1,0x211C,0,_song3
    73                           	dabs	1,0x21BA,0,_song2
    74                           	dabs	1,0x224B,0,_song2_pre
    75                           	dabs	1,0x22DB,0,_silent_night
    76                           	dabs	1,0x2366,0,_silent_night_pre
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.35
    80                           ; Generated 13/04/2021 GMT
    81                           ; 
    82                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F15225 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000E                     	;# 
   128  0012                     	;# 
   129  0014                     	;# 
   130  0018                     	;# 
   131  001A                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011C                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  011F                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  018E                     	;# 
   152  018F                     	;# 
   153  0190                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  020C                     	;# 
   157  020D                     	;# 
   158  020E                     	;# 
   159  020E                     	;# 
   160  020F                     	;# 
   161  020F                     	;# 
   162  0210                     	;# 
   163  0210                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  028C                     	;# 
   167  028C                     	;# 
   168  028D                     	;# 
   169  028D                     	;# 
   170  028E                     	;# 
   171  028F                     	;# 
   172  0290                     	;# 
   173  0291                     	;# 
   174  030C                     	;# 
   175  030C                     	;# 
   176  030D                     	;# 
   177  030E                     	;# 
   178  030F                     	;# 
   179  0310                     	;# 
   180  0310                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0314                     	;# 
   185  0314                     	;# 
   186  0315                     	;# 
   187  0316                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  059C                     	;# 
   193  059C                     	;# 
   194  059D                     	;# 
   195  059D                     	;# 
   196  059E                     	;# 
   197  059F                     	;# 
   198  070C                     	;# 
   199  070D                     	;# 
   200  070E                     	;# 
   201  0716                     	;# 
   202  0717                     	;# 
   203  0718                     	;# 
   204  080C                     	;# 
   205  0811                     	;# 
   206  0813                     	;# 
   207  0814                     	;# 
   208  081A                     	;# 
   209  081A                     	;# 
   210  081B                     	;# 
   211  081C                     	;# 
   212  081C                     	;# 
   213  081D                     	;# 
   214  081E                     	;# 
   215  081F                     	;# 
   216  088E                     	;# 
   217  0890                     	;# 
   218  0891                     	;# 
   219  0892                     	;# 
   220  0893                     	;# 
   221  090C                     	;# 
   222  1E8F                     	;# 
   223  1E90                     	;# 
   224  1E91                     	;# 
   225  1E92                     	;# 
   226  1E93                     	;# 
   227  1E9C                     	;# 
   228  1EA1                     	;# 
   229  1EA2                     	;# 
   230  1EC3                     	;# 
   231  1EC5                     	;# 
   232  1EC6                     	;# 
   233  1EC7                     	;# 
   234  1ECB                     	;# 
   235  1ECB                     	;# 
   236  1ECB                     	;# 
   237  1ECC                     	;# 
   238  1ECC                     	;# 
   239  1ECC                     	;# 
   240  1F10                     	;# 
   241  1F11                     	;# 
   242  1F12                     	;# 
   243  1F14                     	;# 
   244  1F15                     	;# 
   245  1F20                     	;# 
   246  1F21                     	;# 
   247  1F22                     	;# 
   248  1F23                     	;# 
   249  1F24                     	;# 
   250  1F25                     	;# 
   251  1F38                     	;# 
   252  1F39                     	;# 
   253  1F3A                     	;# 
   254  1F3B                     	;# 
   255  1F3C                     	;# 
   256  1F3D                     	;# 
   257  1F3E                     	;# 
   258  1F3F                     	;# 
   259  1F4E                     	;# 
   260  1F4F                     	;# 
   261  1F50                     	;# 
   262  1F51                     	;# 
   263  1F52                     	;# 
   264  1F53                     	;# 
   265  1F54                     	;# 
   266  1F55                     	;# 
   267  1FE4                     	;# 
   268  1FE5                     	;# 
   269  1FE6                     	;# 
   270  1FE7                     	;# 
   271  1FE8                     	;# 
   272  1FE8                     	;# 
   273  1FE9                     	;# 
   274  1FEA                     	;# 
   275  1FEB                     	;# 
   276  1FED                     	;# 
   277  1FEE                     	;# 
   278  1FEF                     	;# 
   279  0000                     	;# 
   280  0001                     	;# 
   281  0002                     	;# 
   282  0003                     	;# 
   283  0004                     	;# 
   284  0005                     	;# 
   285  0006                     	;# 
   286  0007                     	;# 
   287  0008                     	;# 
   288  0009                     	;# 
   289  000A                     	;# 
   290  000B                     	;# 
   291  000C                     	;# 
   292  000E                     	;# 
   293  0012                     	;# 
   294  0014                     	;# 
   295  0018                     	;# 
   296  001A                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0119                     	;# 
   307  011A                     	;# 
   308  011B                     	;# 
   309  011B                     	;# 
   310  011C                     	;# 
   311  011D                     	;# 
   312  011E                     	;# 
   313  011F                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  018E                     	;# 
   317  018F                     	;# 
   318  0190                     	;# 
   319  0191                     	;# 
   320  0192                     	;# 
   321  020C                     	;# 
   322  020D                     	;# 
   323  020E                     	;# 
   324  020E                     	;# 
   325  020F                     	;# 
   326  020F                     	;# 
   327  0210                     	;# 
   328  0210                     	;# 
   329  0211                     	;# 
   330  0211                     	;# 
   331  028C                     	;# 
   332  028C                     	;# 
   333  028D                     	;# 
   334  028D                     	;# 
   335  028E                     	;# 
   336  028F                     	;# 
   337  0290                     	;# 
   338  0291                     	;# 
   339  030C                     	;# 
   340  030C                     	;# 
   341  030D                     	;# 
   342  030E                     	;# 
   343  030F                     	;# 
   344  0310                     	;# 
   345  0310                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0314                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  059C                     	;# 
   358  059C                     	;# 
   359  059D                     	;# 
   360  059D                     	;# 
   361  059E                     	;# 
   362  059F                     	;# 
   363  070C                     	;# 
   364  070D                     	;# 
   365  070E                     	;# 
   366  0716                     	;# 
   367  0717                     	;# 
   368  0718                     	;# 
   369  080C                     	;# 
   370  0811                     	;# 
   371  0813                     	;# 
   372  0814                     	;# 
   373  081A                     	;# 
   374  081A                     	;# 
   375  081B                     	;# 
   376  081C                     	;# 
   377  081C                     	;# 
   378  081D                     	;# 
   379  081E                     	;# 
   380  081F                     	;# 
   381  088E                     	;# 
   382  0890                     	;# 
   383  0891                     	;# 
   384  0892                     	;# 
   385  0893                     	;# 
   386  090C                     	;# 
   387  1E8F                     	;# 
   388  1E90                     	;# 
   389  1E91                     	;# 
   390  1E92                     	;# 
   391  1E93                     	;# 
   392  1E9C                     	;# 
   393  1EA1                     	;# 
   394  1EA2                     	;# 
   395  1EC3                     	;# 
   396  1EC5                     	;# 
   397  1EC6                     	;# 
   398  1EC7                     	;# 
   399  1ECB                     	;# 
   400  1ECB                     	;# 
   401  1ECB                     	;# 
   402  1ECC                     	;# 
   403  1ECC                     	;# 
   404  1ECC                     	;# 
   405  1F10                     	;# 
   406  1F11                     	;# 
   407  1F12                     	;# 
   408  1F14                     	;# 
   409  1F15                     	;# 
   410  1F20                     	;# 
   411  1F21                     	;# 
   412  1F22                     	;# 
   413  1F23                     	;# 
   414  1F24                     	;# 
   415  1F25                     	;# 
   416  1F38                     	;# 
   417  1F39                     	;# 
   418  1F3A                     	;# 
   419  1F3B                     	;# 
   420  1F3C                     	;# 
   421  1F3D                     	;# 
   422  1F3E                     	;# 
   423  1F3F                     	;# 
   424  1F4E                     	;# 
   425  1F4F                     	;# 
   426  1F50                     	;# 
   427  1F51                     	;# 
   428  1F52                     	;# 
   429  1F53                     	;# 
   430  1F54                     	;# 
   431  1F55                     	;# 
   432  1FE4                     	;# 
   433  1FE5                     	;# 
   434  1FE6                     	;# 
   435  1FE7                     	;# 
   436  1FE8                     	;# 
   437  1FE8                     	;# 
   438  1FE9                     	;# 
   439  1FEA                     	;# 
   440  1FEB                     	;# 
   441  1FED                     	;# 
   442  1FEE                     	;# 
   443  1FEF                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000E                     	;# 
   458  0012                     	;# 
   459  0014                     	;# 
   460  0018                     	;# 
   461  001A                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  0119                     	;# 
   472  011A                     	;# 
   473  011B                     	;# 
   474  011B                     	;# 
   475  011C                     	;# 
   476  011D                     	;# 
   477  011E                     	;# 
   478  011F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  018E                     	;# 
   482  018F                     	;# 
   483  0190                     	;# 
   484  0191                     	;# 
   485  0192                     	;# 
   486  020C                     	;# 
   487  020D                     	;# 
   488  020E                     	;# 
   489  020E                     	;# 
   490  020F                     	;# 
   491  020F                     	;# 
   492  0210                     	;# 
   493  0210                     	;# 
   494  0211                     	;# 
   495  0211                     	;# 
   496  028C                     	;# 
   497  028C                     	;# 
   498  028D                     	;# 
   499  028D                     	;# 
   500  028E                     	;# 
   501  028F                     	;# 
   502  0290                     	;# 
   503  0291                     	;# 
   504  030C                     	;# 
   505  030C                     	;# 
   506  030D                     	;# 
   507  030E                     	;# 
   508  030F                     	;# 
   509  0310                     	;# 
   510  0310                     	;# 
   511  0311                     	;# 
   512  0312                     	;# 
   513  0313                     	;# 
   514  0314                     	;# 
   515  0314                     	;# 
   516  0315                     	;# 
   517  0316                     	;# 
   518  0318                     	;# 
   519  0318                     	;# 
   520  0319                     	;# 
   521  031A                     	;# 
   522  059C                     	;# 
   523  059C                     	;# 
   524  059D                     	;# 
   525  059D                     	;# 
   526  059E                     	;# 
   527  059F                     	;# 
   528  070C                     	;# 
   529  070D                     	;# 
   530  070E                     	;# 
   531  0716                     	;# 
   532  0717                     	;# 
   533  0718                     	;# 
   534  080C                     	;# 
   535  0811                     	;# 
   536  0813                     	;# 
   537  0814                     	;# 
   538  081A                     	;# 
   539  081A                     	;# 
   540  081B                     	;# 
   541  081C                     	;# 
   542  081C                     	;# 
   543  081D                     	;# 
   544  081E                     	;# 
   545  081F                     	;# 
   546  088E                     	;# 
   547  0890                     	;# 
   548  0891                     	;# 
   549  0892                     	;# 
   550  0893                     	;# 
   551  090C                     	;# 
   552  1E8F                     	;# 
   553  1E90                     	;# 
   554  1E91                     	;# 
   555  1E92                     	;# 
   556  1E93                     	;# 
   557  1E9C                     	;# 
   558  1EA1                     	;# 
   559  1EA2                     	;# 
   560  1EC3                     	;# 
   561  1EC5                     	;# 
   562  1EC6                     	;# 
   563  1EC7                     	;# 
   564  1ECB                     	;# 
   565  1ECB                     	;# 
   566  1ECB                     	;# 
   567  1ECC                     	;# 
   568  1ECC                     	;# 
   569  1ECC                     	;# 
   570  1F10                     	;# 
   571  1F11                     	;# 
   572  1F12                     	;# 
   573  1F14                     	;# 
   574  1F15                     	;# 
   575  1F20                     	;# 
   576  1F21                     	;# 
   577  1F22                     	;# 
   578  1F23                     	;# 
   579  1F24                     	;# 
   580  1F25                     	;# 
   581  1F38                     	;# 
   582  1F39                     	;# 
   583  1F3A                     	;# 
   584  1F3B                     	;# 
   585  1F3C                     	;# 
   586  1F3D                     	;# 
   587  1F3E                     	;# 
   588  1F3F                     	;# 
   589  1F4E                     	;# 
   590  1F4F                     	;# 
   591  1F50                     	;# 
   592  1F51                     	;# 
   593  1F52                     	;# 
   594  1F53                     	;# 
   595  1F54                     	;# 
   596  1F55                     	;# 
   597  1FE4                     	;# 
   598  1FE5                     	;# 
   599  1FE6                     	;# 
   600  1FE7                     	;# 
   601  1FE8                     	;# 
   602  1FE8                     	;# 
   603  1FE9                     	;# 
   604  1FEA                     	;# 
   605  1FEB                     	;# 
   606  1FED                     	;# 
   607  1FEE                     	;# 
   608  1FEF                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000E                     	;# 
   623  0012                     	;# 
   624  0014                     	;# 
   625  0018                     	;# 
   626  001A                     	;# 
   627  009A                     	;# 
   628  009B                     	;# 
   629  009B                     	;# 
   630  009C                     	;# 
   631  009D                     	;# 
   632  009E                     	;# 
   633  009F                     	;# 
   634  010E                     	;# 
   635  010F                     	;# 
   636  0119                     	;# 
   637  011A                     	;# 
   638  011B                     	;# 
   639  011B                     	;# 
   640  011C                     	;# 
   641  011D                     	;# 
   642  011E                     	;# 
   643  011F                     	;# 
   644  018C                     	;# 
   645  018D                     	;# 
   646  018E                     	;# 
   647  018F                     	;# 
   648  0190                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  020C                     	;# 
   652  020D                     	;# 
   653  020E                     	;# 
   654  020E                     	;# 
   655  020F                     	;# 
   656  020F                     	;# 
   657  0210                     	;# 
   658  0210                     	;# 
   659  0211                     	;# 
   660  0211                     	;# 
   661  028C                     	;# 
   662  028C                     	;# 
   663  028D                     	;# 
   664  028D                     	;# 
   665  028E                     	;# 
   666  028F                     	;# 
   667  0290                     	;# 
   668  0291                     	;# 
   669  030C                     	;# 
   670  030C                     	;# 
   671  030D                     	;# 
   672  030E                     	;# 
   673  030F                     	;# 
   674  0310                     	;# 
   675  0310                     	;# 
   676  0311                     	;# 
   677  0312                     	;# 
   678  0313                     	;# 
   679  0314                     	;# 
   680  0314                     	;# 
   681  0315                     	;# 
   682  0316                     	;# 
   683  0318                     	;# 
   684  0318                     	;# 
   685  0319                     	;# 
   686  031A                     	;# 
   687  059C                     	;# 
   688  059C                     	;# 
   689  059D                     	;# 
   690  059D                     	;# 
   691  059E                     	;# 
   692  059F                     	;# 
   693  070C                     	;# 
   694  070D                     	;# 
   695  070E                     	;# 
   696  0716                     	;# 
   697  0717                     	;# 
   698  0718                     	;# 
   699  080C                     	;# 
   700  0811                     	;# 
   701  0813                     	;# 
   702  0814                     	;# 
   703  081A                     	;# 
   704  081A                     	;# 
   705  081B                     	;# 
   706  081C                     	;# 
   707  081C                     	;# 
   708  081D                     	;# 
   709  081E                     	;# 
   710  081F                     	;# 
   711  088E                     	;# 
   712  0890                     	;# 
   713  0891                     	;# 
   714  0892                     	;# 
   715  0893                     	;# 
   716  090C                     	;# 
   717  1E8F                     	;# 
   718  1E90                     	;# 
   719  1E91                     	;# 
   720  1E92                     	;# 
   721  1E93                     	;# 
   722  1E9C                     	;# 
   723  1EA1                     	;# 
   724  1EA2                     	;# 
   725  1EC3                     	;# 
   726  1EC5                     	;# 
   727  1EC6                     	;# 
   728  1EC7                     	;# 
   729  1ECB                     	;# 
   730  1ECB                     	;# 
   731  1ECB                     	;# 
   732  1ECC                     	;# 
   733  1ECC                     	;# 
   734  1ECC                     	;# 
   735  1F10                     	;# 
   736  1F11                     	;# 
   737  1F12                     	;# 
   738  1F14                     	;# 
   739  1F15                     	;# 
   740  1F20                     	;# 
   741  1F21                     	;# 
   742  1F22                     	;# 
   743  1F23                     	;# 
   744  1F24                     	;# 
   745  1F25                     	;# 
   746  1F38                     	;# 
   747  1F39                     	;# 
   748  1F3A                     	;# 
   749  1F3B                     	;# 
   750  1F3C                     	;# 
   751  1F3D                     	;# 
   752  1F3E                     	;# 
   753  1F3F                     	;# 
   754  1F4E                     	;# 
   755  1F4F                     	;# 
   756  1F50                     	;# 
   757  1F51                     	;# 
   758  1F52                     	;# 
   759  1F53                     	;# 
   760  1F54                     	;# 
   761  1F55                     	;# 
   762  1FE4                     	;# 
   763  1FE5                     	;# 
   764  1FE6                     	;# 
   765  1FE7                     	;# 
   766  1FE8                     	;# 
   767  1FE8                     	;# 
   768  1FE9                     	;# 
   769  1FEA                     	;# 
   770  1FEB                     	;# 
   771  1FED                     	;# 
   772  1FEE                     	;# 
   773  1FEF                     	;# 
   774  0000                     	;# 
   775  0001                     	;# 
   776  0002                     	;# 
   777  0003                     	;# 
   778  0004                     	;# 
   779  0005                     	;# 
   780  0006                     	;# 
   781  0007                     	;# 
   782  0008                     	;# 
   783  0009                     	;# 
   784  000A                     	;# 
   785  000B                     	;# 
   786  000C                     	;# 
   787  000E                     	;# 
   788  0012                     	;# 
   789  0014                     	;# 
   790  0018                     	;# 
   791  001A                     	;# 
   792  009A                     	;# 
   793  009B                     	;# 
   794  009B                     	;# 
   795  009C                     	;# 
   796  009D                     	;# 
   797  009E                     	;# 
   798  009F                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  0119                     	;# 
   802  011A                     	;# 
   803  011B                     	;# 
   804  011B                     	;# 
   805  011C                     	;# 
   806  011D                     	;# 
   807  011E                     	;# 
   808  011F                     	;# 
   809  018C                     	;# 
   810  018D                     	;# 
   811  018E                     	;# 
   812  018F                     	;# 
   813  0190                     	;# 
   814  0191                     	;# 
   815  0192                     	;# 
   816  020C                     	;# 
   817  020D                     	;# 
   818  020E                     	;# 
   819  020E                     	;# 
   820  020F                     	;# 
   821  020F                     	;# 
   822  0210                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  028C                     	;# 
   827  028C                     	;# 
   828  028D                     	;# 
   829  028D                     	;# 
   830  028E                     	;# 
   831  028F                     	;# 
   832  0290                     	;# 
   833  0291                     	;# 
   834  030C                     	;# 
   835  030C                     	;# 
   836  030D                     	;# 
   837  030E                     	;# 
   838  030F                     	;# 
   839  0310                     	;# 
   840  0310                     	;# 
   841  0311                     	;# 
   842  0312                     	;# 
   843  0313                     	;# 
   844  0314                     	;# 
   845  0314                     	;# 
   846  0315                     	;# 
   847  0316                     	;# 
   848  0318                     	;# 
   849  0318                     	;# 
   850  0319                     	;# 
   851  031A                     	;# 
   852  059C                     	;# 
   853  059C                     	;# 
   854  059D                     	;# 
   855  059D                     	;# 
   856  059E                     	;# 
   857  059F                     	;# 
   858  070C                     	;# 
   859  070D                     	;# 
   860  070E                     	;# 
   861  0716                     	;# 
   862  0717                     	;# 
   863  0718                     	;# 
   864  080C                     	;# 
   865  0811                     	;# 
   866  0813                     	;# 
   867  0814                     	;# 
   868  081A                     	;# 
   869  081A                     	;# 
   870  081B                     	;# 
   871  081C                     	;# 
   872  081C                     	;# 
   873  081D                     	;# 
   874  081E                     	;# 
   875  081F                     	;# 
   876  088E                     	;# 
   877  0890                     	;# 
   878  0891                     	;# 
   879  0892                     	;# 
   880  0893                     	;# 
   881  090C                     	;# 
   882  1E8F                     	;# 
   883  1E90                     	;# 
   884  1E91                     	;# 
   885  1E92                     	;# 
   886  1E93                     	;# 
   887  1E9C                     	;# 
   888  1EA1                     	;# 
   889  1EA2                     	;# 
   890  1EC3                     	;# 
   891  1EC5                     	;# 
   892  1EC6                     	;# 
   893  1EC7                     	;# 
   894  1ECB                     	;# 
   895  1ECB                     	;# 
   896  1ECB                     	;# 
   897  1ECC                     	;# 
   898  1ECC                     	;# 
   899  1ECC                     	;# 
   900  1F10                     	;# 
   901  1F11                     	;# 
   902  1F12                     	;# 
   903  1F14                     	;# 
   904  1F15                     	;# 
   905  1F20                     	;# 
   906  1F21                     	;# 
   907  1F22                     	;# 
   908  1F23                     	;# 
   909  1F24                     	;# 
   910  1F25                     	;# 
   911  1F38                     	;# 
   912  1F39                     	;# 
   913  1F3A                     	;# 
   914  1F3B                     	;# 
   915  1F3C                     	;# 
   916  1F3D                     	;# 
   917  1F3E                     	;# 
   918  1F3F                     	;# 
   919  1F4E                     	;# 
   920  1F4F                     	;# 
   921  1F50                     	;# 
   922  1F51                     	;# 
   923  1F52                     	;# 
   924  1F53                     	;# 
   925  1F54                     	;# 
   926  1F55                     	;# 
   927  1FE4                     	;# 
   928  1FE5                     	;# 
   929  1FE6                     	;# 
   930  1FE7                     	;# 
   931  1FE8                     	;# 
   932  1FE8                     	;# 
   933  1FE9                     	;# 
   934  1FEA                     	;# 
   935  1FEB                     	;# 
   936  1FED                     	;# 
   937  1FEE                     	;# 
   938  1FEF                     	;# 
   939  0000                     	;# 
   940  0001                     	;# 
   941  0002                     	;# 
   942  0003                     	;# 
   943  0004                     	;# 
   944  0005                     	;# 
   945  0006                     	;# 
   946  0007                     	;# 
   947  0008                     	;# 
   948  0009                     	;# 
   949  000A                     	;# 
   950  000B                     	;# 
   951  000C                     	;# 
   952  000E                     	;# 
   953  0012                     	;# 
   954  0014                     	;# 
   955  0018                     	;# 
   956  001A                     	;# 
   957  009A                     	;# 
   958  009B                     	;# 
   959  009B                     	;# 
   960  009C                     	;# 
   961  009D                     	;# 
   962  009E                     	;# 
   963  009F                     	;# 
   964  010E                     	;# 
   965  010F                     	;# 
   966  0119                     	;# 
   967  011A                     	;# 
   968  011B                     	;# 
   969  011B                     	;# 
   970  011C                     	;# 
   971  011D                     	;# 
   972  011E                     	;# 
   973  011F                     	;# 
   974  018C                     	;# 
   975  018D                     	;# 
   976  018E                     	;# 
   977  018F                     	;# 
   978  0190                     	;# 
   979  0191                     	;# 
   980  0192                     	;# 
   981  020C                     	;# 
   982  020D                     	;# 
   983  020E                     	;# 
   984  020E                     	;# 
   985  020F                     	;# 
   986  020F                     	;# 
   987  0210                     	;# 
   988  0210                     	;# 
   989  0211                     	;# 
   990  0211                     	;# 
   991  028C                     	;# 
   992  028C                     	;# 
   993  028D                     	;# 
   994  028D                     	;# 
   995  028E                     	;# 
   996  028F                     	;# 
   997  0290                     	;# 
   998  0291                     	;# 
   999  030C                     	;# 
  1000  030C                     	;# 
  1001  030D                     	;# 
  1002  030E                     	;# 
  1003  030F                     	;# 
  1004  0310                     	;# 
  1005  0310                     	;# 
  1006  0311                     	;# 
  1007  0312                     	;# 
  1008  0313                     	;# 
  1009  0314                     	;# 
  1010  0314                     	;# 
  1011  0315                     	;# 
  1012  0316                     	;# 
  1013  0318                     	;# 
  1014  0318                     	;# 
  1015  0319                     	;# 
  1016  031A                     	;# 
  1017  059C                     	;# 
  1018  059C                     	;# 
  1019  059D                     	;# 
  1020  059D                     	;# 
  1021  059E                     	;# 
  1022  059F                     	;# 
  1023  070C                     	;# 
  1024  070D                     	;# 
  1025  070E                     	;# 
  1026  0716                     	;# 
  1027  0717                     	;# 
  1028  0718                     	;# 
  1029  080C                     	;# 
  1030  0811                     	;# 
  1031  0813                     	;# 
  1032  0814                     	;# 
  1033  081A                     	;# 
  1034  081A                     	;# 
  1035  081B                     	;# 
  1036  081C                     	;# 
  1037  081C                     	;# 
  1038  081D                     	;# 
  1039  081E                     	;# 
  1040  081F                     	;# 
  1041  088E                     	;# 
  1042  0890                     	;# 
  1043  0891                     	;# 
  1044  0892                     	;# 
  1045  0893                     	;# 
  1046  090C                     	;# 
  1047  1E8F                     	;# 
  1048  1E90                     	;# 
  1049  1E91                     	;# 
  1050  1E92                     	;# 
  1051  1E93                     	;# 
  1052  1E9C                     	;# 
  1053  1EA1                     	;# 
  1054  1EA2                     	;# 
  1055  1EC3                     	;# 
  1056  1EC5                     	;# 
  1057  1EC6                     	;# 
  1058  1EC7                     	;# 
  1059  1ECB                     	;# 
  1060  1ECB                     	;# 
  1061  1ECB                     	;# 
  1062  1ECC                     	;# 
  1063  1ECC                     	;# 
  1064  1ECC                     	;# 
  1065  1F10                     	;# 
  1066  1F11                     	;# 
  1067  1F12                     	;# 
  1068  1F14                     	;# 
  1069  1F15                     	;# 
  1070  1F20                     	;# 
  1071  1F21                     	;# 
  1072  1F22                     	;# 
  1073  1F23                     	;# 
  1074  1F24                     	;# 
  1075  1F25                     	;# 
  1076  1F38                     	;# 
  1077  1F39                     	;# 
  1078  1F3A                     	;# 
  1079  1F3B                     	;# 
  1080  1F3C                     	;# 
  1081  1F3D                     	;# 
  1082  1F3E                     	;# 
  1083  1F3F                     	;# 
  1084  1F4E                     	;# 
  1085  1F4F                     	;# 
  1086  1F50                     	;# 
  1087  1F51                     	;# 
  1088  1F52                     	;# 
  1089  1F53                     	;# 
  1090  1F54                     	;# 
  1091  1F55                     	;# 
  1092  1FE4                     	;# 
  1093  1FE5                     	;# 
  1094  1FE6                     	;# 
  1095  1FE7                     	;# 
  1096  1FE8                     	;# 
  1097  1FE8                     	;# 
  1098  1FE9                     	;# 
  1099  1FEA                     	;# 
  1100  1FEB                     	;# 
  1101  1FED                     	;# 
  1102  1FEE                     	;# 
  1103  1FEF                     	;# 
  1104  0000                     	;# 
  1105  0001                     	;# 
  1106  0002                     	;# 
  1107  0003                     	;# 
  1108  0004                     	;# 
  1109  0005                     	;# 
  1110  0006                     	;# 
  1111  0007                     	;# 
  1112  0008                     	;# 
  1113  0009                     	;# 
  1114  000A                     	;# 
  1115  000B                     	;# 
  1116  000C                     	;# 
  1117  000E                     	;# 
  1118  0012                     	;# 
  1119  0014                     	;# 
  1120  0018                     	;# 
  1121  001A                     	;# 
  1122  009A                     	;# 
  1123  009B                     	;# 
  1124  009B                     	;# 
  1125  009C                     	;# 
  1126  009D                     	;# 
  1127  009E                     	;# 
  1128  009F                     	;# 
  1129  010E                     	;# 
  1130  010F                     	;# 
  1131  0119                     	;# 
  1132  011A                     	;# 
  1133  011B                     	;# 
  1134  011B                     	;# 
  1135  011C                     	;# 
  1136  011D                     	;# 
  1137  011E                     	;# 
  1138  011F                     	;# 
  1139  018C                     	;# 
  1140  018D                     	;# 
  1141  018E                     	;# 
  1142  018F                     	;# 
  1143  0190                     	;# 
  1144  0191                     	;# 
  1145  0192                     	;# 
  1146  020C                     	;# 
  1147  020D                     	;# 
  1148  020E                     	;# 
  1149  020E                     	;# 
  1150  020F                     	;# 
  1151  020F                     	;# 
  1152  0210                     	;# 
  1153  0210                     	;# 
  1154  0211                     	;# 
  1155  0211                     	;# 
  1156  028C                     	;# 
  1157  028C                     	;# 
  1158  028D                     	;# 
  1159  028D                     	;# 
  1160  028E                     	;# 
  1161  028F                     	;# 
  1162  0290                     	;# 
  1163  0291                     	;# 
  1164  030C                     	;# 
  1165  030C                     	;# 
  1166  030D                     	;# 
  1167  030E                     	;# 
  1168  030F                     	;# 
  1169  0310                     	;# 
  1170  0310                     	;# 
  1171  0311                     	;# 
  1172  0312                     	;# 
  1173  0313                     	;# 
  1174  0314                     	;# 
  1175  0314                     	;# 
  1176  0315                     	;# 
  1177  0316                     	;# 
  1178  0318                     	;# 
  1179  0318                     	;# 
  1180  0319                     	;# 
  1181  031A                     	;# 
  1182  059C                     	;# 
  1183  059C                     	;# 
  1184  059D                     	;# 
  1185  059D                     	;# 
  1186  059E                     	;# 
  1187  059F                     	;# 
  1188  070C                     	;# 
  1189  070D                     	;# 
  1190  070E                     	;# 
  1191  0716                     	;# 
  1192  0717                     	;# 
  1193  0718                     	;# 
  1194  080C                     	;# 
  1195  0811                     	;# 
  1196  0813                     	;# 
  1197  0814                     	;# 
  1198  081A                     	;# 
  1199  081A                     	;# 
  1200  081B                     	;# 
  1201  081C                     	;# 
  1202  081C                     	;# 
  1203  081D                     	;# 
  1204  081E                     	;# 
  1205  081F                     	;# 
  1206  088E                     	;# 
  1207  0890                     	;# 
  1208  0891                     	;# 
  1209  0892                     	;# 
  1210  0893                     	;# 
  1211  090C                     	;# 
  1212  1E8F                     	;# 
  1213  1E90                     	;# 
  1214  1E91                     	;# 
  1215  1E92                     	;# 
  1216  1E93                     	;# 
  1217  1E9C                     	;# 
  1218  1EA1                     	;# 
  1219  1EA2                     	;# 
  1220  1EC3                     	;# 
  1221  1EC5                     	;# 
  1222  1EC6                     	;# 
  1223  1EC7                     	;# 
  1224  1ECB                     	;# 
  1225  1ECB                     	;# 
  1226  1ECB                     	;# 
  1227  1ECC                     	;# 
  1228  1ECC                     	;# 
  1229  1ECC                     	;# 
  1230  1F10                     	;# 
  1231  1F11                     	;# 
  1232  1F12                     	;# 
  1233  1F14                     	;# 
  1234  1F15                     	;# 
  1235  1F20                     	;# 
  1236  1F21                     	;# 
  1237  1F22                     	;# 
  1238  1F23                     	;# 
  1239  1F24                     	;# 
  1240  1F25                     	;# 
  1241  1F38                     	;# 
  1242  1F39                     	;# 
  1243  1F3A                     	;# 
  1244  1F3B                     	;# 
  1245  1F3C                     	;# 
  1246  1F3D                     	;# 
  1247  1F3E                     	;# 
  1248  1F3F                     	;# 
  1249  1F4E                     	;# 
  1250  1F4F                     	;# 
  1251  1F50                     	;# 
  1252  1F51                     	;# 
  1253  1F52                     	;# 
  1254  1F53                     	;# 
  1255  1F54                     	;# 
  1256  1F55                     	;# 
  1257  1FE4                     	;# 
  1258  1FE5                     	;# 
  1259  1FE6                     	;# 
  1260  1FE7                     	;# 
  1261  1FE8                     	;# 
  1262  1FE8                     	;# 
  1263  1FE9                     	;# 
  1264  1FEA                     	;# 
  1265  1FEB                     	;# 
  1266  1FED                     	;# 
  1267  1FEE                     	;# 
  1268  1FEF                     	;# 
  1269  0000                     	;# 
  1270  0001                     	;# 
  1271  0002                     	;# 
  1272  0003                     	;# 
  1273  0004                     	;# 
  1274  0005                     	;# 
  1275  0006                     	;# 
  1276  0007                     	;# 
  1277  0008                     	;# 
  1278  0009                     	;# 
  1279  000A                     	;# 
  1280  000B                     	;# 
  1281  000C                     	;# 
  1282  000E                     	;# 
  1283  0012                     	;# 
  1284  0014                     	;# 
  1285  0018                     	;# 
  1286  001A                     	;# 
  1287  009A                     	;# 
  1288  009B                     	;# 
  1289  009B                     	;# 
  1290  009C                     	;# 
  1291  009D                     	;# 
  1292  009E                     	;# 
  1293  009F                     	;# 
  1294  010E                     	;# 
  1295  010F                     	;# 
  1296  0119                     	;# 
  1297  011A                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011C                     	;# 
  1301  011D                     	;# 
  1302  011E                     	;# 
  1303  011F                     	;# 
  1304  018C                     	;# 
  1305  018D                     	;# 
  1306  018E                     	;# 
  1307  018F                     	;# 
  1308  0190                     	;# 
  1309  0191                     	;# 
  1310  0192                     	;# 
  1311  020C                     	;# 
  1312  020D                     	;# 
  1313  020E                     	;# 
  1314  020E                     	;# 
  1315  020F                     	;# 
  1316  020F                     	;# 
  1317  0210                     	;# 
  1318  0210                     	;# 
  1319  0211                     	;# 
  1320  0211                     	;# 
  1321  028C                     	;# 
  1322  028C                     	;# 
  1323  028D                     	;# 
  1324  028D                     	;# 
  1325  028E                     	;# 
  1326  028F                     	;# 
  1327  0290                     	;# 
  1328  0291                     	;# 
  1329  030C                     	;# 
  1330  030C                     	;# 
  1331  030D                     	;# 
  1332  030E                     	;# 
  1333  030F                     	;# 
  1334  0310                     	;# 
  1335  0310                     	;# 
  1336  0311                     	;# 
  1337  0312                     	;# 
  1338  0313                     	;# 
  1339  0314                     	;# 
  1340  0314                     	;# 
  1341  0315                     	;# 
  1342  0316                     	;# 
  1343  0318                     	;# 
  1344  0318                     	;# 
  1345  0319                     	;# 
  1346  031A                     	;# 
  1347  059C                     	;# 
  1348  059C                     	;# 
  1349  059D                     	;# 
  1350  059D                     	;# 
  1351  059E                     	;# 
  1352  059F                     	;# 
  1353  070C                     	;# 
  1354  070D                     	;# 
  1355  070E                     	;# 
  1356  0716                     	;# 
  1357  0717                     	;# 
  1358  0718                     	;# 
  1359  080C                     	;# 
  1360  0811                     	;# 
  1361  0813                     	;# 
  1362  0814                     	;# 
  1363  081A                     	;# 
  1364  081A                     	;# 
  1365  081B                     	;# 
  1366  081C                     	;# 
  1367  081C                     	;# 
  1368  081D                     	;# 
  1369  081E                     	;# 
  1370  081F                     	;# 
  1371  088E                     	;# 
  1372  0890                     	;# 
  1373  0891                     	;# 
  1374  0892                     	;# 
  1375  0893                     	;# 
  1376  090C                     	;# 
  1377  1E8F                     	;# 
  1378  1E90                     	;# 
  1379  1E91                     	;# 
  1380  1E92                     	;# 
  1381  1E93                     	;# 
  1382  1E9C                     	;# 
  1383  1EA1                     	;# 
  1384  1EA2                     	;# 
  1385  1EC3                     	;# 
  1386  1EC5                     	;# 
  1387  1EC6                     	;# 
  1388  1EC7                     	;# 
  1389  1ECB                     	;# 
  1390  1ECB                     	;# 
  1391  1ECB                     	;# 
  1392  1ECC                     	;# 
  1393  1ECC                     	;# 
  1394  1ECC                     	;# 
  1395  1F10                     	;# 
  1396  1F11                     	;# 
  1397  1F12                     	;# 
  1398  1F14                     	;# 
  1399  1F15                     	;# 
  1400  1F20                     	;# 
  1401  1F21                     	;# 
  1402  1F22                     	;# 
  1403  1F23                     	;# 
  1404  1F24                     	;# 
  1405  1F25                     	;# 
  1406  1F38                     	;# 
  1407  1F39                     	;# 
  1408  1F3A                     	;# 
  1409  1F3B                     	;# 
  1410  1F3C                     	;# 
  1411  1F3D                     	;# 
  1412  1F3E                     	;# 
  1413  1F3F                     	;# 
  1414  1F4E                     	;# 
  1415  1F4F                     	;# 
  1416  1F50                     	;# 
  1417  1F51                     	;# 
  1418  1F52                     	;# 
  1419  1F53                     	;# 
  1420  1F54                     	;# 
  1421  1F55                     	;# 
  1422  1FE4                     	;# 
  1423  1FE5                     	;# 
  1424  1FE6                     	;# 
  1425  1FE7                     	;# 
  1426  1FE8                     	;# 
  1427  1FE8                     	;# 
  1428  1FE9                     	;# 
  1429  1FEA                     	;# 
  1430  1FEB                     	;# 
  1431  1FED                     	;# 
  1432  1FEE                     	;# 
  1433  1FEF                     	;# 
  1434  0000                     	;# 
  1435  0001                     	;# 
  1436  0002                     	;# 
  1437  0003                     	;# 
  1438  0004                     	;# 
  1439  0005                     	;# 
  1440  0006                     	;# 
  1441  0007                     	;# 
  1442  0008                     	;# 
  1443  0009                     	;# 
  1444  000A                     	;# 
  1445  000B                     	;# 
  1446  000C                     	;# 
  1447  000E                     	;# 
  1448  0012                     	;# 
  1449  0014                     	;# 
  1450  0018                     	;# 
  1451  001A                     	;# 
  1452  009A                     	;# 
  1453  009B                     	;# 
  1454  009B                     	;# 
  1455  009C                     	;# 
  1456  009D                     	;# 
  1457  009E                     	;# 
  1458  009F                     	;# 
  1459  010E                     	;# 
  1460  010F                     	;# 
  1461  0119                     	;# 
  1462  011A                     	;# 
  1463  011B                     	;# 
  1464  011B                     	;# 
  1465  011C                     	;# 
  1466  011D                     	;# 
  1467  011E                     	;# 
  1468  011F                     	;# 
  1469  018C                     	;# 
  1470  018D                     	;# 
  1471  018E                     	;# 
  1472  018F                     	;# 
  1473  0190                     	;# 
  1474  0191                     	;# 
  1475  0192                     	;# 
  1476  020C                     	;# 
  1477  020D                     	;# 
  1478  020E                     	;# 
  1479  020E                     	;# 
  1480  020F                     	;# 
  1481  020F                     	;# 
  1482  0210                     	;# 
  1483  0210                     	;# 
  1484  0211                     	;# 
  1485  0211                     	;# 
  1486  028C                     	;# 
  1487  028C                     	;# 
  1488  028D                     	;# 
  1489  028D                     	;# 
  1490  028E                     	;# 
  1491  028F                     	;# 
  1492  0290                     	;# 
  1493  0291                     	;# 
  1494  030C                     	;# 
  1495  030C                     	;# 
  1496  030D                     	;# 
  1497  030E                     	;# 
  1498  030F                     	;# 
  1499  0310                     	;# 
  1500  0310                     	;# 
  1501  0311                     	;# 
  1502  0312                     	;# 
  1503  0313                     	;# 
  1504  0314                     	;# 
  1505  0314                     	;# 
  1506  0315                     	;# 
  1507  0316                     	;# 
  1508  0318                     	;# 
  1509  0318                     	;# 
  1510  0319                     	;# 
  1511  031A                     	;# 
  1512  059C                     	;# 
  1513  059C                     	;# 
  1514  059D                     	;# 
  1515  059D                     	;# 
  1516  059E                     	;# 
  1517  059F                     	;# 
  1518  070C                     	;# 
  1519  070D                     	;# 
  1520  070E                     	;# 
  1521  0716                     	;# 
  1522  0717                     	;# 
  1523  0718                     	;# 
  1524  080C                     	;# 
  1525  0811                     	;# 
  1526  0813                     	;# 
  1527  0814                     	;# 
  1528  081A                     	;# 
  1529  081A                     	;# 
  1530  081B                     	;# 
  1531  081C                     	;# 
  1532  081C                     	;# 
  1533  081D                     	;# 
  1534  081E                     	;# 
  1535  081F                     	;# 
  1536  088E                     	;# 
  1537  0890                     	;# 
  1538  0891                     	;# 
  1539  0892                     	;# 
  1540  0893                     	;# 
  1541  090C                     	;# 
  1542  1E8F                     	;# 
  1543  1E90                     	;# 
  1544  1E91                     	;# 
  1545  1E92                     	;# 
  1546  1E93                     	;# 
  1547  1E9C                     	;# 
  1548  1EA1                     	;# 
  1549  1EA2                     	;# 
  1550  1EC3                     	;# 
  1551  1EC5                     	;# 
  1552  1EC6                     	;# 
  1553  1EC7                     	;# 
  1554  1ECB                     	;# 
  1555  1ECB                     	;# 
  1556  1ECB                     	;# 
  1557  1ECC                     	;# 
  1558  1ECC                     	;# 
  1559  1ECC                     	;# 
  1560  1F10                     	;# 
  1561  1F11                     	;# 
  1562  1F12                     	;# 
  1563  1F14                     	;# 
  1564  1F15                     	;# 
  1565  1F20                     	;# 
  1566  1F21                     	;# 
  1567  1F22                     	;# 
  1568  1F23                     	;# 
  1569  1F24                     	;# 
  1570  1F25                     	;# 
  1571  1F38                     	;# 
  1572  1F39                     	;# 
  1573  1F3A                     	;# 
  1574  1F3B                     	;# 
  1575  1F3C                     	;# 
  1576  1F3D                     	;# 
  1577  1F3E                     	;# 
  1578  1F3F                     	;# 
  1579  1F4E                     	;# 
  1580  1F4F                     	;# 
  1581  1F50                     	;# 
  1582  1F51                     	;# 
  1583  1F52                     	;# 
  1584  1F53                     	;# 
  1585  1F54                     	;# 
  1586  1F55                     	;# 
  1587  1FE4                     	;# 
  1588  1FE5                     	;# 
  1589  1FE6                     	;# 
  1590  1FE7                     	;# 
  1591  1FE8                     	;# 
  1592  1FE8                     	;# 
  1593  1FE9                     	;# 
  1594  1FEA                     	;# 
  1595  1FEB                     	;# 
  1596  1FED                     	;# 
  1597  1FEE                     	;# 
  1598  1FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000E                     	;# 
  1613  0012                     	;# 
  1614  0014                     	;# 
  1615  0018                     	;# 
  1616  001A                     	;# 
  1617  009A                     	;# 
  1618  009B                     	;# 
  1619  009B                     	;# 
  1620  009C                     	;# 
  1621  009D                     	;# 
  1622  009E                     	;# 
  1623  009F                     	;# 
  1624  010E                     	;# 
  1625  010F                     	;# 
  1626  0119                     	;# 
  1627  011A                     	;# 
  1628  011B                     	;# 
  1629  011B                     	;# 
  1630  011C                     	;# 
  1631  011D                     	;# 
  1632  011E                     	;# 
  1633  011F                     	;# 
  1634  018C                     	;# 
  1635  018D                     	;# 
  1636  018E                     	;# 
  1637  018F                     	;# 
  1638  0190                     	;# 
  1639  0191                     	;# 
  1640  0192                     	;# 
  1641  020C                     	;# 
  1642  020D                     	;# 
  1643  020E                     	;# 
  1644  020E                     	;# 
  1645  020F                     	;# 
  1646  020F                     	;# 
  1647  0210                     	;# 
  1648  0210                     	;# 
  1649  0211                     	;# 
  1650  0211                     	;# 
  1651  028C                     	;# 
  1652  028C                     	;# 
  1653  028D                     	;# 
  1654  028D                     	;# 
  1655  028E                     	;# 
  1656  028F                     	;# 
  1657  0290                     	;# 
  1658  0291                     	;# 
  1659  030C                     	;# 
  1660  030C                     	;# 
  1661  030D                     	;# 
  1662  030E                     	;# 
  1663  030F                     	;# 
  1664  0310                     	;# 
  1665  0310                     	;# 
  1666  0311                     	;# 
  1667  0312                     	;# 
  1668  0313                     	;# 
  1669  0314                     	;# 
  1670  0314                     	;# 
  1671  0315                     	;# 
  1672  0316                     	;# 
  1673  0318                     	;# 
  1674  0318                     	;# 
  1675  0319                     	;# 
  1676  031A                     	;# 
  1677  059C                     	;# 
  1678  059C                     	;# 
  1679  059D                     	;# 
  1680  059D                     	;# 
  1681  059E                     	;# 
  1682  059F                     	;# 
  1683  070C                     	;# 
  1684  070D                     	;# 
  1685  070E                     	;# 
  1686  0716                     	;# 
  1687  0717                     	;# 
  1688  0718                     	;# 
  1689  080C                     	;# 
  1690  0811                     	;# 
  1691  0813                     	;# 
  1692  0814                     	;# 
  1693  081A                     	;# 
  1694  081A                     	;# 
  1695  081B                     	;# 
  1696  081C                     	;# 
  1697  081C                     	;# 
  1698  081D                     	;# 
  1699  081E                     	;# 
  1700  081F                     	;# 
  1701  088E                     	;# 
  1702  0890                     	;# 
  1703  0891                     	;# 
  1704  0892                     	;# 
  1705  0893                     	;# 
  1706  090C                     	;# 
  1707  1E8F                     	;# 
  1708  1E90                     	;# 
  1709  1E91                     	;# 
  1710  1E92                     	;# 
  1711  1E93                     	;# 
  1712  1E9C                     	;# 
  1713  1EA1                     	;# 
  1714  1EA2                     	;# 
  1715  1EC3                     	;# 
  1716  1EC5                     	;# 
  1717  1EC6                     	;# 
  1718  1EC7                     	;# 
  1719  1ECB                     	;# 
  1720  1ECB                     	;# 
  1721  1ECB                     	;# 
  1722  1ECC                     	;# 
  1723  1ECC                     	;# 
  1724  1ECC                     	;# 
  1725  1F10                     	;# 
  1726  1F11                     	;# 
  1727  1F12                     	;# 
  1728  1F14                     	;# 
  1729  1F15                     	;# 
  1730  1F20                     	;# 
  1731  1F21                     	;# 
  1732  1F22                     	;# 
  1733  1F23                     	;# 
  1734  1F24                     	;# 
  1735  1F25                     	;# 
  1736  1F38                     	;# 
  1737  1F39                     	;# 
  1738  1F3A                     	;# 
  1739  1F3B                     	;# 
  1740  1F3C                     	;# 
  1741  1F3D                     	;# 
  1742  1F3E                     	;# 
  1743  1F3F                     	;# 
  1744  1F4E                     	;# 
  1745  1F4F                     	;# 
  1746  1F50                     	;# 
  1747  1F51                     	;# 
  1748  1F52                     	;# 
  1749  1F53                     	;# 
  1750  1F54                     	;# 
  1751  1F55                     	;# 
  1752  1FE4                     	;# 
  1753  1FE5                     	;# 
  1754  1FE6                     	;# 
  1755  1FE7                     	;# 
  1756  1FE8                     	;# 
  1757  1FE8                     	;# 
  1758  1FE9                     	;# 
  1759  1FEA                     	;# 
  1760  1FEB                     	;# 
  1761  1FED                     	;# 
  1762  1FEE                     	;# 
  1763  1FEF                     	;_song3_pre
  1764                           
  1765                           	psect	idataBIGRAM
  1766  0C8E                     __pidataBIGRAM:
  1767                           
  1768                           ;initializer for _song3_pre
  1769  0C8E  34E0               	retlw	224
  1770  0C8F  34E0               	retlw	224
  1771  0C90  34E0               	retlw	224
  1772  0C91  34E0               	retlw	224
  1773  0C92  34E0               	retlw	224
  1774  0C93  34E0               	retlw	224
  1775  0C94  34E0               	retlw	224
  1776  0C95  34E0               	retlw	224
  1777  0C96  34E0               	retlw	224
  1778  0C97  34E0               	retlw	224
  1779  0C98  34E0               	retlw	224
  1780  0C99  34E0               	retlw	224
  1781  0C9A  34E0               	retlw	224
  1782  0C9B  34E0               	retlw	224
  1783  0C9C  34E0               	retlw	224
  1784  0C9D  34E0               	retlw	224
  1785  0C9E  34E0               	retlw	224
  1786  0C9F  34E0               	retlw	224
  1787  0CA0  34E0               	retlw	224
  1788  0CA1  34E0               	retlw	224
  1789  0CA2  34E0               	retlw	224
  1790  0CA3  34E0               	retlw	224
  1791  0CA4  34E0               	retlw	224
  1792  0CA5  34E0               	retlw	224
  1793  0CA6  34E0               	retlw	224
  1794  0CA7  34E0               	retlw	224
  1795  0CA8  34E0               	retlw	224
  1796  0CA9  34E0               	retlw	224
  1797  0CAA  34E0               	retlw	224
  1798  0CAB  34E0               	retlw	224
  1799  0CAC  34E0               	retlw	224
  1800  0CAD  34E0               	retlw	224
  1801  0CAE  34D0               	retlw	208
  1802  0CAF  34D0               	retlw	208
  1803  0CB0  34D0               	retlw	208
  1804  0CB1  34D0               	retlw	208
  1805  0CB2  34D0               	retlw	208
  1806  0CB3  34D0               	retlw	208
  1807  0CB4  34D0               	retlw	208
  1808  0CB5  34D0               	retlw	208
  1809  0CB6  34D0               	retlw	208
  1810  0CB7  34D0               	retlw	208
  1811  0CB8  34C0               	retlw	192
  1812  0CB9  34C0               	retlw	192
  1813  0CBA  34C0               	retlw	192
  1814  0CBB  34C0               	retlw	192
  1815  0CBC  34D0               	retlw	208
  1816  0CBD  34D0               	retlw	208
  1817  0CBE  34D0               	retlw	208
  1818  0CBF  34D0               	retlw	208
  1819  0CC0  34D0               	retlw	208
  1820  0CC1  34D0               	retlw	208
  1821  0CC2  34D0               	retlw	208
  1822  0CC3  34D0               	retlw	208
  1823  0CC4  34D0               	retlw	208
  1824  0CC5  34D0               	retlw	208
  1825  0CC6  34D0               	retlw	208
  1826  0CC7  34D0               	retlw	208
  1827  0CC8  34D0               	retlw	208
  1828  0CC9  34D0               	retlw	208
  1829  0CCA  34C0               	retlw	192
  1830  0CCB  34C0               	retlw	192
  1831  0CCC  34D0               	retlw	208
  1832  0CCD  34D0               	retlw	208
  1833  0CCE  34D0               	retlw	208
  1834  0CCF  34D0               	retlw	208
  1835  0CD0  34D0               	retlw	208
  1836  0CD1  34D0               	retlw	208
  1837  0CD2  34E0               	retlw	224
  1838  0CD3  34D0               	retlw	208
  1839  0CD4  34D0               	retlw	208
  1840  0CD5  34D0               	retlw	208
  1841  0CD6  34D0               	retlw	208
  1842  0CD7  34D0               	retlw	208
  1843  0CD8  34D0               	retlw	208
  1844  0CD9  34D0               	retlw	208
  1845  0CDA  34D0               	retlw	208
  1846  0CDB  34D0               	retlw	208
  1847  0CDC  34D0               	retlw	208
  1848  0CDD  34D0               	retlw	208
  1849  0CDE  34D0               	retlw	208
  1850  0CDF  34D0               	retlw	208
  1851  0CE0  34D0               	retlw	208
  1852  0CE1  34D0               	retlw	208
  1853  0CE2  34E0               	retlw	224
  1854  0CE3  34D0               	retlw	208
  1855  0CE4  34D0               	retlw	208
  1856  0CE5  34D0               	retlw	208
  1857  0CE6  34D0               	retlw	208
  1858  0CE7  34D0               	retlw	208
  1859  0CE8  34D0               	retlw	208
  1860  0CE9  34D0               	retlw	208
  1861  0CEA  34D0               	retlw	208
  1862  0CEB  34D0               	retlw	208
  1863  0CEC  34D0               	retlw	208
  1864  0CED  34D0               	retlw	208
  1865  0CEE  34D0               	retlw	208
  1866  0CEF  34D0               	retlw	208
  1867  0CF0  34D0               	retlw	208
  1868  0CF1  34D0               	retlw	208
  1869  0CF2  34E0               	retlw	224
  1870  0CF3  34D0               	retlw	208
  1871  0CF4  34D0               	retlw	208
  1872  0CF5  34D0               	retlw	208
  1873  0CF6  34D0               	retlw	208
  1874  0CF7  34D0               	retlw	208
  1875  0CF8  34D0               	retlw	208
  1876  0CF9  34D0               	retlw	208
  1877  0CFA  34D0               	retlw	208
  1878  0CFB  34D0               	retlw	208
  1879  0CFC  34D0               	retlw	208
  1880  0CFD  34D0               	retlw	208
  1881  0CFE  34D0               	retlw	208
  1882  0CFF  34D0               	retlw	208
  1883  0D00  34D0               	retlw	208
  1884  0D01  34D0               	retlw	208
  1885  0D02  34E0               	retlw	224
  1886  0D03  34D0               	retlw	208
  1887  0D04  34D0               	retlw	208
  1888  0D05  34D0               	retlw	208
  1889  0D06  34D0               	retlw	208
  1890  0D07  34D0               	retlw	208
  1891  0D08  34D0               	retlw	208
  1892  0D09  34D0               	retlw	208
  1893  0D0A  34D0               	retlw	208
  1894  0D0B  34D0               	retlw	208
  1895  0D0C  34D0               	retlw	208
  1896  0D0D  34D0               	retlw	208
  1897  0D0E  34D0               	retlw	208
  1898  0D0F  34D0               	retlw	208
  1899  0D10  34D0               	retlw	208
  1900  0D11  34D0               	retlw	208
  1901  0D12  34E0               	retlw	224
  1902  0D13  34D0               	retlw	208
  1903  0D14  34D0               	retlw	208
  1904  0D15  34D0               	retlw	208
  1905  0D16  34D0               	retlw	208
  1906  0D17  34D0               	retlw	208
  1907  0D18  34D0               	retlw	208
  1908  0D19  34D0               	retlw	208
  1909  0D1A  34D0               	retlw	208
  1910  0D1B  34D0               	retlw	208
  1911  0D1C  34D0               	retlw	208
  1912  0D1D  34D0               	retlw	208
  1913  0D1E  34D0               	retlw	208
  1914  0D1F  34D0               	retlw	208
  1915  0D20  34D0               	retlw	208
  1916  0D21  34D0               	retlw	208
  1917  0D22  34E0               	retlw	224
  1918  0D23  34D0               	retlw	208
  1919  0D24  34D0               	retlw	208
  1920  0D25  34D0               	retlw	208
  1921  0D26  34D0               	retlw	208
  1922  0D27  34D0               	retlw	208
  1923  0D28  34D0               	retlw	208
  1924  0D29  34D0               	retlw	208
  1925  0D2A  34D0               	retlw	208
  1926  0D2B  34D0               	retlw	208
  1927                           
  1928                           ;initializer for _song3
  1929  0D2C  34D4               	retlw	212
  1930  0D2D  34D4               	retlw	212
  1931  0D2E  34D4               	retlw	212
  1932  0D2F  34D4               	retlw	212
  1933  0D30  34D4               	retlw	212
  1934  0D31  34D4               	retlw	212
  1935  0D32  34D4               	retlw	212
  1936  0D33  34D4               	retlw	212
  1937  0D34  34D4               	retlw	212
  1938  0D35  34D4               	retlw	212
  1939  0D36  34FC               	retlw	252
  1940  0D37  34FC               	retlw	252
  1941  0D38  34FC               	retlw	252
  1942  0D39  34FC               	retlw	252
  1943  0D3A  34FC               	retlw	252
  1944  0D3B  34FC               	retlw	252
  1945  0D3C  34FC               	retlw	252
  1946  0D3D  34FC               	retlw	252
  1947  0D3E  34FC               	retlw	252
  1948  0D3F  34FC               	retlw	252
  1949  0D40  34B2               	retlw	178
  1950  0D41  34B2               	retlw	178
  1951  0D42  34B2               	retlw	178
  1952  0D43  34B2               	retlw	178
  1953  0D44  34B2               	retlw	178
  1954  0D45  34B2               	retlw	178
  1955  0D46  34B2               	retlw	178
  1956  0D47  34B2               	retlw	178
  1957  0D48  34B2               	retlw	178
  1958  0D49  34B2               	retlw	178
  1959  0D4A  348D               	retlw	141
  1960  0D4B  348D               	retlw	141
  1961  0D4C  34EE               	retlw	238
  1962  0D4D  34EE               	retlw	238
  1963  0D4E  34D4               	retlw	212
  1964  0D4F  34D4               	retlw	212
  1965  0D50  34BD               	retlw	189
  1966  0D51  34BD               	retlw	189
  1967  0D52  349E               	retlw	158
  1968  0D53  349E               	retlw	158
  1969  0D54  348D               	retlw	141
  1970  0D55  348D               	retlw	141
  1971  0D56  34EE               	retlw	238
  1972  0D57  34EE               	retlw	238
  1973  0D58  34D4               	retlw	212
  1974  0D59  34D4               	retlw	212
  1975  0D5A  34BD               	retlw	189
  1976  0D5B  3400               	retlw	0
  1977  0D5C  34BD               	retlw	189
  1978  0D5D  3400               	retlw	0
  1979  0D5E  34BD               	retlw	189
  1980  0D5F  3400               	retlw	0
  1981  0D60  34BD               	retlw	189
  1982  0D61  3400               	retlw	0
  1983  0D62  34BD               	retlw	189
  1984  0D63  3400               	retlw	0
  1985  0D64  34BD               	retlw	189
  1986  0D65  3400               	retlw	0
  1987  0D66  34BD               	retlw	189
  1988  0D67  3400               	retlw	0
  1989  0D68  34BD               	retlw	189
  1990  0D69  34BD               	retlw	189
  1991  0D6A  349E               	retlw	158
  1992  0D6B  349E               	retlw	158
  1993  0D6C  349E               	retlw	158
  1994  0D6D  349E               	retlw	158
  1995  0D6E  34B2               	retlw	178
  1996  0D6F  34B2               	retlw	178
  1997  0D70  349E               	retlw	158
  1998  0D71  349E               	retlw	158
  1999  0D72  349E               	retlw	158
  2000  0D73  349E               	retlw	158
  2001  0D74  34B2               	retlw	178
  2002  0D75  34B2               	retlw	178
  2003  0D76  34BD               	retlw	189
  2004  0D77  34BD               	retlw	189
  2005  0D78  34D4               	retlw	212
  2006  0D79  34D4               	retlw	212
  2007  0D7A  349E               	retlw	158
  2008  0D7B  349E               	retlw	158
  2009  0D7C  349E               	retlw	158
  2010  0D7D  349E               	retlw	158
  2011  0D7E  34B2               	retlw	178
  2012  0D7F  34B2               	retlw	178
  2013  0D80  349E               	retlw	158
  2014  0D81  349E               	retlw	158
  2015  0D82  349E               	retlw	158
  2016  0D83  349E               	retlw	158
  2017  0D84  34B2               	retlw	178
  2018  0D85  34B2               	retlw	178
  2019  0D86  34BD               	retlw	189
  2020  0D87  34BD               	retlw	189
  2021  0D88  34D4               	retlw	212
  2022  0D89  34D4               	retlw	212
  2023  0D8A  349E               	retlw	158
  2024  0D8B  349E               	retlw	158
  2025  0D8C  349E               	retlw	158
  2026  0D8D  349E               	retlw	158
  2027  0D8E  34B2               	retlw	178
  2028  0D8F  34B2               	retlw	178
  2029  0D90  349E               	retlw	158
  2030  0D91  349E               	retlw	158
  2031  0D92  349E               	retlw	158
  2032  0D93  349E               	retlw	158
  2033  0D94  34B2               	retlw	178
  2034  0D95  34B2               	retlw	178
  2035  0D96  34BD               	retlw	189
  2036  0D97  34BD               	retlw	189
  2037  0D98  34D4               	retlw	212
  2038  0D99  34D4               	retlw	212
  2039  0D9A  349E               	retlw	158
  2040  0D9B  349E               	retlw	158
  2041  0D9C  349E               	retlw	158
  2042  0D9D  349E               	retlw	158
  2043  0D9E  34B2               	retlw	178
  2044  0D9F  34B2               	retlw	178
  2045  0DA0  349E               	retlw	158
  2046  0DA1  349E               	retlw	158
  2047  0DA2  349E               	retlw	158
  2048  0DA3  349E               	retlw	158
  2049  0DA4  34B2               	retlw	178
  2050  0DA5  34B2               	retlw	178
  2051  0DA6  34BD               	retlw	189
  2052  0DA7  34BD               	retlw	189
  2053  0DA8  34D4               	retlw	212
  2054  0DA9  34D4               	retlw	212
  2055  0DAA  349E               	retlw	158
  2056  0DAB  349E               	retlw	158
  2057  0DAC  349E               	retlw	158
  2058  0DAD  349E               	retlw	158
  2059  0DAE  34B2               	retlw	178
  2060  0DAF  34B2               	retlw	178
  2061  0DB0  349E               	retlw	158
  2062  0DB1  349E               	retlw	158
  2063  0DB2  349E               	retlw	158
  2064  0DB3  349E               	retlw	158
  2065  0DB4  34B2               	retlw	178
  2066  0DB5  34B2               	retlw	178
  2067  0DB6  34BD               	retlw	189
  2068  0DB7  34BD               	retlw	189
  2069  0DB8  34D4               	retlw	212
  2070  0DB9  34D4               	retlw	212
  2071  0DBA  349E               	retlw	158
  2072  0DBB  349E               	retlw	158
  2073  0DBC  349E               	retlw	158
  2074  0DBD  349E               	retlw	158
  2075  0DBE  34B2               	retlw	178
  2076  0DBF  34B2               	retlw	178
  2077  0DC0  349E               	retlw	158
  2078  0DC1  349E               	retlw	158
  2079  0DC2  349E               	retlw	158
  2080  0DC3  349E               	retlw	158
  2081  0DC4  34B2               	retlw	178
  2082  0DC5  34B2               	retlw	178
  2083  0DC6  34BD               	retlw	189
  2084  0DC7  34BD               	retlw	189
  2085  0DC8  34D4               	retlw	212
  2086  0DC9  34D4               	retlw	212
  2087                           
  2088                           ;initializer for _song2
  2089  0DCA  3432               	retlw	50
  2090  0DCB  3432               	retlw	50
  2091  0DCC  34D4               	retlw	212
  2092  0DCD  34D4               	retlw	212
  2093  0DCE  34EE               	retlw	238
  2094  0DCF  34EE               	retlw	238
  2095  0DD0  34FC               	retlw	252
  2096  0DD1  34FC               	retlw	252
  2097  0DD2  349E               	retlw	158
  2098  0DD3  349E               	retlw	158
  2099  0DD4  349E               	retlw	158
  2100  0DD5  349E               	retlw	158
  2101  0DD6  34FC               	retlw	252
  2102  0DD7  34FC               	retlw	252
  2103  0DD8  349E               	retlw	158
  2104  0DD9  349E               	retlw	158
  2105  0DDA  34FC               	retlw	252
  2106  0DDB  34FC               	retlw	252
  2107  0DDC  34EE               	retlw	238
  2108  0DDD  34EE               	retlw	238
  2109  0DDE  34EE               	retlw	238
  2110  0DDF  34EE               	retlw	238
  2111  0DE0  34FC               	retlw	252
  2112  0DE1  34FC               	retlw	252
  2113  0DE2  34FC               	retlw	252
  2114  0DE3  34FC               	retlw	252
  2115  0DE4  34EE               	retlw	238
  2116  0DE5  34EE               	retlw	238
  2117  0DE6  34EE               	retlw	238
  2118  0DE7  34EE               	retlw	238
  2119  0DE8  34FC               	retlw	252
  2120  0DE9  34FC               	retlw	252
  2121  0DEA  3400               	retlw	0
  2122  0DEB  3400               	retlw	0
  2123  0DEC  34D4               	retlw	212
  2124  0DED  34D4               	retlw	212
  2125  0DEE  34EE               	retlw	238
  2126  0DEF  34EE               	retlw	238
  2127  0DF0  34FC               	retlw	252
  2128  0DF1  34FC               	retlw	252
  2129  0DF2  349E               	retlw	158
  2130  0DF3  349E               	retlw	158
  2131  0DF4  349E               	retlw	158
  2132  0DF5  349E               	retlw	158
  2133  0DF6  34FC               	retlw	252
  2134  0DF7  34FC               	retlw	252
  2135  0DF8  349E               	retlw	158
  2136  0DF9  349E               	retlw	158
  2137  0DFA  348D               	retlw	141
  2138  0DFB  348D               	retlw	141
  2139  0DFC  34FC               	retlw	252
  2140  0DFD  34FC               	retlw	252
  2141  0DFE  348D               	retlw	141
  2142  0DFF  348D               	retlw	141
  2143  0E00  349E               	retlw	158
  2144  0E01  349E               	retlw	158
  2145  0E02  34B2               	retlw	178
  2146  0E03  34B2               	retlw	178
  2147  0E04  34B2               	retlw	178
  2148  0E05  34B2               	retlw	178
  2149  0E06  34A8               	retlw	168
  2150  0E07  34A8               	retlw	168
  2151  0E08  34A8               	retlw	168
  2152  0E09  34A8               	retlw	168
  2153  0E0A  3400               	retlw	0
  2154  0E0B  3400               	retlw	0
  2155  0E0C  34D4               	retlw	212
  2156  0E0D  34D4               	retlw	212
  2157  0E0E  34EE               	retlw	238
  2158  0E0F  34EE               	retlw	238
  2159  0E10  34FC               	retlw	252
  2160  0E11  34FC               	retlw	252
  2161  0E12  349E               	retlw	158
  2162  0E13  349E               	retlw	158
  2163  0E14  349E               	retlw	158
  2164  0E15  349E               	retlw	158
  2165  0E16  34FC               	retlw	252
  2166  0E17  34FC               	retlw	252
  2167  0E18  349E               	retlw	158
  2168  0E19  349E               	retlw	158
  2169  0E1A  3400               	retlw	0
  2170  0E1B  3400               	retlw	0
  2171  0E1C  349E               	retlw	158
  2172  0E1D  3400               	retlw	0
  2173  0E1E  349E               	retlw	158
  2174  0E1F  349E               	retlw	158
  2175  0E20  349E               	retlw	158
  2176  0E21  349E               	retlw	158
  2177  0E22  3400               	retlw	0
  2178  0E23  3400               	retlw	0
  2179  0E24  348D               	retlw	141
  2180  0E25  3400               	retlw	0
  2181  0E26  348D               	retlw	141
  2182  0E27  348D               	retlw	141
  2183  0E28  348D               	retlw	141
  2184  0E29  348D               	retlw	141
  2185  0E2A  3400               	retlw	0
  2186  0E2B  3400               	retlw	0
  2187  0E2C  34D4               	retlw	212
  2188  0E2D  34D4               	retlw	212
  2189  0E2E  34EE               	retlw	238
  2190  0E2F  34EE               	retlw	238
  2191  0E30  34FC               	retlw	252
  2192  0E31  34FC               	retlw	252
  2193  0E32  349E               	retlw	158
  2194  0E33  349E               	retlw	158
  2195  0E34  349E               	retlw	158
  2196  0E35  349E               	retlw	158
  2197  0E36  3400               	retlw	0
  2198  0E37  3400               	retlw	0
  2199  0E38  349E               	retlw	158
  2200  0E39  349E               	retlw	158
  2201  0E3A  34FC               	retlw	252
  2202  0E3B  34FC               	retlw	252
  2203  0E3C  34EE               	retlw	238
  2204  0E3D  34EE               	retlw	238
  2205  0E3E  34EE               	retlw	238
  2206  0E3F  34EE               	retlw	238
  2207  0E40  34FC               	retlw	252
  2208  0E41  34FC               	retlw	252
  2209  0E42  34FC               	retlw	252
  2210  0E43  34FC               	retlw	252
  2211  0E44  34FC               	retlw	252
  2212  0E45  34FC               	retlw	252
  2213  0E46  34EE               	retlw	238
  2214  0E47  34EE               	retlw	238
  2215  0E48  34EE               	retlw	238
  2216  0E49  34EE               	retlw	238
  2217  0E4A  3400               	retlw	0
  2218  0E4B  3400               	retlw	0
  2219  0E4C  34D4               	retlw	212
  2220  0E4D  34D4               	retlw	212
  2221  0E4E  34EE               	retlw	238
  2222  0E4F  34EE               	retlw	238
  2223  0E50  34FC               	retlw	252
  2224  0E51  34FC               	retlw	252
  2225  0E52  349E               	retlw	158
  2226  0E53  349E               	retlw	158
  2227  0E54  349E               	retlw	158
  2228  0E55  349E               	retlw	158
  2229  0E56  3400               	retlw	0
  2230  0E57  3400               	retlw	0
  2231  0E58  349E               	retlw	158
  2232  0E59  349E               	retlw	158
  2233  0E5A  3400               	retlw	0
  2234                           
  2235                           ;initializer for _song2_pre
  2236  0E5B  3400               	retlw	0
  2237  0E5C  3400               	retlw	0
  2238  0E5D  34D0               	retlw	208
  2239  0E5E  34D0               	retlw	208
  2240  0E5F  34D0               	retlw	208
  2241  0E60  34D0               	retlw	208
  2242  0E61  34D0               	retlw	208
  2243  0E62  34D0               	retlw	208
  2244  0E63  34E0               	retlw	224
  2245  0E64  34E0               	retlw	224
  2246  0E65  34E0               	retlw	224
  2247  0E66  34E0               	retlw	224
  2248  0E67  34D0               	retlw	208
  2249  0E68  34D0               	retlw	208
  2250  0E69  34E0               	retlw	224
  2251  0E6A  34E0               	retlw	224
  2252  0E6B  34D0               	retlw	208
  2253  0E6C  34D0               	retlw	208
  2254  0E6D  34D0               	retlw	208
  2255  0E6E  34D0               	retlw	208
  2256  0E6F  34D0               	retlw	208
  2257  0E70  34D0               	retlw	208
  2258  0E71  34D0               	retlw	208
  2259  0E72  34D0               	retlw	208
  2260  0E73  34D0               	retlw	208
  2261  0E74  34D0               	retlw	208
  2262  0E75  34D0               	retlw	208
  2263  0E76  34D0               	retlw	208
  2264  0E77  34D0               	retlw	208
  2265  0E78  34D0               	retlw	208
  2266  0E79  34D0               	retlw	208
  2267  0E7A  34D0               	retlw	208
  2268  0E7B  34D0               	retlw	208
  2269  0E7C  34D0               	retlw	208
  2270  0E7D  34D0               	retlw	208
  2271  0E7E  34D0               	retlw	208
  2272  0E7F  34D0               	retlw	208
  2273  0E80  34D0               	retlw	208
  2274  0E81  34D0               	retlw	208
  2275  0E82  34D0               	retlw	208
  2276  0E83  34E0               	retlw	224
  2277  0E84  34E0               	retlw	224
  2278  0E85  34E0               	retlw	224
  2279  0E86  34E0               	retlw	224
  2280  0E87  34D0               	retlw	208
  2281  0E88  34D0               	retlw	208
  2282  0E89  34E0               	retlw	224
  2283  0E8A  34E0               	retlw	224
  2284  0E8B  34E0               	retlw	224
  2285  0E8C  34E0               	retlw	224
  2286  0E8D  34D0               	retlw	208
  2287  0E8E  34D0               	retlw	208
  2288  0E8F  34E0               	retlw	224
  2289  0E90  34E0               	retlw	224
  2290  0E91  34E0               	retlw	224
  2291  0E92  34E0               	retlw	224
  2292  0E93  34E0               	retlw	224
  2293  0E94  34E0               	retlw	224
  2294  0E95  34E0               	retlw	224
  2295  0E96  34E0               	retlw	224
  2296  0E97  34E0               	retlw	224
  2297  0E98  34E0               	retlw	224
  2298  0E99  34E0               	retlw	224
  2299  0E9A  34E0               	retlw	224
  2300  0E9B  34D0               	retlw	208
  2301  0E9C  34D0               	retlw	208
  2302  0E9D  34D0               	retlw	208
  2303  0E9E  34D0               	retlw	208
  2304  0E9F  34D0               	retlw	208
  2305  0EA0  34D0               	retlw	208
  2306  0EA1  34D0               	retlw	208
  2307  0EA2  34D0               	retlw	208
  2308  0EA3  34E0               	retlw	224
  2309  0EA4  34E0               	retlw	224
  2310  0EA5  34E0               	retlw	224
  2311  0EA6  34E0               	retlw	224
  2312  0EA7  34D0               	retlw	208
  2313  0EA8  34D0               	retlw	208
  2314  0EA9  34E0               	retlw	224
  2315  0EAA  34E0               	retlw	224
  2316  0EAB  34E0               	retlw	224
  2317  0EAC  34E0               	retlw	224
  2318  0EAD  34E0               	retlw	224
  2319  0EAE  34E0               	retlw	224
  2320  0EAF  34E0               	retlw	224
  2321  0EB0  34E0               	retlw	224
  2322  0EB1  34E0               	retlw	224
  2323  0EB2  34E0               	retlw	224
  2324  0EB3  34E0               	retlw	224
  2325  0EB4  34E0               	retlw	224
  2326  0EB5  34E0               	retlw	224
  2327  0EB6  34E0               	retlw	224
  2328  0EB7  34E0               	retlw	224
  2329  0EB8  34E0               	retlw	224
  2330  0EB9  34E0               	retlw	224
  2331  0EBA  34E0               	retlw	224
  2332  0EBB  34D0               	retlw	208
  2333  0EBC  34D0               	retlw	208
  2334  0EBD  34D0               	retlw	208
  2335  0EBE  34D0               	retlw	208
  2336  0EBF  34D0               	retlw	208
  2337  0EC0  34D0               	retlw	208
  2338  0EC1  34D0               	retlw	208
  2339  0EC2  34D0               	retlw	208
  2340  0EC3  34E0               	retlw	224
  2341  0EC4  34E0               	retlw	224
  2342  0EC5  34E0               	retlw	224
  2343  0EC6  34E0               	retlw	224
  2344  0EC7  34D0               	retlw	208
  2345  0EC8  34D0               	retlw	208
  2346  0EC9  34E0               	retlw	224
  2347  0ECA  34E0               	retlw	224
  2348  0ECB  34D0               	retlw	208
  2349  0ECC  34D0               	retlw	208
  2350  0ECD  34D0               	retlw	208
  2351  0ECE  34D0               	retlw	208
  2352  0ECF  34D0               	retlw	208
  2353  0ED0  34D0               	retlw	208
  2354  0ED1  34D0               	retlw	208
  2355  0ED2  34D0               	retlw	208
  2356  0ED3  34D0               	retlw	208
  2357  0ED4  34D0               	retlw	208
  2358  0ED5  34D0               	retlw	208
  2359  0ED6  34D0               	retlw	208
  2360  0ED7  34D0               	retlw	208
  2361  0ED8  34D0               	retlw	208
  2362  0ED9  34D0               	retlw	208
  2363  0EDA  34D0               	retlw	208
  2364  0EDB  34D0               	retlw	208
  2365  0EDC  34D0               	retlw	208
  2366  0EDD  34D0               	retlw	208
  2367  0EDE  34D0               	retlw	208
  2368  0EDF  34D0               	retlw	208
  2369  0EE0  34D0               	retlw	208
  2370  0EE1  34D0               	retlw	208
  2371  0EE2  34D0               	retlw	208
  2372  0EE3  34E0               	retlw	224
  2373  0EE4  34E0               	retlw	224
  2374  0EE5  34E0               	retlw	224
  2375  0EE6  34E0               	retlw	224
  2376  0EE7  34D0               	retlw	208
  2377  0EE8  34D0               	retlw	208
  2378  0EE9  34E0               	retlw	224
  2379  0EEA  34E0               	retlw	224
  2380                           
  2381                           ;initializer for _silent_night
  2382  0EEB  349E               	retlw	158
  2383  0EEC  349E               	retlw	158
  2384  0EED  349E               	retlw	158
  2385  0EEE  348D               	retlw	141
  2386  0EEF  349E               	retlw	158
  2387  0EF0  349E               	retlw	158
  2388  0EF1  34BC               	retlw	188
  2389  0EF2  34BC               	retlw	188
  2390  0EF3  34BC               	retlw	188
  2391  0EF4  34BC               	retlw	188
  2392  0EF5  34BC               	retlw	188
  2393  0EF6  34BC               	retlw	188
  2394  0EF7  349E               	retlw	158
  2395  0EF8  349E               	retlw	158
  2396  0EF9  349E               	retlw	158
  2397  0EFA  348D               	retlw	141
  2398  0EFB  349E               	retlw	158
  2399  0EFC  349E               	retlw	158
  2400  0EFD  34BC               	retlw	188
  2401  0EFE  34BC               	retlw	188
  2402  0EFF  34BC               	retlw	188
  2403  0F00  34BC               	retlw	188
  2404  0F01  34BC               	retlw	188
  2405  0F02  34BC               	retlw	188
  2406  0F03  34D3               	retlw	211
  2407  0F04  34D3               	retlw	211
  2408  0F05  34D3               	retlw	211
  2409  0F06  34D3               	retlw	211
  2410  0F07  34D3               	retlw	211
  2411  0F08  34D3               	retlw	211
  2412  0F09  34FC               	retlw	252
  2413  0F0A  34FC               	retlw	252
  2414  0F0B  34FC               	retlw	252
  2415  0F0C  34FC               	retlw	252
  2416  0F0D  34FC               	retlw	252
  2417  0F0E  34FC               	retlw	252
  2418  0F0F  34EE               	retlw	238
  2419  0F10  34EE               	retlw	238
  2420  0F11  34EE               	retlw	238
  2421  0F12  34EE               	retlw	238
  2422  0F13  34EE               	retlw	238
  2423  0F14  34EE               	retlw	238
  2424  0F15  349E               	retlw	158
  2425  0F16  349E               	retlw	158
  2426  0F17  349E               	retlw	158
  2427  0F18  349E               	retlw	158
  2428  0F19  349E               	retlw	158
  2429  0F1A  349E               	retlw	158
  2430  0F1B  348D               	retlw	141
  2431  0F1C  348D               	retlw	141
  2432  0F1D  348D               	retlw	141
  2433  0F1E  348D               	retlw	141
  2434  0F1F  348D               	retlw	141
  2435  0F20  348D               	retlw	141
  2436  0F21  34ED               	retlw	237
  2437  0F22  34ED               	retlw	237
  2438  0F23  34ED               	retlw	237
  2439  0F24  34FC               	retlw	252
  2440  0F25  348D               	retlw	141
  2441  0F26  348D               	retlw	141
  2442  0F27  349E               	retlw	158
  2443  0F28  349E               	retlw	158
  2444  0F29  349E               	retlw	158
  2445  0F2A  348D               	retlw	141
  2446  0F2B  349E               	retlw	158
  2447  0F2C  349E               	retlw	158
  2448  0F2D  34BC               	retlw	188
  2449  0F2E  34BC               	retlw	188
  2450  0F2F  34BC               	retlw	188
  2451  0F30  34BC               	retlw	188
  2452  0F31  34BC               	retlw	188
  2453  0F32  34BC               	retlw	188
  2454  0F33  348D               	retlw	141
  2455  0F34  348D               	retlw	141
  2456  0F35  348D               	retlw	141
  2457  0F36  348D               	retlw	141
  2458  0F37  348D               	retlw	141
  2459  0F38  348D               	retlw	141
  2460  0F39  34ED               	retlw	237
  2461  0F3A  34ED               	retlw	237
  2462  0F3B  34ED               	retlw	237
  2463  0F3C  34FC               	retlw	252
  2464  0F3D  348D               	retlw	141
  2465  0F3E  348D               	retlw	141
  2466  0F3F  349E               	retlw	158
  2467  0F40  349E               	retlw	158
  2468  0F41  349E               	retlw	158
  2469  0F42  348D               	retlw	141
  2470  0F43  349E               	retlw	158
  2471  0F44  349E               	retlw	158
  2472  0F45  34BC               	retlw	188
  2473  0F46  34BC               	retlw	188
  2474  0F47  34BC               	retlw	188
  2475  0F48  34BC               	retlw	188
  2476  0F49  34BC               	retlw	188
  2477  0F4A  34BC               	retlw	188
  2478  0F4B  34D3               	retlw	211
  2479  0F4C  34D3               	retlw	211
  2480  0F4D  34D3               	retlw	211
  2481  0F4E  34D3               	retlw	211
  2482  0F4F  34D3               	retlw	211
  2483  0F50  34D3               	retlw	211
  2484  0F51  34B1               	retlw	177
  2485  0F52  34B1               	retlw	177
  2486  0F53  34B1               	retlw	177
  2487  0F54  34D3               	retlw	211
  2488  0F55  34FC               	retlw	252
  2489  0F56  34FC               	retlw	252
  2490  0F57  34ED               	retlw	237
  2491  0F58  34ED               	retlw	237
  2492  0F59  34ED               	retlw	237
  2493  0F5A  34ED               	retlw	237
  2494  0F5B  34ED               	retlw	237
  2495  0F5C  34ED               	retlw	237
  2496  0F5D  34BC               	retlw	188
  2497  0F5E  34BC               	retlw	188
  2498  0F5F  34BC               	retlw	188
  2499  0F60  34BC               	retlw	188
  2500  0F61  34BC               	retlw	188
  2501  0F62  34BC               	retlw	188
  2502  0F63  34ED               	retlw	237
  2503  0F64  34ED               	retlw	237
  2504  0F65  349E               	retlw	158
  2505  0F66  349E               	retlw	158
  2506  0F67  34BC               	retlw	188
  2507  0F68  34BC               	retlw	188
  2508  0F69  349E               	retlw	158
  2509  0F6A  349E               	retlw	158
  2510  0F6B  349E               	retlw	158
  2511  0F6C  34B1               	retlw	177
  2512  0F6D  34D3               	retlw	211
  2513  0F6E  34D3               	retlw	211
  2514  0F6F  34EE               	retlw	238
  2515  0F70  34EE               	retlw	238
  2516  0F71  34EE               	retlw	238
  2517  0F72  34EE               	retlw	238
  2518  0F73  34EE               	retlw	238
  2519  0F74  34EE               	retlw	238
  2520  0F75  3400               	retlw	0
  2521                           
  2522                           ;initializer for _silent_night_pre
  2523  0F76  34D0               	retlw	208
  2524  0F77  34D0               	retlw	208
  2525  0F78  34D0               	retlw	208
  2526  0F79  34D0               	retlw	208
  2527  0F7A  34D0               	retlw	208
  2528  0F7B  34D0               	retlw	208
  2529  0F7C  34D0               	retlw	208
  2530  0F7D  34D0               	retlw	208
  2531  0F7E  34D0               	retlw	208
  2532  0F7F  34D0               	retlw	208
  2533  0F80  34D0               	retlw	208
  2534  0F81  34D0               	retlw	208
  2535  0F82  34D0               	retlw	208
  2536  0F83  34D0               	retlw	208
  2537  0F84  34D0               	retlw	208
  2538  0F85  34D0               	retlw	208
  2539  0F86  34D0               	retlw	208
  2540  0F87  34D0               	retlw	208
  2541  0F88  34D0               	retlw	208
  2542  0F89  34D0               	retlw	208
  2543  0F8A  34D0               	retlw	208
  2544  0F8B  34D0               	retlw	208
  2545  0F8C  34D0               	retlw	208
  2546  0F8D  34D0               	retlw	208
  2547  0F8E  34C0               	retlw	192
  2548  0F8F  34C0               	retlw	192
  2549  0F90  34C0               	retlw	192
  2550  0F91  34C0               	retlw	192
  2551  0F92  34C0               	retlw	192
  2552  0F93  34C0               	retlw	192
  2553  0F94  34C0               	retlw	192
  2554  0F95  34C0               	retlw	192
  2555  0F96  34C0               	retlw	192
  2556  0F97  34C0               	retlw	192
  2557  0F98  34C0               	retlw	192
  2558  0F99  34C0               	retlw	192
  2559  0F9A  34C0               	retlw	192
  2560  0F9B  34C0               	retlw	192
  2561  0F9C  34C0               	retlw	192
  2562  0F9D  34C0               	retlw	192
  2563  0F9E  34C0               	retlw	192
  2564  0F9F  34C0               	retlw	192
  2565  0FA0  34D0               	retlw	208
  2566  0FA1  34D0               	retlw	208
  2567  0FA2  34D0               	retlw	208
  2568  0FA3  34D0               	retlw	208
  2569  0FA4  34D0               	retlw	208
  2570  0FA5  34D0               	retlw	208
  2571  0FA6  34D0               	retlw	208
  2572  0FA7  34D0               	retlw	208
  2573  0FA8  34D0               	retlw	208
  2574  0FA9  34D0               	retlw	208
  2575  0FAA  34D0               	retlw	208
  2576  0FAB  34D0               	retlw	208
  2577  0FAC  34C0               	retlw	192
  2578  0FAD  34C0               	retlw	192
  2579  0FAE  34C0               	retlw	192
  2580  0FAF  34C0               	retlw	192
  2581  0FB0  34D0               	retlw	208
  2582  0FB1  34D0               	retlw	208
  2583  0FB2  34D0               	retlw	208
  2584  0FB3  34D0               	retlw	208
  2585  0FB4  34D0               	retlw	208
  2586  0FB5  34D0               	retlw	208
  2587  0FB6  34D0               	retlw	208
  2588  0FB7  34D0               	retlw	208
  2589  0FB8  34D0               	retlw	208
  2590  0FB9  34D0               	retlw	208
  2591  0FBA  34D0               	retlw	208
  2592  0FBB  34D0               	retlw	208
  2593  0FBC  34D0               	retlw	208
  2594  0FBD  34D0               	retlw	208
  2595  0FBE  34D0               	retlw	208
  2596  0FBF  34D0               	retlw	208
  2597  0FC0  34D0               	retlw	208
  2598  0FC1  34D0               	retlw	208
  2599  0FC2  34D0               	retlw	208
  2600  0FC3  34D0               	retlw	208
  2601  0FC4  34C0               	retlw	192
  2602  0FC5  34C0               	retlw	192
  2603  0FC6  34C0               	retlw	192
  2604  0FC7  34C0               	retlw	192
  2605  0FC8  34D0               	retlw	208
  2606  0FC9  34D0               	retlw	208
  2607  0FCA  34D0               	retlw	208
  2608  0FCB  34D0               	retlw	208
  2609  0FCC  34D0               	retlw	208
  2610  0FCD  34D0               	retlw	208
  2611  0FCE  34D0               	retlw	208
  2612  0FCF  34D0               	retlw	208
  2613  0FD0  34D0               	retlw	208
  2614  0FD1  34D0               	retlw	208
  2615  0FD2  34D0               	retlw	208
  2616  0FD3  34D0               	retlw	208
  2617  0FD4  34D0               	retlw	208
  2618  0FD5  34D0               	retlw	208
  2619  0FD6  34C0               	retlw	192
  2620  0FD7  34C0               	retlw	192
  2621  0FD8  34C0               	retlw	192
  2622  0FD9  34C0               	retlw	192
  2623  0FDA  34C0               	retlw	192
  2624  0FDB  34C0               	retlw	192
  2625  0FDC  34C0               	retlw	192
  2626  0FDD  34C0               	retlw	192
  2627  0FDE  34C0               	retlw	192
  2628  0FDF  34C0               	retlw	192
  2629  0FE0  34C0               	retlw	192
  2630  0FE1  34C0               	retlw	192
  2631  0FE2  34C0               	retlw	192
  2632  0FE3  34C0               	retlw	192
  2633  0FE4  34C0               	retlw	192
  2634  0FE5  34C0               	retlw	192
  2635  0FE6  34C0               	retlw	192
  2636  0FE7  34C0               	retlw	192
  2637  0FE8  34C0               	retlw	192
  2638  0FE9  34C0               	retlw	192
  2639  0FEA  34C0               	retlw	192
  2640  0FEB  34C0               	retlw	192
  2641  0FEC  34C0               	retlw	192
  2642  0FED  34C0               	retlw	192
  2643  0FEE  34C0               	retlw	192
  2644  0FEF  34C0               	retlw	192
  2645  0FF0  34D0               	retlw	208
  2646  0FF1  34D0               	retlw	208
  2647  0FF2  34D0               	retlw	208
  2648  0FF3  34D0               	retlw	208
  2649  0FF4  34D0               	retlw	208
  2650  0FF5  34D0               	retlw	208
  2651  0FF6  34D0               	retlw	208
  2652  0FF7  34D0               	retlw	208
  2653  0FF8  34D0               	retlw	208
  2654  0FF9  34D0               	retlw	208
  2655  0FFA  34D0               	retlw	208
  2656  0FFB  34D0               	retlw	208
  2657  0FFC  34D0               	retlw	208
  2658  0FFD  34D0               	retlw	208
  2659  0FFE  34D0               	retlw	208
  2660  0FFF  34D0               	retlw	208
  2661                           
  2662                           	psect	idataBANK0
  2663  0A63                     __pidataBANK0:
  2664                           
  2665                           ;initializer for _song3_length
  2666  0A63  349E               	retlw	158
  2667                           
  2668                           ;initializer for _timer_low_3
  2669  0A64  343A               	retlw	58
  2670                           
  2671                           ;initializer for _timer_high_3
  2672  0A65  34F1               	retlw	241
  2673                           
  2674                           ;initializer for _song2_length
  2675  0A66  3490               	retlw	144
  2676                           
  2677                           ;initializer for _timer_low_2
  2678  0A67  341C               	retlw	28
  2679                           
  2680                           ;initializer for _timer_high_2
  2681  0A68  34ED               	retlw	237
  2682                           
  2683                           ;initializer for _num_songs
  2684  0A69  3403               	retlw	3
  2685                           
  2686                           	psect	idataBANK1
  2687  0A5C                     __pidataBANK1:
  2688                           
  2689                           ;initializer for _light_array
  2690  0A5C  34FE               	retlw	254
  2691  0A5D  34FF               	retlw	255
  2692  0A5E  34FE               	retlw	254
  2693  0A5F  34FF               	retlw	255
  2694  0A60  34FE               	retlw	254
  2695  0A61  34FF               	retlw	255
  2696  0A62  34FE               	retlw	254
  2697                           
  2698                           	psect	stringtext1
  2699  1000                     __pstringtext1:
  2700  1000                     _spi1_configuration:
  2701  1000  3400               	retlw	0
  2702  1001  3440               	retlw	64
  2703  1002  3401               	retlw	1
  2704  1003  3400               	retlw	0
  2705  1004                     __end_of_spi1_configuration:
  2706                           
  2707                           	psect	nvBANK0
  2708  0054                     __pnvBANK0:
  2709  0054                     _TMR1_InterruptHandler:
  2710  0054                     	ds	2
  2711  0056                     _timer1ReloadVal:
  2712  0056                     	ds	2
  2713                           
  2714                           	psect	nvBANK1
  2715  00BE                     __pnvBANK1:
  2716  00BE                     _TMR0_InterruptHandler:
  2717  00BE                     	ds	2
  2718  00C0                     _timer0ReloadVal16bit:
  2719  00C0                     	ds	2
  2720  00C2                     _INT_InterruptHandler:
  2721  00C2                     	ds	2
  2722  000C                     _PORTAbits	set	12
  2723  001A                     _LATCbits	set	26
  2724  0012                     _TRISAbits	set	18
  2725  000B                     _INTCONbits	set	11
  2726  0014                     _TRISC	set	20
  2727  0012                     _TRISA	set	18
  2728  001A                     _LATC	set	26
  2729  0018                     _LATA	set	24
  2730  0014                     _TRISCbits	set	20
  2731  018C                     _SSP1BUF	set	396
  2732  0191                     _SSP1CON2	set	401
  2733  0190                     _SSP1CON1bits	set	400
  2734  018D                     _SSP1ADD	set	397
  2735  0190                     _SSP1CON1	set	400
  2736  018F                     _SSP1STAT	set	399
  2737  020F                     _T1GCONbits	set	527
  2738  020E                     _T1CONbits	set	526
  2739  020E                     _T1CON	set	526
  2740  020C                     _TMR1L	set	524
  2741  020D                     _TMR1H	set	525
  2742  0211                     _T1CLK	set	529
  2743  0210                     _T1GATE	set	528
  2744  020F                     _T1GCON	set	527
  2745  028D                     _PR2	set	653
  2746  028C                     _TMR2	set	652
  2747  028E                     _T2CONbits	set	654
  2748  0291                     _T2RSTbits	set	657
  2749  028F                     _T2HLTbits	set	655
  2750  028E                     _T2CON	set	654
  2751  028C                     _T2TMR	set	652
  2752  028D                     _T2PR	set	653
  2753  0291                     _T2RST	set	657
  2754  028F                     _T2HLT	set	655
  2755  0290                     _T2CLKCON	set	656
  2756  0314                     _PWM3DCL	set	788
  2757  0315                     _PWM3DCH	set	789
  2758  0316                     _PWM3CON	set	790
  2759  059E                     _T0CON0bits	set	1438
  2760  059E                     _T0CON0	set	1438
  2761  059C                     _TMR0L	set	1436
  2762  059D                     _TMR0H	set	1437
  2763  059F                     _T0CON1	set	1439
  2764  0717                     _PIE1bits	set	1815
  2765  070C                     _PIR0bits	set	1804
  2766  0716                     _PIE0bits	set	1814
  2767  070D                     _PIR1bits	set	1805
  2768  080C                     _WDTCON	set	2060
  2769  0892                     _OSCTUNE	set	2194
  2770  0893                     _OSCFRQ	set	2195
  2771  0891                     _OSCEN	set	2193
  2772  1E90                     _INTPPS	set	7824
  2773  1EC6                     _SSP1DATPPS	set	7878
  2774  1EC5                     _SSP1CLKPPS	set	7877
  2775  1F15                     _RA5PPS	set	7957
  2776  1F52                     _INLVLC	set	8018
  2777  1F3C                     _INLVLA	set	7996
  2778  1F51                     _SLRCONC	set	8017
  2779  1F3B                     _SLRCONA	set	7995
  2780  1F50                     _ODCONC	set	8016
  2781  1F3A                     _ODCONA	set	7994
  2782  1F4F                     _WPUC	set	8015
  2783  1F39                     _WPUA	set	7993
  2784  1F38                     _ANSELA	set	7992
  2785  1F4E                     _ANSELC	set	8014
  2786  1F23                     _RC3PPS	set	7971
  2787  1F25                     _RC5PPS	set	7973
  2788                           
  2789                           	psect	cinit
  2790  0033                     start_initialization:	
  2791                           ; #config settings
  2792                           
  2793  0033                     __initialization:	;BIGRAM
  2794                           
  2795                           ; Initialize objects allocated to BIGRAM
  2796  0033  308E               	movlw	low __pidataBIGRAM
  2797  0034  0084               	movwf	4
  2798  0035  308C               	movlw	(high __pidataBIGRAM)| (0+128)
  2799  0036  0085               	movwf	5
  2800  0037  307E               	movlw	low (0+8318)
  2801  0038  0086               	movwf	6
  2802  0039  3020               	movlw	high (0+8318)
  2803  003A  0087               	movwf	7
  2804  003B  3003               	movlw	3
  2805  003C  00FF               	movwf	btemp+1
  2806  003D  3072               	movlw	114
  2807  003E  3187  27F4  3180   	fcall	init_ram
  2808                           
  2809                           ; Initialize objects allocated to BANK0
  2810  0041  3063               	movlw	low __pidataBANK0
  2811  0042  0084               	movwf	4
  2812  0043  308A               	movlw	(high __pidataBANK0)| (0+128)
  2813  0044  0085               	movwf	5
  2814  0045  3048               	movlw	low __pdataBANK0
  2815  0046  0086               	movwf	6
  2816  0047  3000               	movlw	high __pdataBANK0
  2817  0048  0087               	movwf	7
  2818  0049  3000               	movlw	0
  2819  004A  00FF               	movwf	btemp+1
  2820  004B  3007               	movlw	7
  2821  004C  3187  27F4  3180   	fcall	init_ram
  2822                           
  2823                           ; Initialize objects allocated to BANK1
  2824  004F  305C               	movlw	low __pidataBANK1
  2825  0050  0084               	movwf	4
  2826  0051  308A               	movlw	(high __pidataBANK1)| (0+128)
  2827  0052  0085               	movwf	5
  2828  0053  30B7               	movlw	low __pdataBANK1
  2829  0054  0086               	movwf	6
  2830  0055  3000               	movlw	high __pdataBANK1
  2831  0056  0087               	movwf	7
  2832  0057  3000               	movlw	0
  2833  0058  00FF               	movwf	btemp+1
  2834  0059  3007               	movlw	7
  2835  005A  3187  27F4  3180   	fcall	init_ram
  2836                           
  2837                           ; Clear objects allocated to BANK0
  2838  005D  01CF               	clrf	__pbssBANK0& (0+127)
  2839  005E  01D0               	clrf	(__pbssBANK0+1)& (0+127)
  2840  005F  01D1               	clrf	(__pbssBANK0+2)& (0+127)
  2841  0060  01D2               	clrf	(__pbssBANK0+3)& (0+127)
  2842  0061  01D3               	clrf	(__pbssBANK0+4)& (0+127)
  2843                           
  2844                           ; Clear objects allocated to BANK1
  2845  0062  0141               	movlb	1	; select bank1
  2846  0063  01C4               	clrf	__pbssBANK1& (0+127)
  2847  0064  01C5               	clrf	(__pbssBANK1+1)& (0+127)
  2848  0065  01C6               	clrf	(__pbssBANK1+2)& (0+127)
  2849  0066  01C7               	clrf	(__pbssBANK1+3)& (0+127)
  2850  0067  01C8               	clrf	(__pbssBANK1+4)& (0+127)
  2851  0068  01C9               	clrf	(__pbssBANK1+5)& (0+127)
  2852  0069                     end_of_initialization:	
  2853                           ;End of C runtime variable initialization code
  2854                           
  2855  0069                     __end_of__initialization:
  2856  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2857  006A  0140               	movlb	0
  2858  006B  3185  2DC0         	ljmp	_main	;jump to C main() function
  2859                           
  2860                           	psect	bssBANK0
  2861  004F                     __pbssBANK0:
  2862  004F                     _jungle_count:
  2863  004F                     	ds	1
  2864  0050                     _last_note:
  2865  0050                     	ds	1
  2866  0051                     _song2_playing:
  2867  0051                     	ds	1
  2868  0052                     _song3_playing:
  2869  0052                     	ds	1
  2870  0053                     _silent_night_playing:
  2871  0053                     	ds	1
  2872                           
  2873                           	psect	dataBANK0
  2874  0048                     __pdataBANK0:
  2875  0048                     _song3_length:
  2876  0048                     	ds	1
  2877  0049                     _timer_low_3:
  2878  0049                     	ds	1
  2879  004A                     _timer_high_3:
  2880  004A                     	ds	1
  2881  004B                     _song2_length:
  2882  004B                     	ds	1
  2883  004C                     _timer_low_2:
  2884  004C                     	ds	1
  2885  004D                     _timer_high_2:
  2886  004D                     	ds	1
  2887  004E                     _num_songs:
  2888  004E                     	ds	1
  2889                           
  2890                           	psect	bssBANK1
  2891  00C4                     __pbssBANK1:
  2892  00C4                     _count:
  2893  00C4                     	ds	2
  2894  00C6                     _jungle_bool:
  2895  00C6                     	ds	1
  2896  00C7                     _presses:
  2897  00C7                     	ds	1
  2898  00C8                     _last_prescale:
  2899  00C8                     	ds	1
  2900  00C9                     _TMR0_complete:
  2901  00C9                     	ds	1
  2902                           
  2903                           	psect	dataBANK1
  2904  00B7                     __pdataBANK1:
  2905  00B7                     _light_array:
  2906  00B7                     	ds	7
  2907                           
  2908                           	psect	inittext
  2909  07F4                     init_ram:
  2910  07F4  00FE               	movwf	btemp
  2911  07F5                     initloop:
  2912  07F5  0012               	moviw fsr0++
  2913  07F6  001E               	movwi fsr1++
  2914  07F7  3001               	movlw	1
  2915  07F8  02FE               	subwf	btemp,f
  2916  07F9  3000               	movlw	0
  2917  07FA  3BFF               	subwfb	btemp+1,f
  2918  07FB  087F               	movf	btemp+1,w
  2919  07FC  047E               	iorwf	btemp,w
  2920  07FD  1D03               	skipz
  2921  07FE  2FF5               	goto	initloop
  2922  07FF  3400               	retlw	0
  2923                           
  2924                           	psect	cstackBANK1
  2925  00A0                     __pcstackBANK1:
  2926  00A0                     ??_SPI1_Initialize:
  2927  00A0                     ??_PIN_MANAGER_Initialize:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930  00A0                     ??_OSCILLATOR_Initialize:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933  00A0                     ??_WDT_Initialize:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  00A0                     ??_PWM3_Initialize:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  00A0                     ??_TMR2_Initialize:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  00A0                     ?_TMR0_SetInterruptHandler:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  00A0                     ?_TMR1_SetInterruptHandler:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948  00A0                     ?_playNote:	
  2949                           ; 1 bytes @ 0x0
  2950                           
  2951  00A0                     ??_SPI1_ExchangeByte:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  00A0                     ?_INT_SetInterruptHandler:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  00A0                     SPI1_ExchangeByte@data:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960  00A0                     playNote@prescale:	
  2961                           ; 1 bytes @ 0x0
  2962                           
  2963  00A0                     INT_SetInterruptHandler@InterruptHandler:	
  2964                           ; 1 bytes @ 0x0
  2965                           
  2966  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  2967                           ; 2 bytes @ 0x0
  2968                           
  2969  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  2970                           ; 2 bytes @ 0x0
  2971                           
  2972                           
  2973                           ; 2 bytes @ 0x0
  2974  00A0                     	ds	1
  2975  00A1                     ?_shiftBytes:
  2976  00A1                     ??_playNote:	
  2977                           ; 1 bytes @ 0x1
  2978                           
  2979  00A1                     shiftBytes@lowSide:	
  2980                           ; 1 bytes @ 0x1
  2981                           
  2982                           
  2983                           ; 1 bytes @ 0x1
  2984  00A1                     	ds	1
  2985  00A2                     ??_TMR1_Initialize:
  2986  00A2                     ??_EXT_INT_Initialize:	
  2987                           ; 1 bytes @ 0x2
  2988                           
  2989  00A2                     ??_TMR0_Initialize:	
  2990                           ; 1 bytes @ 0x2
  2991                           
  2992  00A2                     ??_TMR0_SetInterruptHandler:	
  2993                           ; 1 bytes @ 0x2
  2994                           
  2995  00A2                     ??_TMR1_SetInterruptHandler:	
  2996                           ; 1 bytes @ 0x2
  2997                           
  2998  00A2                     ??_shiftBytes:	
  2999                           ; 1 bytes @ 0x2
  3000                           
  3001  00A2                     ??_SYSTEM_Initialize:	
  3002                           ; 1 bytes @ 0x2
  3003                           
  3004  00A2                     ??_INT_SetInterruptHandler:	
  3005                           ; 1 bytes @ 0x2
  3006                           
  3007  00A2                     playNote@note:	
  3008                           ; 1 bytes @ 0x2
  3009                           
  3010  00A2                     shiftBytes@highSide:	
  3011                           ; 1 bytes @ 0x2
  3012                           
  3013                           
  3014                           ; 1 bytes @ 0x2
  3015  00A2                     	ds	1
  3016  00A3                     ??_displayMatrix:
  3017                           
  3018                           ; 1 bytes @ 0x3
  3019  00A3                     	ds	2
  3020  00A5                     displayMatrix@states:
  3021                           
  3022                           ; 1 bytes @ 0x5
  3023  00A5                     	ds	1
  3024  00A6                     displayMatrix@i:
  3025                           
  3026                           ; 2 bytes @ 0x6
  3027  00A6                     	ds	2
  3028  00A8                     displayMatrix@lowSide:
  3029                           
  3030                           ; 1 bytes @ 0x8
  3031  00A8                     	ds	1
  3032  00A9                     ??_main:
  3033                           
  3034                           ; 1 bytes @ 0x9
  3035  00A9                     	ds	5
  3036  00AE                     main@light:
  3037                           
  3038                           ; 1 bytes @ 0xE
  3039  00AE                     	ds	1
  3040  00AF                     main@j:
  3041                           
  3042                           ; 2 bytes @ 0xF
  3043  00AF                     	ds	2
  3044  00B1                     main@i:
  3045                           
  3046                           ; 2 bytes @ 0x11
  3047  00B1                     	ds	2
  3048  00B3                     main@j_1183:
  3049                           
  3050                           ; 2 bytes @ 0x13
  3051  00B3                     	ds	2
  3052  00B5                     main@j_1185:
  3053                           
  3054                           ; 2 bytes @ 0x15
  3055  00B5                     	ds	2
  3056                           
  3057                           	psect	cstackCOMMON
  3058  0070                     __pcstackCOMMON:
  3059  0070                     ?_SPI1_Initialize:
  3060  0070                     ?_PIN_MANAGER_Initialize:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063  0070                     ?_OSCILLATOR_Initialize:	
  3064                           ; 1 bytes @ 0x0
  3065                           
  3066  0070                     ?_WDT_Initialize:	
  3067                           ; 1 bytes @ 0x0
  3068                           
  3069  0070                     ?_PWM3_Initialize:	
  3070                           ; 1 bytes @ 0x0
  3071                           
  3072  0070                     ?_TMR2_Initialize:	
  3073                           ; 1 bytes @ 0x0
  3074                           
  3075  0070                     ?_TMR1_Initialize:	
  3076                           ; 1 bytes @ 0x0
  3077                           
  3078  0070                     ?_EXT_INT_Initialize:	
  3079                           ; 1 bytes @ 0x0
  3080                           
  3081  0070                     ?_TMR0_Initialize:	
  3082                           ; 1 bytes @ 0x0
  3083                           
  3084  0070                     ?_TMR0_ISR:	
  3085                           ; 1 bytes @ 0x0
  3086                           
  3087  0070                     ??_TMR0_ISR:	
  3088                           ; 1 bytes @ 0x0
  3089                           
  3090  0070                     ?_INT_ISR:	
  3091                           ; 1 bytes @ 0x0
  3092                           
  3093  0070                     ?_TMR1_ISR:	
  3094                           ; 1 bytes @ 0x0
  3095                           
  3096  0070                     ?_INT_CallBack:	
  3097                           ; 1 bytes @ 0x0
  3098                           
  3099  0070                     ?_TMR0_DefaultInterruptHandler:	
  3100                           ; 1 bytes @ 0x0
  3101                           
  3102  0070                     ??_TMR0_DefaultInterruptHandler:	
  3103                           ; 1 bytes @ 0x0
  3104                           
  3105  0070                     ?_TMR1_DefaultInterruptHandler:	
  3106                           ; 1 bytes @ 0x0
  3107                           
  3108  0070                     ??_TMR1_DefaultInterruptHandler:	
  3109                           ; 1 bytes @ 0x0
  3110                           
  3111  0070                     ?_EXT_ISR:	
  3112                           ; 1 bytes @ 0x0
  3113                           
  3114  0070                     ??_EXT_ISR:	
  3115                           ; 1 bytes @ 0x0
  3116                           
  3117  0070                     ?_TMR0_ISR_:	
  3118                           ; 1 bytes @ 0x0
  3119                           
  3120  0070                     ??_TMR0_ISR_:	
  3121                           ; 1 bytes @ 0x0
  3122                           
  3123  0070                     ?_TMR1_ISR_:	
  3124                           ; 1 bytes @ 0x0
  3125                           
  3126  0070                     ?_displayMatrix:	
  3127                           ; 1 bytes @ 0x0
  3128                           
  3129  0070                     ?_SYSTEM_Initialize:	
  3130                           ; 1 bytes @ 0x0
  3131                           
  3132  0070                     ?_SPI1_ExchangeByte:	
  3133                           ; 1 bytes @ 0x0
  3134                           
  3135  0070                     ?_INTERRUPT_InterruptManager:	
  3136                           ; 1 bytes @ 0x0
  3137                           
  3138  0070                     ?_INT_DefaultInterruptHandler:	
  3139                           ; 1 bytes @ 0x0
  3140                           
  3141  0070                     ??_INT_DefaultInterruptHandler:	
  3142                           ; 1 bytes @ 0x0
  3143                           
  3144  0070                     ?_TMR0_Reload:	
  3145                           ; 1 bytes @ 0x0
  3146                           
  3147  0070                     ??_TMR0_Reload:	
  3148                           ; 1 bytes @ 0x0
  3149                           
  3150  0070                     ?_TMR1_WriteTimer:	
  3151                           ; 1 bytes @ 0x0
  3152                           
  3153  0070                     ?_main:	
  3154                           ; 1 bytes @ 0x0
  3155                           
  3156  0070                     ?i1_playNote:	
  3157                           ; 1 bytes @ 0x0
  3158                           
  3159  0070                     ?___awdiv:	
  3160                           ; 1 bytes @ 0x0
  3161                           
  3162  0070                     i1playNote@prescale:	
  3163                           ; 2 bytes @ 0x0
  3164                           
  3165  0070                     TMR1_WriteTimer@timerVal:	
  3166                           ; 1 bytes @ 0x0
  3167                           
  3168  0070                     ___awdiv@divisor:	
  3169                           ; 2 bytes @ 0x0
  3170                           
  3171                           
  3172                           ; 2 bytes @ 0x0
  3173  0070                     	ds	1
  3174  0071                     ??i1_playNote:
  3175  0071                     EXT_ISR@debounce:	
  3176                           ; 1 bytes @ 0x1
  3177                           
  3178                           
  3179                           ; 1 bytes @ 0x1
  3180  0071                     	ds	1
  3181  0072                     ??_INT_ISR:
  3182  0072                     ??_INT_CallBack:	
  3183                           ; 1 bytes @ 0x2
  3184                           
  3185  0072                     ??_TMR1_WriteTimer:	
  3186                           ; 1 bytes @ 0x2
  3187                           
  3188  0072                     i1playNote@note:	
  3189                           ; 1 bytes @ 0x2
  3190                           
  3191  0072                     ___awdiv@dividend:	
  3192                           ; 1 bytes @ 0x2
  3193                           
  3194                           
  3195                           ; 2 bytes @ 0x2
  3196  0072                     	ds	2
  3197  0074                     ??___awdiv:
  3198                           
  3199                           ; 1 bytes @ 0x4
  3200  0074                     	ds	1
  3201  0075                     ___awdiv@counter:
  3202                           
  3203                           ; 1 bytes @ 0x5
  3204  0075                     	ds	1
  3205  0076                     ___awdiv@sign:
  3206                           
  3207                           ; 1 bytes @ 0x6
  3208  0076                     	ds	1
  3209  0077                     ___awdiv@quotient:
  3210                           
  3211                           ; 2 bytes @ 0x7
  3212  0077                     	ds	2
  3213  0079                     ??_TMR1_ISR_:
  3214                           
  3215                           ; 1 bytes @ 0x9
  3216  0079                     	ds	5
  3217  007E                     ??_TMR1_ISR:
  3218  007E                     ??_INTERRUPT_InterruptManager:	
  3219                           ; 1 bytes @ 0xE
  3220                           
  3221                           
  3222                           	psect	cstackBANK0
  3223  0020                     __pcstackBANK0:	
  3224                           ; 1 bytes @ 0xE
  3225                           
  3226  0020                     TMR1_ISR_@lights:
  3227                           
  3228                           ; 1 bytes @ 0x0
  3229  0020                     	ds	1
  3230  0021                     TMR1_ISR_@lights_1202:
  3231                           
  3232                           ; 1 bytes @ 0x1
  3233  0021                     	ds	1
  3234  0022                     TMR1_ISR_@lights_1214:
  3235                           
  3236                           ; 1 bytes @ 0x2
  3237  0022                     	ds	1
  3238  0023                     TMR1_ISR_@jungle_sw:
  3239                           
  3240                           ; 1 bytes @ 0x3
  3241  0023                     	ds	1
  3242  0024                     TMR1_ISR_@i_1203:
  3243                           
  3244                           ; 2 bytes @ 0x4
  3245  0024                     	ds	2
  3246  0026                     TMR1_ISR_@i_1204:
  3247                           
  3248                           ; 2 bytes @ 0x6
  3249  0026                     	ds	2
  3250  0028                     TMR1_ISR_@i_1206:
  3251                           
  3252                           ; 2 bytes @ 0x8
  3253  0028                     	ds	2
  3254  002A                     TMR1_ISR_@i_1207:
  3255                           
  3256                           ; 2 bytes @ 0xA
  3257  002A                     	ds	2
  3258  002C                     TMR1_ISR_@i_1208:
  3259                           
  3260                           ; 2 bytes @ 0xC
  3261  002C                     	ds	2
  3262  002E                     TMR1_ISR_@i_1209:
  3263                           
  3264                           ; 2 bytes @ 0xE
  3265  002E                     	ds	2
  3266  0030                     TMR1_ISR_@i_1210:
  3267                           
  3268                           ; 2 bytes @ 0x10
  3269  0030                     	ds	2
  3270  0032                     TMR1_ISR_@i_1212:
  3271                           
  3272                           ; 2 bytes @ 0x12
  3273  0032                     	ds	2
  3274  0034                     TMR1_ISR_@i_1216:
  3275                           
  3276                           ; 2 bytes @ 0x14
  3277  0034                     	ds	2
  3278  0036                     TMR1_ISR_@i_1217:
  3279                           
  3280                           ; 2 bytes @ 0x16
  3281  0036                     	ds	2
  3282  0038                     TMR1_ISR_@i_1218:
  3283                           
  3284                           ; 2 bytes @ 0x18
  3285  0038                     	ds	2
  3286  003A                     TMR1_ISR_@i_1219:
  3287                           
  3288                           ; 2 bytes @ 0x1A
  3289  003A                     	ds	2
  3290  003C                     TMR1_ISR_@i_1200:
  3291                           
  3292                           ; 2 bytes @ 0x1C
  3293  003C                     	ds	2
  3294  003E                     TMR1_ISR_@i_1211:
  3295                           
  3296                           ; 2 bytes @ 0x1E
  3297  003E                     	ds	2
  3298  0040                     TMR1_ISR_@i:
  3299                           
  3300                           ; 2 bytes @ 0x20
  3301  0040                     	ds	2
  3302  0042                     TMR1_ISR_@i_1201:
  3303                           
  3304                           ; 2 bytes @ 0x22
  3305  0042                     	ds	2
  3306  0044                     TMR1_ISR_@i_1205:
  3307                           
  3308                           ; 2 bytes @ 0x24
  3309  0044                     	ds	2
  3310  0046                     TMR1_ISR_@i_1213:
  3311                           
  3312                           ; 2 bytes @ 0x26
  3313  0046                     	ds	2
  3314                           
  3315                           	psect	maintext
  3316  05C0                     __pmaintext:	
  3317 ;;
  3318 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3319 ;;
  3320 ;; *************** function _main *****************
  3321 ;; Defined at:
  3322 ;;		line 400 in file "main.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  light           1    0        unsigned char 
  3327 ;;  light           1   14[BANK1 ] unsigned char 
  3328 ;;  j               2   21[BANK1 ] int 
  3329 ;;  j               2   19[BANK1 ] int 
  3330 ;;  j               2   15[BANK1 ] int 
  3331 ;;  i               2   17[BANK1 ] int 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : B3F/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3343 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3344 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;Total ram usage:       14 bytes
  3346 ;; Hardware stack levels required when called: 8
  3347 ;; This function calls:
  3348 ;;		_EXT_INT_Initialize
  3349 ;;		_INT_SetInterruptHandler
  3350 ;;		_PWM3_Initialize
  3351 ;;		_SPI1_Initialize
  3352 ;;		_SYSTEM_Initialize
  3353 ;;		_TMR0_Initialize
  3354 ;;		_TMR0_SetInterruptHandler
  3355 ;;		_TMR1_Initialize
  3356 ;;		_TMR1_SetInterruptHandler
  3357 ;;		_TMR2_Initialize
  3358 ;;		_displayMatrix
  3359 ;;		_playNote
  3360 ;;		_shiftBytes
  3361 ;; This function is called by:
  3362 ;;		Startup code after reset
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _main
  3368  05C0                     _main:
  3369  05C0                     l3186:	
  3370                           ;incstack = 0
  3371                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3372                           
  3373                           
  3374                           ;main.c: 403:     SYSTEM_Initialize();
  3375  05C0  318B  231E  3185   	fcall	_SYSTEM_Initialize
  3376  05C3                     l3188:
  3377                           
  3378                           ;main.c: 409:     (INTCONbits.GIE = 1);
  3379  05C3  178B               	bsf	11,7	;volatile
  3380  05C4                     l3190:
  3381                           
  3382                           ;main.c: 412:     (INTCONbits.PEIE = 1);
  3383  05C4  170B               	bsf	11,6	;volatile
  3384                           
  3385                           ;main.c: 421:     SPI1_Initialize();
  3386  05C5  318A  22DB  3185   	fcall	_SPI1_Initialize
  3387  05C8                     l3192:
  3388                           
  3389                           ;main.c: 422:     SSP1CON1bits.SSPEN = 0;
  3390  05C8  0143               	movlb	3	; select bank3
  3391  05C9  1290               	bcf	16,5	;volatile
  3392  05CA                     l3194:
  3393                           
  3394                           ;main.c: 423:     TRISCbits.TRISC3 = 0;
  3395  05CA  0140               	movlb	0	; select bank0
  3396  05CB  1194               	bcf	20,3	;volatile
  3397  05CC                     l3196:
  3398                           
  3399                           ;main.c: 424:     TRISAbits.TRISA4 = 1;
  3400  05CC  1612               	bsf	18,4	;volatile
  3401  05CD                     l3198:
  3402                           
  3403                           ;main.c: 425:     TRISCbits.TRISC5 = 0;
  3404  05CD  1294               	bcf	20,5	;volatile
  3405  05CE                     l3200:
  3406                           
  3407                           ;main.c: 428:     SSP1CON1bits.SSPEN = 1;
  3408  05CE  0143               	movlb	3	; select bank3
  3409  05CF  1690               	bsf	16,5	;volatile
  3410                           
  3411                           ;main.c: 431:     EXT_INT_Initialize();
  3412  05D0  318A  2291  3185   	fcall	_EXT_INT_Initialize
  3413                           
  3414                           ;main.c: 432:     INT_SetInterruptHandler(EXT_ISR);
  3415  05D3  30BB               	movlw	low _EXT_ISR
  3416  05D4  0141               	movlb	1	; select bank1
  3417  05D5  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  3418  05D6  300B               	movlw	high _EXT_ISR
  3419  05D7  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3420  05D8  318A  224A  3185   	fcall	_INT_SetInterruptHandler
  3421  05DB                     l3202:
  3422                           
  3423                           ;main.c: 433:     PIE0bits.INTE = 1;
  3424  05DB  014E               	movlb	14	; select bank14
  3425  05DC  1416               	bsf	22,0	;volatile
  3426                           
  3427                           ;main.c: 436:     TMR0_Initialize();
  3428  05DD  318B  233A  3185   	fcall	_TMR0_Initialize
  3429                           
  3430                           ;main.c: 437:     TMR0_SetInterruptHandler(TMR0_ISR_);
  3431  05E0  3040               	movlw	low _TMR0_ISR_
  3432  05E1  0141               	movlb	1	; select bank1
  3433  05E2  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3434  05E3  300A               	movlw	high _TMR0_ISR_
  3435  05E4  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3436  05E5  318A  2256  3185   	fcall	_TMR0_SetInterruptHandler
  3437  05E8                     l3204:
  3438                           
  3439                           ;main.c: 438:     T0CON0bits.T0EN = 0;
  3440  05E8  014B               	movlb	11	; select bank11
  3441  05E9  139E               	bcf	30,7	;volatile
  3442                           
  3443                           ;main.c: 441:     TMR1_Initialize();
  3444  05EA  318B  2377  3185   	fcall	_TMR1_Initialize
  3445                           
  3446                           ;main.c: 442:     TMR1_SetInterruptHandler(TMR1_ISR_);
  3447  05ED  306D               	movlw	low _TMR1_ISR_
  3448  05EE  0141               	movlb	1	; select bank1
  3449  05EF  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  3450  05F0  3000               	movlw	high _TMR1_ISR_
  3451  05F1  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3452  05F2  318A  227B  3185   	fcall	_TMR1_SetInterruptHandler
  3453  05F5                     l3206:
  3454                           
  3455                           ;main.c: 443:     T1CONbits.TMR1ON = 0;
  3456  05F5  0144               	movlb	4	; select bank4
  3457  05F6  100E               	bcf	14,0	;volatile
  3458                           
  3459                           ;main.c: 446:     TMR2_Initialize();
  3460  05F7  318A  229F  3185   	fcall	_TMR2_Initialize
  3461  05FA                     l3208:
  3462                           
  3463                           ;main.c: 447:     T2CONbits.TMR2ON = 0;
  3464  05FA  0145               	movlb	5	; select bank5
  3465  05FB  138E               	bcf	14,7	;volatile
  3466                           
  3467                           ;main.c: 450:     PWM3_Initialize();
  3468  05FC  318A  226A  3185   	fcall	_PWM3_Initialize
  3469  05FF                     l3210:
  3470  05FF  0140               	movlb	0	; select bank0
  3471  0600  111A               	bcf	26,2	;volatile
  3472  0601                     l3212:
  3473  0601  121A               	bcf	26,4	;volatile
  3474  0602                     l3214:
  3475  0602  101A               	bcf	26,0	;volatile
  3476  0603                     l3216:
  3477                           
  3478                           ;main.c: 460:     for (int i = 0; i < 15; i++)
  3479  0603  0141               	movlb	1	; select bank1
  3480  0604  01B1               	clrf	main@i^(0+128)
  3481  0605  01B2               	clrf	(main@i+1)^(0+128)
  3482  0606                     l3222:
  3483                           
  3484                           ;main.c: 461:     {;main.c: 462:         for (int j = 0; j < 12; j++)
  3485  0606  0141               	movlb	1	; select bank1
  3486  0607  01AF               	clrf	main@j^(0+128)
  3487  0608  01B0               	clrf	(main@j+1)^(0+128)
  3488  0609                     l3228:
  3489                           
  3490                           ;main.c: 463:         {;main.c: 464:             displayMatrix(light_array);
  3491  0609  30B7               	movlw	(low (_light_array| 0))& (0+255)
  3492  060A  318B  23F1  3185   	fcall	_displayMatrix
  3493  060D                     l3230:
  3494                           
  3495                           ;main.c: 465:         }
  3496  060D  3001               	movlw	1
  3497  060E  0141               	movlb	1	; select bank1
  3498  060F  07AF               	addwf	main@j^(0+128),f
  3499  0610  3000               	movlw	0
  3500  0611  3DB0               	addwfc	(main@j+1)^(0+128),f
  3501  0612                     l3232:
  3502  0612  0830               	movf	(main@j+1)^(0+128),w
  3503  0613  3A80               	xorlw	128
  3504  0614  00A9               	movwf	??_main^(0+128)
  3505  0615  3080               	movlw	128
  3506  0616  0229               	subwf	??_main^(0+128),w
  3507  0617  1D03               	skipz
  3508  0618  2E1B               	goto	u2435
  3509  0619  300C               	movlw	12
  3510  061A  022F               	subwf	main@j^(0+128),w
  3511  061B                     u2435:
  3512  061B  1C03               	skipc
  3513  061C  2E1E               	goto	u2431
  3514  061D  2E1F               	goto	u2430
  3515  061E                     u2431:
  3516  061E  2E09               	goto	l3228
  3517  061F                     u2430:
  3518  061F                     l3234:
  3519                           
  3520                           ;main.c: 466:         if (i < 7)
  3521  061F  0141               	movlb	1	; select bank1
  3522  0620  0832               	movf	(main@i+1)^(0+128),w
  3523  0621  3A80               	xorlw	128
  3524  0622  00A9               	movwf	??_main^(0+128)
  3525  0623  3080               	movlw	128
  3526  0624  0229               	subwf	??_main^(0+128),w
  3527  0625  1D03               	skipz
  3528  0626  2E29               	goto	u2445
  3529  0627  3007               	movlw	7
  3530  0628  0231               	subwf	main@i^(0+128),w
  3531  0629                     u2445:
  3532  0629  1803               	skipnc
  3533  062A  2E2C               	goto	u2441
  3534  062B  2E2D               	goto	u2440
  3535  062C                     u2441:
  3536  062C  2E65               	goto	l3248
  3537  062D                     u2440:
  3538  062D                     l3236:
  3539                           
  3540                           ;main.c: 467:         {;main.c: 468:             for (int j = 0; j < 7; j++)
  3541  062D  0141               	movlb	1	; select bank1
  3542  062E  01B3               	clrf	main@j_1183^(0+128)
  3543  062F  01B4               	clrf	(main@j_1183+1)^(0+128)
  3544  0630                     l3242:
  3545                           
  3546                           ;main.c: 469:             {;main.c: 470:                 uint8_t light = (~light_array[j
      +                          ]) << 7;
  3547  0630  0141               	movlb	1	; select bank1
  3548  0631  0833               	movf	main@j_1183^(0+128),w
  3549  0632  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3550  0633  0086               	movwf	6
  3551  0634  0187               	clrf	7
  3552  0635  0901               	comf	1,w
  3553  0636  00A9               	movwf	??_main^(0+128)
  3554  0637  3006               	movlw	6
  3555  0638                     u2455:
  3556  0638  35A9               	lslf	??_main^(0+128),f
  3557  0639  3EFF               	addlw	-1
  3558  063A  1D03               	skipz
  3559  063B  2E38               	goto	u2455
  3560  063C  3529               	lslf	??_main^(0+128),w
  3561  063D  00AA               	movwf	(??_main+1)^(0+128)
  3562  063E  082A               	movf	(??_main+1)^(0+128),w
  3563  063F  00AE               	movwf	main@light^(0+128)
  3564                           
  3565                           ;main.c: 471:                 light_array[j] = (light_array[j] << 1) + (light >> 7);
  3566  0640  082E               	movf	main@light^(0+128),w
  3567  0641  00A9               	movwf	??_main^(0+128)
  3568  0642  3007               	movlw	7
  3569  0643                     u2465:
  3570  0643  36A9               	lsrf	??_main^(0+128),f
  3571  0644  0B89               	decfsz	9,f
  3572  0645  2E43               	goto	u2465
  3573  0646  0833               	movf	main@j_1183^(0+128),w
  3574  0647  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3575  0648  0086               	movwf	6
  3576  0649  0187               	clrf	7
  3577  064A  3501               	lslf	1,w
  3578  064B  0729               	addwf	??_main^(0+128),w
  3579  064C  00AA               	movwf	(??_main+1)^(0+128)
  3580  064D  0833               	movf	main@j_1183^(0+128),w
  3581  064E  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3582  064F  0086               	movwf	6
  3583  0650  0187               	clrf	7
  3584  0651  082A               	movf	(??_main+1)^(0+128),w
  3585  0652  0081               	movwf	1
  3586  0653                     l3244:
  3587                           
  3588                           ;main.c: 472:             }
  3589  0653  3001               	movlw	1
  3590  0654  07B3               	addwf	main@j_1183^(0+128),f
  3591  0655  3000               	movlw	0
  3592  0656  3DB4               	addwfc	(main@j_1183+1)^(0+128),f
  3593  0657                     l3246:
  3594  0657  0834               	movf	(main@j_1183+1)^(0+128),w
  3595  0658  3A80               	xorlw	128
  3596  0659  00A9               	movwf	??_main^(0+128)
  3597  065A  3080               	movlw	128
  3598  065B  0229               	subwf	??_main^(0+128),w
  3599  065C  1D03               	skipz
  3600  065D  2E60               	goto	u2475
  3601  065E  3007               	movlw	7
  3602  065F  0233               	subwf	main@j_1183^(0+128),w
  3603  0660                     u2475:
  3604  0660  1C03               	skipc
  3605  0661  2E63               	goto	u2471
  3606  0662  2E64               	goto	u2470
  3607  0663                     u2471:
  3608  0663  2E30               	goto	l3242
  3609  0664                     u2470:
  3610  0664  2E87               	goto	l3260
  3611  0665                     l3248:
  3612                           
  3613                           ;main.c: 475:         {;main.c: 476:             for (int j = 0; j < 7; j++)
  3614  0665  0141               	movlb	1	; select bank1
  3615  0666  01B5               	clrf	main@j_1185^(0+128)
  3616  0667  01B6               	clrf	(main@j_1185+1)^(0+128)
  3617  0668                     l3254:
  3618                           
  3619                           ;main.c: 479:                 light_array[j] = (light_array[j] << 1) + 1;
  3620  0668  0141               	movlb	1	; select bank1
  3621  0669  0835               	movf	main@j_1185^(0+128),w
  3622  066A  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3623  066B  0086               	movwf	6
  3624  066C  0187               	clrf	7
  3625  066D  1403               	setc
  3626  066E  0D01               	rlf	1,w
  3627  066F  00A9               	movwf	??_main^(0+128)
  3628  0670  0835               	movf	main@j_1185^(0+128),w
  3629  0671  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3630  0672  0086               	movwf	6
  3631  0673  0187               	clrf	7
  3632  0674  0829               	movf	??_main^(0+128),w
  3633  0675  0081               	movwf	1
  3634  0676                     l3256:
  3635                           
  3636                           ;main.c: 480:             }
  3637  0676  3001               	movlw	1
  3638  0677  07B5               	addwf	main@j_1185^(0+128),f
  3639  0678  3000               	movlw	0
  3640  0679  3DB6               	addwfc	(main@j_1185+1)^(0+128),f
  3641  067A                     l3258:
  3642  067A  0836               	movf	(main@j_1185+1)^(0+128),w
  3643  067B  3A80               	xorlw	128
  3644  067C  00A9               	movwf	??_main^(0+128)
  3645  067D  3080               	movlw	128
  3646  067E  0229               	subwf	??_main^(0+128),w
  3647  067F  1D03               	skipz
  3648  0680  2E83               	goto	u2485
  3649  0681  3007               	movlw	7
  3650  0682  0235               	subwf	main@j_1185^(0+128),w
  3651  0683                     u2485:
  3652  0683  1C03               	skipc
  3653  0684  2E86               	goto	u2481
  3654  0685  2E87               	goto	u2480
  3655  0686                     u2481:
  3656  0686  2E68               	goto	l3254
  3657  0687                     u2480:
  3658  0687                     l3260:
  3659                           
  3660                           ;main.c: 482:     }
  3661  0687  3001               	movlw	1
  3662  0688  0141               	movlb	1	; select bank1
  3663  0689  07B1               	addwf	main@i^(0+128),f
  3664  068A  3000               	movlw	0
  3665  068B  3DB2               	addwfc	(main@i+1)^(0+128),f
  3666  068C  0832               	movf	(main@i+1)^(0+128),w
  3667  068D  3A80               	xorlw	128
  3668  068E  00A9               	movwf	??_main^(0+128)
  3669  068F  3080               	movlw	128
  3670  0690  0229               	subwf	??_main^(0+128),w
  3671  0691  1D03               	skipz
  3672  0692  2E95               	goto	u2495
  3673  0693  300F               	movlw	15
  3674  0694  0231               	subwf	main@i^(0+128),w
  3675  0695                     u2495:
  3676  0695  1C03               	skipc
  3677  0696  2E98               	goto	u2491
  3678  0697  2E99               	goto	u2490
  3679  0698                     u2491:
  3680  0698  2E06               	goto	l3222
  3681  0699                     u2490:
  3682  0699                     l535:	
  3683                           ;main.c: 490:     while (1)
  3684                           
  3685                           
  3686                           ;main.c: 491:     {;main.c: 492:         T0CON0bits.T0EN = 1;
  3687  0699  014B               	movlb	11	; select bank11
  3688  069A  179E               	bsf	30,7	;volatile
  3689  069B                     l3262:
  3690                           
  3691                           ;main.c: 493:         shiftBytes(0xFE, 0x07);
  3692  069B  3007               	movlw	7
  3693  069C  0141               	movlb	1	; select bank1
  3694  069D  00A9               	movwf	??_main^(0+128)
  3695  069E  0829               	movf	??_main^(0+128),w
  3696  069F  00A1               	movwf	shiftBytes@lowSide^(0+128)
  3697  06A0  30FE               	movlw	254
  3698  06A1  318A  22BB  3185   	fcall	_shiftBytes
  3699  06A4                     l3264:
  3700  06A4  0140               	movlb	0	; select bank0
  3701  06A5  111A               	bcf	26,2	;volatile
  3702  06A6                     l3266:
  3703  06A6  101A               	bcf	26,0	;volatile
  3704  06A7                     l3268:
  3705                           
  3706                           ;main.c: 496:         if (presses && TMR0_complete)
  3707  06A7  0141               	movlb	1	; select bank1
  3708  06A8  0847               	movf	_presses^(0+128),w
  3709  06A9  1903               	btfsc	3,2
  3710  06AA  2EAC               	goto	u2501
  3711  06AB  2EAD               	goto	u2500
  3712  06AC                     u2501:
  3713  06AC  2FB1               	goto	l3312
  3714  06AD                     u2500:
  3715  06AD                     l3270:
  3716  06AD  0849               	movf	_TMR0_complete^(0+128),w
  3717  06AE  1903               	btfsc	3,2
  3718  06AF  2EB1               	goto	u2511
  3719  06B0  2EB2               	goto	u2510
  3720  06B1                     u2511:
  3721  06B1  2FB1               	goto	l3312
  3722  06B2                     u2510:
  3723  06B2                     l3272:
  3724                           
  3725                           ;main.c: 497:         {;main.c: 498:             T0CON0bits.T0EN = 0;
  3726  06B2  014B               	movlb	11	; select bank11
  3727  06B3  139E               	bcf	30,7	;volatile
  3728                           
  3729                           ;main.c: 501:             switch (presses)
  3730  06B4  2F19               	goto	l3292
  3731  06B5                     l3274:
  3732                           
  3733                           ;main.c: 504:                     light_array[0] = 0x88;
  3734  06B5  3088               	movlw	136
  3735  06B6  00A9               	movwf	??_main^(0+128)
  3736  06B7  0829               	movf	??_main^(0+128),w
  3737  06B8  00B7               	movwf	_light_array^(0+128)
  3738                           
  3739                           ;main.c: 505:                     light_array[1] = 0x44;
  3740  06B9  3044               	movlw	68
  3741  06BA  00A9               	movwf	??_main^(0+128)
  3742  06BB  0829               	movf	??_main^(0+128),w
  3743  06BC  00B8               	movwf	(_light_array^(0+128)+1)
  3744                           
  3745                           ;main.c: 506:                     light_array[2] = 0x22;
  3746  06BD  3022               	movlw	34
  3747  06BE  00A9               	movwf	??_main^(0+128)
  3748  06BF  0829               	movf	??_main^(0+128),w
  3749  06C0  00B9               	movwf	(_light_array^(0+128)+2)
  3750                           
  3751                           ;main.c: 507:                     light_array[3] = 0x11;
  3752  06C1  3011               	movlw	17
  3753  06C2  00A9               	movwf	??_main^(0+128)
  3754  06C3  0829               	movf	??_main^(0+128),w
  3755  06C4  00BA               	movwf	(_light_array^(0+128)+3)
  3756                           
  3757                           ;main.c: 508:                     light_array[4] = 0x88;
  3758  06C5  3088               	movlw	136
  3759  06C6  00A9               	movwf	??_main^(0+128)
  3760  06C7  0829               	movf	??_main^(0+128),w
  3761  06C8  00BB               	movwf	(_light_array^(0+128)+4)
  3762                           
  3763                           ;main.c: 509:                     light_array[5] = 0x44;
  3764  06C9  3044               	movlw	68
  3765  06CA  00A9               	movwf	??_main^(0+128)
  3766  06CB  0829               	movf	??_main^(0+128),w
  3767  06CC  00BC               	movwf	(_light_array^(0+128)+5)
  3768                           
  3769                           ;main.c: 510:                     light_array[6] = 0x22;
  3770  06CD  3022               	movlw	34
  3771  06CE  00A9               	movwf	??_main^(0+128)
  3772  06CF  0829               	movf	??_main^(0+128),w
  3773  06D0  00BD               	movwf	(_light_array^(0+128)+6)
  3774  06D1                     l3276:
  3775                           
  3776                           ;main.c: 511:                     silent_night_playing = 1;
  3777  06D1  0140               	movlb	0	; select bank0
  3778  06D2  01D3               	clrf	_silent_night_playing
  3779  06D3  0AD3               	incf	_silent_night_playing,f
  3780                           
  3781                           ;main.c: 512:                     break;
  3782  06D4  2F2D               	goto	l543
  3783  06D5                     l3278:
  3784                           
  3785                           ;main.c: 533:                     light_array[0] = 0xFF;
  3786  06D5  30FF               	movlw	255
  3787  06D6  00A9               	movwf	??_main^(0+128)
  3788  06D7  0829               	movf	??_main^(0+128),w
  3789  06D8  00B7               	movwf	_light_array^(0+128)
  3790                           
  3791                           ;main.c: 534:                     light_array[1] = 0xFF;
  3792  06D9  30FF               	movlw	255
  3793  06DA  00A9               	movwf	??_main^(0+128)
  3794  06DB  0829               	movf	??_main^(0+128),w
  3795  06DC  00B8               	movwf	(_light_array^(0+128)+1)
  3796                           
  3797                           ;main.c: 535:                     light_array[2] = 0xFF;
  3798  06DD  30FF               	movlw	255
  3799  06DE  00A9               	movwf	??_main^(0+128)
  3800  06DF  0829               	movf	??_main^(0+128),w
  3801  06E0  00B9               	movwf	(_light_array^(0+128)+2)
  3802                           
  3803                           ;main.c: 536:                     light_array[3] = 0xFF;
  3804  06E1  30FF               	movlw	255
  3805  06E2  00A9               	movwf	??_main^(0+128)
  3806  06E3  0829               	movf	??_main^(0+128),w
  3807  06E4  00BA               	movwf	(_light_array^(0+128)+3)
  3808                           
  3809                           ;main.c: 537:                     light_array[4] = 0xFF;
  3810  06E5  30FF               	movlw	255
  3811  06E6  00A9               	movwf	??_main^(0+128)
  3812  06E7  0829               	movf	??_main^(0+128),w
  3813  06E8  00BB               	movwf	(_light_array^(0+128)+4)
  3814                           
  3815                           ;main.c: 538:                     light_array[5] = 0xFF;
  3816  06E9  30FF               	movlw	255
  3817  06EA  00A9               	movwf	??_main^(0+128)
  3818  06EB  0829               	movf	??_main^(0+128),w
  3819  06EC  00BC               	movwf	(_light_array^(0+128)+5)
  3820                           
  3821                           ;main.c: 539:                     light_array[6] = 0xFF;
  3822  06ED  30FF               	movlw	255
  3823  06EE  00A9               	movwf	??_main^(0+128)
  3824  06EF  0829               	movf	??_main^(0+128),w
  3825  06F0  00BD               	movwf	(_light_array^(0+128)+6)
  3826  06F1                     l3280:
  3827                           
  3828                           ;main.c: 552:                     song2_playing = 1;
  3829  06F1  0140               	movlb	0	; select bank0
  3830  06F2  01D1               	clrf	_song2_playing
  3831  06F3  0AD1               	incf	_song2_playing,f
  3832                           
  3833                           ;main.c: 553:                     break;
  3834  06F4  2F2D               	goto	l543
  3835  06F5                     l3282:
  3836                           
  3837                           ;main.c: 575:                     light_array[0] = 0xFF;
  3838  06F5  30FF               	movlw	255
  3839  06F6  00A9               	movwf	??_main^(0+128)
  3840  06F7  0829               	movf	??_main^(0+128),w
  3841  06F8  00B7               	movwf	_light_array^(0+128)
  3842                           
  3843                           ;main.c: 576:                     light_array[1] = 0xFF;
  3844  06F9  30FF               	movlw	255
  3845  06FA  00A9               	movwf	??_main^(0+128)
  3846  06FB  0829               	movf	??_main^(0+128),w
  3847  06FC  00B8               	movwf	(_light_array^(0+128)+1)
  3848                           
  3849                           ;main.c: 577:                     light_array[2] = 0xFF;
  3850  06FD  30FF               	movlw	255
  3851  06FE  00A9               	movwf	??_main^(0+128)
  3852  06FF  0829               	movf	??_main^(0+128),w
  3853  0700  00B9               	movwf	(_light_array^(0+128)+2)
  3854                           
  3855                           ;main.c: 578:                     light_array[3] = 0xFF;
  3856  0701  30FF               	movlw	255
  3857  0702  00A9               	movwf	??_main^(0+128)
  3858  0703  0829               	movf	??_main^(0+128),w
  3859  0704  00BA               	movwf	(_light_array^(0+128)+3)
  3860                           
  3861                           ;main.c: 579:                     light_array[4] = 0xFF;
  3862  0705  30FF               	movlw	255
  3863  0706  00A9               	movwf	??_main^(0+128)
  3864  0707  0829               	movf	??_main^(0+128),w
  3865  0708  00BB               	movwf	(_light_array^(0+128)+4)
  3866                           
  3867                           ;main.c: 580:                     light_array[5] = 0xFF;
  3868  0709  30FF               	movlw	255
  3869  070A  00A9               	movwf	??_main^(0+128)
  3870  070B  0829               	movf	??_main^(0+128),w
  3871  070C  00BC               	movwf	(_light_array^(0+128)+5)
  3872                           
  3873                           ;main.c: 581:                     light_array[6] = 0xFF;
  3874  070D  30FF               	movlw	255
  3875  070E  00A9               	movwf	??_main^(0+128)
  3876  070F  0829               	movf	??_main^(0+128),w
  3877  0710  00BD               	movwf	(_light_array^(0+128)+6)
  3878  0711                     l3284:
  3879                           
  3880                           ;main.c: 582:                     jungle_count = 0;
  3881  0711  0140               	movlb	0	; select bank0
  3882  0712  01CF               	clrf	_jungle_count
  3883  0713                     l3286:
  3884                           
  3885                           ;main.c: 583:                     jungle_bool = 0;
  3886  0713  0141               	movlb	1	; select bank1
  3887  0714  01C6               	clrf	_jungle_bool^(0+128)
  3888  0715                     l3288:
  3889                           
  3890                           ;main.c: 586:                     song3_playing = 1;
  3891  0715  0140               	movlb	0	; select bank0
  3892  0716  01D2               	clrf	_song3_playing
  3893  0717  0AD2               	incf	_song3_playing,f
  3894                           
  3895                           ;main.c: 587:                     break;
  3896  0718  2F2D               	goto	l543
  3897  0719                     l3292:
  3898  0719  0141               	movlb	1	; select bank1
  3899  071A  0847               	movf	_presses^(0+128),w
  3900  071B  00A9               	movwf	??_main^(0+128)
  3901  071C  01AA               	clrf	(??_main^(0+128)+1)
  3902                           
  3903                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3904                           ; Switch size 1, requested type "simple"
  3905                           ; Number of cases is 1, Range of values is 0 to 0
  3906                           ; switch strategies available:
  3907                           ; Name         Instructions Cycles
  3908                           ; simple_byte            4     3 (average)
  3909                           ; direct_byte            8     6 (fixed)
  3910                           ; jumptable            260     6 (fixed)
  3911                           ;	Chosen strategy is simple_byte
  3912  071D  082A               	movf	(??_main+1)^(0+128),w
  3913  071E  3A00               	xorlw	0	; case 0
  3914  071F  1903               	skipnz
  3915  0720  2F22               	goto	l3378
  3916  0721  2F2D               	goto	l543
  3917  0722                     l3378:
  3918                           
  3919                           ; Switch size 1, requested type "simple"
  3920                           ; Number of cases is 3, Range of values is 1 to 3
  3921                           ; switch strategies available:
  3922                           ; Name         Instructions Cycles
  3923                           ; simple_byte           10     6 (average)
  3924                           ; direct_byte           15     9 (fixed)
  3925                           ; jumptable            263     9 (fixed)
  3926                           ;	Chosen strategy is simple_byte
  3927  0722  0829               	movf	??_main^(0+128),w
  3928  0723  3A01               	xorlw	1	; case 1
  3929  0724  1903               	skipnz
  3930  0725  2EB5               	goto	l3274
  3931  0726  3A03               	xorlw	3	; case 2
  3932  0727  1903               	skipnz
  3933  0728  2ED5               	goto	l3278
  3934  0729  3A01               	xorlw	1	; case 3
  3935  072A  1903               	skipnz
  3936  072B  2EF5               	goto	l3282
  3937  072C  2F2D               	goto	l543
  3938  072D                     l543:
  3939                           
  3940                           ;main.c: 589:             T1CONbits.TMR1ON = 1;
  3941  072D  0144               	movlb	4	; select bank4
  3942  072E  140E               	bsf	14,0	;volatile
  3943                           
  3944                           ;main.c: 590:             T2CONbits.TMR2ON = 1;
  3945  072F  0145               	movlb	5	; select bank5
  3946  0730  178E               	bsf	14,7	;volatile
  3947                           
  3948                           ;main.c: 593:             while (presses == 1)
  3949  0731  2F52               	goto	l3296
  3950  0732                     l3294:
  3951                           
  3952                           ;main.c: 594:             {;main.c: 595:                 playNote(silent_night[count], s
      +                          ilent_night_pre[count]);
  3953  0732  3066               	movlw	102
  3954  0733  00A9               	movwf	??_main^(0+128)
  3955  0734  3023               	movlw	35
  3956  0735  00AA               	movwf	(??_main^(0+128)+1)
  3957  0736  0844               	movf	_count^(0+128),w
  3958  0737  0729               	addwf	??_main^(0+128),w
  3959  0738  0086               	movwf	6
  3960  0739  0845               	movf	(_count+1)^(0+128),w
  3961  073A  3D2A               	addwfc	(??_main+1)^(0+128),w
  3962  073B  0087               	movwf	7
  3963  073C  0801               	movf	1,w
  3964  073D  00AB               	movwf	(??_main+2)^(0+128)
  3965  073E  082B               	movf	(??_main+2)^(0+128),w
  3966  073F  00A0               	movwf	playNote@prescale^(0+128)
  3967  0740  30DB               	movlw	219
  3968  0741  00AC               	movwf	(??_main+3)^(0+128)
  3969  0742  3022               	movlw	34
  3970  0743  00AD               	movwf	((??_main+3)^(0+128)+1)
  3971  0744  0844               	movf	_count^(0+128),w
  3972  0745  072C               	addwf	(??_main+3)^(0+128),w
  3973  0746  0086               	movwf	6
  3974  0747  0845               	movf	(_count+1)^(0+128),w
  3975  0748  3D2D               	addwfc	(??_main+4)^(0+128),w
  3976  0749  0087               	movwf	7
  3977  074A  0801               	movf	1,w
  3978  074B  318B  2398  3185   	fcall	_playNote
  3979                           
  3980                           ;main.c: 596:                 displayMatrix(light_array);
  3981  074E  30B7               	movlw	(low (_light_array| 0))& (0+255)
  3982  074F  318B  23F1  3185   	fcall	_displayMatrix
  3983  0752                     l3296:
  3984                           
  3985                           ;main.c: 593:             while (presses == 1)
  3986  0752  0141               	movlb	1	; select bank1
  3987  0753  0347               	decf	_presses^(0+128),w
  3988  0754  1903               	btfsc	3,2
  3989  0755  2F57               	goto	u2521
  3990  0756  2F58               	goto	u2520
  3991  0757                     u2521:
  3992  0757  2F32               	goto	l3294
  3993  0758                     u2520:
  3994  0758  2F79               	goto	l3300
  3995  0759                     l3298:
  3996                           
  3997                           ;main.c: 600:             {;main.c: 626:                 playNote(song2[count], song2_pr
      +                          e[count]);
  3998  0759  304B               	movlw	75
  3999  075A  00A9               	movwf	??_main^(0+128)
  4000  075B  3022               	movlw	34
  4001  075C  00AA               	movwf	(??_main^(0+128)+1)
  4002  075D  0844               	movf	_count^(0+128),w
  4003  075E  0729               	addwf	??_main^(0+128),w
  4004  075F  0086               	movwf	6
  4005  0760  0845               	movf	(_count+1)^(0+128),w
  4006  0761  3D2A               	addwfc	(??_main+1)^(0+128),w
  4007  0762  0087               	movwf	7
  4008  0763  0801               	movf	1,w
  4009  0764  00AB               	movwf	(??_main+2)^(0+128)
  4010  0765  082B               	movf	(??_main+2)^(0+128),w
  4011  0766  00A0               	movwf	playNote@prescale^(0+128)
  4012  0767  30BA               	movlw	186
  4013  0768  00AC               	movwf	(??_main+3)^(0+128)
  4014  0769  3021               	movlw	33
  4015  076A  00AD               	movwf	((??_main+3)^(0+128)+1)
  4016  076B  0844               	movf	_count^(0+128),w
  4017  076C  072C               	addwf	(??_main+3)^(0+128),w
  4018  076D  0086               	movwf	6
  4019  076E  0845               	movf	(_count+1)^(0+128),w
  4020  076F  3D2D               	addwfc	(??_main+4)^(0+128),w
  4021  0770  0087               	movwf	7
  4022  0771  0801               	movf	1,w
  4023  0772  318B  2398  3185   	fcall	_playNote
  4024                           
  4025                           ;main.c: 627:                 displayMatrix(light_array);
  4026  0775  30B7               	movlw	(low (_light_array| 0))& (0+255)
  4027  0776  318B  23F1  3185   	fcall	_displayMatrix
  4028  0779                     l3300:
  4029                           
  4030                           ;main.c: 599:             while (presses == 2)
  4031  0779  3002               	movlw	2
  4032  077A  0141               	movlb	1	; select bank1
  4033  077B  0647               	xorwf	_presses^(0+128),w
  4034  077C  1903               	btfsc	3,2
  4035  077D  2F7F               	goto	u2531
  4036  077E  2F80               	goto	u2530
  4037  077F                     u2531:
  4038  077F  2F59               	goto	l3298
  4039  0780                     u2530:
  4040  0780  2FA1               	goto	l3304
  4041  0781                     l3302:
  4042                           
  4043                           ;main.c: 632:             {;main.c: 633:                 playNote(song3[count], song3_pr
      +                          e[count]);
  4044  0781  307E               	movlw	126
  4045  0782  00A9               	movwf	??_main^(0+128)
  4046  0783  3020               	movlw	32
  4047  0784  00AA               	movwf	(??_main^(0+128)+1)
  4048  0785  0844               	movf	_count^(0+128),w
  4049  0786  0729               	addwf	??_main^(0+128),w
  4050  0787  0086               	movwf	6
  4051  0788  0845               	movf	(_count+1)^(0+128),w
  4052  0789  3D2A               	addwfc	(??_main+1)^(0+128),w
  4053  078A  0087               	movwf	7
  4054  078B  0801               	movf	1,w
  4055  078C  00AB               	movwf	(??_main+2)^(0+128)
  4056  078D  082B               	movf	(??_main+2)^(0+128),w
  4057  078E  00A0               	movwf	playNote@prescale^(0+128)
  4058  078F  301C               	movlw	28
  4059  0790  00AC               	movwf	(??_main+3)^(0+128)
  4060  0791  3021               	movlw	33
  4061  0792  00AD               	movwf	((??_main+3)^(0+128)+1)
  4062  0793  0844               	movf	_count^(0+128),w
  4063  0794  072C               	addwf	(??_main+3)^(0+128),w
  4064  0795  0086               	movwf	6
  4065  0796  0845               	movf	(_count+1)^(0+128),w
  4066  0797  3D2D               	addwfc	(??_main+4)^(0+128),w
  4067  0798  0087               	movwf	7
  4068  0799  0801               	movf	1,w
  4069  079A  318B  2398  3185   	fcall	_playNote
  4070                           
  4071                           ;main.c: 634:                 displayMatrix(light_array);
  4072  079D  30B7               	movlw	(low (_light_array| 0))& (0+255)
  4073  079E  318B  23F1  3185   	fcall	_displayMatrix
  4074  07A1                     l3304:
  4075                           
  4076                           ;main.c: 631:             while (presses == 3)
  4077  07A1  3003               	movlw	3
  4078  07A2  0141               	movlb	1	; select bank1
  4079  07A3  0647               	xorwf	_presses^(0+128),w
  4080  07A4  1903               	btfsc	3,2
  4081  07A5  2FA7               	goto	u2541
  4082  07A6  2FA8               	goto	u2540
  4083  07A7                     u2541:
  4084  07A7  2F81               	goto	l3302
  4085  07A8                     u2540:
  4086  07A8                     l3306:
  4087                           
  4088                           ;main.c: 636:             presses = 0;
  4089  07A8  01C7               	clrf	_presses^(0+128)
  4090                           
  4091                           ;main.c: 637:             silent_night_playing = 0;
  4092  07A9  0140               	movlb	0	; select bank0
  4093  07AA  01D3               	clrf	_silent_night_playing
  4094                           
  4095                           ;main.c: 638:             song2_playing = 0;
  4096  07AB  01D1               	clrf	_song2_playing
  4097                           
  4098                           ;main.c: 639:             song3_playing = 0;
  4099  07AC  01D2               	clrf	_song3_playing
  4100  07AD                     l3308:
  4101                           
  4102                           ;main.c: 640:             T1CONbits.TMR1ON = 0;
  4103  07AD  0144               	movlb	4	; select bank4
  4104  07AE  100E               	bcf	14,0	;volatile
  4105  07AF                     l3310:
  4106                           
  4107                           ;main.c: 641:             T2CONbits.TMR2ON = 0;
  4108  07AF  0145               	movlb	5	; select bank5
  4109  07B0  138E               	bcf	14,7	;volatile
  4110  07B1                     l3312:
  4111                           
  4112                           ;main.c: 644:         if (TMR0_complete && (!presses))
  4113  07B1  0141               	movlb	1	; select bank1
  4114  07B2  0849               	movf	_TMR0_complete^(0+128),w
  4115  07B3  1903               	btfsc	3,2
  4116  07B4  2FB6               	goto	u2551
  4117  07B5  2FB7               	goto	u2550
  4118  07B6                     u2551:
  4119  07B6  2E99               	goto	l535
  4120  07B7                     u2550:
  4121  07B7                     l3314:
  4122  07B7  0847               	movf	_presses^(0+128),w
  4123  07B8  1D03               	btfss	3,2
  4124  07B9  2FBB               	goto	u2561
  4125  07BA  2FBC               	goto	u2560
  4126  07BB                     u2561:
  4127  07BB  2E99               	goto	l535
  4128  07BC                     u2560:
  4129  07BC                     l3316:
  4130                           
  4131                           ;main.c: 645:         {;main.c: 646:             T0CON0bits.T0EN = 0;
  4132  07BC  014B               	movlb	11	; select bank11
  4133  07BD  139E               	bcf	30,7	;volatile
  4134                           
  4135                           ;main.c: 647:             T1CONbits.TMR1ON = 0;
  4136  07BE  0144               	movlb	4	; select bank4
  4137  07BF  100E               	bcf	14,0	;volatile
  4138                           
  4139                           ;main.c: 648:             T2CONbits.TMR2ON = 0;
  4140  07C0  0145               	movlb	5	; select bank5
  4141  07C1  138E               	bcf	14,7	;volatile
  4142                           
  4143                           ;main.c: 649:             PIR0bits.INTF = 0;
  4144  07C2  014E               	movlb	14	; select bank14
  4145  07C3  100C               	bcf	12,0	;volatile
  4146                           
  4147                           ;main.c: 650:             PIE0bits.INTE = 1;
  4148  07C4  1416               	bsf	22,0	;volatile
  4149  07C5                     l556:	
  4150                           ;main.c: 651:             do { LATCbits.LATC2 = 1; } while(0);
  4151                           
  4152  07C5  0140               	movlb	0	; select bank0
  4153  07C6  151A               	bsf	26,2	;volatile
  4154  07C7                     l558:	
  4155                           ;main.c: 652:             do { LATCbits.LATC0 = 1; } while(0);
  4156                           
  4157  07C7  141A               	bsf	26,0	;volatile
  4158  07C8                     l559:
  4159  07C8  0063               	sleep	;# 
  4160  07C9  2E99               	goto	l535
  4161  07CA  3180  2831         	ljmp	start
  4162  07CC                     __end_of_main:
  4163                           
  4164                           	psect	text1
  4165  0B98                     __ptext1:	
  4166 ;; *************** function _playNote *****************
  4167 ;; Defined at:
  4168 ;;		line 1169 in file "main.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  note            1    wreg     unsigned char 
  4171 ;;  prescale        1    0[BANK1 ] unsigned char 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  note            1    2[BANK1 ] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4183 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4184 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4185 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4186 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;Total ram usage:        3 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 5
  4190 ;; This function calls:
  4191 ;;		Nothing
  4192 ;; This function is called by:
  4193 ;;		_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           
  4198                           ;psect for function _playNote
  4199  0B98                     _playNote:
  4200                           
  4201                           ;incstack = 0
  4202                           ; Regs used in _playNote: [wreg]
  4203                           ;playNote@note stored from wreg
  4204  0B98  0141               	movlb	1	; select bank1
  4205  0B99  00A2               	movwf	playNote@note^(0+128)
  4206  0B9A                     l2790:
  4207                           
  4208                           ;main.c: 1169: void playNote(uint8_t note, uint8_t prescale);main.c: 1170: {;main.c: 117
      +                          2:     if (note != last_note)
  4209  0B9A  0822               	movf	playNote@note^(0+128),w
  4210  0B9B  0140               	movlb	0	; select bank0
  4211  0B9C  0650               	xorwf	_last_note,w
  4212  0B9D  1903               	skipnz
  4213  0B9E  2BA0               	goto	u2131
  4214  0B9F  2BA1               	goto	u2130
  4215  0BA0                     u2131:
  4216  0BA0  2BA5               	goto	l687
  4217  0BA1                     u2130:
  4218  0BA1                     l2792:
  4219                           
  4220                           ;main.c: 1173:     {;main.c: 1174:         T2PR = note;
  4221  0BA1  0141               	movlb	1	; select bank1
  4222  0BA2  0822               	movf	playNote@note^(0+128),w
  4223  0BA3  0145               	movlb	5	; select bank5
  4224  0BA4  008D               	movwf	13	;volatile
  4225  0BA5                     l687:	
  4226                           ;main.c: 1175:     }
  4227                           
  4228                           
  4229                           ;main.c: 1177:     if (prescale != last_prescale)
  4230  0BA5  0141               	movlb	1	; select bank1
  4231  0BA6  0820               	movf	playNote@prescale^(0+128),w
  4232  0BA7  0648               	xorwf	_last_prescale^(0+128),w
  4233  0BA8  1903               	skipnz
  4234  0BA9  2BAB               	goto	u2141
  4235  0BAA  2BAC               	goto	u2140
  4236  0BAB                     u2141:
  4237  0BAB  2BAF               	goto	l688
  4238  0BAC                     u2140:
  4239  0BAC                     l2794:
  4240                           
  4241                           ;main.c: 1178:     {;main.c: 1179:         T2CON = prescale;
  4242  0BAC  0820               	movf	playNote@prescale^(0+128),w
  4243  0BAD  0145               	movlb	5	; select bank5
  4244  0BAE  008E               	movwf	14	;volatile
  4245  0BAF                     l688:	
  4246                           ;main.c: 1180:     }
  4247                           
  4248                           
  4249                           ;main.c: 1181:     last_note = note;
  4250  0BAF  0141               	movlb	1	; select bank1
  4251  0BB0  0822               	movf	playNote@note^(0+128),w
  4252  0BB1  00A1               	movwf	??_playNote^(0+128)
  4253  0BB2  0821               	movf	??_playNote^(0+128),w
  4254  0BB3  0140               	movlb	0	; select bank0
  4255  0BB4  00D0               	movwf	_last_note
  4256                           
  4257                           ;main.c: 1182:     last_prescale = prescale;
  4258  0BB5  0141               	movlb	1	; select bank1
  4259  0BB6  0820               	movf	playNote@prescale^(0+128),w
  4260  0BB7  00A1               	movwf	??_playNote^(0+128)
  4261  0BB8  0821               	movf	??_playNote^(0+128),w
  4262  0BB9  00C8               	movwf	_last_prescale^(0+128)
  4263  0BBA                     l689:
  4264  0BBA  0008               	return
  4265  0BBB                     __end_of_playNote:
  4266                           
  4267                           	psect	text2
  4268  0BF1                     __ptext2:	
  4269 ;; *************** function _displayMatrix *****************
  4270 ;; Defined at:
  4271 ;;		line 1207 in file "main.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  states          1    wreg     PTR unsigned char 
  4274 ;;		 -> light_array(7), 
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;  states          1    5[BANK1 ] PTR unsigned char 
  4277 ;;		 -> light_array(7), 
  4278 ;;  i               2    6[BANK1 ] int 
  4279 ;;  lowSide         1    8[BANK1 ] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;Total ram usage:        6 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 7
  4296 ;; This function calls:
  4297 ;;		_shiftBytes
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _displayMatrix
  4305  0BF1                     _displayMatrix:
  4306                           
  4307                           ;incstack = 0
  4308                           ; Regs used in _displayMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4309                           ;displayMatrix@states stored from wreg
  4310  0BF1  0141               	movlb	1	; select bank1
  4311  0BF2  00A5               	movwf	displayMatrix@states^(0+128)
  4312  0BF3                     l3150:
  4313                           
  4314                           ;main.c: 1207: void displayMatrix(uint8_t states[8]);main.c: 1208: {;main.c: 1211:     u
      +                          int8_t lowSide = 0x00;
  4315  0BF3  01A8               	clrf	displayMatrix@lowSide^(0+128)
  4316                           
  4317                           ;main.c: 1212:     for (int i = 0; i < 7; i++)
  4318  0BF4  01A6               	clrf	displayMatrix@i^(0+128)
  4319  0BF5  01A7               	clrf	(displayMatrix@i+1)^(0+128)
  4320  0BF6                     l3156:
  4321                           
  4322                           ;main.c: 1213:     {;main.c: 1214:         if (!lowSide)
  4323  0BF6  0141               	movlb	1	; select bank1
  4324  0BF7  0828               	movf	displayMatrix@lowSide^(0+128),w
  4325  0BF8  1D03               	btfss	3,2
  4326  0BF9  2BFB               	goto	u2391
  4327  0BFA  2BFC               	goto	u2390
  4328  0BFB                     u2391:
  4329  0BFB  2C01               	goto	l3160
  4330  0BFC                     u2390:
  4331  0BFC                     l3158:
  4332                           
  4333                           ;main.c: 1215:         {;main.c: 1216:             lowSide++;
  4334  0BFC  3001               	movlw	1
  4335  0BFD  00A3               	movwf	??_displayMatrix^(0+128)
  4336  0BFE  0823               	movf	??_displayMatrix^(0+128),w
  4337  0BFF  07A8               	addwf	displayMatrix@lowSide^(0+128),f
  4338                           
  4339                           ;main.c: 1217:         }
  4340  0C00  2C05               	goto	l3162
  4341  0C01                     l3160:
  4342                           
  4343                           ;main.c: 1219:         {;main.c: 1220:             lowSide = lowSide << 1;
  4344  0C01  3528               	lslf	displayMatrix@lowSide^(0+128),w
  4345  0C02  00A3               	movwf	??_displayMatrix^(0+128)
  4346  0C03  0823               	movf	??_displayMatrix^(0+128),w
  4347  0C04  00A8               	movwf	displayMatrix@lowSide^(0+128)
  4348  0C05                     l3162:
  4349                           
  4350                           ;main.c: 1223:         shiftBytes(states[i], lowSide);
  4351  0C05  0828               	movf	displayMatrix@lowSide^(0+128),w
  4352  0C06  00A3               	movwf	??_displayMatrix^(0+128)
  4353  0C07  0823               	movf	??_displayMatrix^(0+128),w
  4354  0C08  00A1               	movwf	shiftBytes@lowSide^(0+128)
  4355  0C09  0826               	movf	displayMatrix@i^(0+128),w
  4356  0C0A  0725               	addwf	displayMatrix@states^(0+128),w
  4357  0C0B  00A4               	movwf	(??_displayMatrix+1)^(0+128)
  4358  0C0C  0824               	movf	(??_displayMatrix+1)^(0+128),w
  4359  0C0D  0086               	movwf	6
  4360  0C0E  0187               	clrf	7
  4361  0C0F  0801               	movf	1,w
  4362  0C10  318A  22BB  318B   	fcall	_shiftBytes
  4363  0C13                     l3164:
  4364                           
  4365                           ;main.c: 1224:         _delay((unsigned long)((1)*(8000000/4000.0)));
  4366  0C13  3003               	movlw	3
  4367  0C14  0141               	movlb	1	; select bank1
  4368  0C15  00A3               	movwf	??_displayMatrix^(0+128)
  4369  0C16  3097               	movlw	151
  4370  0C17                     u2577:
  4371  0C17  0B89               	decfsz	9,f
  4372  0C18  2C17               	goto	u2577
  4373  0C19  0BA3               	decfsz	??_displayMatrix^(0+128),f
  4374  0C1A  2C17               	goto	u2577
  4375  0C1B  3200               	nop2
  4376  0C1C                     l3166:
  4377                           
  4378                           ;main.c: 1225:     }
  4379  0C1C  3001               	movlw	1
  4380  0C1D  0141               	movlb	1	; select bank1
  4381  0C1E  07A6               	addwf	displayMatrix@i^(0+128),f
  4382  0C1F  3000               	movlw	0
  4383  0C20  3DA7               	addwfc	(displayMatrix@i+1)^(0+128),f
  4384  0C21                     l3168:
  4385  0C21  0827               	movf	(displayMatrix@i+1)^(0+128),w
  4386  0C22  3A80               	xorlw	128
  4387  0C23  00A3               	movwf	??_displayMatrix^(0+128)
  4388  0C24  3080               	movlw	128
  4389  0C25  0223               	subwf	??_displayMatrix^(0+128),w
  4390  0C26  1D03               	skipz
  4391  0C27  2C2A               	goto	u2405
  4392  0C28  3007               	movlw	7
  4393  0C29  0226               	subwf	displayMatrix@i^(0+128),w
  4394  0C2A                     u2405:
  4395  0C2A  1C03               	skipc
  4396  0C2B  2C2D               	goto	u2401
  4397  0C2C  2C2E               	goto	u2400
  4398  0C2D                     u2401:
  4399  0C2D  2BF6               	goto	l3156
  4400  0C2E                     u2400:
  4401  0C2E                     l710:
  4402  0C2E  0008               	return
  4403  0C2F                     __end_of_displayMatrix:
  4404                           
  4405                           	psect	text3
  4406  0ABB                     __ptext3:	
  4407 ;; *************** function _shiftBytes *****************
  4408 ;; Defined at:
  4409 ;;		line 1195 in file "main.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  highSide        1    wreg     unsigned char 
  4412 ;;  lowSide         1    1[BANK1 ] unsigned char 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  highSide        1    2[BANK1 ] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4424 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 6
  4431 ;; This function calls:
  4432 ;;		_SPI1_ExchangeByte
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;;		_displayMatrix
  4436 ;;		_Initialize_Matrix
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _shiftBytes
  4442  0ABB                     _shiftBytes:
  4443                           
  4444                           ;incstack = 0
  4445                           ; Regs used in _shiftBytes: [wreg+status,2+status,0+pclath+cstack]
  4446                           ;shiftBytes@highSide stored from wreg
  4447  0ABB  0141               	movlb	1	; select bank1
  4448  0ABC  00A2               	movwf	shiftBytes@highSide^(0+128)
  4449  0ABD                     l3130:
  4450                           
  4451                           ;main.c: 1195: void shiftBytes(uint8_t highSide, uint8_t lowSide);main.c: 1196: {;main.c
      +                          : 1198:     SPI1_ExchangeByte(lowSide);
  4452  0ABD  0821               	movf	shiftBytes@lowSide^(0+128),w
  4453  0ABE  318A  22AD  318A   	fcall	_SPI1_ExchangeByte
  4454                           
  4455                           ;main.c: 1199:     SPI1_ExchangeByte(highSide);
  4456  0AC1  0141               	movlb	1	; select bank1
  4457  0AC2  0822               	movf	shiftBytes@highSide^(0+128),w
  4458  0AC3  318A  22AD  318A   	fcall	_SPI1_ExchangeByte
  4459  0AC6                     l3132:
  4460  0AC6  0140               	movlb	0	; select bank0
  4461  0AC7  161A               	bsf	26,4	;volatile
  4462  0AC8                     l3134:
  4463  0AC8  121A               	bcf	26,4	;volatile
  4464  0AC9                     l703:
  4465  0AC9  0008               	return
  4466  0ACA                     __end_of_shiftBytes:
  4467                           
  4468                           	psect	text4
  4469  0AAD                     __ptext4:	
  4470 ;; *************** function _SPI1_ExchangeByte *****************
  4471 ;; Defined at:
  4472 ;;		line 97 in file "mcc_generated_files/spi1.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  data            1    wreg     unsigned char 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  data            1    0[BANK1 ] unsigned char 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      unsigned char 
  4479 ;; Registers used:
  4480 ;;		wreg
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;Total ram usage:        1 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 5
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_shiftBytes
  4497 ;;		_SPI1_WriteBlock
  4498 ;;		_SPI1_ReadBlock
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function _SPI1_ExchangeByte
  4504  0AAD                     _SPI1_ExchangeByte:
  4505                           
  4506                           ;incstack = 0
  4507                           ; Regs used in _SPI1_ExchangeByte: [wreg]
  4508                           ;SPI1_ExchangeByte@data stored from wreg
  4509  0AAD  0141               	movlb	1	; select bank1
  4510  0AAE  00A0               	movwf	SPI1_ExchangeByte@data^(0+128)
  4511  0AAF                     l3022:
  4512                           
  4513                           ;mcc_generated_files/spi1.c: 97: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 98: {;mcc_generated_files/spi1.c: 99:     SSP1BUF = data;
  4514  0AAF  0820               	movf	SPI1_ExchangeByte@data^(0+128),w
  4515  0AB0  0143               	movlb	3	; select bank3
  4516  0AB1  008C               	movwf	12	;volatile
  4517  0AB2                     l74:	
  4518                           ;mcc_generated_files/spi1.c: 100:     while(!PIR1bits.SSP1IF);
  4519                           
  4520  0AB2  014E               	movlb	14	; select bank14
  4521  0AB3  1C8D               	btfss	13,1	;volatile
  4522  0AB4  2AB6               	goto	u2381
  4523  0AB5  2AB7               	goto	u2380
  4524  0AB6                     u2381:
  4525  0AB6  2AB2               	goto	l74
  4526  0AB7                     u2380:
  4527  0AB7                     l76:
  4528                           
  4529                           ;mcc_generated_files/spi1.c: 101:     PIR1bits.SSP1IF = 0;
  4530  0AB7  108D               	bcf	13,1	;volatile
  4531  0AB8                     l3024:
  4532                           
  4533                           ;mcc_generated_files/spi1.c: 102:     return SSP1BUF;
  4534  0AB8  0143               	movlb	3	; select bank3
  4535  0AB9  080C               	movf	12,w	;volatile
  4536  0ABA                     l77:
  4537  0ABA  0008               	return
  4538  0ABB                     __end_of_SPI1_ExchangeByte:
  4539                           
  4540                           	psect	text5
  4541  0B1E                     __ptext5:	
  4542 ;; *************** function _SYSTEM_Initialize *****************
  4543 ;; Defined at:
  4544 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 7
  4565 ;; This function calls:
  4566 ;;		_EXT_INT_Initialize
  4567 ;;		_OSCILLATOR_Initialize
  4568 ;;		_PIN_MANAGER_Initialize
  4569 ;;		_PWM3_Initialize
  4570 ;;		_SPI1_Initialize
  4571 ;;		_TMR0_Initialize
  4572 ;;		_TMR1_Initialize
  4573 ;;		_TMR2_Initialize
  4574 ;;		_WDT_Initialize
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function _SYSTEM_Initialize
  4582  0B1E                     _SYSTEM_Initialize:
  4583  0B1E                     l3136:	
  4584                           ;incstack = 0
  4585                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4586                           
  4587                           
  4588                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  4589  0B1E  318A  22DB  318B   	fcall	_SPI1_Initialize
  4590                           
  4591                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4592  0B21  3187  27CC  318B   	fcall	_PIN_MANAGER_Initialize
  4593                           
  4594                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4595  0B24  318A  2250  318B   	fcall	_OSCILLATOR_Initialize
  4596  0B27                     l3138:
  4597                           
  4598                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4599  0B27  318A  223D  318B   	fcall	_WDT_Initialize
  4600  0B2A                     l3140:
  4601                           
  4602                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  4603  0B2A  318A  226A  318B   	fcall	_PWM3_Initialize
  4604  0B2D                     l3142:
  4605                           
  4606                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  4607  0B2D  318A  229F  318B   	fcall	_TMR2_Initialize
  4608  0B30                     l3144:
  4609                           
  4610                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  4611  0B30  318B  2377  318B   	fcall	_TMR1_Initialize
  4612  0B33                     l3146:
  4613                           
  4614                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
  4615  0B33  318A  2291  318B   	fcall	_EXT_INT_Initialize
  4616  0B36                     l3148:
  4617                           
  4618                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4619  0B36  318B  233A  318B   	fcall	_TMR0_Initialize
  4620  0B39                     l29:
  4621  0B39  0008               	return
  4622  0B3A                     __end_of_SYSTEM_Initialize:
  4623                           
  4624                           	psect	text6
  4625  0A3D                     __ptext6:	
  4626 ;; *************** function _WDT_Initialize *****************
  4627 ;; Defined at:
  4628 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		status,2
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 5
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_SYSTEM_Initialize
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _WDT_Initialize
  4658  0A3D                     _WDT_Initialize:
  4659  0A3D                     l3080:	
  4660                           ;incstack = 0
  4661                           ; Regs used in _WDT_Initialize: [status,2]
  4662                           
  4663                           
  4664                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x00;
  4665  0A3D  0150               	movlb	16	; select bank16
  4666  0A3E  018C               	clrf	12	;volatile
  4667  0A3F                     l35:
  4668  0A3F  0008               	return
  4669  0A40                     __end_of_WDT_Initialize:
  4670                           
  4671                           	psect	text7
  4672  0A9F                     __ptext7:	
  4673 ;; *************** function _TMR2_Initialize *****************
  4674 ;; Defined at:
  4675 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      void 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 5
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_SYSTEM_Initialize
  4700 ;;		_main
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           
  4705                           ;psect for function _TMR2_Initialize
  4706  0A9F                     _TMR2_Initialize:
  4707  0A9F                     l3084:	
  4708                           ;incstack = 0
  4709                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4710                           
  4711                           
  4712                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  4713  0A9F  3001               	movlw	1
  4714  0AA0  0145               	movlb	5	; select bank5
  4715  0AA1  0090               	movwf	16	;volatile
  4716  0AA2                     l3086:
  4717                           
  4718                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  4719  0AA2  018F               	clrf	15	;volatile
  4720  0AA3                     l3088:
  4721                           
  4722                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  4723  0AA3  0191               	clrf	17	;volatile
  4724                           
  4725                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  4726  0AA4  30FF               	movlw	255
  4727  0AA5  008D               	movwf	13	;volatile
  4728  0AA6                     l3090:
  4729                           
  4730                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  4731  0AA6  018C               	clrf	12	;volatile
  4732  0AA7                     l3092:
  4733                           
  4734                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  4735  0AA7  014E               	movlb	14	; select bank14
  4736  0AA8  130D               	bcf	13,6	;volatile
  4737  0AA9                     l3094:
  4738                           
  4739                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  4740  0AA9  30B0               	movlw	176
  4741  0AAA  0145               	movlb	5	; select bank5
  4742  0AAB  008E               	movwf	14	;volatile
  4743  0AAC                     l177:
  4744  0AAC  0008               	return
  4745  0AAD                     __end_of_TMR2_Initialize:
  4746                           
  4747                           	psect	text8
  4748  0B77                     __ptext8:	
  4749 ;; *************** function _TMR1_Initialize *****************
  4750 ;; Defined at:
  4751 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0, pclath, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 6
  4772 ;; This function calls:
  4773 ;;		_TMR1_SetInterruptHandler
  4774 ;; This function is called by:
  4775 ;;		_SYSTEM_Initialize
  4776 ;;		_main
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _TMR1_Initialize
  4782  0B77                     _TMR1_Initialize:
  4783  0B77                     l3096:	
  4784                           ;incstack = 0
  4785                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4786                           
  4787                           
  4788                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4789  0B77  0144               	movlb	4	; select bank4
  4790  0B78  018F               	clrf	15	;volatile
  4791                           
  4792                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  4793  0B79  0190               	clrf	16	;volatile
  4794  0B7A                     l3098:
  4795                           
  4796                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  4797  0B7A  3004               	movlw	4
  4798  0B7B  0091               	movwf	17	;volatile
  4799  0B7C                     l3100:
  4800                           
  4801                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
  4802  0B7C  30E1               	movlw	225
  4803  0B7D  008D               	movwf	13	;volatile
  4804  0B7E                     l3102:
  4805                           
  4806                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
  4807  0B7E  30BA               	movlw	186
  4808  0B7F  008C               	movwf	12	;volatile
  4809  0B80                     l3104:
  4810                           
  4811                           ;mcc_generated_files/tmr1.c: 84:     PIR1bits.TMR1IF = 0;
  4812  0B80  014E               	movlb	14	; select bank14
  4813  0B81  128D               	bcf	13,5	;volatile
  4814  0B82                     l3106:
  4815                           
  4816                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4817  0B82  0144               	movlb	4	; select bank4
  4818  0B83  080D               	movf	13,w	;volatile
  4819  0B84  0140               	movlb	0	; select bank0
  4820  0B85  00D7               	movwf	_timer1ReloadVal+1	;volatile
  4821  0B86  0144               	movlb	4	; select bank4
  4822  0B87  080C               	movf	12,w	;volatile
  4823  0B88  0140               	movlb	0	; select bank0
  4824  0B89  00D6               	movwf	_timer1ReloadVal	;volatile
  4825  0B8A                     l3108:
  4826                           
  4827                           ;mcc_generated_files/tmr1.c: 90:     PIE1bits.TMR1IE = 1;
  4828  0B8A  014E               	movlb	14	; select bank14
  4829  0B8B  1697               	bsf	23,5	;volatile
  4830  0B8C                     l3110:
  4831                           
  4832                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4833  0B8C  3003               	movlw	low _TMR1_DefaultInterruptHandler
  4834  0B8D  0141               	movlb	1	; select bank1
  4835  0B8E  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  4836  0B8F  3000               	movlw	high _TMR1_DefaultInterruptHandler
  4837  0B90  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4838  0B91  318A  227B  318B   	fcall	_TMR1_SetInterruptHandler
  4839  0B94                     l3112:
  4840                           
  4841                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
  4842  0B94  3005               	movlw	5
  4843  0B95  0144               	movlb	4	; select bank4
  4844  0B96  008E               	movwf	14	;volatile
  4845  0B97                     l365:
  4846  0B97  0008               	return
  4847  0B98                     __end_of_TMR1_Initialize:
  4848                           
  4849                           	psect	text9
  4850  0A7B                     __ptext9:	
  4851 ;; *************** function _TMR1_SetInterruptHandler *****************
  4852 ;; Defined at:
  4853 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4856 ;;		 -> TMR1_ISR_(1), TMR1_DefaultInterruptHandler(1), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4868 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;Total ram usage:        2 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 5
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_TMR1_Initialize
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function _TMR1_SetInterruptHandler
  4885  0A7B                     _TMR1_SetInterruptHandler:
  4886  0A7B                     l3032:	
  4887                           ;incstack = 0
  4888                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4889                           
  4890                           
  4891                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4892  0A7B  0141               	movlb	1	; select bank1
  4893  0A7C  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4894  0A7D  0140               	movlb	0	; select bank0
  4895  0A7E  00D5               	movwf	_TMR1_InterruptHandler+1
  4896  0A7F  0141               	movlb	1	; select bank1
  4897  0A80  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  4898  0A81  0140               	movlb	0	; select bank0
  4899  0A82  00D4               	movwf	_TMR1_InterruptHandler
  4900  0A83                     l395:
  4901  0A83  0008               	return
  4902  0A84                     __end_of_TMR1_SetInterruptHandler:
  4903                           
  4904                           	psect	text10
  4905  0B3A                     __ptext10:	
  4906 ;; *************** function _TMR0_Initialize *****************
  4907 ;; Defined at:
  4908 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;		None
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  1    wreg      void 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0, pclath, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4926 ;;Total ram usage:        0 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 6
  4929 ;; This function calls:
  4930 ;;		_TMR0_SetInterruptHandler
  4931 ;; This function is called by:
  4932 ;;		_SYSTEM_Initialize
  4933 ;;		_main
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           
  4938                           ;psect for function _TMR0_Initialize
  4939  0B3A                     _TMR0_Initialize:
  4940  0B3A                     l3120:	
  4941                           ;incstack = 0
  4942                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4943                           
  4944                           
  4945                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x90;
  4946  0B3A  3090               	movlw	144
  4947  0B3B  014B               	movlb	11	; select bank11
  4948  0B3C  009F               	movwf	31	;volatile
  4949                           
  4950                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x86;
  4951  0B3D  3086               	movlw	134
  4952  0B3E  009D               	movwf	29	;volatile
  4953                           
  4954                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xE8;
  4955  0B3F  30E8               	movlw	232
  4956  0B40  009C               	movwf	28	;volatile
  4957                           
  4958                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  4959  0B41  081D               	movf	29,w	;volatile
  4960  0B42  0141               	movlb	1	; select bank1
  4961  0B43  00C1               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
  4962  0B44  014B               	movlb	11	; select bank11
  4963  0B45  081C               	movf	28,w	;volatile
  4964  0B46  0141               	movlb	1	; select bank1
  4965  0B47  00C0               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
  4966  0B48                     l3122:
  4967                           
  4968                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  4969  0B48  014E               	movlb	14	; select bank14
  4970  0B49  128C               	bcf	12,5	;volatile
  4971  0B4A                     l3124:
  4972                           
  4973                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  4974  0B4A  1696               	bsf	22,5	;volatile
  4975  0B4B                     l3126:
  4976                           
  4977                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4978  0B4B  3002               	movlw	low _TMR0_DefaultInterruptHandler
  4979  0B4C  0141               	movlb	1	; select bank1
  4980  0B4D  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4981  0B4E  3000               	movlw	high _TMR0_DefaultInterruptHandler
  4982  0B4F  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4983  0B50  318A  2256  318B   	fcall	_TMR0_SetInterruptHandler
  4984  0B53                     l3128:
  4985                           
  4986                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  4987  0B53  3090               	movlw	144
  4988  0B54  014B               	movlb	11	; select bank11
  4989  0B55  009E               	movwf	30	;volatile
  4990  0B56                     l309:
  4991  0B56  0008               	return
  4992  0B57                     __end_of_TMR0_Initialize:
  4993                           
  4994                           	psect	text11
  4995  0A56                     __ptext11:	
  4996 ;; *************** function _TMR0_SetInterruptHandler *****************
  4997 ;; Defined at:
  4998 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5001 ;;		 -> TMR0_ISR_(1), TMR0_DefaultInterruptHandler(1), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5013 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;Total ram usage:        2 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 5
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_TMR0_Initialize
  5024 ;;		_main
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function _TMR0_SetInterruptHandler
  5030  0A56                     _TMR0_SetInterruptHandler:
  5031  0A56                     l3030:	
  5032                           ;incstack = 0
  5033                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5034                           
  5035                           
  5036                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  5037  0A56  0141               	movlb	1	; select bank1
  5038  0A57  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5039  0A58  00BF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5040  0A59  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  5041  0A5A  00BE               	movwf	_TMR0_InterruptHandler^(0+128)
  5042  0A5B                     l331:
  5043  0A5B  0008               	return
  5044  0A5C                     __end_of_TMR0_SetInterruptHandler:
  5045                           
  5046                           	psect	text12
  5047  0ADB                     __ptext12:	
  5048 ;; *************** function _SPI1_Initialize *****************
  5049 ;; Defined at:
  5050 ;;		line 62 in file "mcc_generated_files/spi1.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5068 ;;Total ram usage:        0 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 5
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_SYSTEM_Initialize
  5075 ;;		_main
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           
  5080                           ;psect for function _SPI1_Initialize
  5081  0ADB                     _SPI1_Initialize:
  5082  0ADB                     l3034:	
  5083                           ;incstack = 0
  5084                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  5085                           
  5086                           
  5087                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 21;
  5088  0ADB  3015               	movlw	21
  5089  0ADC  017D               	movlb	61	; select bank61
  5090  0ADD  00C5               	movwf	69	;volatile
  5091                           
  5092                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 4;
  5093  0ADE  3004               	movlw	4
  5094  0ADF  00C6               	movwf	70	;volatile
  5095                           
  5096                           ;mcc_generated_files/spi1.c: 67:     RC5PPS = 7;
  5097  0AE0  3007               	movlw	7
  5098  0AE1  017E               	movlb	62	; select bank62
  5099  0AE2  00A5               	movwf	37	;volatile
  5100                           
  5101                           ;mcc_generated_files/spi1.c: 68:     RC3PPS = 8;
  5102  0AE3  3008               	movlw	8
  5103  0AE4  00A3               	movwf	35	;volatile
  5104                           
  5105                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x40;
  5106  0AE5  3040               	movlw	64
  5107  0AE6  0143               	movlb	3	; select bank3
  5108  0AE7  008F               	movwf	15	;volatile
  5109  0AE8                     l3036:
  5110                           
  5111                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x00;
  5112  0AE8  0190               	clrf	16	;volatile
  5113  0AE9                     l3038:
  5114                           
  5115                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x01;
  5116  0AE9  3001               	movlw	1
  5117  0AEA  008D               	movwf	13	;volatile
  5118  0AEB                     l3040:
  5119                           
  5120                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC5 = 0;
  5121  0AEB  0140               	movlb	0	; select bank0
  5122  0AEC  1294               	bcf	20,5	;volatile
  5123  0AED                     l3042:
  5124                           
  5125                           ;mcc_generated_files/spi1.c: 74:     SSP1CON1bits.SSPEN = 0;
  5126  0AED  0143               	movlb	3	; select bank3
  5127  0AEE  1290               	bcf	16,5	;volatile
  5128  0AEF                     l64:
  5129  0AEF  0008               	return
  5130  0AF0                     __end_of_SPI1_Initialize:
  5131                           
  5132                           	psect	text13
  5133  0A6A                     __ptext13:	
  5134 ;; *************** function _PWM3_Initialize *****************
  5135 ;; Defined at:
  5136 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      void 
  5143 ;; Registers used:
  5144 ;;		wreg
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5154 ;;Total ram usage:        0 bytes
  5155 ;; Hardware stack levels used: 1
  5156 ;; Hardware stack levels required when called: 5
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_SYSTEM_Initialize
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _PWM3_Initialize
  5167  0A6A                     _PWM3_Initialize:
  5168  0A6A                     l3082:	
  5169                           ;incstack = 0
  5170                           ; Regs used in _PWM3_Initialize: [wreg]
  5171                           
  5172                           
  5173                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  5174  0A6A  3080               	movlw	128
  5175  0A6B  0146               	movlb	6	; select bank6
  5176  0A6C  0096               	movwf	22	;volatile
  5177                           
  5178                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  5179  0A6D  307F               	movlw	127
  5180  0A6E  0095               	movwf	21	;volatile
  5181                           
  5182                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  5183  0A6F  30C0               	movlw	192
  5184  0A70  0094               	movwf	20	;volatile
  5185  0A71                     l226:
  5186  0A71  0008               	return
  5187  0A72                     __end_of_PWM3_Initialize:
  5188                           
  5189                           	psect	text14
  5190  07CC                     __ptext14:	
  5191 ;; *************** function _PIN_MANAGER_Initialize *****************
  5192 ;; Defined at:
  5193 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5211 ;;Total ram usage:        0 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; Hardware stack levels required when called: 5
  5214 ;; This function calls:
  5215 ;;		Nothing
  5216 ;; This function is called by:
  5217 ;;		_SYSTEM_Initialize
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           
  5222                           ;psect for function _PIN_MANAGER_Initialize
  5223  07CC                     _PIN_MANAGER_Initialize:
  5224  07CC                     l3044:	
  5225                           ;incstack = 0
  5226                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5227                           
  5228                           
  5229                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5230  07CC  0140               	movlb	0	; select bank0
  5231  07CD  0198               	clrf	24	;volatile
  5232                           
  5233                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  5234  07CE  019A               	clrf	26	;volatile
  5235  07CF                     l3046:
  5236                           
  5237                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x1F;
  5238  07CF  301F               	movlw	31
  5239  07D0  0092               	movwf	18	;volatile
  5240  07D1                     l3048:
  5241                           
  5242                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x02;
  5243  07D1  3002               	movlw	2
  5244  07D2  0094               	movwf	20	;volatile
  5245  07D3                     l3050:
  5246                           
  5247                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x1F;
  5248  07D3  301F               	movlw	31
  5249  07D4  017E               	movlb	62	; select bank62
  5250  07D5  00CE               	movwf	78	;volatile
  5251  07D6                     l3052:
  5252                           
  5253                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x23;
  5254  07D6  3023               	movlw	35
  5255  07D7  00B8               	movwf	56	;volatile
  5256                           
  5257                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  5258  07D8  01B9               	clrf	57	;volatile
  5259                           
  5260                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  5261  07D9  01CF               	clrf	79	;volatile
  5262                           
  5263                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  5264  07DA  01BA               	clrf	58	;volatile
  5265                           
  5266                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  5267  07DB  01D0               	clrf	80	;volatile
  5268  07DC                     l3054:
  5269                           
  5270                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  5271  07DC  3037               	movlw	55
  5272  07DD  00BB               	movwf	59	;volatile
  5273  07DE                     l3056:
  5274                           
  5275                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  5276  07DE  303F               	movlw	63
  5277  07DF  00D1               	movwf	81	;volatile
  5278  07E0                     l3058:
  5279                           
  5280                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  5281  07E0  303F               	movlw	63
  5282  07E1  00BC               	movwf	60	;volatile
  5283  07E2                     l3060:
  5284                           
  5285                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  5286  07E2  303F               	movlw	63
  5287  07E3  00D2               	movwf	82	;volatile
  5288  07E4                     l3062:
  5289                           
  5290                           ;mcc_generated_files/pin_manager.c: 106:     INTPPS = 0x02;
  5291  07E4  3002               	movlw	2
  5292  07E5  017D               	movlb	61	; select bank61
  5293  07E6  0090               	movwf	16	;volatile
  5294  07E7                     l3064:
  5295                           
  5296                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x15;
  5297  07E7  3015               	movlw	21
  5298  07E8  00C5               	movwf	69	;volatile
  5299  07E9                     l3066:
  5300                           
  5301                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x08;
  5302  07E9  3008               	movlw	8
  5303  07EA  017E               	movlb	62	; select bank62
  5304  07EB  00A3               	movwf	35	;volatile
  5305  07EC                     l3068:
  5306                           
  5307                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x03;
  5308  07EC  3003               	movlw	3
  5309  07ED  0095               	movwf	21	;volatile
  5310  07EE                     l3070:
  5311                           
  5312                           ;mcc_generated_files/pin_manager.c: 110:     RC5PPS = 0x07;
  5313  07EE  3007               	movlw	7
  5314  07EF  00A5               	movwf	37	;volatile
  5315  07F0                     l3072:
  5316                           
  5317                           ;mcc_generated_files/pin_manager.c: 111:     SSP1DATPPS = 0x04;
  5318  07F0  3004               	movlw	4
  5319  07F1  017D               	movlb	61	; select bank61
  5320  07F2  00C6               	movwf	70	;volatile
  5321  07F3                     l147:
  5322  07F3  0008               	return
  5323  07F4                     __end_of_PIN_MANAGER_Initialize:
  5324                           
  5325                           	psect	text15
  5326  0A50                     __ptext15:	
  5327 ;; *************** function _OSCILLATOR_Initialize *****************
  5328 ;; Defined at:
  5329 ;;		line 64 in file "mcc_generated_files/mcc.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;Total ram usage:        0 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 5
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_SYSTEM_Initialize
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function _OSCILLATOR_Initialize
  5359  0A50                     _OSCILLATOR_Initialize:
  5360  0A50                     l3074:	
  5361                           ;incstack = 0
  5362                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5363                           
  5364                           
  5365                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  5366  0A50  0151               	movlb	17	; select bank17
  5367  0A51  0191               	clrf	17	;volatile
  5368  0A52                     l3076:
  5369                           
  5370                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  5371  0A52  3003               	movlw	3
  5372  0A53  0093               	movwf	19	;volatile
  5373  0A54                     l3078:
  5374                           
  5375                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  5376  0A54  0192               	clrf	18	;volatile
  5377  0A55                     l32:
  5378  0A55  0008               	return
  5379  0A56                     __end_of_OSCILLATOR_Initialize:
  5380                           
  5381                           	psect	text16
  5382  0A91                     __ptext16:	
  5383 ;; *************** function _EXT_INT_Initialize *****************
  5384 ;; Defined at:
  5385 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0, pclath, cstack
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; Hardware stack levels required when called: 6
  5406 ;; This function calls:
  5407 ;;		_INT_SetInterruptHandler
  5408 ;; This function is called by:
  5409 ;;		_SYSTEM_Initialize
  5410 ;;		_main
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           
  5415                           ;psect for function _EXT_INT_Initialize
  5416  0A91                     _EXT_INT_Initialize:
  5417  0A91                     l3114:	
  5418                           ;incstack = 0
  5419                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5420                           
  5421                           
  5422                           ;mcc_generated_files/ext_int.c: 77:     (PIR0bits.INTF = 0);
  5423  0A91  014E               	movlb	14	; select bank14
  5424  0A92  100C               	bcf	12,0	;volatile
  5425                           
  5426                           ;mcc_generated_files/ext_int.c: 78:     (INTCONbits.INTEDG = 1);
  5427  0A93  140B               	bsf	11,0	;volatile
  5428  0A94                     l3116:
  5429                           
  5430                           ;mcc_generated_files/ext_int.c: 80:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
  5431  0A94  303C               	movlw	low _INT_DefaultInterruptHandler
  5432  0A95  0141               	movlb	1	; select bank1
  5433  0A96  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  5434  0A97  300A               	movlw	high _INT_DefaultInterruptHandler
  5435  0A98  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5436  0A99  318A  224A  318A   	fcall	_INT_SetInterruptHandler
  5437  0A9C                     l3118:
  5438                           
  5439                           ;mcc_generated_files/ext_int.c: 81:     (PIE0bits.INTE = 1);
  5440  0A9C  014E               	movlb	14	; select bank14
  5441  0A9D  1416               	bsf	22,0	;volatile
  5442  0A9E                     l284:
  5443  0A9E  0008               	return
  5444  0A9F                     __end_of_EXT_INT_Initialize:
  5445                           
  5446                           	psect	text17
  5447  0A4A                     __ptext17:	
  5448 ;; *************** function _INT_SetInterruptHandler *****************
  5449 ;; Defined at:
  5450 ;;		line 63 in file "mcc_generated_files/ext_int.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5453 ;;		 -> EXT_ISR(1), INT_DefaultInterruptHandler(1), 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  1    wreg      void 
  5458 ;; Registers used:
  5459 ;;		wreg
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5465 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;Total ram usage:        2 bytes
  5470 ;; Hardware stack levels used: 1
  5471 ;; Hardware stack levels required when called: 5
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_EXT_INT_Initialize
  5476 ;;		_main
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           
  5481                           ;psect for function _INT_SetInterruptHandler
  5482  0A4A                     _INT_SetInterruptHandler:
  5483  0A4A                     l3028:	
  5484                           ;incstack = 0
  5485                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5486                           
  5487                           
  5488                           ;mcc_generated_files/ext_int.c: 64:     INT_InterruptHandler = InterruptHandler;
  5489  0A4A  0141               	movlb	1	; select bank1
  5490  0A4B  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5491  0A4C  00C3               	movwf	(_INT_InterruptHandler+1)^(0+128)
  5492  0A4D  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
  5493  0A4E  00C2               	movwf	_INT_InterruptHandler^(0+128)
  5494  0A4F                     l278:
  5495  0A4F  0008               	return
  5496  0A50                     __end_of_INT_SetInterruptHandler:
  5497                           
  5498                           	psect	intentry
  5499  0004                     __pintentry:	
  5500 ;; *************** function _INTERRUPT_InterruptManager *****************
  5501 ;; Defined at:
  5502 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used: 1
  5522 ;; Hardware stack levels required when called: 4
  5523 ;; This function calls:
  5524 ;;		_INT_ISR
  5525 ;;		_TMR0_ISR
  5526 ;;		_TMR1_ISR
  5527 ;; This function is called by:
  5528 ;;		Interrupt level 1
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532  0004                     _INTERRUPT_InterruptManager:
  5533                           
  5534                           ;incstack = 0
  5535  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5536                           
  5537                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5538  0005  3180               	pagesel	$
  5539  0006                     i1l2812:
  5540                           
  5541                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  5542  0006  014E               	movlb	14	; select bank14
  5543  0007  1E96               	btfss	22,5	;volatile
  5544  0008  280A               	goto	u217_21
  5545  0009  280B               	goto	u217_20
  5546  000A                     u217_21:
  5547  000A  2813               	goto	i1l250
  5548  000B                     u217_20:
  5549  000B                     i1l2814:
  5550  000B  1E8C               	btfss	12,5	;volatile
  5551  000C  280E               	goto	u218_21
  5552  000D  280F               	goto	u218_20
  5553  000E                     u218_21:
  5554  000E  2813               	goto	i1l250
  5555  000F                     u218_20:
  5556  000F                     i1l2816:
  5557                           
  5558                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5559  000F  318A  22F0  3180   	fcall	_TMR0_ISR
  5560                           
  5561                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5562  0012  282F               	goto	i1l258
  5563  0013                     i1l250:	
  5564                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.INTE == 1 && PIR0bits
      +                          .INTF == 1)
  5565                           
  5566  0013  1C16               	btfss	22,0	;volatile
  5567  0014  2816               	goto	u219_21
  5568  0015  2817               	goto	u219_20
  5569  0016                     u219_21:
  5570  0016  281F               	goto	i1l252
  5571  0017                     u219_20:
  5572  0017                     i1l2818:
  5573  0017  1C0C               	btfss	12,0	;volatile
  5574  0018  281A               	goto	u220_21
  5575  0019  281B               	goto	u220_20
  5576  001A                     u220_21:
  5577  001A  281F               	goto	i1l252
  5578  001B                     u220_20:
  5579  001B                     i1l2820:
  5580                           
  5581                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         INT_ISR();
  5582  001B  318A  2244  3180   	fcall	_INT_ISR
  5583                           
  5584                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  5585  001E  282F               	goto	i1l258
  5586  001F                     i1l252:	
  5587                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  5588                           
  5589  001F  1F0B               	btfss	11,6	;volatile
  5590  0020  2822               	goto	u221_21
  5591  0021  2823               	goto	u221_20
  5592  0022                     u221_21:
  5593  0022  282F               	goto	i1l253
  5594  0023                     u221_20:
  5595  0023                     i1l2822:
  5596                           
  5597                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5598  0023  1E97               	btfss	23,5	;volatile
  5599  0024  2826               	goto	u222_21
  5600  0025  2827               	goto	u222_20
  5601  0026                     u222_21:
  5602  0026  282F               	goto	i1l253
  5603  0027                     u222_20:
  5604  0027                     i1l2824:
  5605  0027  1E8D               	btfss	13,5	;volatile
  5606  0028  282A               	goto	u223_21
  5607  0029  282B               	goto	u223_20
  5608  002A                     u223_21:
  5609  002A  282F               	goto	i1l253
  5610  002B                     u223_20:
  5611  002B                     i1l2826:
  5612                           
  5613                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  5614  002B  318B  2307  3180   	fcall	_TMR1_ISR
  5615                           
  5616                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5617  002E  282F               	goto	i1l258
  5618  002F                     i1l253:
  5619  002F                     i1l258:
  5620  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5621  0030  0009               	retfie
  5622  0031                     __end_of_INTERRUPT_InterruptManager:
  5623                           
  5624                           	psect	text19
  5625  0B07                     __ptext19:	
  5626 ;; *************** function _TMR1_ISR *****************
  5627 ;; Defined at:
  5628 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;		None
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;		None
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;Total ram usage:        0 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 2
  5649 ;; This function calls:
  5650 ;;		Absolute function
  5651 ;;		_TMR1_DefaultInterruptHandler
  5652 ;;		_TMR1_ISR_
  5653 ;;		_TMR1_WriteTimer
  5654 ;; This function is called by:
  5655 ;;		_INTERRUPT_InterruptManager
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _TMR1_ISR
  5661  0B07                     _TMR1_ISR:
  5662  0B07                     i1l2762:	
  5663                           ;incstack = 0
  5664                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5665                           
  5666                           
  5667                           ;mcc_generated_files/tmr1.c: 168:     PIR1bits.TMR1IF = 0;
  5668  0B07  014E               	movlb	14	; select bank14
  5669  0B08  128D               	bcf	13,5	;volatile
  5670  0B09                     i1l2764:
  5671                           
  5672                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  5673  0B09  0140               	movlb	0	; select bank0
  5674  0B0A  0857               	movf	_timer1ReloadVal+1,w	;volatile
  5675  0B0B  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5676  0B0C  0856               	movf	_timer1ReloadVal,w	;volatile
  5677  0B0D  00F0               	movwf	TMR1_WriteTimer@timerVal
  5678  0B0E  318A  22CA  318B   	fcall	_TMR1_WriteTimer
  5679  0B11                     i1l2766:
  5680                           
  5681                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  5682  0B11  0140               	movlb	0	; select bank0
  5683  0B12  0854               	movf	_TMR1_InterruptHandler,w
  5684  0B13  0455               	iorwf	_TMR1_InterruptHandler+1,w
  5685  0B14  1903               	btfsc	3,2
  5686  0B15  2B17               	goto	u210_21
  5687  0B16  2B18               	goto	u210_20
  5688  0B17                     u210_21:
  5689  0B17  2B1D               	goto	i1l392
  5690  0B18                     u210_20:
  5691  0B18                     i1l2768:
  5692                           
  5693                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  5694  0B18  0855               	movf	_TMR1_InterruptHandler+1,w
  5695  0B19  008A               	movwf	10
  5696  0B1A  0854               	movf	_TMR1_InterruptHandler,w
  5697  0B1B  000A               	callw
  5698  0B1C  318B               	pagesel	$
  5699  0B1D                     i1l392:
  5700  0B1D  0008               	return
  5701  0B1E                     __end_of_TMR1_ISR:
  5702                           
  5703                           	psect	text20
  5704  0ACA                     __ptext20:	
  5705 ;; *************** function _TMR1_WriteTimer *****************
  5706 ;; Defined at:
  5707 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;  timerVal        2    0[COMMON] unsigned short 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;Total ram usage:        2 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_TMR1_ISR
  5731 ;;		_TMR1_Reload
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _TMR1_WriteTimer
  5737  0ACA                     _TMR1_WriteTimer:
  5738  0ACA                     i1l2368:	
  5739                           ;incstack = 0
  5740                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5741                           
  5742                           
  5743                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
  5744  0ACA  0144               	movlb	4	; select bank4
  5745  0ACB  1D0E               	btfss	14,2	;volatile
  5746  0ACC  2ACE               	goto	u140_21
  5747  0ACD  2ACF               	goto	u140_20
  5748  0ACE                     u140_21:
  5749  0ACE  2AD6               	goto	i1l2378
  5750  0ACF                     u140_20:
  5751  0ACF                     i1l2370:
  5752                           
  5753                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  5754  0ACF  100E               	bcf	14,0	;volatile
  5755  0AD0                     i1l2372:
  5756                           
  5757                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
  5758  0AD0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5759  0AD1  008D               	movwf	13	;volatile
  5760  0AD2                     i1l2374:
  5761                           
  5762                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
  5763  0AD2  0870               	movf	TMR1_WriteTimer@timerVal,w
  5764  0AD3  008C               	movwf	12	;volatile
  5765  0AD4                     i1l2376:
  5766                           
  5767                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  5768  0AD4  140E               	bsf	14,0	;volatile
  5769                           
  5770                           ;mcc_generated_files/tmr1.c: 140:     }
  5771  0AD5  2ADA               	goto	i1l379
  5772  0AD6                     i1l2378:
  5773                           
  5774                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  5775  0AD6  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5776  0AD7  008D               	movwf	13	;volatile
  5777  0AD8                     i1l2380:
  5778                           
  5779                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
  5780  0AD8  0870               	movf	TMR1_WriteTimer@timerVal,w
  5781  0AD9  008C               	movwf	12	;volatile
  5782  0ADA                     i1l379:
  5783  0ADA  0008               	return
  5784  0ADB                     __end_of_TMR1_WriteTimer:
  5785                           
  5786                           	psect	text21
  5787  0003                     __ptext21:	
  5788 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5789 ;; Defined at:
  5790 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  1    wreg      void 
  5797 ;; Registers used:
  5798 ;;		None
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;Total ram usage:        0 bytes
  5809 ;; Hardware stack levels used: 1
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_TMR1_Initialize
  5814 ;;		_TMR1_ISR
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           
  5819                           ;psect for function _TMR1_DefaultInterruptHandler
  5820  0003                     _TMR1_DefaultInterruptHandler:
  5821  0003                     i1l398:	
  5822                           ;incstack = 0
  5823                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5824                           
  5825  0003  0008               	return
  5826  0004                     __end_of_TMR1_DefaultInterruptHandler:
  5827                           
  5828                           	psect	text22
  5829  006D                     __ptext22:	
  5830 ;; *************** function _TMR1_ISR_ *****************
  5831 ;; Defined at:
  5832 ;;		line 705 in file "main.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  i               2   26[BANK0 ] int 
  5837 ;;  i               2   24[BANK0 ] int 
  5838 ;;  i               2   22[BANK0 ] int 
  5839 ;;  i               2   20[BANK0 ] int 
  5840 ;;  lights          1    2[BANK0 ] unsigned char 
  5841 ;;  i               2   38[BANK0 ] int 
  5842 ;;  lights          1    0[BANK0 ] unsigned char 
  5843 ;;  jungle_sw       1    3[BANK0 ] unsigned char 
  5844 ;;  i               2    4[BANK0 ] int 
  5845 ;;  lights          1    1[BANK0 ] unsigned char 
  5846 ;;  i               2   32[BANK0 ] int 
  5847 ;;  i               2   18[BANK0 ] int 
  5848 ;;  i               2   30[BANK0 ] int 
  5849 ;;  i               2   16[BANK0 ] int 
  5850 ;;  i               2   14[BANK0 ] int 
  5851 ;;  i               2   12[BANK0 ] int 
  5852 ;;  i               2   10[BANK0 ] int 
  5853 ;;  i               2    8[BANK0 ] int 
  5854 ;;  i               2   36[BANK0 ] int 
  5855 ;;  i               2    6[BANK0 ] int 
  5856 ;;  i               2   34[BANK0 ] int 
  5857 ;;  i               2   28[BANK0 ] int 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      void 
  5860 ;; Registers used:
  5861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;      Totals:         5      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5871 ;;Total ram usage:       45 bytes
  5872 ;; Hardware stack levels used: 1
  5873 ;; Hardware stack levels required when called: 1
  5874 ;; This function calls:
  5875 ;;		___awdiv
  5876 ;;		i1_playNote
  5877 ;; This function is called by:
  5878 ;;		_main
  5879 ;;		_TMR1_ISR
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           
  5884                           ;psect for function _TMR1_ISR_
  5885  006D                     _TMR1_ISR_:
  5886  006D                     i1l2390:	
  5887                           ;incstack = 0
  5888                           ; Regs used in _TMR1_ISR_: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5889                           
  5890                           
  5891                           ;main.c: 707:     count++;
  5892  006D  3001               	movlw	1
  5893  006E  0141               	movlb	1	; select bank1
  5894  006F  07C4               	addwf	_count^(0+128),f
  5895  0070  3000               	movlw	0
  5896  0071  3DC5               	addwfc	(_count+1)^(0+128),f
  5897  0072                     i1l2392:
  5898                           
  5899                           ;main.c: 710:     if (silent_night_playing)
  5900  0072  0140               	movlb	0	; select bank0
  5901  0073  0853               	movf	_silent_night_playing,w
  5902  0074  1903               	btfsc	3,2
  5903  0075  2877               	goto	u141_21
  5904  0076  2878               	goto	u141_20
  5905  0077                     u141_21:
  5906  0077  2965               	goto	i1l2444
  5907  0078                     u141_20:
  5908  0078                     i1l2394:
  5909                           
  5910                           ;main.c: 711:     {;main.c: 712:         if (count < 24 || ((count > 48) && (count < 96)
      +                          ))
  5911  0078  0141               	movlb	1	; select bank1
  5912  0079  0845               	movf	(_count+1)^(0+128),w
  5913  007A  3A80               	xorlw	128
  5914  007B  00F9               	movwf	??_TMR1_ISR_
  5915  007C  3080               	movlw	128
  5916  007D  0279               	subwf	??_TMR1_ISR_,w
  5917  007E  1D03               	skipz
  5918  007F  2882               	goto	u142_25
  5919  0080  3018               	movlw	24
  5920  0081  0244               	subwf	_count^(0+128),w
  5921  0082                     u142_25:
  5922  0082  1C03               	skipc
  5923  0083  2885               	goto	u142_21
  5924  0084  2886               	goto	u142_20
  5925  0085                     u142_21:
  5926  0085  28A2               	goto	i1l2400
  5927  0086                     u142_20:
  5928  0086                     i1l2396:
  5929  0086  0141               	movlb	1	; select bank1
  5930  0087  0845               	movf	(_count+1)^(0+128),w
  5931  0088  3A80               	xorlw	128
  5932  0089  00F9               	movwf	??_TMR1_ISR_
  5933  008A  3080               	movlw	128
  5934  008B  0279               	subwf	??_TMR1_ISR_,w
  5935  008C  1D03               	skipz
  5936  008D  2890               	goto	u143_25
  5937  008E  3031               	movlw	49
  5938  008F  0244               	subwf	_count^(0+128),w
  5939  0090                     u143_25:
  5940  0090  1C03               	skipc
  5941  0091  2893               	goto	u143_21
  5942  0092  2894               	goto	u143_20
  5943  0093                     u143_21:
  5944  0093  28E4               	goto	i1l2414
  5945  0094                     u143_20:
  5946  0094                     i1l2398:
  5947  0094  0141               	movlb	1	; select bank1
  5948  0095  0845               	movf	(_count+1)^(0+128),w
  5949  0096  3A80               	xorlw	128
  5950  0097  00F9               	movwf	??_TMR1_ISR_
  5951  0098  3080               	movlw	128
  5952  0099  0279               	subwf	??_TMR1_ISR_,w
  5953  009A  1D03               	skipz
  5954  009B  289E               	goto	u144_25
  5955  009C  3060               	movlw	96
  5956  009D  0244               	subwf	_count^(0+128),w
  5957  009E                     u144_25:
  5958  009E  1803               	skipnc
  5959  009F  28A1               	goto	u144_21
  5960  00A0  28A2               	goto	u144_20
  5961  00A1                     u144_21:
  5962  00A1  28E4               	goto	i1l2414
  5963  00A2                     u144_20:
  5964  00A2                     i1l2400:
  5965                           
  5966                           ;main.c: 713:         {;main.c: 714:             if (last_note != silent_night[count])
  5967  00A2  30DB               	movlw	219
  5968  00A3  00F9               	movwf	??_TMR1_ISR_
  5969  00A4  3022               	movlw	34
  5970  00A5  00FA               	movwf	??_TMR1_ISR_+1
  5971  00A6  0141               	movlb	1	; select bank1
  5972  00A7  0844               	movf	_count^(0+128),w
  5973  00A8  0779               	addwf	??_TMR1_ISR_,w
  5974  00A9  0086               	movwf	6
  5975  00AA  0845               	movf	(_count+1)^(0+128),w
  5976  00AB  3D7A               	addwfc	??_TMR1_ISR_+1,w
  5977  00AC  0087               	movwf	7
  5978  00AD  0801               	movf	1,w
  5979  00AE  0140               	movlb	0	; select bank0
  5980  00AF  0650               	xorwf	_last_note,w
  5981  00B0  1903               	skipnz
  5982  00B1  28B3               	goto	u145_21
  5983  00B2  28B4               	goto	u145_20
  5984  00B3                     u145_21:
  5985  00B3  2965               	goto	i1l2444
  5986  00B4                     u145_20:
  5987  00B4                     i1l2402:
  5988                           
  5989                           ;main.c: 715:             {;main.c: 716:                 for (int i = 0; i < 7; i++)
  5990  00B4  01C0               	clrf	TMR1_ISR_@i
  5991  00B5  01C1               	clrf	TMR1_ISR_@i+1
  5992  00B6                     i1l2408:
  5993                           
  5994                           ;main.c: 717:                 {;main.c: 718:                     uint8_t lights = light_
      +                          array[i] >> 7;
  5995  00B6  0140               	movlb	0	; select bank0
  5996  00B7  0840               	movf	TMR1_ISR_@i,w
  5997  00B8  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  5998  00B9  0086               	movwf	6
  5999  00BA  0187               	clrf	7
  6000  00BB  0801               	movf	1,w
  6001  00BC  00F9               	movwf	??_TMR1_ISR_
  6002  00BD  3007               	movlw	7
  6003  00BE                     u146_25:
  6004  00BE  36F9               	lsrf	??_TMR1_ISR_,f
  6005  00BF  0B89               	decfsz	9,f
  6006  00C0  28BE               	goto	u146_25
  6007  00C1  0879               	movf	??_TMR1_ISR_,w
  6008  00C2  00FA               	movwf	??_TMR1_ISR_+1
  6009  00C3  087A               	movf	??_TMR1_ISR_+1,w
  6010  00C4  00A0               	movwf	TMR1_ISR_@lights
  6011                           
  6012                           ;main.c: 719:                     light_array[i] = (light_array[i] << 1) + lights;
  6013  00C5  0840               	movf	TMR1_ISR_@i,w
  6014  00C6  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6015  00C7  0086               	movwf	6
  6016  00C8  0187               	clrf	7
  6017  00C9  3501               	lslf	1,w
  6018  00CA  0720               	addwf	TMR1_ISR_@lights,w
  6019  00CB  00F9               	movwf	??_TMR1_ISR_
  6020  00CC  0840               	movf	TMR1_ISR_@i,w
  6021  00CD  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6022  00CE  0086               	movwf	6
  6023  00CF  0187               	clrf	7
  6024  00D0  0879               	movf	??_TMR1_ISR_,w
  6025  00D1  0081               	movwf	1
  6026  00D2                     i1l2410:
  6027                           
  6028                           ;main.c: 720:                 }
  6029  00D2  3001               	movlw	1
  6030  00D3  07C0               	addwf	TMR1_ISR_@i,f
  6031  00D4  3000               	movlw	0
  6032  00D5  3DC1               	addwfc	TMR1_ISR_@i+1,f
  6033  00D6                     i1l2412:
  6034  00D6  0841               	movf	TMR1_ISR_@i+1,w
  6035  00D7  3A80               	xorlw	128
  6036  00D8  00F9               	movwf	??_TMR1_ISR_
  6037  00D9  3080               	movlw	128
  6038  00DA  0279               	subwf	??_TMR1_ISR_,w
  6039  00DB  1D03               	skipz
  6040  00DC  28DF               	goto	u147_25
  6041  00DD  3007               	movlw	7
  6042  00DE  0240               	subwf	TMR1_ISR_@i,w
  6043  00DF                     u147_25:
  6044  00DF  1C03               	skipc
  6045  00E0  28E2               	goto	u147_21
  6046  00E1  28E3               	goto	u147_20
  6047  00E2                     u147_21:
  6048  00E2  28B6               	goto	i1l2408
  6049  00E3                     u147_20:
  6050  00E3  2965               	goto	i1l2444
  6051  00E4                     i1l2414:
  6052  00E4  0141               	movlb	1	; select bank1
  6053  00E5  0845               	movf	(_count+1)^(0+128),w
  6054  00E6  3A80               	xorlw	128
  6055  00E7  00F9               	movwf	??_TMR1_ISR_
  6056  00E8  3080               	movlw	128
  6057  00E9  0279               	subwf	??_TMR1_ISR_,w
  6058  00EA  1D03               	skipz
  6059  00EB  28EE               	goto	u148_25
  6060  00EC  3078               	movlw	120
  6061  00ED  0244               	subwf	_count^(0+128),w
  6062  00EE                     u148_25:
  6063  00EE  1C03               	skipc
  6064  00EF  28F1               	goto	u148_21
  6065  00F0  28F2               	goto	u148_20
  6066  00F1                     u148_21:
  6067  00F1  2926               	goto	i1l2430
  6068  00F2                     u148_20:
  6069  00F2                     i1l2416:
  6070  00F2  30DB               	movlw	219
  6071  00F3  00F9               	movwf	??_TMR1_ISR_
  6072  00F4  3022               	movlw	34
  6073  00F5  00FA               	movwf	??_TMR1_ISR_+1
  6074  00F6  0141               	movlb	1	; select bank1
  6075  00F7  0844               	movf	_count^(0+128),w
  6076  00F8  0779               	addwf	??_TMR1_ISR_,w
  6077  00F9  0086               	movwf	6
  6078  00FA  0845               	movf	(_count+1)^(0+128),w
  6079  00FB  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6080  00FC  0087               	movwf	7
  6081  00FD  0801               	movf	1,w
  6082  00FE  0140               	movlb	0	; select bank0
  6083  00FF  0650               	xorwf	_last_note,w
  6084  0100  1903               	skipnz
  6085  0101  2903               	goto	u149_21
  6086  0102  2904               	goto	u149_20
  6087  0103                     u149_21:
  6088  0103  2926               	goto	i1l2430
  6089  0104                     u149_20:
  6090  0104                     i1l2418:
  6091                           
  6092                           ;main.c: 724:         {;main.c: 725:             for (int i = 0; i < 7; i++)
  6093  0104  01BC               	clrf	TMR1_ISR_@i_1200
  6094  0105  01BD               	clrf	TMR1_ISR_@i_1200+1
  6095  0106                     i1l2424:
  6096                           
  6097                           ;main.c: 726:             {;main.c: 727:                 light_array[i] = (light_array[i
      +                          ] << 1) + 1;
  6098  0106  0140               	movlb	0	; select bank0
  6099  0107  083C               	movf	TMR1_ISR_@i_1200,w
  6100  0108  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6101  0109  0086               	movwf	6
  6102  010A  0187               	clrf	7
  6103  010B  1403               	setc
  6104  010C  0D01               	rlf	1,w
  6105  010D  00F9               	movwf	??_TMR1_ISR_
  6106  010E  083C               	movf	TMR1_ISR_@i_1200,w
  6107  010F  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6108  0110  0086               	movwf	6
  6109  0111  0187               	clrf	7
  6110  0112  0879               	movf	??_TMR1_ISR_,w
  6111  0113  0081               	movwf	1
  6112  0114                     i1l2426:
  6113                           
  6114                           ;main.c: 728:             }
  6115  0114  3001               	movlw	1
  6116  0115  07BC               	addwf	TMR1_ISR_@i_1200,f
  6117  0116  3000               	movlw	0
  6118  0117  3DBD               	addwfc	TMR1_ISR_@i_1200+1,f
  6119  0118                     i1l2428:
  6120  0118  083D               	movf	TMR1_ISR_@i_1200+1,w
  6121  0119  3A80               	xorlw	128
  6122  011A  00F9               	movwf	??_TMR1_ISR_
  6123  011B  3080               	movlw	128
  6124  011C  0279               	subwf	??_TMR1_ISR_,w
  6125  011D  1D03               	skipz
  6126  011E  2921               	goto	u150_25
  6127  011F  3007               	movlw	7
  6128  0120  023C               	subwf	TMR1_ISR_@i_1200,w
  6129  0121                     u150_25:
  6130  0121  1C03               	skipc
  6131  0122  2924               	goto	u150_21
  6132  0123  2925               	goto	u150_20
  6133  0124                     u150_21:
  6134  0124  2906               	goto	i1l2424
  6135  0125                     u150_20:
  6136  0125  2965               	goto	i1l2444
  6137  0126                     i1l2430:
  6138  0126  0141               	movlb	1	; select bank1
  6139  0127  0845               	movf	(_count+1)^(0+128),w
  6140  0128  3A80               	xorlw	128
  6141  0129  00F9               	movwf	??_TMR1_ISR_
  6142  012A  3080               	movlw	128
  6143  012B  0279               	subwf	??_TMR1_ISR_,w
  6144  012C  1D03               	skipz
  6145  012D  2930               	goto	u151_25
  6146  012E  3078               	movlw	120
  6147  012F  0244               	subwf	_count^(0+128),w
  6148  0130                     u151_25:
  6149  0130  1803               	skipnc
  6150  0131  2933               	goto	u151_21
  6151  0132  2934               	goto	u151_20
  6152  0133                     u151_21:
  6153  0133  2965               	goto	i1l586
  6154  0134                     u151_20:
  6155  0134                     i1l2432:
  6156                           
  6157                           ;main.c: 731:         {;main.c: 732:             for (int i = 0; i < 7; i++)
  6158  0134  0140               	movlb	0	; select bank0
  6159  0135  01C2               	clrf	TMR1_ISR_@i_1201
  6160  0136  01C3               	clrf	TMR1_ISR_@i_1201+1
  6161  0137                     i1l2438:
  6162                           
  6163                           ;main.c: 733:             {;main.c: 734:                 uint8_t lights = light_array[i]
      +                           >> 7;
  6164  0137  0140               	movlb	0	; select bank0
  6165  0138  0842               	movf	TMR1_ISR_@i_1201,w
  6166  0139  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6167  013A  0086               	movwf	6
  6168  013B  0187               	clrf	7
  6169  013C  0801               	movf	1,w
  6170  013D  00F9               	movwf	??_TMR1_ISR_
  6171  013E  3007               	movlw	7
  6172  013F                     u152_25:
  6173  013F  36F9               	lsrf	??_TMR1_ISR_,f
  6174  0140  0B89               	decfsz	9,f
  6175  0141  293F               	goto	u152_25
  6176  0142  0879               	movf	??_TMR1_ISR_,w
  6177  0143  00FA               	movwf	??_TMR1_ISR_+1
  6178  0144  087A               	movf	??_TMR1_ISR_+1,w
  6179  0145  00A1               	movwf	TMR1_ISR_@lights_1202
  6180                           
  6181                           ;main.c: 735:                 light_array[i] = (light_array[i] << 1) + lights;
  6182  0146  0842               	movf	TMR1_ISR_@i_1201,w
  6183  0147  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6184  0148  0086               	movwf	6
  6185  0149  0187               	clrf	7
  6186  014A  3501               	lslf	1,w
  6187  014B  0721               	addwf	TMR1_ISR_@lights_1202,w
  6188  014C  00F9               	movwf	??_TMR1_ISR_
  6189  014D  0842               	movf	TMR1_ISR_@i_1201,w
  6190  014E  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6191  014F  0086               	movwf	6
  6192  0150  0187               	clrf	7
  6193  0151  0879               	movf	??_TMR1_ISR_,w
  6194  0152  0081               	movwf	1
  6195  0153                     i1l2440:
  6196                           
  6197                           ;main.c: 736:             }
  6198  0153  3001               	movlw	1
  6199  0154  07C2               	addwf	TMR1_ISR_@i_1201,f
  6200  0155  3000               	movlw	0
  6201  0156  3DC3               	addwfc	TMR1_ISR_@i_1201+1,f
  6202  0157                     i1l2442:
  6203  0157  0843               	movf	TMR1_ISR_@i_1201+1,w
  6204  0158  3A80               	xorlw	128
  6205  0159  00F9               	movwf	??_TMR1_ISR_
  6206  015A  3080               	movlw	128
  6207  015B  0279               	subwf	??_TMR1_ISR_,w
  6208  015C  1D03               	skipz
  6209  015D  2960               	goto	u153_25
  6210  015E  3007               	movlw	7
  6211  015F  0242               	subwf	TMR1_ISR_@i_1201,w
  6212  0160                     u153_25:
  6213  0160  1C03               	skipc
  6214  0161  2963               	goto	u153_21
  6215  0162  2964               	goto	u153_20
  6216  0163                     u153_21:
  6217  0163  2937               	goto	i1l2438
  6218  0164                     u153_20:
  6219  0164  2965               	goto	i1l2444
  6220  0165                     i1l586:
  6221  0165                     i1l2444:
  6222                           
  6223                           ;main.c: 741:     if (song2_playing)
  6224  0165  0140               	movlb	0	; select bank0
  6225  0166  0851               	movf	_song2_playing,w
  6226  0167  1903               	btfsc	3,2
  6227  0168  296A               	goto	u154_21
  6228  0169  296B               	goto	u154_20
  6229  016A                     u154_21:
  6230  016A  2A94               	goto	i1l2506
  6231  016B                     u154_20:
  6232  016B                     i1l2446:
  6233                           
  6234                           ;main.c: 742:     {;main.c: 816:         if (((song2[count] == 212) &&(song2_pre[count] 
      +                          == 0xD0))||((count == 110) || (count == 111)))
  6235  016B  30BA               	movlw	186
  6236  016C  00F9               	movwf	??_TMR1_ISR_
  6237  016D  3021               	movlw	33
  6238  016E  00FA               	movwf	??_TMR1_ISR_+1
  6239  016F  0141               	movlb	1	; select bank1
  6240  0170  0844               	movf	_count^(0+128),w
  6241  0171  0779               	addwf	??_TMR1_ISR_,w
  6242  0172  0086               	movwf	6
  6243  0173  0845               	movf	(_count+1)^(0+128),w
  6244  0174  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6245  0175  0087               	movwf	7
  6246  0176  30D4               	movlw	212
  6247  0177  0601               	xorwf	1,w
  6248  0178  1D03               	btfss	3,2
  6249  0179  297B               	goto	u155_21
  6250  017A  297C               	goto	u155_20
  6251  017B                     u155_21:
  6252  017B  298C               	goto	i1l2450
  6253  017C                     u155_20:
  6254  017C                     i1l2448:
  6255  017C  304B               	movlw	75
  6256  017D  00F9               	movwf	??_TMR1_ISR_
  6257  017E  3022               	movlw	34
  6258  017F  00FA               	movwf	??_TMR1_ISR_+1
  6259  0180  0844               	movf	_count^(0+128),w
  6260  0181  0779               	addwf	??_TMR1_ISR_,w
  6261  0182  0086               	movwf	6
  6262  0183  0845               	movf	(_count+1)^(0+128),w
  6263  0184  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6264  0185  0087               	movwf	7
  6265  0186  30D0               	movlw	208
  6266  0187  0601               	xorwf	1,w
  6267  0188  1903               	btfsc	3,2
  6268  0189  298B               	goto	u156_21
  6269  018A  298C               	goto	u156_20
  6270  018B                     u156_21:
  6271  018B  299A               	goto	i1l2454
  6272  018C                     u156_20:
  6273  018C                     i1l2450:
  6274  018C  306E               	movlw	110
  6275  018D  0644               	xorwf	_count^(0+128),w
  6276  018E  0445               	iorwf	(_count+1)^(0+128),w
  6277  018F  1903               	btfsc	3,2
  6278  0190  2992               	goto	u157_21
  6279  0191  2993               	goto	u157_20
  6280  0192                     u157_21:
  6281  0192  299A               	goto	i1l2454
  6282  0193                     u157_20:
  6283  0193                     i1l2452:
  6284  0193  306F               	movlw	111
  6285  0194  0644               	xorwf	_count^(0+128),w
  6286  0195  0445               	iorwf	(_count+1)^(0+128),w
  6287  0196  1D03               	btfss	3,2
  6288  0197  2999               	goto	u158_21
  6289  0198  299A               	goto	u158_20
  6290  0199                     u158_21:
  6291  0199  29D7               	goto	i1l2470
  6292  019A                     u158_20:
  6293  019A                     i1l2454:
  6294                           
  6295                           ;main.c: 817:         {;main.c: 818:            if (light_array[3] == 0xFF)
  6296  019A  0A3A               	incf	(_light_array^(0+128)+3),w
  6297  019B  1D03               	btfss	3,2
  6298  019C  299E               	goto	u159_21
  6299  019D  299F               	goto	u159_20
  6300  019E                     u159_21:
  6301  019E  29BC               	goto	i1l2458
  6302  019F                     u159_20:
  6303  019F                     i1l2456:
  6304                           
  6305                           ;main.c: 819:            {;main.c: 820:                 light_array[0] = 0xFF;
  6306  019F  30FF               	movlw	255
  6307  01A0  00F9               	movwf	??_TMR1_ISR_
  6308  01A1  0879               	movf	??_TMR1_ISR_,w
  6309  01A2  00B7               	movwf	_light_array^(0+128)
  6310                           
  6311                           ;main.c: 821:                 light_array[1] = 0xFF;
  6312  01A3  30FF               	movlw	255
  6313  01A4  00F9               	movwf	??_TMR1_ISR_
  6314  01A5  0879               	movf	??_TMR1_ISR_,w
  6315  01A6  00B8               	movwf	(_light_array^(0+128)+1)
  6316                           
  6317                           ;main.c: 822:                 light_array[2] = 0xF3;
  6318  01A7  30F3               	movlw	243
  6319  01A8  00F9               	movwf	??_TMR1_ISR_
  6320  01A9  0879               	movf	??_TMR1_ISR_,w
  6321  01AA  00B9               	movwf	(_light_array^(0+128)+2)
  6322                           
  6323                           ;main.c: 823:                 light_array[3] = 0xE3;
  6324  01AB  30E3               	movlw	227
  6325  01AC  00F9               	movwf	??_TMR1_ISR_
  6326  01AD  0879               	movf	??_TMR1_ISR_,w
  6327  01AE  00BA               	movwf	(_light_array^(0+128)+3)
  6328                           
  6329                           ;main.c: 824:                 light_array[4] = 0xE3;
  6330  01AF  30E3               	movlw	227
  6331  01B0  00F9               	movwf	??_TMR1_ISR_
  6332  01B1  0879               	movf	??_TMR1_ISR_,w
  6333  01B2  00BB               	movwf	(_light_array^(0+128)+4)
  6334                           
  6335                           ;main.c: 825:                 light_array[5] = 0xFF;
  6336  01B3  30FF               	movlw	255
  6337  01B4  00F9               	movwf	??_TMR1_ISR_
  6338  01B5  0879               	movf	??_TMR1_ISR_,w
  6339  01B6  00BC               	movwf	(_light_array^(0+128)+5)
  6340                           
  6341                           ;main.c: 826:                 light_array[6] = 0xFF;
  6342  01B7  30FF               	movlw	255
  6343  01B8  00F9               	movwf	??_TMR1_ISR_
  6344  01B9  0879               	movf	??_TMR1_ISR_,w
  6345  01BA  00BD               	movwf	(_light_array^(0+128)+6)
  6346                           
  6347                           ;main.c: 827:            }
  6348  01BB  2A94               	goto	i1l2506
  6349  01BC                     i1l2458:
  6350                           
  6351                           ;main.c: 829:            {;main.c: 830:                for (int i = 0; i < 7; i++)
  6352  01BC  0140               	movlb	0	; select bank0
  6353  01BD  01A4               	clrf	TMR1_ISR_@i_1203
  6354  01BE  01A5               	clrf	TMR1_ISR_@i_1203+1
  6355  01BF                     i1l2464:
  6356                           
  6357                           ;main.c: 831:                 {;main.c: 832:                     light_array[i] = 0x00;
  6358  01BF  0140               	movlb	0	; select bank0
  6359  01C0  0824               	movf	TMR1_ISR_@i_1203,w
  6360  01C1  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6361  01C2  0086               	movwf	6
  6362  01C3  0187               	clrf	7
  6363  01C4  0181               	clrf	1
  6364  01C5                     i1l2466:
  6365                           
  6366                           ;main.c: 833:                 }
  6367  01C5  3001               	movlw	1
  6368  01C6  07A4               	addwf	TMR1_ISR_@i_1203,f
  6369  01C7  3000               	movlw	0
  6370  01C8  3DA5               	addwfc	TMR1_ISR_@i_1203+1,f
  6371  01C9                     i1l2468:
  6372  01C9  0825               	movf	TMR1_ISR_@i_1203+1,w
  6373  01CA  3A80               	xorlw	128
  6374  01CB  00F9               	movwf	??_TMR1_ISR_
  6375  01CC  3080               	movlw	128
  6376  01CD  0279               	subwf	??_TMR1_ISR_,w
  6377  01CE  1D03               	skipz
  6378  01CF  29D2               	goto	u160_25
  6379  01D0  3007               	movlw	7
  6380  01D1  0224               	subwf	TMR1_ISR_@i_1203,w
  6381  01D2                     u160_25:
  6382  01D2  1C03               	skipc
  6383  01D3  29D5               	goto	u160_21
  6384  01D4  29D6               	goto	u160_20
  6385  01D5                     u160_21:
  6386  01D5  29BF               	goto	i1l2464
  6387  01D6                     u160_20:
  6388  01D6  2A94               	goto	i1l2506
  6389  01D7                     i1l2470:
  6390  01D7  30BA               	movlw	186
  6391  01D8  00F9               	movwf	??_TMR1_ISR_
  6392  01D9  3021               	movlw	33
  6393  01DA  00FA               	movwf	??_TMR1_ISR_+1
  6394  01DB  0844               	movf	_count^(0+128),w
  6395  01DC  0779               	addwf	??_TMR1_ISR_,w
  6396  01DD  0086               	movwf	6
  6397  01DE  0845               	movf	(_count+1)^(0+128),w
  6398  01DF  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6399  01E0  0087               	movwf	7
  6400  01E1  0801               	movf	1,w
  6401  01E2  1903               	btfsc	3,2
  6402  01E3  29E5               	goto	u161_21
  6403  01E4  29E6               	goto	u161_20
  6404  01E5                     u161_21:
  6405  01E5  29F6               	goto	i1l2474
  6406  01E6                     u161_20:
  6407  01E6                     i1l2472:
  6408  01E6  30BA               	movlw	186
  6409  01E7  00F9               	movwf	??_TMR1_ISR_
  6410  01E8  3021               	movlw	33
  6411  01E9  00FA               	movwf	??_TMR1_ISR_+1
  6412  01EA  0844               	movf	_count^(0+128),w
  6413  01EB  0779               	addwf	??_TMR1_ISR_,w
  6414  01EC  0086               	movwf	6
  6415  01ED  0845               	movf	(_count+1)^(0+128),w
  6416  01EE  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6417  01EF  0087               	movwf	7
  6418  01F0  3032               	movlw	50
  6419  01F1  0601               	xorwf	1,w
  6420  01F2  1D03               	btfss	3,2
  6421  01F3  29F5               	goto	u162_21
  6422  01F4  29F6               	goto	u162_20
  6423  01F5                     u162_21:
  6424  01F5  2A14               	goto	i1l2486
  6425  01F6                     u162_20:
  6426  01F6                     i1l2474:
  6427                           
  6428                           ;main.c: 837:         {;main.c: 838:             for (int i = 0; i < 7; i++)
  6429  01F6  0140               	movlb	0	; select bank0
  6430  01F7  01A6               	clrf	TMR1_ISR_@i_1204
  6431  01F8  01A7               	clrf	TMR1_ISR_@i_1204+1
  6432  01F9                     i1l2480:
  6433                           
  6434                           ;main.c: 839:             {;main.c: 840:                 light_array[i] = 0xFF;
  6435  01F9  30FF               	movlw	255
  6436  01FA  00F9               	movwf	??_TMR1_ISR_
  6437  01FB  0140               	movlb	0	; select bank0
  6438  01FC  0826               	movf	TMR1_ISR_@i_1204,w
  6439  01FD  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6440  01FE  0086               	movwf	6
  6441  01FF  0187               	clrf	7
  6442  0200  0879               	movf	??_TMR1_ISR_,w
  6443  0201  0081               	movwf	1
  6444  0202                     i1l2482:
  6445                           
  6446                           ;main.c: 841:             }
  6447  0202  3001               	movlw	1
  6448  0203  07A6               	addwf	TMR1_ISR_@i_1204,f
  6449  0204  3000               	movlw	0
  6450  0205  3DA7               	addwfc	TMR1_ISR_@i_1204+1,f
  6451  0206                     i1l2484:
  6452  0206  0827               	movf	TMR1_ISR_@i_1204+1,w
  6453  0207  3A80               	xorlw	128
  6454  0208  00F9               	movwf	??_TMR1_ISR_
  6455  0209  3080               	movlw	128
  6456  020A  0279               	subwf	??_TMR1_ISR_,w
  6457  020B  1D03               	skipz
  6458  020C  2A0F               	goto	u163_25
  6459  020D  3007               	movlw	7
  6460  020E  0226               	subwf	TMR1_ISR_@i_1204,w
  6461  020F                     u163_25:
  6462  020F  1C03               	skipc
  6463  0210  2A12               	goto	u163_21
  6464  0211  2A13               	goto	u163_20
  6465  0212                     u163_21:
  6466  0212  29F9               	goto	i1l2480
  6467  0213                     u163_20:
  6468  0213  2A94               	goto	i1l2506
  6469  0214                     i1l2486:
  6470  0214  0838               	movf	(_light_array^(0+128)+1),w
  6471  0215  1D03               	btfss	3,2
  6472  0216  2A18               	goto	u164_21
  6473  0217  2A19               	goto	u164_20
  6474  0218                     u164_21:
  6475  0218  2A48               	goto	i1l2492
  6476  0219                     u164_20:
  6477  0219                     i1l2488:
  6478  0219  30BA               	movlw	186
  6479  021A  00F9               	movwf	??_TMR1_ISR_
  6480  021B  3021               	movlw	33
  6481  021C  00FA               	movwf	??_TMR1_ISR_+1
  6482  021D  0844               	movf	_count^(0+128),w
  6483  021E  0779               	addwf	??_TMR1_ISR_,w
  6484  021F  0086               	movwf	6
  6485  0220  0845               	movf	(_count+1)^(0+128),w
  6486  0221  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6487  0222  0087               	movwf	7
  6488  0223  0801               	movf	1,w
  6489  0224  0140               	movlb	0	; select bank0
  6490  0225  0650               	xorwf	_last_note,w
  6491  0226  1903               	skipnz
  6492  0227  2A29               	goto	u165_21
  6493  0228  2A2A               	goto	u165_20
  6494  0229                     u165_21:
  6495  0229  2A48               	goto	i1l2492
  6496  022A                     u165_20:
  6497  022A                     i1l2490:
  6498                           
  6499                           ;main.c: 844:         {;main.c: 845:             light_array[0] = 0x88;
  6500  022A  3088               	movlw	136
  6501  022B  00F9               	movwf	??_TMR1_ISR_
  6502  022C  0879               	movf	??_TMR1_ISR_,w
  6503  022D  0141               	movlb	1	; select bank1
  6504  022E  00B7               	movwf	_light_array^(0+128)
  6505                           
  6506                           ;main.c: 846:             light_array[1] = 0x44;
  6507  022F  3044               	movlw	68
  6508  0230  00F9               	movwf	??_TMR1_ISR_
  6509  0231  0879               	movf	??_TMR1_ISR_,w
  6510  0232  00B8               	movwf	(_light_array^(0+128)+1)
  6511                           
  6512                           ;main.c: 847:             light_array[2] = 0x22;
  6513  0233  3022               	movlw	34
  6514  0234  00F9               	movwf	??_TMR1_ISR_
  6515  0235  0879               	movf	??_TMR1_ISR_,w
  6516  0236  00B9               	movwf	(_light_array^(0+128)+2)
  6517                           
  6518                           ;main.c: 848:             light_array[3] = 0x11;
  6519  0237  3011               	movlw	17
  6520  0238  00F9               	movwf	??_TMR1_ISR_
  6521  0239  0879               	movf	??_TMR1_ISR_,w
  6522  023A  00BA               	movwf	(_light_array^(0+128)+3)
  6523                           
  6524                           ;main.c: 849:             light_array[4] = 0x88;
  6525  023B  3088               	movlw	136
  6526  023C  00F9               	movwf	??_TMR1_ISR_
  6527  023D  0879               	movf	??_TMR1_ISR_,w
  6528  023E  00BB               	movwf	(_light_array^(0+128)+4)
  6529                           
  6530                           ;main.c: 850:             light_array[5] = 0x44;
  6531  023F  3044               	movlw	68
  6532  0240  00F9               	movwf	??_TMR1_ISR_
  6533  0241  0879               	movf	??_TMR1_ISR_,w
  6534  0242  00BC               	movwf	(_light_array^(0+128)+5)
  6535                           
  6536                           ;main.c: 851:             light_array[6] = 0x22;
  6537  0243  3022               	movlw	34
  6538  0244  00F9               	movwf	??_TMR1_ISR_
  6539  0245  0879               	movf	??_TMR1_ISR_,w
  6540  0246  00BD               	movwf	(_light_array^(0+128)+6)
  6541                           
  6542                           ;main.c: 852:         }
  6543  0247  2A94               	goto	i1l2506
  6544  0248                     i1l2492:
  6545  0248  30BA               	movlw	186
  6546  0249  00F9               	movwf	??_TMR1_ISR_
  6547  024A  3021               	movlw	33
  6548  024B  00FA               	movwf	??_TMR1_ISR_+1
  6549  024C  0141               	movlb	1	; select bank1
  6550  024D  0844               	movf	_count^(0+128),w
  6551  024E  0779               	addwf	??_TMR1_ISR_,w
  6552  024F  0086               	movwf	6
  6553  0250  0845               	movf	(_count+1)^(0+128),w
  6554  0251  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6555  0252  0087               	movwf	7
  6556  0253  0801               	movf	1,w
  6557  0254  0140               	movlb	0	; select bank0
  6558  0255  0650               	xorwf	_last_note,w
  6559  0256  1903               	skipnz
  6560  0257  2A59               	goto	u166_21
  6561  0258  2A5A               	goto	u166_20
  6562  0259                     u166_21:
  6563  0259  2A94               	goto	i1l2506
  6564  025A                     u166_20:
  6565  025A                     i1l2494:
  6566                           
  6567                           ;main.c: 854:         {;main.c: 855:             for (int i = 0; i < 7; i++)
  6568  025A  01C4               	clrf	TMR1_ISR_@i_1205
  6569  025B  01C5               	clrf	TMR1_ISR_@i_1205+1
  6570  025C                     i1l2496:
  6571  025C  0845               	movf	TMR1_ISR_@i_1205+1,w
  6572  025D  3A80               	xorlw	128
  6573  025E  00F9               	movwf	??_TMR1_ISR_
  6574  025F  3080               	movlw	128
  6575  0260  0279               	subwf	??_TMR1_ISR_,w
  6576  0261  1D03               	skipz
  6577  0262  2A65               	goto	u167_25
  6578  0263  3007               	movlw	7
  6579  0264  0244               	subwf	TMR1_ISR_@i_1205,w
  6580  0265                     u167_25:
  6581  0265  1C03               	skipc
  6582  0266  2A68               	goto	u167_21
  6583  0267  2A69               	goto	u167_20
  6584  0268                     u167_21:
  6585  0268  2A6A               	goto	i1l2500
  6586  0269                     u167_20:
  6587  0269  2A94               	goto	i1l2506
  6588  026A                     i1l2500:
  6589                           
  6590                           ;main.c: 856:             {;main.c: 857:                 light_array[i] =(light_array[i]
      +                           << 1) + light_array[i]*2/3;
  6591  026A  3003               	movlw	3
  6592  026B  00F0               	movwf	___awdiv@divisor
  6593  026C  3000               	movlw	0
  6594  026D  00F1               	movwf	___awdiv@divisor+1
  6595  026E  0140               	movlb	0	; select bank0
  6596  026F  0844               	movf	TMR1_ISR_@i_1205,w
  6597  0270  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6598  0271  0086               	movwf	6
  6599  0272  0187               	clrf	7
  6600  0273  0801               	movf	1,w
  6601  0274  00F9               	movwf	??_TMR1_ISR_
  6602  0275  01FA               	clrf	??_TMR1_ISR_+1
  6603  0276  3579               	lslf	??_TMR1_ISR_,w
  6604  0277  00F2               	movwf	___awdiv@dividend
  6605  0278  0D7A               	rlf	??_TMR1_ISR_+1,w
  6606  0279  00F3               	movwf	___awdiv@dividend+1
  6607  027A  318C  242F  3180   	fcall	___awdiv
  6608  027D  0870               	movf	?___awdiv,w
  6609  027E  00FB               	movwf	??_TMR1_ISR_+2
  6610  027F  0871               	movf	?___awdiv+1,w
  6611  0280  00FC               	movwf	??_TMR1_ISR_+3
  6612  0281  0140               	movlb	0	; select bank0
  6613  0282  0844               	movf	TMR1_ISR_@i_1205,w
  6614  0283  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6615  0284  0086               	movwf	6
  6616  0285  0187               	clrf	7
  6617  0286  3501               	lslf	1,w
  6618  0287  077B               	addwf	??_TMR1_ISR_+2,w
  6619  0288  00FD               	movwf	??_TMR1_ISR_+4
  6620  0289  0844               	movf	TMR1_ISR_@i_1205,w
  6621  028A  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6622  028B  0086               	movwf	6
  6623  028C  0187               	clrf	7
  6624  028D  087D               	movf	??_TMR1_ISR_+4,w
  6625  028E  0081               	movwf	1
  6626  028F                     i1l2502:
  6627                           
  6628                           ;main.c: 858:             }
  6629  028F  3001               	movlw	1
  6630  0290  07C4               	addwf	TMR1_ISR_@i_1205,f
  6631  0291  3000               	movlw	0
  6632  0292  3DC5               	addwfc	TMR1_ISR_@i_1205+1,f
  6633  0293  2A5C               	goto	i1l2496
  6634  0294                     i1l2506:
  6635                           
  6636                           ;main.c: 864:     if (song3_playing)
  6637  0294  0140               	movlb	0	; select bank0
  6638  0295  0852               	movf	_song3_playing,w
  6639  0296  1903               	btfsc	3,2
  6640  0297  2A99               	goto	u168_21
  6641  0298  2A9A               	goto	u168_20
  6642  0299                     u168_21:
  6643  0299  2D29               	goto	i1l2692
  6644  029A                     u168_20:
  6645  029A                     i1l2508:
  6646                           
  6647                           ;main.c: 865:     {;main.c: 978:         if (count < 10)
  6648  029A  0141               	movlb	1	; select bank1
  6649  029B  0845               	movf	(_count+1)^(0+128),w
  6650  029C  3A80               	xorlw	128
  6651  029D  00F9               	movwf	??_TMR1_ISR_
  6652  029E  3080               	movlw	128
  6653  029F  0279               	subwf	??_TMR1_ISR_,w
  6654  02A0  1D03               	skipz
  6655  02A1  2AA4               	goto	u169_25
  6656  02A2  300A               	movlw	10
  6657  02A3  0244               	subwf	_count^(0+128),w
  6658  02A4                     u169_25:
  6659  02A4  1803               	skipnc
  6660  02A5  2AA7               	goto	u169_21
  6661  02A6  2AA8               	goto	u169_20
  6662  02A7                     u169_21:
  6663  02A7  2AC7               	goto	i1l2522
  6664  02A8                     u169_20:
  6665  02A8                     i1l2510:
  6666                           
  6667                           ;main.c: 979:         {;main.c: 980:            for (int i = 0; i < 7; i++)
  6668  02A8  0140               	movlb	0	; select bank0
  6669  02A9  01A8               	clrf	TMR1_ISR_@i_1206
  6670  02AA  01A9               	clrf	TMR1_ISR_@i_1206+1
  6671  02AB                     i1l2512:
  6672  02AB  0829               	movf	TMR1_ISR_@i_1206+1,w
  6673  02AC  3A80               	xorlw	128
  6674  02AD  00F9               	movwf	??_TMR1_ISR_
  6675  02AE  3080               	movlw	128
  6676  02AF  0279               	subwf	??_TMR1_ISR_,w
  6677  02B0  1D03               	skipz
  6678  02B1  2AB4               	goto	u170_25
  6679  02B2  3007               	movlw	7
  6680  02B3  0228               	subwf	TMR1_ISR_@i_1206,w
  6681  02B4                     u170_25:
  6682  02B4  1C03               	skipc
  6683  02B5  2AB7               	goto	u170_21
  6684  02B6  2AB8               	goto	u170_20
  6685  02B7                     u170_21:
  6686  02B7  2AB9               	goto	i1l2516
  6687  02B8                     u170_20:
  6688  02B8  2D29               	goto	i1l2692
  6689  02B9                     i1l2516:
  6690                           
  6691                           ;main.c: 981:              {;main.c: 982:                  light_array[i] = 0xF3;
  6692  02B9  30F3               	movlw	243
  6693  02BA  00F9               	movwf	??_TMR1_ISR_
  6694  02BB  0140               	movlb	0	; select bank0
  6695  02BC  0828               	movf	TMR1_ISR_@i_1206,w
  6696  02BD  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6697  02BE  0086               	movwf	6
  6698  02BF  0187               	clrf	7
  6699  02C0  0879               	movf	??_TMR1_ISR_,w
  6700  02C1  0081               	movwf	1
  6701  02C2                     i1l2518:
  6702                           
  6703                           ;main.c: 983:              }
  6704  02C2  3001               	movlw	1
  6705  02C3  07A8               	addwf	TMR1_ISR_@i_1206,f
  6706  02C4  3000               	movlw	0
  6707  02C5  3DA9               	addwfc	TMR1_ISR_@i_1206+1,f
  6708  02C6  2AAB               	goto	i1l2512
  6709  02C7                     i1l2522:
  6710  02C7  0141               	movlb	1	; select bank1
  6711  02C8  0845               	movf	(_count+1)^(0+128),w
  6712  02C9  3A80               	xorlw	128
  6713  02CA  00F9               	movwf	??_TMR1_ISR_
  6714  02CB  3080               	movlw	128
  6715  02CC  0279               	subwf	??_TMR1_ISR_,w
  6716  02CD  1D03               	skipz
  6717  02CE  2AD1               	goto	u171_25
  6718  02CF  3014               	movlw	20
  6719  02D0  0244               	subwf	_count^(0+128),w
  6720  02D1                     u171_25:
  6721  02D1  1803               	skipnc
  6722  02D2  2AD4               	goto	u171_21
  6723  02D3  2AD5               	goto	u171_20
  6724  02D4                     u171_21:
  6725  02D4  2AF4               	goto	i1l2536
  6726  02D5                     u171_20:
  6727  02D5                     i1l2524:
  6728                           
  6729                           ;main.c: 986:         {;main.c: 987:            for (int i = 0; i < 7; i++)
  6730  02D5  0140               	movlb	0	; select bank0
  6731  02D6  01AA               	clrf	TMR1_ISR_@i_1207
  6732  02D7  01AB               	clrf	TMR1_ISR_@i_1207+1
  6733  02D8                     i1l2526:
  6734  02D8  082B               	movf	TMR1_ISR_@i_1207+1,w
  6735  02D9  3A80               	xorlw	128
  6736  02DA  00F9               	movwf	??_TMR1_ISR_
  6737  02DB  3080               	movlw	128
  6738  02DC  0279               	subwf	??_TMR1_ISR_,w
  6739  02DD  1D03               	skipz
  6740  02DE  2AE1               	goto	u172_25
  6741  02DF  3007               	movlw	7
  6742  02E0  022A               	subwf	TMR1_ISR_@i_1207,w
  6743  02E1                     u172_25:
  6744  02E1  1C03               	skipc
  6745  02E2  2AE4               	goto	u172_21
  6746  02E3  2AE5               	goto	u172_20
  6747  02E4                     u172_21:
  6748  02E4  2AE6               	goto	i1l2530
  6749  02E5                     u172_20:
  6750  02E5  2D29               	goto	i1l2692
  6751  02E6                     i1l2530:
  6752                           
  6753                           ;main.c: 988:              {;main.c: 989:                  light_array[i] = 0x0F;
  6754  02E6  300F               	movlw	15
  6755  02E7  00F9               	movwf	??_TMR1_ISR_
  6756  02E8  0140               	movlb	0	; select bank0
  6757  02E9  082A               	movf	TMR1_ISR_@i_1207,w
  6758  02EA  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6759  02EB  0086               	movwf	6
  6760  02EC  0187               	clrf	7
  6761  02ED  0879               	movf	??_TMR1_ISR_,w
  6762  02EE  0081               	movwf	1
  6763  02EF                     i1l2532:
  6764                           
  6765                           ;main.c: 990:              }
  6766  02EF  3001               	movlw	1
  6767  02F0  07AA               	addwf	TMR1_ISR_@i_1207,f
  6768  02F1  3000               	movlw	0
  6769  02F2  3DAB               	addwfc	TMR1_ISR_@i_1207+1,f
  6770  02F3  2AD8               	goto	i1l2526
  6771  02F4                     i1l2536:
  6772  02F4  0141               	movlb	1	; select bank1
  6773  02F5  0845               	movf	(_count+1)^(0+128),w
  6774  02F6  3A80               	xorlw	128
  6775  02F7  00F9               	movwf	??_TMR1_ISR_
  6776  02F8  3080               	movlw	128
  6777  02F9  0279               	subwf	??_TMR1_ISR_,w
  6778  02FA  1D03               	skipz
  6779  02FB  2AFE               	goto	u173_25
  6780  02FC  301D               	movlw	29
  6781  02FD  0244               	subwf	_count^(0+128),w
  6782  02FE                     u173_25:
  6783  02FE  1803               	skipnc
  6784  02FF  2B01               	goto	u173_21
  6785  0300  2B02               	goto	u173_20
  6786  0301                     u173_21:
  6787  0301  2B21               	goto	i1l2550
  6788  0302                     u173_20:
  6789  0302                     i1l2538:
  6790                           
  6791                           ;main.c: 993:         {;main.c: 994:            for (int i = 0; i < 7; i++)
  6792  0302  0140               	movlb	0	; select bank0
  6793  0303  01AC               	clrf	TMR1_ISR_@i_1208
  6794  0304  01AD               	clrf	TMR1_ISR_@i_1208+1
  6795  0305                     i1l2540:
  6796  0305  082D               	movf	TMR1_ISR_@i_1208+1,w
  6797  0306  3A80               	xorlw	128
  6798  0307  00F9               	movwf	??_TMR1_ISR_
  6799  0308  3080               	movlw	128
  6800  0309  0279               	subwf	??_TMR1_ISR_,w
  6801  030A  1D03               	skipz
  6802  030B  2B0E               	goto	u174_25
  6803  030C  3007               	movlw	7
  6804  030D  022C               	subwf	TMR1_ISR_@i_1208,w
  6805  030E                     u174_25:
  6806  030E  1C03               	skipc
  6807  030F  2B11               	goto	u174_21
  6808  0310  2B12               	goto	u174_20
  6809  0311                     u174_21:
  6810  0311  2B13               	goto	i1l2544
  6811  0312                     u174_20:
  6812  0312  2D29               	goto	i1l2692
  6813  0313                     i1l2544:
  6814                           
  6815                           ;main.c: 995:              {;main.c: 996:                  light_array[i] = 0xFC;
  6816  0313  30FC               	movlw	252
  6817  0314  00F9               	movwf	??_TMR1_ISR_
  6818  0315  0140               	movlb	0	; select bank0
  6819  0316  082C               	movf	TMR1_ISR_@i_1208,w
  6820  0317  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6821  0318  0086               	movwf	6
  6822  0319  0187               	clrf	7
  6823  031A  0879               	movf	??_TMR1_ISR_,w
  6824  031B  0081               	movwf	1
  6825  031C                     i1l2546:
  6826                           
  6827                           ;main.c: 997:              }
  6828  031C  3001               	movlw	1
  6829  031D  07AC               	addwf	TMR1_ISR_@i_1208,f
  6830  031E  3000               	movlw	0
  6831  031F  3DAD               	addwfc	TMR1_ISR_@i_1208+1,f
  6832  0320  2B05               	goto	i1l2540
  6833  0321                     i1l2550:
  6834  0321  301D               	movlw	29
  6835  0322  0141               	movlb	1	; select bank1
  6836  0323  0644               	xorwf	_count^(0+128),w
  6837  0324  0445               	iorwf	(_count+1)^(0+128),w
  6838  0325  1D03               	btfss	3,2
  6839  0326  2B28               	goto	u175_21
  6840  0327  2B29               	goto	u175_20
  6841  0328                     u175_21:
  6842  0328  2B48               	goto	i1l2564
  6843  0329                     u175_20:
  6844  0329                     i1l2552:
  6845                           
  6846                           ;main.c: 1000:         {;main.c: 1001:            for (int i = 0; i < 7; i++)
  6847  0329  0140               	movlb	0	; select bank0
  6848  032A  01AE               	clrf	TMR1_ISR_@i_1209
  6849  032B  01AF               	clrf	TMR1_ISR_@i_1209+1
  6850  032C                     i1l2554:
  6851  032C  082F               	movf	TMR1_ISR_@i_1209+1,w
  6852  032D  3A80               	xorlw	128
  6853  032E  00F9               	movwf	??_TMR1_ISR_
  6854  032F  3080               	movlw	128
  6855  0330  0279               	subwf	??_TMR1_ISR_,w
  6856  0331  1D03               	skipz
  6857  0332  2B35               	goto	u176_25
  6858  0333  3007               	movlw	7
  6859  0334  022E               	subwf	TMR1_ISR_@i_1209,w
  6860  0335                     u176_25:
  6861  0335  1C03               	skipc
  6862  0336  2B38               	goto	u176_21
  6863  0337  2B39               	goto	u176_20
  6864  0338                     u176_21:
  6865  0338  2B3A               	goto	i1l2558
  6866  0339                     u176_20:
  6867  0339  2D29               	goto	i1l2692
  6868  033A                     i1l2558:
  6869                           
  6870                           ;main.c: 1002:              {;main.c: 1003:                  light_array[i] = 0x7F;
  6871  033A  307F               	movlw	127
  6872  033B  00F9               	movwf	??_TMR1_ISR_
  6873  033C  0140               	movlb	0	; select bank0
  6874  033D  082E               	movf	TMR1_ISR_@i_1209,w
  6875  033E  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6876  033F  0086               	movwf	6
  6877  0340  0187               	clrf	7
  6878  0341  0879               	movf	??_TMR1_ISR_,w
  6879  0342  0081               	movwf	1
  6880  0343                     i1l2560:
  6881                           
  6882                           ;main.c: 1004:              }
  6883  0343  3001               	movlw	1
  6884  0344  07AE               	addwf	TMR1_ISR_@i_1209,f
  6885  0345  3000               	movlw	0
  6886  0346  3DAF               	addwfc	TMR1_ISR_@i_1209+1,f
  6887  0347  2B2C               	goto	i1l2554
  6888  0348                     i1l2564:
  6889  0348  301C               	movlw	28
  6890  0349  00F9               	movwf	??_TMR1_ISR_
  6891  034A  3021               	movlw	33
  6892  034B  00FA               	movwf	??_TMR1_ISR_+1
  6893  034C  0844               	movf	_count^(0+128),w
  6894  034D  0779               	addwf	??_TMR1_ISR_,w
  6895  034E  0086               	movwf	6
  6896  034F  0845               	movf	(_count+1)^(0+128),w
  6897  0350  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6898  0351  0087               	movwf	7
  6899  0352  0801               	movf	1,w
  6900  0353  1D03               	btfss	3,2
  6901  0354  2B56               	goto	u177_21
  6902  0355  2B57               	goto	u177_20
  6903  0356                     u177_21:
  6904  0356  2B76               	goto	i1l2578
  6905  0357                     u177_20:
  6906  0357                     i1l2566:
  6907                           
  6908                           ;main.c: 1007:         {;main.c: 1008:            for (int i = 0; i < 7; i++)
  6909  0357  0140               	movlb	0	; select bank0
  6910  0358  01B0               	clrf	TMR1_ISR_@i_1210
  6911  0359  01B1               	clrf	TMR1_ISR_@i_1210+1
  6912  035A                     i1l2568:
  6913  035A  0831               	movf	TMR1_ISR_@i_1210+1,w
  6914  035B  3A80               	xorlw	128
  6915  035C  00F9               	movwf	??_TMR1_ISR_
  6916  035D  3080               	movlw	128
  6917  035E  0279               	subwf	??_TMR1_ISR_,w
  6918  035F  1D03               	skipz
  6919  0360  2B63               	goto	u178_25
  6920  0361  3007               	movlw	7
  6921  0362  0230               	subwf	TMR1_ISR_@i_1210,w
  6922  0363                     u178_25:
  6923  0363  1C03               	skipc
  6924  0364  2B66               	goto	u178_21
  6925  0365  2B67               	goto	u178_20
  6926  0366                     u178_21:
  6927  0366  2B68               	goto	i1l2572
  6928  0367                     u178_20:
  6929  0367  2D29               	goto	i1l2692
  6930  0368                     i1l2572:
  6931                           
  6932                           ;main.c: 1009:            {;main.c: 1010:                 light_array[i] = 0x7F;
  6933  0368  307F               	movlw	127
  6934  0369  00F9               	movwf	??_TMR1_ISR_
  6935  036A  0140               	movlb	0	; select bank0
  6936  036B  0830               	movf	TMR1_ISR_@i_1210,w
  6937  036C  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6938  036D  0086               	movwf	6
  6939  036E  0187               	clrf	7
  6940  036F  0879               	movf	??_TMR1_ISR_,w
  6941  0370  0081               	movwf	1
  6942  0371                     i1l2574:
  6943                           
  6944                           ;main.c: 1011:            }
  6945  0371  3001               	movlw	1
  6946  0372  07B0               	addwf	TMR1_ISR_@i_1210,f
  6947  0373  3000               	movlw	0
  6948  0374  3DB1               	addwfc	TMR1_ISR_@i_1210+1,f
  6949  0375  2B5A               	goto	i1l2568
  6950  0376                     i1l2578:
  6951  0376  0845               	movf	(_count+1)^(0+128),w
  6952  0377  3A80               	xorlw	128
  6953  0378  00F9               	movwf	??_TMR1_ISR_
  6954  0379  3080               	movlw	128
  6955  037A  0279               	subwf	??_TMR1_ISR_,w
  6956  037B  1D03               	skipz
  6957  037C  2B7F               	goto	u179_25
  6958  037D  302E               	movlw	46
  6959  037E  0244               	subwf	_count^(0+128),w
  6960  037F                     u179_25:
  6961  037F  1803               	skipnc
  6962  0380  2B82               	goto	u179_21
  6963  0381  2B83               	goto	u179_20
  6964  0382                     u179_21:
  6965  0382  2BB7               	goto	i1l2594
  6966  0383                     u179_20:
  6967  0383                     i1l2580:
  6968  0383  301C               	movlw	28
  6969  0384  00F9               	movwf	??_TMR1_ISR_
  6970  0385  3021               	movlw	33
  6971  0386  00FA               	movwf	??_TMR1_ISR_+1
  6972  0387  0141               	movlb	1	; select bank1
  6973  0388  0844               	movf	_count^(0+128),w
  6974  0389  0779               	addwf	??_TMR1_ISR_,w
  6975  038A  0086               	movwf	6
  6976  038B  0845               	movf	(_count+1)^(0+128),w
  6977  038C  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6978  038D  0087               	movwf	7
  6979  038E  0801               	movf	1,w
  6980  038F  0140               	movlb	0	; select bank0
  6981  0390  0650               	xorwf	_last_note,w
  6982  0391  1903               	skipnz
  6983  0392  2B94               	goto	u180_21
  6984  0393  2B95               	goto	u180_20
  6985  0394                     u180_21:
  6986  0394  2BB7               	goto	i1l2594
  6987  0395                     u180_20:
  6988  0395                     i1l2582:
  6989                           
  6990                           ;main.c: 1014:        {;main.c: 1015:            for (int i = 0; i < 7; i++)
  6991  0395  01BE               	clrf	TMR1_ISR_@i_1211
  6992  0396  01BF               	clrf	TMR1_ISR_@i_1211+1
  6993  0397                     i1l2584:
  6994  0397  083F               	movf	TMR1_ISR_@i_1211+1,w
  6995  0398  3A80               	xorlw	128
  6996  0399  00F9               	movwf	??_TMR1_ISR_
  6997  039A  3080               	movlw	128
  6998  039B  0279               	subwf	??_TMR1_ISR_,w
  6999  039C  1D03               	skipz
  7000  039D  2BA0               	goto	u181_25
  7001  039E  3007               	movlw	7
  7002  039F  023E               	subwf	TMR1_ISR_@i_1211,w
  7003  03A0                     u181_25:
  7004  03A0  1C03               	skipc
  7005  03A1  2BA3               	goto	u181_21
  7006  03A2  2BA4               	goto	u181_20
  7007  03A3                     u181_21:
  7008  03A3  2BA5               	goto	i1l2588
  7009  03A4                     u181_20:
  7010  03A4  2D29               	goto	i1l2692
  7011  03A5                     i1l2588:
  7012                           
  7013                           ;main.c: 1016:            {;main.c: 1017:                 light_array[i] = light_array[i
      +                          ] >> 1;
  7014  03A5  0140               	movlb	0	; select bank0
  7015  03A6  083E               	movf	TMR1_ISR_@i_1211,w
  7016  03A7  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7017  03A8  0086               	movwf	6
  7018  03A9  0187               	clrf	7
  7019  03AA  3601               	lsrf	1,w
  7020  03AB  00F9               	movwf	??_TMR1_ISR_
  7021  03AC  083E               	movf	TMR1_ISR_@i_1211,w
  7022  03AD  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7023  03AE  0086               	movwf	6
  7024  03AF  0187               	clrf	7
  7025  03B0  0879               	movf	??_TMR1_ISR_,w
  7026  03B1  0081               	movwf	1
  7027  03B2                     i1l2590:
  7028                           
  7029                           ;main.c: 1018:            }
  7030  03B2  3001               	movlw	1
  7031  03B3  07BE               	addwf	TMR1_ISR_@i_1211,f
  7032  03B4  3000               	movlw	0
  7033  03B5  3DBF               	addwfc	TMR1_ISR_@i_1211+1,f
  7034  03B6  2B97               	goto	i1l2584
  7035  03B7                     i1l2594:
  7036  03B7  0141               	movlb	1	; select bank1
  7037  03B8  0845               	movf	(_count+1)^(0+128),w
  7038  03B9  3A80               	xorlw	128
  7039  03BA  00F9               	movwf	??_TMR1_ISR_
  7040  03BB  3080               	movlw	128
  7041  03BC  0279               	subwf	??_TMR1_ISR_,w
  7042  03BD  1D03               	skipz
  7043  03BE  2BC1               	goto	u182_25
  7044  03BF  303E               	movlw	62
  7045  03C0  0244               	subwf	_count^(0+128),w
  7046  03C1                     u182_25:
  7047  03C1  1803               	skipnc
  7048  03C2  2BC4               	goto	u182_21
  7049  03C3  2BC5               	goto	u182_20
  7050  03C4                     u182_21:
  7051  03C4  2BEF               	goto	i1l2610
  7052  03C5                     u182_20:
  7053  03C5                     i1l2596:
  7054  03C5  0141               	movlb	1	; select bank1
  7055  03C6  0845               	movf	(_count+1)^(0+128),w
  7056  03C7  3A80               	xorlw	128
  7057  03C8  00F9               	movwf	??_TMR1_ISR_
  7058  03C9  3080               	movlw	128
  7059  03CA  0279               	subwf	??_TMR1_ISR_,w
  7060  03CB  1D03               	skipz
  7061  03CC  2BCF               	goto	u183_25
  7062  03CD  302E               	movlw	46
  7063  03CE  0244               	subwf	_count^(0+128),w
  7064  03CF                     u183_25:
  7065  03CF  1C03               	skipc
  7066  03D0  2BD2               	goto	u183_21
  7067  03D1  2BD3               	goto	u183_20
  7068  03D2                     u183_21:
  7069  03D2  2BEF               	goto	i1l2610
  7070  03D3                     u183_20:
  7071  03D3                     i1l2598:
  7072                           
  7073                           ;main.c: 1021:         {;main.c: 1022:            for (int i = 0; i < 7; i++)
  7074  03D3  0140               	movlb	0	; select bank0
  7075  03D4  01B2               	clrf	TMR1_ISR_@i_1212
  7076  03D5  01B3               	clrf	TMR1_ISR_@i_1212+1
  7077  03D6                     i1l2600:
  7078  03D6  0833               	movf	TMR1_ISR_@i_1212+1,w
  7079  03D7  3A80               	xorlw	128
  7080  03D8  00F9               	movwf	??_TMR1_ISR_
  7081  03D9  3080               	movlw	128
  7082  03DA  0279               	subwf	??_TMR1_ISR_,w
  7083  03DB  1D03               	skipz
  7084  03DC  2BDF               	goto	u184_25
  7085  03DD  3007               	movlw	7
  7086  03DE  0232               	subwf	TMR1_ISR_@i_1212,w
  7087  03DF                     u184_25:
  7088  03DF  1C03               	skipc
  7089  03E0  2BE2               	goto	u184_21
  7090  03E1  2BE3               	goto	u184_20
  7091  03E2                     u184_21:
  7092  03E2  2BE4               	goto	i1l2604
  7093  03E3                     u184_20:
  7094  03E3  2D29               	goto	i1l2692
  7095  03E4                     i1l2604:
  7096                           
  7097                           ;main.c: 1023:            {;main.c: 1024:                 light_array[i] = 0x00;
  7098  03E4  0140               	movlb	0	; select bank0
  7099  03E5  0832               	movf	TMR1_ISR_@i_1212,w
  7100  03E6  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7101  03E7  0086               	movwf	6
  7102  03E8  0187               	clrf	7
  7103  03E9  0181               	clrf	1
  7104  03EA                     i1l2606:
  7105                           
  7106                           ;main.c: 1025:            }
  7107  03EA  3001               	movlw	1
  7108  03EB  07B2               	addwf	TMR1_ISR_@i_1212,f
  7109  03EC  3000               	movlw	0
  7110  03ED  3DB3               	addwfc	TMR1_ISR_@i_1212+1,f
  7111  03EE  2BD6               	goto	i1l2600
  7112  03EF                     i1l2610:
  7113  03EF  0141               	movlb	1	; select bank1
  7114  03F0  0845               	movf	(_count+1)^(0+128),w
  7115  03F1  3A80               	xorlw	128
  7116  03F2  00F9               	movwf	??_TMR1_ISR_
  7117  03F3  3080               	movlw	128
  7118  03F4  0279               	subwf	??_TMR1_ISR_,w
  7119  03F5  1D03               	skipz
  7120  03F6  2BF9               	goto	u185_25
  7121  03F7  303E               	movlw	62
  7122  03F8  0244               	subwf	_count^(0+128),w
  7123  03F9                     u185_25:
  7124  03F9  1C03               	skipc
  7125  03FA  2BFC               	goto	u185_21
  7126  03FB  2BFD               	goto	u185_20
  7127  03FC                     u185_21:
  7128  03FC  2D29               	goto	i1l2692
  7129  03FD                     u185_20:
  7130  03FD                     i1l2612:
  7131                           
  7132                           ;main.c: 1028:        {;main.c: 1029:            jungle_count++;
  7133  03FD  3001               	movlw	1
  7134  03FE  00F9               	movwf	??_TMR1_ISR_
  7135  03FF  0879               	movf	??_TMR1_ISR_,w
  7136  0400  0140               	movlb	0	; select bank0
  7137  0401  07CF               	addwf	_jungle_count,f
  7138                           
  7139                           ;main.c: 1030:            if (jungle_count == 1)
  7140  0402  034F               	decf	_jungle_count,w
  7141  0403  1D03               	btfss	3,2
  7142  0404  2C06               	goto	u186_21
  7143  0405  2C07               	goto	u186_20
  7144  0406                     u186_21:
  7145  0406  2C25               	goto	i1l2616
  7146  0407                     u186_20:
  7147  0407                     i1l2614:
  7148                           
  7149                           ;main.c: 1031:            {;main.c: 1032:                 light_array[0] = 0x88;
  7150  0407  3088               	movlw	136
  7151  0408  00F9               	movwf	??_TMR1_ISR_
  7152  0409  0879               	movf	??_TMR1_ISR_,w
  7153  040A  0141               	movlb	1	; select bank1
  7154  040B  00B7               	movwf	_light_array^(0+128)
  7155                           
  7156                           ;main.c: 1033:                 light_array[1] = 0x44;
  7157  040C  3044               	movlw	68
  7158  040D  00F9               	movwf	??_TMR1_ISR_
  7159  040E  0879               	movf	??_TMR1_ISR_,w
  7160  040F  00B8               	movwf	(_light_array^(0+128)+1)
  7161                           
  7162                           ;main.c: 1034:                 light_array[2] = 0x22;
  7163  0410  3022               	movlw	34
  7164  0411  00F9               	movwf	??_TMR1_ISR_
  7165  0412  0879               	movf	??_TMR1_ISR_,w
  7166  0413  00B9               	movwf	(_light_array^(0+128)+2)
  7167                           
  7168                           ;main.c: 1035:                 light_array[3] = 0x11;
  7169  0414  3011               	movlw	17
  7170  0415  00F9               	movwf	??_TMR1_ISR_
  7171  0416  0879               	movf	??_TMR1_ISR_,w
  7172  0417  00BA               	movwf	(_light_array^(0+128)+3)
  7173                           
  7174                           ;main.c: 1036:                 light_array[4] = 0x88;
  7175  0418  3088               	movlw	136
  7176  0419  00F9               	movwf	??_TMR1_ISR_
  7177  041A  0879               	movf	??_TMR1_ISR_,w
  7178  041B  00BB               	movwf	(_light_array^(0+128)+4)
  7179                           
  7180                           ;main.c: 1037:                 light_array[5] = 0x44;
  7181  041C  3044               	movlw	68
  7182  041D  00F9               	movwf	??_TMR1_ISR_
  7183  041E  0879               	movf	??_TMR1_ISR_,w
  7184  041F  00BC               	movwf	(_light_array^(0+128)+5)
  7185                           
  7186                           ;main.c: 1038:                 light_array[6] = 0x22;
  7187  0420  3022               	movlw	34
  7188  0421  00F9               	movwf	??_TMR1_ISR_
  7189  0422  0879               	movf	??_TMR1_ISR_,w
  7190  0423  00BD               	movwf	(_light_array^(0+128)+6)
  7191                           
  7192                           ;main.c: 1039:            }
  7193  0424  2D29               	goto	i1l2692
  7194  0425                     i1l2616:
  7195  0425  3009               	movlw	9
  7196  0426  024F               	subwf	_jungle_count,w
  7197  0427  1803               	skipnc
  7198  0428  2C2A               	goto	u187_21
  7199  0429  2C2B               	goto	u187_20
  7200  042A                     u187_21:
  7201  042A  2C6E               	goto	i1l2632
  7202  042B                     u187_20:
  7203  042B                     i1l2618:
  7204                           
  7205                           ;main.c: 1041:            {;main.c: 1042:                if (last_note != song3[count])
  7206  042B  301C               	movlw	28
  7207  042C  00F9               	movwf	??_TMR1_ISR_
  7208  042D  3021               	movlw	33
  7209  042E  00FA               	movwf	??_TMR1_ISR_+1
  7210  042F  0141               	movlb	1	; select bank1
  7211  0430  0844               	movf	_count^(0+128),w
  7212  0431  0779               	addwf	??_TMR1_ISR_,w
  7213  0432  0086               	movwf	6
  7214  0433  0845               	movf	(_count+1)^(0+128),w
  7215  0434  3D7A               	addwfc	??_TMR1_ISR_+1,w
  7216  0435  0087               	movwf	7
  7217  0436  0801               	movf	1,w
  7218  0437  0140               	movlb	0	; select bank0
  7219  0438  0650               	xorwf	_last_note,w
  7220  0439  1903               	skipnz
  7221  043A  2C3C               	goto	u188_21
  7222  043B  2C3D               	goto	u188_20
  7223  043C                     u188_21:
  7224  043C  2D29               	goto	i1l2692
  7225  043D                     u188_20:
  7226  043D                     i1l2620:
  7227                           
  7228                           ;main.c: 1043:                {;main.c: 1044:                     for (int i = 0; i < 7;
      +                           i++)
  7229  043D  01C6               	clrf	TMR1_ISR_@i_1213
  7230  043E  01C7               	clrf	TMR1_ISR_@i_1213+1
  7231  043F                     i1l2622:
  7232  043F  0847               	movf	TMR1_ISR_@i_1213+1,w
  7233  0440  3A80               	xorlw	128
  7234  0441  00F9               	movwf	??_TMR1_ISR_
  7235  0442  3080               	movlw	128
  7236  0443  0279               	subwf	??_TMR1_ISR_,w
  7237  0444  1D03               	skipz
  7238  0445  2C48               	goto	u189_25
  7239  0446  3007               	movlw	7
  7240  0447  0246               	subwf	TMR1_ISR_@i_1213,w
  7241  0448                     u189_25:
  7242  0448  1C03               	skipc
  7243  0449  2C4B               	goto	u189_21
  7244  044A  2C4C               	goto	u189_20
  7245  044B                     u189_21:
  7246  044B  2C4D               	goto	i1l2626
  7247  044C                     u189_20:
  7248  044C  2D29               	goto	i1l2692
  7249  044D                     i1l2626:
  7250                           
  7251                           ;main.c: 1045:                     {;main.c: 1046:                         uint8_t light
      +                          s = light_array[i] >> 7;
  7252  044D  0140               	movlb	0	; select bank0
  7253  044E  0846               	movf	TMR1_ISR_@i_1213,w
  7254  044F  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7255  0450  0086               	movwf	6
  7256  0451  0187               	clrf	7
  7257  0452  0801               	movf	1,w
  7258  0453  00F9               	movwf	??_TMR1_ISR_
  7259  0454  3007               	movlw	7
  7260  0455                     u190_25:
  7261  0455  36F9               	lsrf	??_TMR1_ISR_,f
  7262  0456  0B89               	decfsz	9,f
  7263  0457  2C55               	goto	u190_25
  7264  0458  0879               	movf	??_TMR1_ISR_,w
  7265  0459  00FA               	movwf	??_TMR1_ISR_+1
  7266  045A  087A               	movf	??_TMR1_ISR_+1,w
  7267  045B  00A2               	movwf	TMR1_ISR_@lights_1214
  7268                           
  7269                           ;main.c: 1047:                         light_array[i] = (light_array[i] << 1) + lights;
  7270  045C  0846               	movf	TMR1_ISR_@i_1213,w
  7271  045D  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7272  045E  0086               	movwf	6
  7273  045F  0187               	clrf	7
  7274  0460  3501               	lslf	1,w
  7275  0461  0722               	addwf	TMR1_ISR_@lights_1214,w
  7276  0462  00F9               	movwf	??_TMR1_ISR_
  7277  0463  0846               	movf	TMR1_ISR_@i_1213,w
  7278  0464  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7279  0465  0086               	movwf	6
  7280  0466  0187               	clrf	7
  7281  0467  0879               	movf	??_TMR1_ISR_,w
  7282  0468  0081               	movwf	1
  7283  0469                     i1l2628:
  7284                           
  7285                           ;main.c: 1048:                     }
  7286  0469  3001               	movlw	1
  7287  046A  07C6               	addwf	TMR1_ISR_@i_1213,f
  7288  046B  3000               	movlw	0
  7289  046C  3DC7               	addwfc	TMR1_ISR_@i_1213+1,f
  7290  046D  2C3F               	goto	i1l2622
  7291  046E                     i1l2632:
  7292  046E  3010               	movlw	16
  7293  046F  024F               	subwf	_jungle_count,w
  7294  0470  1803               	skipnc
  7295  0471  2C73               	goto	u191_21
  7296  0472  2C74               	goto	u191_20
  7297  0473                     u191_21:
  7298  0473  2D28               	goto	i1l2690
  7299  0474                     u191_20:
  7300  0474                     i1l2634:
  7301                           
  7302                           ;main.c: 1052:            {;main.c: 1053:                if (last_note != song3[count])
  7303  0474  301C               	movlw	28
  7304  0475  00F9               	movwf	??_TMR1_ISR_
  7305  0476  3021               	movlw	33
  7306  0477  00FA               	movwf	??_TMR1_ISR_+1
  7307  0478  0141               	movlb	1	; select bank1
  7308  0479  0844               	movf	_count^(0+128),w
  7309  047A  0779               	addwf	??_TMR1_ISR_,w
  7310  047B  0086               	movwf	6
  7311  047C  0845               	movf	(_count+1)^(0+128),w
  7312  047D  3D7A               	addwfc	??_TMR1_ISR_+1,w
  7313  047E  0087               	movwf	7
  7314  047F  0801               	movf	1,w
  7315  0480  0140               	movlb	0	; select bank0
  7316  0481  0650               	xorwf	_last_note,w
  7317  0482  1903               	skipnz
  7318  0483  2C85               	goto	u192_21
  7319  0484  2C86               	goto	u192_20
  7320  0485                     u192_21:
  7321  0485  2D29               	goto	i1l2692
  7322  0486                     u192_20:
  7323  0486                     i1l2636:
  7324                           
  7325                           ;main.c: 1054:                {;main.c: 1055:                    uint8_t jungle_sw = (ju
      +                          ngle_count - 8)/2;
  7326  0486  3002               	movlw	2
  7327  0487  00F0               	movwf	___awdiv@divisor
  7328  0488  3000               	movlw	0
  7329  0489  00F1               	movwf	___awdiv@divisor+1
  7330  048A  084F               	movf	_jungle_count,w
  7331  048B  3EF8               	addlw	248
  7332  048C  00F2               	movwf	___awdiv@dividend
  7333  048D  30FF               	movlw	255
  7334  048E  1803               	skipnc
  7335  048F  3000               	movlw	0
  7336  0490  00F3               	movwf	___awdiv@dividend+1
  7337  0491  318C  242F  3180   	fcall	___awdiv
  7338  0494  0870               	movf	?___awdiv,w
  7339  0495  00F9               	movwf	??_TMR1_ISR_
  7340  0496  0879               	movf	??_TMR1_ISR_,w
  7341  0497  0140               	movlb	0	; select bank0
  7342  0498  00A3               	movwf	TMR1_ISR_@jungle_sw
  7343                           
  7344                           ;main.c: 1056:                    switch (jungle_sw)
  7345  0499  2D12               	goto	i1l2688
  7346  049A                     i1l2638:
  7347                           
  7348                           ;main.c: 1059:                             for (int i = 0; i < 7; i++)
  7349  049A  01B4               	clrf	TMR1_ISR_@i_1216
  7350  049B  01B5               	clrf	TMR1_ISR_@i_1216+1
  7351  049C                     i1l2640:
  7352  049C  0835               	movf	TMR1_ISR_@i_1216+1,w
  7353  049D  3A80               	xorlw	128
  7354  049E  00F9               	movwf	??_TMR1_ISR_
  7355  049F  3080               	movlw	128
  7356  04A0  0279               	subwf	??_TMR1_ISR_,w
  7357  04A1  1D03               	skipz
  7358  04A2  2CA5               	goto	u193_25
  7359  04A3  3007               	movlw	7
  7360  04A4  0234               	subwf	TMR1_ISR_@i_1216,w
  7361  04A5                     u193_25:
  7362  04A5  1C03               	skipc
  7363  04A6  2CA8               	goto	u193_21
  7364  04A7  2CA9               	goto	u193_20
  7365  04A8                     u193_21:
  7366  04A8  2CAA               	goto	i1l2644
  7367  04A9                     u193_20:
  7368  04A9  2D29               	goto	i1l2692
  7369  04AA                     i1l2644:
  7370                           
  7371                           ;main.c: 1060:                             {;main.c: 1061:                              
      +                             light_array[i] = 0x81;
  7372  04AA  3081               	movlw	129
  7373  04AB  00F9               	movwf	??_TMR1_ISR_
  7374  04AC  0140               	movlb	0	; select bank0
  7375  04AD  0834               	movf	TMR1_ISR_@i_1216,w
  7376  04AE  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7377  04AF  0086               	movwf	6
  7378  04B0  0187               	clrf	7
  7379  04B1  0879               	movf	??_TMR1_ISR_,w
  7380  04B2  0081               	movwf	1
  7381  04B3                     i1l2646:
  7382                           
  7383                           ;main.c: 1062:                             }
  7384  04B3  3001               	movlw	1
  7385  04B4  07B4               	addwf	TMR1_ISR_@i_1216,f
  7386  04B5  3000               	movlw	0
  7387  04B6  3DB5               	addwfc	TMR1_ISR_@i_1216+1,f
  7388  04B7  2C9C               	goto	i1l2640
  7389  04B8                     i1l2650:
  7390                           
  7391                           ;main.c: 1065:                             for (int i = 0; i < 7; i++)
  7392  04B8  01B6               	clrf	TMR1_ISR_@i_1217
  7393  04B9  01B7               	clrf	TMR1_ISR_@i_1217+1
  7394  04BA                     i1l2652:
  7395  04BA  0837               	movf	TMR1_ISR_@i_1217+1,w
  7396  04BB  3A80               	xorlw	128
  7397  04BC  00F9               	movwf	??_TMR1_ISR_
  7398  04BD  3080               	movlw	128
  7399  04BE  0279               	subwf	??_TMR1_ISR_,w
  7400  04BF  1D03               	skipz
  7401  04C0  2CC3               	goto	u194_25
  7402  04C1  3007               	movlw	7
  7403  04C2  0236               	subwf	TMR1_ISR_@i_1217,w
  7404  04C3                     u194_25:
  7405  04C3  1C03               	skipc
  7406  04C4  2CC6               	goto	u194_21
  7407  04C5  2CC7               	goto	u194_20
  7408  04C6                     u194_21:
  7409  04C6  2CC8               	goto	i1l2656
  7410  04C7                     u194_20:
  7411  04C7  2D29               	goto	i1l2692
  7412  04C8                     i1l2656:
  7413                           
  7414                           ;main.c: 1066:                             {;main.c: 1067:                              
      +                             light_array[i] = 0xC3;
  7415  04C8  30C3               	movlw	195
  7416  04C9  00F9               	movwf	??_TMR1_ISR_
  7417  04CA  0140               	movlb	0	; select bank0
  7418  04CB  0836               	movf	TMR1_ISR_@i_1217,w
  7419  04CC  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7420  04CD  0086               	movwf	6
  7421  04CE  0187               	clrf	7
  7422  04CF  0879               	movf	??_TMR1_ISR_,w
  7423  04D0  0081               	movwf	1
  7424  04D1                     i1l2658:
  7425                           
  7426                           ;main.c: 1068:                             }
  7427  04D1  3001               	movlw	1
  7428  04D2  07B6               	addwf	TMR1_ISR_@i_1217,f
  7429  04D3  3000               	movlw	0
  7430  04D4  3DB7               	addwfc	TMR1_ISR_@i_1217+1,f
  7431  04D5  2CBA               	goto	i1l2652
  7432  04D6                     i1l2662:
  7433                           
  7434                           ;main.c: 1071:                             for (int i = 0; i < 7; i++)
  7435  04D6  01B8               	clrf	TMR1_ISR_@i_1218
  7436  04D7  01B9               	clrf	TMR1_ISR_@i_1218+1
  7437  04D8                     i1l2664:
  7438  04D8  0839               	movf	TMR1_ISR_@i_1218+1,w
  7439  04D9  3A80               	xorlw	128
  7440  04DA  00F9               	movwf	??_TMR1_ISR_
  7441  04DB  3080               	movlw	128
  7442  04DC  0279               	subwf	??_TMR1_ISR_,w
  7443  04DD  1D03               	skipz
  7444  04DE  2CE1               	goto	u195_25
  7445  04DF  3007               	movlw	7
  7446  04E0  0238               	subwf	TMR1_ISR_@i_1218,w
  7447  04E1                     u195_25:
  7448  04E1  1C03               	skipc
  7449  04E2  2CE4               	goto	u195_21
  7450  04E3  2CE5               	goto	u195_20
  7451  04E4                     u195_21:
  7452  04E4  2CE6               	goto	i1l2668
  7453  04E5                     u195_20:
  7454  04E5  2D29               	goto	i1l2692
  7455  04E6                     i1l2668:
  7456                           
  7457                           ;main.c: 1072:                             {;main.c: 1073:                              
      +                             light_array[i] = 0xE7;
  7458  04E6  30E7               	movlw	231
  7459  04E7  00F9               	movwf	??_TMR1_ISR_
  7460  04E8  0140               	movlb	0	; select bank0
  7461  04E9  0838               	movf	TMR1_ISR_@i_1218,w
  7462  04EA  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7463  04EB  0086               	movwf	6
  7464  04EC  0187               	clrf	7
  7465  04ED  0879               	movf	??_TMR1_ISR_,w
  7466  04EE  0081               	movwf	1
  7467  04EF                     i1l2670:
  7468                           
  7469                           ;main.c: 1074:                             }
  7470  04EF  3001               	movlw	1
  7471  04F0  07B8               	addwf	TMR1_ISR_@i_1218,f
  7472  04F1  3000               	movlw	0
  7473  04F2  3DB9               	addwfc	TMR1_ISR_@i_1218+1,f
  7474  04F3  2CD8               	goto	i1l2664
  7475  04F4                     i1l2674:
  7476                           
  7477                           ;main.c: 1077:                             for (int i = 0; i < 7; i++)
  7478  04F4  01BA               	clrf	TMR1_ISR_@i_1219
  7479  04F5  01BB               	clrf	TMR1_ISR_@i_1219+1
  7480  04F6                     i1l2676:
  7481  04F6  083B               	movf	TMR1_ISR_@i_1219+1,w
  7482  04F7  3A80               	xorlw	128
  7483  04F8  00F9               	movwf	??_TMR1_ISR_
  7484  04F9  3080               	movlw	128
  7485  04FA  0279               	subwf	??_TMR1_ISR_,w
  7486  04FB  1D03               	skipz
  7487  04FC  2CFF               	goto	u196_25
  7488  04FD  3007               	movlw	7
  7489  04FE  023A               	subwf	TMR1_ISR_@i_1219,w
  7490  04FF                     u196_25:
  7491  04FF  1C03               	skipc
  7492  0500  2D02               	goto	u196_21
  7493  0501  2D03               	goto	u196_20
  7494  0502                     u196_21:
  7495  0502  2D04               	goto	i1l2680
  7496  0503                     u196_20:
  7497  0503  2D29               	goto	i1l2692
  7498  0504                     i1l2680:
  7499                           
  7500                           ;main.c: 1078:                             {;main.c: 1079:                              
      +                             light_array[i] = 0xFF;
  7501  0504  30FF               	movlw	255
  7502  0505  00F9               	movwf	??_TMR1_ISR_
  7503  0506  0140               	movlb	0	; select bank0
  7504  0507  083A               	movf	TMR1_ISR_@i_1219,w
  7505  0508  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7506  0509  0086               	movwf	6
  7507  050A  0187               	clrf	7
  7508  050B  0879               	movf	??_TMR1_ISR_,w
  7509  050C  0081               	movwf	1
  7510  050D                     i1l2682:
  7511                           
  7512                           ;main.c: 1080:                             }
  7513  050D  3001               	movlw	1
  7514  050E  07BA               	addwf	TMR1_ISR_@i_1219,f
  7515  050F  3000               	movlw	0
  7516  0510  3DBB               	addwfc	TMR1_ISR_@i_1219+1,f
  7517  0511  2CF6               	goto	i1l2676
  7518  0512                     i1l2688:
  7519  0512  0823               	movf	TMR1_ISR_@jungle_sw,w
  7520  0513  00F9               	movwf	??_TMR1_ISR_
  7521  0514  01FA               	clrf	??_TMR1_ISR_+1
  7522                           
  7523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7524                           ; Switch size 1, requested type "simple"
  7525                           ; Number of cases is 1, Range of values is 0 to 0
  7526                           ; switch strategies available:
  7527                           ; Name         Instructions Cycles
  7528                           ; simple_byte            4     3 (average)
  7529                           ; direct_byte            8     6 (fixed)
  7530                           ; jumptable            260     6 (fixed)
  7531                           ;	Chosen strategy is simple_byte
  7532  0515  087A               	movf	??_TMR1_ISR_+1,w
  7533  0516  3A00               	xorlw	0	; case 0
  7534  0517  1903               	skipnz
  7535  0518  2D1A               	goto	i1l3380
  7536  0519  2D29               	goto	i1l2692
  7537  051A                     i1l3380:
  7538                           
  7539                           ; Switch size 1, requested type "simple"
  7540                           ; Number of cases is 4, Range of values is 0 to 3
  7541                           ; switch strategies available:
  7542                           ; Name         Instructions Cycles
  7543                           ; simple_byte           13     7 (average)
  7544                           ; direct_byte           14     6 (fixed)
  7545                           ; jumptable            260     6 (fixed)
  7546                           ;	Chosen strategy is simple_byte
  7547  051A  0879               	movf	??_TMR1_ISR_,w
  7548  051B  3A00               	xorlw	0	; case 0
  7549  051C  1903               	skipnz
  7550  051D  2C9A               	goto	i1l2638
  7551  051E  3A01               	xorlw	1	; case 1
  7552  051F  1903               	skipnz
  7553  0520  2CB8               	goto	i1l2650
  7554  0521  3A03               	xorlw	3	; case 2
  7555  0522  1903               	skipnz
  7556  0523  2CD6               	goto	i1l2662
  7557  0524  3A01               	xorlw	1	; case 3
  7558  0525  1903               	skipnz
  7559  0526  2CF4               	goto	i1l2674
  7560  0527  2D29               	goto	i1l2692
  7561  0528                     i1l2690:
  7562                           
  7563                           ;main.c: 1086:            {;main.c: 1087:                jungle_count = 0;
  7564  0528  01CF               	clrf	_jungle_count
  7565  0529                     i1l2692:
  7566                           
  7567                           ;main.c: 1098:     if (song2_playing)
  7568  0529  0140               	movlb	0	; select bank0
  7569  052A  0851               	movf	_song2_playing,w
  7570  052B  1903               	btfsc	3,2
  7571  052C  2D2E               	goto	u197_21
  7572  052D  2D2F               	goto	u197_20
  7573  052E                     u197_21:
  7574  052E  2D71               	goto	i1l2710
  7575  052F                     u197_20:
  7576  052F                     i1l2694:
  7577                           
  7578                           ;main.c: 1099:     {;main.c: 1104:         if ((song2[count] == 212) &&(song2_pre[count]
      +                           == 0xD0))
  7579  052F  30BA               	movlw	186
  7580  0530  00F9               	movwf	??_TMR1_ISR_
  7581  0531  3021               	movlw	33
  7582  0532  00FA               	movwf	??_TMR1_ISR_+1
  7583  0533  0141               	movlb	1	; select bank1
  7584  0534  0844               	movf	_count^(0+128),w
  7585  0535  0779               	addwf	??_TMR1_ISR_,w
  7586  0536  0086               	movwf	6
  7587  0537  0845               	movf	(_count+1)^(0+128),w
  7588  0538  3D7A               	addwfc	??_TMR1_ISR_+1,w
  7589  0539  0087               	movwf	7
  7590  053A  30D4               	movlw	212
  7591  053B  0601               	xorwf	1,w
  7592  053C  1D03               	btfss	3,2
  7593  053D  2D3F               	goto	u198_21
  7594  053E  2D40               	goto	u198_20
  7595  053F                     u198_21:
  7596  053F  2D56               	goto	i1l2700
  7597  0540                     u198_20:
  7598  0540                     i1l2696:
  7599  0540  304B               	movlw	75
  7600  0541  00F9               	movwf	??_TMR1_ISR_
  7601  0542  3022               	movlw	34
  7602  0543  00FA               	movwf	??_TMR1_ISR_+1
  7603  0544  0844               	movf	_count^(0+128),w
  7604  0545  0779               	addwf	??_TMR1_ISR_,w
  7605  0546  0086               	movwf	6
  7606  0547  0845               	movf	(_count+1)^(0+128),w
  7607  0548  3D7A               	addwfc	??_TMR1_ISR_+1,w
  7608  0549  0087               	movwf	7
  7609  054A  30D0               	movlw	208
  7610  054B  0601               	xorwf	1,w
  7611  054C  1D03               	btfss	3,2
  7612  054D  2D4F               	goto	u199_21
  7613  054E  2D50               	goto	u199_20
  7614  054F                     u199_21:
  7615  054F  2D56               	goto	i1l2700
  7616  0550                     u199_20:
  7617  0550                     i1l2698:
  7618                           
  7619                           ;main.c: 1105:         {;main.c: 1106:            playNote(0, 0);
  7620  0550  01F0               	clrf	i1playNote@prescale
  7621  0551  3000               	movlw	0
  7622  0552  318B  2357  3180   	fcall	i1_playNote
  7623                           
  7624                           ;main.c: 1107:         }
  7625  0555  2D69               	goto	i1l2706
  7626  0556                     i1l2700:
  7627  0556  306E               	movlw	110
  7628  0557  0644               	xorwf	_count^(0+128),w
  7629  0558  0445               	iorwf	(_count+1)^(0+128),w
  7630  0559  1903               	btfsc	3,2
  7631  055A  2D5C               	goto	u200_21
  7632  055B  2D5D               	goto	u200_20
  7633  055C                     u200_21:
  7634  055C  2D64               	goto	i1l2704
  7635  055D                     u200_20:
  7636  055D                     i1l2702:
  7637  055D  306F               	movlw	111
  7638  055E  0644               	xorwf	_count^(0+128),w
  7639  055F  0445               	iorwf	(_count+1)^(0+128),w
  7640  0560  1D03               	btfss	3,2
  7641  0561  2D63               	goto	u201_21
  7642  0562  2D64               	goto	u201_20
  7643  0563                     u201_21:
  7644  0563  2D69               	goto	i1l2706
  7645  0564                     u201_20:
  7646  0564                     i1l2704:
  7647                           
  7648                           ;main.c: 1109:         {;main.c: 1110:            playNote(0, 0);
  7649  0564  01F0               	clrf	i1playNote@prescale
  7650  0565  3000               	movlw	0
  7651  0566  318B  2357  3180   	fcall	i1_playNote
  7652  0569                     i1l2706:
  7653                           
  7654                           ;main.c: 1125:         TMR1H = timer_high_2;
  7655  0569  0140               	movlb	0	; select bank0
  7656  056A  084D               	movf	_timer_high_2,w
  7657  056B  0144               	movlb	4	; select bank4
  7658  056C  008D               	movwf	13	;volatile
  7659  056D                     i1l2708:
  7660                           
  7661                           ;main.c: 1126:         TMR1L = timer_low_2;
  7662  056D  0140               	movlb	0	; select bank0
  7663  056E  084C               	movf	_timer_low_2,w
  7664  056F  0144               	movlb	4	; select bank4
  7665  0570  008C               	movwf	12	;volatile
  7666  0571                     i1l2710:
  7667                           
  7668                           ;main.c: 1130:     if (song3_playing)
  7669  0571  0140               	movlb	0	; select bank0
  7670  0572  0852               	movf	_song3_playing,w
  7671  0573  1903               	btfsc	3,2
  7672  0574  2D76               	goto	u202_21
  7673  0575  2D77               	goto	u202_20
  7674  0576                     u202_21:
  7675  0576  2D7E               	goto	i1l678
  7676  0577                     u202_20:
  7677  0577                     i1l2712:
  7678                           
  7679                           ;main.c: 1131:     {;main.c: 1132:         TMR1H = timer_high_3;
  7680  0577  084A               	movf	_timer_high_3,w
  7681  0578  0144               	movlb	4	; select bank4
  7682  0579  008D               	movwf	13	;volatile
  7683                           
  7684                           ;main.c: 1133:         TMR1L = timer_low_3;
  7685  057A  0140               	movlb	0	; select bank0
  7686  057B  0849               	movf	_timer_low_3,w
  7687  057C  0144               	movlb	4	; select bank4
  7688  057D  008C               	movwf	12	;volatile
  7689  057E                     i1l678:	
  7690                           ;main.c: 1134:     }
  7691                           
  7692                           
  7693                           ;main.c: 1137:     if ((count > 138) && silent_night_playing)
  7694  057E  0141               	movlb	1	; select bank1
  7695  057F  0845               	movf	(_count+1)^(0+128),w
  7696  0580  3A80               	xorlw	128
  7697  0581  00F9               	movwf	??_TMR1_ISR_
  7698  0582  3080               	movlw	128
  7699  0583  0279               	subwf	??_TMR1_ISR_,w
  7700  0584  1D03               	skipz
  7701  0585  2D88               	goto	u203_25
  7702  0586  308B               	movlw	139
  7703  0587  0244               	subwf	_count^(0+128),w
  7704  0588                     u203_25:
  7705  0588  1C03               	skipc
  7706  0589  2D8B               	goto	u203_21
  7707  058A  2D8C               	goto	u203_20
  7708  058B                     u203_21:
  7709  058B  2D97               	goto	i1l2718
  7710  058C                     u203_20:
  7711  058C                     i1l2714:
  7712  058C  0140               	movlb	0	; select bank0
  7713  058D  0853               	movf	_silent_night_playing,w
  7714  058E  1903               	btfsc	3,2
  7715  058F  2D91               	goto	u204_21
  7716  0590  2D92               	goto	u204_20
  7717  0591                     u204_21:
  7718  0591  2D97               	goto	i1l2718
  7719  0592                     u204_20:
  7720  0592                     i1l2716:
  7721                           
  7722                           ;main.c: 1138:     {;main.c: 1139:         presses = 0;
  7723  0592  0141               	movlb	1	; select bank1
  7724  0593  01C7               	clrf	_presses^(0+128)
  7725                           
  7726                           ;main.c: 1140:         count = 0;
  7727  0594  01C4               	clrf	_count^(0+128)
  7728  0595  01C5               	clrf	(_count+1)^(0+128)
  7729                           
  7730                           ;main.c: 1141:     }
  7731  0596  2DBF               	goto	i1l684
  7732  0597                     i1l2718:
  7733  0597  0141               	movlb	1	; select bank1
  7734  0598  0845               	movf	(_count+1)^(0+128),w
  7735  0599  3A80               	xorlw	128
  7736  059A  3C80               	sublw	128
  7737  059B  1D03               	skipz
  7738  059C  2DA0               	goto	u205_25
  7739  059D  0844               	movf	_count^(0+128),w
  7740  059E  0140               	movlb	0	; select bank0
  7741  059F  024B               	subwf	_song2_length,w
  7742  05A0                     u205_25:
  7743  05A0  1803               	skipnc
  7744  05A1  2DA3               	goto	u205_21
  7745  05A2  2DA4               	goto	u205_20
  7746  05A3                     u205_21:
  7747  05A3  2DAB               	goto	i1l2724
  7748  05A4                     u205_20:
  7749  05A4                     i1l2720:
  7750  05A4  0140               	movlb	0	; select bank0
  7751  05A5  0851               	movf	_song2_playing,w
  7752  05A6  1903               	btfsc	3,2
  7753  05A7  2DA9               	goto	u206_21
  7754  05A8  2DAA               	goto	u206_20
  7755  05A9                     u206_21:
  7756  05A9  2DAB               	goto	i1l2724
  7757  05AA                     u206_20:
  7758  05AA  2D92               	goto	i1l2716
  7759  05AB                     i1l2724:
  7760  05AB  0141               	movlb	1	; select bank1
  7761  05AC  0845               	movf	(_count+1)^(0+128),w
  7762  05AD  3A80               	xorlw	128
  7763  05AE  3C80               	sublw	128
  7764  05AF  1D03               	skipz
  7765  05B0  2DB4               	goto	u207_25
  7766  05B1  0844               	movf	_count^(0+128),w
  7767  05B2  0140               	movlb	0	; select bank0
  7768  05B3  0248               	subwf	_song3_length,w
  7769  05B4                     u207_25:
  7770  05B4  1803               	skipnc
  7771  05B5  2DB7               	goto	u207_21
  7772  05B6  2DB8               	goto	u207_20
  7773  05B7                     u207_21:
  7774  05B7  2DBF               	goto	i1l684
  7775  05B8                     u207_20:
  7776  05B8                     i1l2726:
  7777  05B8  0140               	movlb	0	; select bank0
  7778  05B9  0852               	movf	_song3_playing,w
  7779  05BA  1903               	btfsc	3,2
  7780  05BB  2DBD               	goto	u208_21
  7781  05BC  2DBE               	goto	u208_20
  7782  05BD                     u208_21:
  7783  05BD  2DBF               	goto	i1l684
  7784  05BE                     u208_20:
  7785  05BE  2D92               	goto	i1l2716
  7786  05BF                     i1l684:
  7787  05BF  0008               	return
  7788  05C0                     __end_of_TMR1_ISR_:
  7789                           
  7790                           	psect	text23
  7791  0B57                     __ptext23:	
  7792 ;; *************** function i1_playNote *****************
  7793 ;; Defined at:
  7794 ;;		line 1169 in file "main.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;  note            1    wreg     unsigned char 
  7797 ;;  prescale        1    0[COMMON] unsigned char 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;  note            1    2[COMMON] unsigned char 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      void 
  7802 ;; Registers used:
  7803 ;;		wreg
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7809 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;Total ram usage:        3 bytes
  7814 ;; Hardware stack levels used: 1
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_TMR1_ISR_
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           
  7823                           ;psect for function i1_playNote
  7824  0B57                     i1_playNote:
  7825                           
  7826                           ;incstack = 0
  7827                           ; Regs used in i1_playNote: [wreg]
  7828                           ;i1playNote@note stored from wreg
  7829  0B57  00F2               	movwf	i1playNote@note
  7830  0B58                     i1l2262:
  7831                           
  7832                           ;main.c: 1169: void playNote(uint8_t note, uint8_t prescale);main.c: 1170: {;main.c: 117
      +                          2:     if (note != last_note)
  7833  0B58  0872               	movf	i1playNote@note,w
  7834  0B59  0140               	movlb	0	; select bank0
  7835  0B5A  0650               	xorwf	_last_note,w
  7836  0B5B  1903               	skipnz
  7837  0B5C  2B5E               	goto	u137_21
  7838  0B5D  2B5F               	goto	u137_20
  7839  0B5E                     u137_21:
  7840  0B5E  2B62               	goto	i1l687
  7841  0B5F                     u137_20:
  7842  0B5F                     i1l2264:
  7843                           
  7844                           ;main.c: 1173:     {;main.c: 1174:         T2PR = note;
  7845  0B5F  0872               	movf	i1playNote@note,w
  7846  0B60  0145               	movlb	5	; select bank5
  7847  0B61  008D               	movwf	13	;volatile
  7848  0B62                     i1l687:	
  7849                           ;main.c: 1175:     }
  7850                           
  7851                           
  7852                           ;main.c: 1177:     if (prescale != last_prescale)
  7853  0B62  0870               	movf	i1playNote@prescale,w
  7854  0B63  0141               	movlb	1	; select bank1
  7855  0B64  0648               	xorwf	_last_prescale^(0+128),w
  7856  0B65  1903               	skipnz
  7857  0B66  2B68               	goto	u138_21
  7858  0B67  2B69               	goto	u138_20
  7859  0B68                     u138_21:
  7860  0B68  2B6C               	goto	i1l688
  7861  0B69                     u138_20:
  7862  0B69                     i1l2266:
  7863                           
  7864                           ;main.c: 1178:     {;main.c: 1179:         T2CON = prescale;
  7865  0B69  0870               	movf	i1playNote@prescale,w
  7866  0B6A  0145               	movlb	5	; select bank5
  7867  0B6B  008E               	movwf	14	;volatile
  7868  0B6C                     i1l688:	
  7869                           ;main.c: 1180:     }
  7870                           
  7871                           
  7872                           ;main.c: 1181:     last_note = note;
  7873  0B6C  0872               	movf	i1playNote@note,w
  7874  0B6D  00F1               	movwf	??i1_playNote
  7875  0B6E  0871               	movf	??i1_playNote,w
  7876  0B6F  0140               	movlb	0	; select bank0
  7877  0B70  00D0               	movwf	_last_note
  7878                           
  7879                           ;main.c: 1182:     last_prescale = prescale;
  7880  0B71  0870               	movf	i1playNote@prescale,w
  7881  0B72  00F1               	movwf	??i1_playNote
  7882  0B73  0871               	movf	??i1_playNote,w
  7883  0B74  0141               	movlb	1	; select bank1
  7884  0B75  00C8               	movwf	_last_prescale^(0+128)
  7885  0B76                     i1l689:
  7886  0B76  0008               	return
  7887  0B77                     __end_ofi1_playNote:
  7888                           
  7889                           	psect	text24
  7890  0C2F                     __ptext24:	
  7891 ;; *************** function ___awdiv *****************
  7892 ;; Defined at:
  7893 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  divisor         2    0[COMMON] int 
  7896 ;;  dividend        2    2[COMMON] int 
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  quotient        2    7[COMMON] int 
  7899 ;;  sign            1    6[COMMON] unsigned char 
  7900 ;;  counter         1    5[COMMON] unsigned char 
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  2    0[COMMON] int 
  7903 ;; Registers used:
  7904 ;;		wreg, status,2, status,0
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7911 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7914 ;;Total ram usage:        9 bytes
  7915 ;; Hardware stack levels used: 1
  7916 ;; This function calls:
  7917 ;;		Nothing
  7918 ;; This function is called by:
  7919 ;;		_TMR1_ISR_
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           
  7924                           ;psect for function ___awdiv
  7925  0C2F                     ___awdiv:
  7926  0C2F                     i1l2218:	
  7927                           ;incstack = 0
  7928                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7929                           
  7930  0C2F  01F6               	clrf	___awdiv@sign
  7931  0C30                     i1l2220:
  7932  0C30  1FF1               	btfss	___awdiv@divisor+1,7
  7933  0C31  2C33               	goto	u127_21
  7934  0C32  2C34               	goto	u127_20
  7935  0C33                     u127_21:
  7936  0C33  2C3B               	goto	i1l2226
  7937  0C34                     u127_20:
  7938  0C34                     i1l2222:
  7939  0C34  09F0               	comf	___awdiv@divisor,f
  7940  0C35  09F1               	comf	___awdiv@divisor+1,f
  7941  0C36  0AF0               	incf	___awdiv@divisor,f
  7942  0C37  1903               	skipnz
  7943  0C38  0AF1               	incf	___awdiv@divisor+1,f
  7944  0C39                     i1l2224:
  7945  0C39  01F6               	clrf	___awdiv@sign
  7946  0C3A  0AF6               	incf	___awdiv@sign,f
  7947  0C3B                     i1l2226:
  7948  0C3B  1FF3               	btfss	___awdiv@dividend+1,7
  7949  0C3C  2C3E               	goto	u128_21
  7950  0C3D  2C3F               	goto	u128_20
  7951  0C3E                     u128_21:
  7952  0C3E  2C48               	goto	i1l2232
  7953  0C3F                     u128_20:
  7954  0C3F                     i1l2228:
  7955  0C3F  09F2               	comf	___awdiv@dividend,f
  7956  0C40  09F3               	comf	___awdiv@dividend+1,f
  7957  0C41  0AF2               	incf	___awdiv@dividend,f
  7958  0C42  1903               	skipnz
  7959  0C43  0AF3               	incf	___awdiv@dividend+1,f
  7960  0C44                     i1l2230:
  7961  0C44  3001               	movlw	1
  7962  0C45  00F4               	movwf	??___awdiv
  7963  0C46  0874               	movf	??___awdiv,w
  7964  0C47  06F6               	xorwf	___awdiv@sign,f
  7965  0C48                     i1l2232:
  7966  0C48  01F7               	clrf	___awdiv@quotient
  7967  0C49  01F8               	clrf	___awdiv@quotient+1
  7968  0C4A                     i1l2234:
  7969  0C4A  0870               	movf	___awdiv@divisor,w
  7970  0C4B  0471               	iorwf	___awdiv@divisor+1,w
  7971  0C4C  1903               	btfsc	3,2
  7972  0C4D  2C4F               	goto	u129_21
  7973  0C4E  2C50               	goto	u129_20
  7974  0C4F                     u129_21:
  7975  0C4F  2C7F               	goto	i1l2254
  7976  0C50                     u129_20:
  7977  0C50                     i1l2236:
  7978  0C50  01F5               	clrf	___awdiv@counter
  7979  0C51  0AF5               	incf	___awdiv@counter,f
  7980  0C52  2C5C               	goto	i1l2242
  7981  0C53                     i1l2238:
  7982  0C53  3001               	movlw	1
  7983  0C54                     u130_25:
  7984  0C54  35F0               	lslf	___awdiv@divisor,f
  7985  0C55  0DF1               	rlf	___awdiv@divisor+1,f
  7986  0C56  0B89               	decfsz	9,f
  7987  0C57  2C54               	goto	u130_25
  7988  0C58                     i1l2240:
  7989  0C58  3001               	movlw	1
  7990  0C59  00F4               	movwf	??___awdiv
  7991  0C5A  0874               	movf	??___awdiv,w
  7992  0C5B  07F5               	addwf	___awdiv@counter,f
  7993  0C5C                     i1l2242:
  7994  0C5C  1FF1               	btfss	___awdiv@divisor+1,7
  7995  0C5D  2C5F               	goto	u131_21
  7996  0C5E  2C60               	goto	u131_20
  7997  0C5F                     u131_21:
  7998  0C5F  2C53               	goto	i1l2238
  7999  0C60                     u131_20:
  8000  0C60                     i1l2244:
  8001  0C60  3001               	movlw	1
  8002  0C61                     u132_25:
  8003  0C61  35F7               	lslf	___awdiv@quotient,f
  8004  0C62  0DF8               	rlf	___awdiv@quotient+1,f
  8005  0C63  0B89               	decfsz	9,f
  8006  0C64  2C61               	goto	u132_25
  8007  0C65  0871               	movf	___awdiv@divisor+1,w
  8008  0C66  0273               	subwf	___awdiv@dividend+1,w
  8009  0C67  1D03               	skipz
  8010  0C68  2C6B               	goto	u133_25
  8011  0C69  0870               	movf	___awdiv@divisor,w
  8012  0C6A  0272               	subwf	___awdiv@dividend,w
  8013  0C6B                     u133_25:
  8014  0C6B  1C03               	skipc
  8015  0C6C  2C6E               	goto	u133_21
  8016  0C6D  2C6F               	goto	u133_20
  8017  0C6E                     u133_21:
  8018  0C6E  2C74               	goto	i1l2250
  8019  0C6F                     u133_20:
  8020  0C6F                     i1l2246:
  8021  0C6F  0870               	movf	___awdiv@divisor,w
  8022  0C70  02F2               	subwf	___awdiv@dividend,f
  8023  0C71  0871               	movf	___awdiv@divisor+1,w
  8024  0C72  3BF3               	subwfb	___awdiv@dividend+1,f
  8025  0C73                     i1l2248:
  8026  0C73  1477               	bsf	___awdiv@quotient,0
  8027  0C74                     i1l2250:
  8028  0C74  3001               	movlw	1
  8029  0C75                     u134_25:
  8030  0C75  36F1               	lsrf	___awdiv@divisor+1,f
  8031  0C76  0CF0               	rrf	___awdiv@divisor,f
  8032  0C77  0B89               	decfsz	9,f
  8033  0C78  2C75               	goto	u134_25
  8034  0C79                     i1l2252:
  8035  0C79  3001               	movlw	1
  8036  0C7A  02F5               	subwf	___awdiv@counter,f
  8037  0C7B  1D03               	btfss	3,2
  8038  0C7C  2C7E               	goto	u135_21
  8039  0C7D  2C7F               	goto	u135_20
  8040  0C7E                     u135_21:
  8041  0C7E  2C60               	goto	i1l2244
  8042  0C7F                     u135_20:
  8043  0C7F                     i1l2254:
  8044  0C7F  0876               	movf	___awdiv@sign,w
  8045  0C80  1903               	btfsc	3,2
  8046  0C81  2C83               	goto	u136_21
  8047  0C82  2C84               	goto	u136_20
  8048  0C83                     u136_21:
  8049  0C83  2C89               	goto	i1l2258
  8050  0C84                     u136_20:
  8051  0C84                     i1l2256:
  8052  0C84  09F7               	comf	___awdiv@quotient,f
  8053  0C85  09F8               	comf	___awdiv@quotient+1,f
  8054  0C86  0AF7               	incf	___awdiv@quotient,f
  8055  0C87  1903               	skipnz
  8056  0C88  0AF8               	incf	___awdiv@quotient+1,f
  8057  0C89                     i1l2258:
  8058  0C89  0878               	movf	___awdiv@quotient+1,w
  8059  0C8A  00F1               	movwf	?___awdiv+1
  8060  0C8B  0877               	movf	___awdiv@quotient,w
  8061  0C8C  00F0               	movwf	?___awdiv
  8062  0C8D                     i1l931:
  8063  0C8D  0008               	return
  8064  0C8E                     __end_of___awdiv:
  8065                           
  8066                           	psect	text25
  8067  0AF0                     __ptext25:	
  8068 ;; *************** function _TMR0_ISR *****************
  8069 ;; Defined at:
  8070 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;		None
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;		None
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  1    wreg      void 
  8077 ;; Registers used:
  8078 ;;		wreg, status,2, status,0, pclath, cstack
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;Total ram usage:        0 bytes
  8089 ;; Hardware stack levels used: 1
  8090 ;; Hardware stack levels required when called: 1
  8091 ;; This function calls:
  8092 ;;		Absolute function
  8093 ;;		_TMR0_DefaultInterruptHandler
  8094 ;;		_TMR0_ISR_
  8095 ;; This function is called by:
  8096 ;;		_INTERRUPT_InterruptManager
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           
  8101                           ;psect for function _TMR0_ISR
  8102  0AF0                     _TMR0_ISR:
  8103  0AF0                     i1l2748:	
  8104                           ;incstack = 0
  8105                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8106                           
  8107                           
  8108                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  8109  0AF0  014E               	movlb	14	; select bank14
  8110  0AF1  128C               	bcf	12,5	;volatile
  8111  0AF2                     i1l2750:
  8112                           
  8113                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  8114  0AF2  0141               	movlb	1	; select bank1
  8115  0AF3  0841               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
  8116  0AF4  014B               	movlb	11	; select bank11
  8117  0AF5  009D               	movwf	29	;volatile
  8118  0AF6                     i1l2752:
  8119                           
  8120                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  8121  0AF6  0141               	movlb	1	; select bank1
  8122  0AF7  0840               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
  8123  0AF8  014B               	movlb	11	; select bank11
  8124  0AF9  009C               	movwf	28	;volatile
  8125  0AFA                     i1l2754:
  8126                           
  8127                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
  8128  0AFA  0141               	movlb	1	; select bank1
  8129  0AFB  083E               	movf	_TMR0_InterruptHandler^(0+128),w
  8130  0AFC  043F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  8131  0AFD  1903               	btfsc	3,2
  8132  0AFE  2B00               	goto	u209_21
  8133  0AFF  2B01               	goto	u209_20
  8134  0B00                     u209_21:
  8135  0B00  2B06               	goto	i1l328
  8136  0B01                     u209_20:
  8137  0B01                     i1l2756:
  8138                           
  8139                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
  8140  0B01  083F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  8141  0B02  008A               	movwf	10
  8142  0B03  083E               	movf	_TMR0_InterruptHandler^(0+128),w
  8143  0B04  000A               	callw
  8144  0B05  318A               	pagesel	$
  8145  0B06                     i1l328:
  8146  0B06  0008               	return
  8147  0B07                     __end_of_TMR0_ISR:
  8148                           
  8149                           	psect	text26
  8150  0002                     __ptext26:	
  8151 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8152 ;; Defined at:
  8153 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;		None
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;		None
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  1    wreg      void 
  8160 ;; Registers used:
  8161 ;;		None
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;Total ram usage:        0 bytes
  8172 ;; Hardware stack levels used: 1
  8173 ;; This function calls:
  8174 ;;		Nothing
  8175 ;; This function is called by:
  8176 ;;		_TMR0_Initialize
  8177 ;;		_TMR0_ISR
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           
  8182                           ;psect for function _TMR0_DefaultInterruptHandler
  8183  0002                     _TMR0_DefaultInterruptHandler:
  8184  0002                     i1l334:	
  8185                           ;incstack = 0
  8186                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8187                           
  8188  0002  0008               	return
  8189  0003                     __end_of_TMR0_DefaultInterruptHandler:
  8190                           
  8191                           	psect	text27
  8192  0A40                     __ptext27:	
  8193 ;; *************** function _TMR0_ISR_ *****************
  8194 ;; Defined at:
  8195 ;;		line 699 in file "main.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;		None
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;		None
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		None
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;Total ram usage:        0 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_main
  8219 ;;		_TMR0_ISR
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           
  8224                           ;psect for function _TMR0_ISR_
  8225  0A40                     _TMR0_ISR_:
  8226  0A40                     i1l2388:	
  8227                           ;incstack = 0
  8228                           ; Regs used in _TMR0_ISR_: []
  8229                           
  8230                           
  8231                           ;main.c: 701:     TMR0_complete = 1;
  8232  0A40  0141               	movlb	1	; select bank1
  8233  0A41  01C9               	clrf	_TMR0_complete^(0+128)
  8234  0A42  0AC9               	incf	_TMR0_complete^(0+128),f
  8235  0A43                     i1l576:
  8236  0A43  0008               	return
  8237  0A44                     __end_of_TMR0_ISR_:
  8238                           
  8239                           	psect	text28
  8240  0A44                     __ptext28:	
  8241 ;; *************** function _INT_ISR *****************
  8242 ;; Defined at:
  8243 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;		None
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1    wreg      void 
  8250 ;; Registers used:
  8251 ;;		wreg, status,2, status,0, pclath, cstack
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;Total ram usage:        0 bytes
  8262 ;; Hardware stack levels used: 1
  8263 ;; Hardware stack levels required when called: 3
  8264 ;; This function calls:
  8265 ;;		_INT_CallBack
  8266 ;; This function is called by:
  8267 ;;		_INTERRUPT_InterruptManager
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _INT_ISR
  8273  0A44                     _INT_ISR:
  8274  0A44                     i1l2758:	
  8275                           ;incstack = 0
  8276                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  8277                           
  8278                           
  8279                           ;mcc_generated_files/ext_int.c: 47:     (PIR0bits.INTF = 0);
  8280  0A44  014E               	movlb	14	; select bank14
  8281  0A45  100C               	bcf	12,0	;volatile
  8282  0A46                     i1l2760:
  8283                           
  8284                           ;mcc_generated_files/ext_int.c: 50:     INT_CallBack();
  8285  0A46  318A  2284  318A   	fcall	_INT_CallBack
  8286  0A49                     i1l271:
  8287  0A49  0008               	return
  8288  0A4A                     __end_of_INT_ISR:
  8289                           
  8290                           	psect	text29
  8291  0A84                     __ptext29:	
  8292 ;; *************** function _INT_CallBack *****************
  8293 ;; Defined at:
  8294 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;		None
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		wreg, status,2, status,0, pclath, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;Total ram usage:        0 bytes
  8313 ;; Hardware stack levels used: 1
  8314 ;; Hardware stack levels required when called: 2
  8315 ;; This function calls:
  8316 ;;		Absolute function
  8317 ;;		_EXT_ISR
  8318 ;;		_INT_DefaultInterruptHandler
  8319 ;; This function is called by:
  8320 ;;		_INT_ISR
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           
  8325                           ;psect for function _INT_CallBack
  8326  0A84                     _INT_CallBack:
  8327  0A84                     i1l2364:	
  8328                           ;incstack = 0
  8329                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8330                           
  8331                           
  8332                           ;mcc_generated_files/ext_int.c: 57:     if(INT_InterruptHandler)
  8333  0A84  0141               	movlb	1	; select bank1
  8334  0A85  0842               	movf	_INT_InterruptHandler^(0+128),w
  8335  0A86  0443               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
  8336  0A87  1903               	btfsc	3,2
  8337  0A88  2A8A               	goto	u139_21
  8338  0A89  2A8B               	goto	u139_20
  8339  0A8A                     u139_21:
  8340  0A8A  2A90               	goto	i1l275
  8341  0A8B                     u139_20:
  8342  0A8B                     i1l2366:
  8343                           
  8344                           ;mcc_generated_files/ext_int.c: 58:     {;mcc_generated_files/ext_int.c: 59:         INT
      +                          _InterruptHandler();
  8345  0A8B  0843               	movf	(_INT_InterruptHandler+1)^(0+128),w
  8346  0A8C  008A               	movwf	10
  8347  0A8D  0842               	movf	_INT_InterruptHandler^(0+128),w
  8348  0A8E  000A               	callw
  8349  0A8F  318A               	pagesel	$
  8350  0A90                     i1l275:
  8351  0A90  0008               	return
  8352  0A91                     __end_of_INT_CallBack:
  8353                           
  8354                           	psect	text30
  8355  0BBB                     __ptext30:	
  8356 ;; *************** function _EXT_ISR *****************
  8357 ;; Defined at:
  8358 ;;		line 662 in file "main.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  debounce        1    1[COMMON] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0, pclath, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;Total ram usage:        2 bytes
  8377 ;; Hardware stack levels used: 1
  8378 ;; Hardware stack levels required when called: 1
  8379 ;; This function calls:
  8380 ;;		_TMR0_Reload
  8381 ;; This function is called by:
  8382 ;;		_main
  8383 ;;		_INT_CallBack
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           
  8388                           ;psect for function _EXT_ISR
  8389  0BBB                     _EXT_ISR:
  8390  0BBB                     i1l2194:	
  8391                           ;incstack = 0
  8392                           ; Regs used in _EXT_ISR: [wreg+status,2+status,0+pclath+cstack]
  8393                           
  8394                           
  8395                           ;main.c: 664:     uint8_t debounce = 0;
  8396  0BBB  01F1               	clrf	EXT_ISR@debounce
  8397                           
  8398                           ;main.c: 665:     while (debounce < 40)
  8399  0BBC  2BCD               	goto	i1l2202
  8400  0BBD                     i1l566:
  8401                           
  8402                           ;main.c: 666:     {;main.c: 667:         if (PORTAbits.RA2)
  8403  0BBD  0140               	movlb	0	; select bank0
  8404  0BBE  1D0C               	btfss	12,2	;volatile
  8405  0BBF  2BC1               	goto	u123_21
  8406  0BC0  2BC2               	goto	u123_20
  8407  0BC1                     u123_21:
  8408  0BC1  2BBB               	goto	i1l2194
  8409  0BC2                     u123_20:
  8410  0BC2                     i1l2196:
  8411                           
  8412                           ;main.c: 668:         {;main.c: 669:             debounce++;
  8413  0BC2  3001               	movlw	1
  8414  0BC3  00F0               	movwf	??_EXT_ISR
  8415  0BC4  0870               	movf	??_EXT_ISR,w
  8416  0BC5  07F1               	addwf	EXT_ISR@debounce,f
  8417  0BC6                     i1l2198:
  8418                           
  8419                           ;main.c: 670:             _delay((unsigned long)((1)*(8000000/4000.0)));
  8420  0BC6  3003               	movlw	3
  8421  0BC7  00F0               	movwf	??_EXT_ISR
  8422  0BC8  3098               	movlw	152
  8423  0BC9                     u258_27:
  8424  0BC9  0B89               	decfsz	9,f
  8425  0BCA  2BC9               	goto	u258_27
  8426  0BCB  0BF0               	decfsz	??_EXT_ISR,f
  8427  0BCC  2BC9               	goto	u258_27
  8428  0BCD                     i1l2202:	
  8429                           ;main.c: 671:         }
  8430                           
  8431                           
  8432                           ;main.c: 665:     while (debounce < 40)
  8433  0BCD  3028               	movlw	40
  8434  0BCE  0271               	subwf	EXT_ISR@debounce,w
  8435  0BCF  1C03               	skipc
  8436  0BD0  2BD2               	goto	u124_21
  8437  0BD1  2BD3               	goto	u124_20
  8438  0BD2                     u124_21:
  8439  0BD2  2BBD               	goto	i1l566
  8440  0BD3                     u124_20:
  8441  0BD3                     i1l2204:
  8442                           
  8443                           ;main.c: 677:     presses++;
  8444  0BD3  3001               	movlw	1
  8445  0BD4  00F0               	movwf	??_EXT_ISR
  8446  0BD5  0870               	movf	??_EXT_ISR,w
  8447  0BD6  0141               	movlb	1	; select bank1
  8448  0BD7  07C7               	addwf	_presses^(0+128),f
  8449  0BD8                     i1l2206:
  8450                           
  8451                           ;main.c: 678:     TMR0_Reload();
  8452  0BD8  318A  2272  318B   	fcall	_TMR0_Reload
  8453  0BDB                     i1l2208:
  8454                           
  8455                           ;main.c: 681:     if (T1CONbits.TMR1ON)
  8456  0BDB  0144               	movlb	4	; select bank4
  8457  0BDC  1C0E               	btfss	14,0	;volatile
  8458  0BDD  2BDF               	goto	u125_21
  8459  0BDE  2BE0               	goto	u125_20
  8460  0BDF                     u125_21:
  8461  0BDF  2BE5               	goto	i1l2212
  8462  0BE0                     u125_20:
  8463  0BE0                     i1l2210:
  8464                           
  8465                           ;main.c: 682:     {;main.c: 683:         presses = 0;
  8466  0BE0  0141               	movlb	1	; select bank1
  8467  0BE1  01C7               	clrf	_presses^(0+128)
  8468                           
  8469                           ;main.c: 684:         count = 0;
  8470  0BE2  01C4               	clrf	_count^(0+128)
  8471  0BE3  01C5               	clrf	(_count+1)^(0+128)
  8472                           
  8473                           ;main.c: 685:     }
  8474  0BE4  2BE7               	goto	i1l2214
  8475  0BE5                     i1l2212:
  8476                           
  8477                           ;main.c: 688:     {;main.c: 689:         TMR0_complete = 0;
  8478  0BE5  0141               	movlb	1	; select bank1
  8479  0BE6  01C9               	clrf	_TMR0_complete^(0+128)
  8480  0BE7                     i1l2214:
  8481                           
  8482                           ;main.c: 692:     if (presses > num_songs)
  8483  0BE7  0847               	movf	_presses^(0+128),w
  8484  0BE8  0140               	movlb	0	; select bank0
  8485  0BE9  024E               	subwf	_num_songs,w
  8486  0BEA  1803               	skipnc
  8487  0BEB  2BED               	goto	u126_21
  8488  0BEC  2BEE               	goto	u126_20
  8489  0BED                     u126_21:
  8490  0BED  2BF0               	goto	i1l573
  8491  0BEE                     u126_20:
  8492  0BEE                     i1l2216:
  8493                           
  8494                           ;main.c: 693:     {;main.c: 694:         presses = 0;
  8495  0BEE  0141               	movlb	1	; select bank1
  8496  0BEF  01C7               	clrf	_presses^(0+128)
  8497  0BF0                     i1l573:
  8498  0BF0  0008               	return
  8499  0BF1                     __end_of_EXT_ISR:
  8500                           
  8501                           	psect	text31
  8502  0A3C                     __ptext31:	
  8503 ;; *************** function _INT_DefaultInterruptHandler *****************
  8504 ;; Defined at:
  8505 ;;		line 67 in file "mcc_generated_files/ext_int.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;		None
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		None
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;Total ram usage:        0 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_EXT_INT_Initialize
  8529 ;;		_INT_CallBack
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           
  8534                           ;psect for function _INT_DefaultInterruptHandler
  8535  0A3C                     _INT_DefaultInterruptHandler:
  8536  0A3C                     i1l281:	
  8537                           ;incstack = 0
  8538                           ; Regs used in _INT_DefaultInterruptHandler: []
  8539                           
  8540  0A3C  0008               	return
  8541  0A3D                     __end_of_INT_DefaultInterruptHandler:
  8542                           
  8543                           	psect	text32
  8544  0A72                     __ptext32:	
  8545 ;; *************** function _TMR0_Reload *****************
  8546 ;; Defined at:
  8547 ;;		line 127 in file "mcc_generated_files/tmr0.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      void 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;Total ram usage:        0 bytes
  8566 ;; Hardware stack levels used: 1
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		_EXT_ISR
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           
  8575                           ;psect for function _TMR0_Reload
  8576  0A72                     _TMR0_Reload:
  8577  0A72                     i1l2178:	
  8578                           ;incstack = 0
  8579                           ; Regs used in _TMR0_Reload: [wreg+status,2]
  8580                           
  8581                           
  8582                           ;mcc_generated_files/tmr0.c: 130:     TMR0H = timer0ReloadVal16bit >> 8;
  8583  0A72  0141               	movlb	1	; select bank1
  8584  0A73  0841               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
  8585  0A74  014B               	movlb	11	; select bank11
  8586  0A75  009D               	movwf	29	;volatile
  8587  0A76                     i1l2180:
  8588                           
  8589                           ;mcc_generated_files/tmr0.c: 131:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  8590  0A76  0141               	movlb	1	; select bank1
  8591  0A77  0840               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
  8592  0A78  014B               	movlb	11	; select bank11
  8593  0A79  009C               	movwf	28	;volatile
  8594  0A7A                     i1l324:
  8595  0A7A  0008               	return
  8596  0A7B                     __end_of_TMR0_Reload:
  8597  007E                     btemp	set	126	;btemp
  8598  007E                     int$flags	set	126
  8599  007E                     wtemp0	set	126
  8600  207E                     
  8601                           	psect	config
  8602                           
  8603                           ;Config register CONFIG1 @ 0x8007
  8604                           ;	External Oscillator Mode Selection bits
  8605                           ;	FEXTOSC = OFF, Oscillator not enabled
  8606                           ;	Power-up Default Value for COSC bits
  8607                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  8608                           ;	Clock Out Enable bit
  8609                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  8610                           ;	VDD Range Analog Calibration Selection bit
  8611                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  8612  8007                     	org	32775
  8613  8007  3FED               	dw	16365
  8614                           
  8615                           ;Config register CONFIG2 @ 0x8008
  8616                           ;	Master Clear Enable bit
  8617                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  8618                           ;	Power-up Timer Selection bits
  8619                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8620                           ;	WDT Operating Mode bits
  8621                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  8622                           ;	Brown-out Reset Enable bits
  8623                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8624                           ;	Brown-out Reset Voltage Selection bit
  8625                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  8626                           ;	PPSLOCKED One-Way Set Enable bit
  8627                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  8628                           ;	Stack Overflow/Underflow Reset Enable bit
  8629                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8630  8008                     	org	32776
  8631  8008  3FE7               	dw	16359
  8632                           
  8633                           ;Config register CONFIG4 @ 0x800A
  8634                           ;	Boot Block Size Selection bits
  8635                           ;	BBSIZE = BB512, 512 words boot block size
  8636                           ;	Boot Block Enable bit
  8637                           ;	BBEN = OFF, Boot Block is disabled
  8638                           ;	SAF Enable bit
  8639                           ;	SAFEN = OFF, SAF is disabled
  8640                           ;	Application Block Write Protection bit
  8641                           ;	WRTAPP = OFF, Application Block is not write-protected
  8642                           ;	Boot Block Write Protection bit
  8643                           ;	WRTB = OFF, Boot Block is not write-protected
  8644                           ;	Configuration Registers Write Protection bit
  8645                           ;	WRTC = OFF, Configuration Registers are not write-protected
  8646                           ;	Storage Area Flash (SAF) Write Protection bit
  8647                           ;	WRTSAF = OFF, SAF is not write-protected
  8648                           ;	Low Voltage Programming Enable bit
  8649                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  8650  800A                     	org	32778
  8651  800A  3FFF               	dw	16383
  8652                           
  8653                           ;Config register CONFIG5 @ 0x800B
  8654                           ;	User Program Flash Memory Code Protection bit
  8655                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  8656  800B                     	org	32779
  8657  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    4
    Data        896
    BSS         11
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      56
    BANK1            46     23      42
    BANK2             0      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    displayMatrix@states	PTR unsigned char  size(1) Largest target is 7
		 -> light_array(BANK1[7]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_ISR_(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_ISR_(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXT_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXT_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_ISR_
    _TMR1_ISR_->___awdiv
    _INT_CallBack->_EXT_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_ISR->_TMR1_ISR_

Critical Paths under _main in BANK1

    _main->_displayMatrix
    _displayMatrix->_shiftBytes
    _shiftBytes->_SPI1_ExchangeByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    3987
                                              9 BANK1     14    14      0
                 _EXT_INT_Initialize
            _INT_SetInterruptHandler
                    _PWM3_Initialize
                    _SPI1_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
           _TMR0_SetInterruptHandler
                    _TMR1_Initialize
           _TMR1_SetInterruptHandler
                    _TMR2_Initialize
                      _displayMatrix
                           _playNote
                         _shiftBytes
 ---------------------------------------------------------------------------------
 (1) _playNote                                             3     2      1     460
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _displayMatrix                                        6     6      0     739
                                              3 BANK1      6     6      0
                         _shiftBytes
 ---------------------------------------------------------------------------------
 (1) _shiftBytes                                           2     1      1     363
                                              1 BANK1      2     1      1
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _SPI1_ExchangeByte                                    1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    2589
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    2564
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _TMR1_ISR_ *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR_                                           45    45      0    2324
                                              9 COMMON     5     5      0
                                              0 BANK0     40    40      0
                            ___awdiv
                         i1_playNote
 ---------------------------------------------------------------------------------
 (7) i1_playNote                                           3     2      1     184
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _TMR0_ISR_ *
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR_                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0      25
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0      25
                   Absolute function *
                            _EXT_ISR *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EXT_ISR                                              2     2      0      25
                                              0 COMMON     2     2      0
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EXT_INT_Initialize
     _INT_SetInterruptHandler
   _INT_SetInterruptHandler
   _PWM3_Initialize
   _SPI1_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR0_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_Initialize
   _displayMatrix
     _shiftBytes
       _SPI1_ExchangeByte
   _playNote
   _shiftBytes

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _EXT_ISR *
         _TMR0_Reload
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_ISR_ *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_ISR_ *
       ___awdiv
       i1_playNote
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      70       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               2E     17      2A       8       91.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      70      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Dec 25 06:58:19 2021

                       _SPI1_ExchangeByte 0AAD                                        l32 0A55  
                                      l35 0A3F                                        l29 0B39  
                                      l64 0AEF                                        l74 0AB2  
                                      l76 0AB7                                        l77 0ABA  
                            ___awdiv@sign 0076                        ?_SPI1_ExchangeByte 0070  
                                     l226 0A71                                       l147 07F3  
                                     l331 0A5B                                       l309 0B56  
                                     l177 0AAC                                       l284 0A9E  
                                     l365 0B97                                       l278 0A4F  
                                     l710 0C2E                                       l703 0AC9  
                                     l543 072D                                       l535 0699  
                                     l395 0A83                                       l556 07C5  
                                     l558 07C7                                       l559 07C8  
                                     l687 0BA5                                       l688 0BAF  
                                     l689 0BBA                                       _PR2 028D  
                         _timer1ReloadVal 0056                       ??_SPI1_ExchangeByte 00A0  
                         _TMR2_Initialize 0A9F                                       wreg 0009  
                          ?_displayMatrix 0070                                      l3100 0B7C  
                                    l3030 0A56                                      l3110 0B8C  
                                    l3102 0B7E                                      l3022 0AAF  
                                    l3040 0AEB                                      l3120 0B3A  
                                    l3032 0A7B                                      l3112 0B94  
                                    l3104 0B80                                      l3024 0AB8  
                                    l3200 05CE                                      l3114 0A91  
                                    l3050 07D3                                      l3042 0AED  
                                    l3034 0ADB                                      l3122 0B48  
                                    l3106 0B82                                      l3130 0ABD  
                                    l3210 05FF                                      l3202 05DB  
                                    l3028 0A4A                                      l3116 0A94  
                                    l3060 07E2                                      l3052 07D6  
                                    l3044 07CC                                      l3036 0AE8  
                                    l3124 0B4A                                      l3108 0B8A  
                                    l3140 0B2A                                      l3132 0AC6  
                                    l3300 0779                                      l3212 0601  
                                    l3204 05E8                                      l3118 0A9C  
                                    l3070 07EE                                      l3062 07E4  
                                    l3054 07DC                                      l3046 07CF  
                                    l3038 0AE9                                      l3126 0B4B  
                                    l3142 0B2D                                      l3134 0AC8  
                                    l3150 0BF3                                      l3310 07AF  
                                    l3302 0781                                      l3230 060D  
                                    l3222 0606                                      l3214 0602  
                                    l3206 05F5                                      l3072 07F0  
                                    l3064 07E7                                      l3056 07DE  
                                    l3048 07D1                                      l3128 0B53  
                                    l3080 0A3D                                      l3144 0B30  
                                    l3136 0B1E                                      l3160 0C01  
                                    l3304 07A1                                      l3312 07B1  
                                    l3232 0612                                      l3216 0603  
                                    l3208 05FA                                      l3074 0A50  
                                    l3066 07E9                                      l3058 07E0  
                                    l3082 0A6A                                      l3090 0AA6  
                                    l3146 0B33                                      l3138 0B27  
                                    l3162 0C05                                      l3314 07B7  
                                    l3306 07A8                                      l3242 0630  
                                    l3234 061F                                      l3076 0A52  
                                    l3068 07EC                                      l3092 0AA7  
                                    l3084 0A9F                                      l3148 0B36  
                                    l3164 0C13                                      l3156 0BF6  
                                    l3316 07BC                                      l3308 07AD  
                                    l3260 0687                                      l3244 0653  
                                    l3236 062D                                      l3228 0609  
                                    l3078 0A54                                      l3094 0AA9  
                                    l3086 0AA2                                      l3166 0C1C  
                                    l3158 0BFC                                      l3270 06AD  
                                    l3262 069B                                      l3254 0668  
                                    l3246 0657                                      l3190 05C4  
                                    l3096 0B77                                      l3088 0AA3  
                                    l3168 0C21                                      l3280 06F1  
                                    l3272 06B2                                      l3264 06A4  
                                    l3256 0676                                      l3248 0665  
                                    l3192 05C8                                      l3098 0B7A  
                                    l3282 06F5                                      l3274 06B5  
                                    l3266 06A6                                      l3258 067A  
                                    l3194 05CA                                      l3186 05C0  
                                    l3284 0711                                      l3276 06D1  
                                    l3292 0719                                      l3268 06A7  
                                    l3196 05CC                                      l3188 05C3  
                                    l3294 0732                                      l3286 0713  
                                    l3278 06D5                                      l3198 05CD  
                                    l3296 0752                                      l3288 0715  
                                    l3298 0759                                      l3378 0722  
                                    l2790 0B9A                                      l2792 0BA1  
                                    l2794 0BAC                                      u2130 0BA1  
                                    u2131 0BA0                                      u2140 0BAC  
                                    u2141 0BAB                                      _LATA 0018  
                         __end_of_INT_ISR 0A4A                                      _LATC 001A  
                                    u2400 0C2E                                      u2401 0C2D  
                                    u2500 06AD                                      u2405 0C2A  
                                    u2501 06AC                                      u2510 06B2  
                                    u2430 061F                                      u2511 06B1  
                                    u2431 061E                                      u2520 0758  
                                    u2440 062D                                      u2521 0757  
                                    u2441 062C                                      u2530 0780  
                                    _T2PR 028D                                      u2531 077F  
                                    u2435 061B                                      u2380 0AB7  
                                    u2540 07A8                                      u2381 0AB6  
                                    u2541 07A7                                      u2445 0629  
                                    u2390 0BFC                                      u2550 07B7  
                                    u2470 0664                                      u2391 0BFB  
                                    u2551 07B6                                      u2471 0663  
                                    u2455 0638                                      u2560 07BC  
                                    u2480 0687                                      u2561 07BB  
                                    u2481 0686                                      u2465 0643  
                                    u2490 0699                                      u2491 0698  
                                    u2475 0660                                      u2485 0683  
                                    u2495 0695                                      u2577 0C17  
                         __end_of_EXT_ISR 0BF1                                      _TMR2 028C  
                                    _WPUA 1F39                                      _WPUC 1F4F  
                                    _main 05C0                                i1_playNote 0B57  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
     __end_of_INT_DefaultInterruptHandler 0A3D               _INT_DefaultInterruptHandler 0A3C  
                                    start 0031           __end_of_INT_SetInterruptHandler 0A50  
               __end_of_SPI1_ExchangeByte 0ABB                ??_TMR1_SetInterruptHandler 00A2  
                 __end_of_TMR0_Initialize 0B57            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0006             __end_of_OSCILLATOR_Initialize 0A56  
                                   ?_main 0070                           __end_of___awdiv 0C8E  
                                   _T1CLK 0211                           ___awdiv@divisor 0070  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                                     _T2TMR 028C  
                                   i1l250 0013                                     _T2RST 0291  
                                   i1l324 0A7A                                     i1l252 001F  
                                   i1l253 002F                                     i1l334 0002  
                                   i1l271 0A49                                     i1l328 0B06  
                                   i1l281 0A3C                                     i1l258 002F  
                                   i1l275 0A90                                     i1l392 0B1D  
                                   i1l379 0ADA                                     i1l573 0BF0  
                                   i1l566 0BBD                                     i1l398 0003  
                                   i1l576 0A43                                     i1l586 0165  
                                   i1l931 0C8D                                     i1l684 05BF  
                                   i1l678 057E                                     i1l687 0B62  
                                   i1l688 0B6C                                     i1l689 0B76  
                         ___awdiv@counter 0075                                     _OSCEN 0891  
                                   _TMR0H 059D                          playNote@prescale 00A0  
                                   _TMR1H 020D                                     _TMR0L 059C  
                                   _TMR1L 020C                                     _TRISA 0012  
                                   _TRISC 0014         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 00A0                        __size_of_TMR0_ISR_ 0004  
                      __size_of_TMR1_ISR_ 0553                          __end_of_TMR0_ISR 0B07  
                        __end_of_TMR1_ISR 0B1E                            _WDT_Initialize 0A3D  
                                   _count 00C4                                     _song2 21BA  
                                   _song3 211C                                     main@i 00B1  
                                   main@j 00AF                   __end_of_PWM3_Initialize 0A72  
                 __end_of_TMR1_Initialize 0B98                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0ACA                  __size_of_SPI1_Initialize 0015  
                         __initialization 0033                              __end_of_main 07CC  
                 __end_of_TMR2_Initialize 0AAD               ?_INTERRUPT_InterruptManager 0070  
                    TMR1_ISR_@lights_1202 0021                      TMR1_ISR_@lights_1214 0022  
                                  ??_main 00A9                           ??_displayMatrix 00A3  
                  __end_of_WDT_Initialize 0A40                                 ??_INT_ISR 0072  
                               ??_EXT_ISR 0070                          ___awdiv@dividend 0072  
                                  _ANSELA 1F38                                    _ANSELC 1F4E  
                                  _T0CON0 059E                                    _T0CON1 059F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA5PPS 1F15                                    _RC3PPS 1F23  
                 TMR1_WriteTimer@timerVal 0070                                    i1l2210 0BE0  
                                  i1l2202 0BCD                                    _RC5PPS 1F25  
                                  i1l2212 0BE5                                    i1l2204 0BD3  
                                  i1l2220 0C30                                    i1l2214 0BE7  
                                  i1l2206 0BD8                                    i1l2230 0C44  
                                  i1l2222 0C34                                    i1l2216 0BEE  
                                  i1l2208 0BDB                                    i1l2240 0C58  
                                  i1l2232 0C48                                    i1l2224 0C39  
                                  u200_20 055D                                    i1l2400 00A2  
                                  u200_21 055C                                    _ODCONA 1F3A  
                                  i1l2250 0C74                                    i1l2242 0C5C  
                                  i1l2234 0C4A                                    i1l2226 0C3B  
                                  i1l2218 0C2F                                    i1l2410 00D2  
                                  i1l2402 00B4                                    _ODCONC 1F50  
                                  i1l2180 0A76                                    i1l2252 0C79  
                                  i1l2244 0C60                                    i1l2236 0C50  
                                  i1l2228 0C3F                                    i1l2500 026A  
                                  i1l2412 00D6                                    i1l2246 0C6F  
                                  i1l2238 0C53                                    i1l2254 0C7F  
                                  i1l2262 0B58                                    i1l2510 02A8  
                                  i1l2502 028F                                    i1l2430 0126  
                                  i1l2414 00E4                                    i1l2256 0C84  
                                  i1l2248 0C73                                    i1l2264 0B5F  
                                  u201_20 0564                                    i1l2600 03D6  
                                  i1l2512 02AB                                    i1l2440 0153  
                                  i1l2432 0134                                    i1l2424 0106  
                                  i1l2416 00F2                                    i1l2408 00B6  
                                  u201_21 0563                                    i1l2178 0A72  
                                  i1l2194 0BBB                                    i1l2258 0C89  
                                  i1l2266 0B69                                    i1l2610 03EF  
                                  i1l2530 02E6                                    i1l2522 02C7  
                                  i1l2450 018C                                    i1l2506 0294  
                                  i1l2442 0157                                    i1l2426 0114  
                                  i1l2418 0104                                    i1l2370 0ACF  
                                  i1l2196 0BC2                                    i1l2364 0A84  
                                  i1l2700 0556                                    i1l2620 043D  
                                  i1l2612 03FD                                    i1l2604 03E4  
                                  i1l2540 0305                                    i1l2532 02EF  
                                  i1l2524 02D5                                    i1l2516 02B9  
                                  i1l2508 029A                                    i1l2452 0193  
                                  i1l2428 0118                                    i1l2444 0165  
                                  i1l2380 0AD8                                    i1l2372 0AD0  
                                  i1l2198 0BC6                                    i1l2366 0A8B  
                                  i1l2702 055D                                    i1l2710 0571  
                                  i1l2622 043F                                    i1l2614 0407  
                                  i1l2606 03EA                                    i1l2550 0321  
                                  i1l2526 02D8                                    i1l2518 02C2  
                                  i1l2470 01D7                                    i1l2454 019A  
                                  i1l2446 016B                                    i1l2438 0137  
                                  i1l2390 006D                                    i1l2374 0AD2  
                                  i1l2720 05A4                                    i1l2712 0577  
                                  u202_20 0577                                    i1l2704 0564  
                                  i1l2640 049C                                    i1l2632 046E  
                                  i1l2616 0425                                    i1l2560 0343  
                                  i1l2552 0329                                    i1l2544 0313  
                                  i1l2536 02F4                                    i1l2480 01F9  
                                  i1l2472 01E6                                    i1l2464 01BF  
                                  i1l2456 019F                                    i1l2448 017C  
                                  i1l2392 0072                                    i1l2376 0AD4  
                                  i1l2368 0ACA                                    u210_20 0B18  
                                  u202_21 0576                                    u210_21 0B17  
                                  i1l2714 058C                                    i1l2706 0569  
                                  i1l2650 04B8                                    i1l2634 0474  
                                  i1l2626 044D                                    i1l2618 042B  
                                  i1l2554 032C                                    i1l2546 031C  
                                  i1l2538 0302                                    i1l2490 022A  
                                  i1l2482 0202                                    i1l2474 01F6  
                                  i1l2466 01C5                                    i1l2458 01BC  
                                  i1l2394 0078                                    i1l2378 0AD6  
                                  i1l2388 0A40                                    i1l2724 05AB  
                                  i1l2716 0592                                    i1l2708 056D  
                                  i1l3380 051A                                    i1l2652 04BA  
                                  i1l2644 04AA                                    i1l2636 0486  
                                  i1l2628 0469                                    i1l2580 0383  
                                  i1l2572 0368                                    i1l2564 0348  
                                  i1l2492 0248                                    i1l2484 0206  
                                  i1l2468 01C9                                    i1l2396 0086  
                                  i1l2820 001B                                    i1l2812 0006  
                                  u130_25 0C54                                    i1l2750 0AF2  
                                  i1l2726 05B8                                    i1l2718 0597  
                                  i1l2670 04EF                                    i1l2662 04D6  
                                  i1l2646 04B3                                    i1l2638 049A  
                                  i1l2590 03B2                                    i1l2582 0395  
                                  i1l2574 0371                                    i1l2566 0357  
                                  i1l2558 033A                                    i1l2494 025A  
                                  i1l2486 0214                                    i1l2398 0094  
                                  i1l2822 0023                                    i1l2814 000B  
                                  u123_20 0BC2                                    i1l2760 0A46  
                                  i1l2752 0AF6                                    u131_20 0C60  
                                  u203_20 058C                                    i1l2680 0504  
                                  i1l2664 04D8                                    i1l2656 04C8  
                                  i1l2584 0397                                    i1l2568 035A  
                                  i1l2496 025C                                    i1l2488 0219  
                                  i1l2824 0027                                    i1l2816 000F  
                                  u123_21 0BC1                                    u131_21 0C5F  
                                  u203_21 058B                                    i1l2754 0AFA  
                                  i1l2682 050D                                    i1l2674 04F4  
                                  i1l2658 04D1                                    i1l2690 0528  
                                  i1l2594 03B7                                    i1l2578 0376  
                                  i1l2762 0B07                                    i1l2826 002B  
                                  i1l2818 0017                                    i1l2756 0B01  
                                  i1l2748 0AF0                                    i1l2676 04F6  
                                  i1l2668 04E6                                    i1l2596 03C5  
                                  i1l2588 03A5                                    i1l2692 0529  
                                  i1l2764 0B09                                    u203_25 0588  
                                  i1l2758 0A44                                    i1l2694 052F  
                                  i1l2598 03D3                                    i1l2766 0B11  
                                  u124_20 0BD3                                    u204_20 0592  
                                  i1l2696 0540                                    i1l2688 0512  
                                  u140_20 0ACF                                    i1l2768 0B18  
                                  u220_20 001B                                    u124_21 0BD2  
                                  u204_21 0591                                    u140_21 0ACE  
                                  u220_21 001A                                    i1l2698 0550  
                                  u132_25 0C61                                    u125_20 0BE0  
                                  u133_20 0C6F                                    u205_20 05A4  
                                  u141_20 0078                                    u221_20 0023  
                                  u125_21 0BDF                                    u133_21 0C6E  
                                  u205_21 05A3                                    u141_21 0077  
                                  u221_21 0022                                    u133_25 0C6B  
                                  u205_25 05A0                                    u126_20 0BEE  
                                  u206_20 05AA                                    u150_20 0125  
                                  u142_20 0086                                    u222_20 0027  
                                  u126_21 0BED                                    u206_21 05A9  
                                  u150_21 0124                                    u142_21 0085  
                                  u222_21 0026                                    u134_25 0C75  
                                  u150_25 0121                                    u142_25 0082  
                                  u135_20 0C7F                                    u127_20 0C34  
                                  u207_20 05B8                                    u151_20 0134  
                                  u143_20 0094                                    u223_20 002B  
                                  u135_21 0C7E                                    u127_21 0C33  
                                  u207_21 05B7                                    u151_21 0133  
                                  u143_21 0093                                    u223_21 002A  
                                  u207_25 05B4                                    u151_25 0130  
                                  u143_25 0090                                    u136_20 0C84  
                                  u128_20 0C3F                                    u208_20 05BE  
                                  u160_20 01D6                                    u144_20 00A2  
                                  u136_21 0C83                                    u128_21 0C3E  
                                  u208_21 05BD                                    u160_21 01D5  
                                  u144_21 00A1                                    _INLVLA 1F3C  
                                  _INLVLC 1F52                                    u160_25 01D2  
                                  u152_25 013F                                    u144_25 009E  
                                  u209_20 0B01                                    u129_20 0C50  
                                  u137_20 0B5F                                    u161_20 01E6  
                                  u153_20 0164                                    u145_20 00B4  
                                  u217_20 000B                                    u209_21 0B00  
                                  u129_21 0C4F                                    u137_21 0B5E  
                                  u161_21 01E5                                    u153_21 0163  
                                  u145_21 00B3                                    u217_21 000A  
                                  u153_25 0160                                    u138_20 0B69  
                                  u170_20 02B8                                    u162_20 01F6  
                                  u154_20 016B                                    u218_20 000F  
                                  u138_21 0B68                                    u170_21 02B7  
                                  u162_21 01F5                                    u154_21 016A  
                                  u218_21 000E                                    u170_25 02B4  
                                  u146_25 00BE                                    u139_20 0A8B  
                                  u171_20 02D5                                    u163_20 0213  
                                  u155_20 017C                                    u147_20 00E3  
                                  u219_20 0017                                    u139_21 0A8A  
                                  u171_21 02D4                                    u163_21 0212  
                                  u155_21 017B                                    u147_21 00E2  
                                  u219_21 0016                                    u171_25 02D1  
                                  u163_25 020F                                    u147_25 00DF  
                                  u180_20 0395                                    u172_20 02E5  
                                  u164_20 0219                                    u156_20 018C  
                                  u148_20 00F2                                    u180_21 0394  
                                  u172_21 02E4                                    u164_21 0218  
                                  u156_21 018B                                    u148_21 00F1  
                                  u172_25 02E1                                    u148_25 00EE  
                                  u181_20 03A4                                    u173_20 0302  
                                  u165_20 022A                                    u157_20 0193  
                                  u149_20 0104                                    u181_21 03A3  
                                  u173_21 0301                                    u165_21 0229  
                                  u157_21 0192                                    u149_21 0103  
                                  u181_25 03A0                                    u173_25 02FE  
                                  u182_20 03C5                                    u174_20 0312  
                                  u166_20 025A                                    u158_20 019A  
                                  u182_21 03C4                                    u174_21 0311  
                                  u166_21 0259                                    u158_21 0199  
                                  u190_25 0455                                    u182_25 03C1  
                                  u174_25 030E                                    u191_20 0474  
                                  u183_20 03D3                                    u175_20 0329  
                                  u167_20 0269                                    u159_20 019F  
                                  u191_21 0473                                    u183_21 03D2  
                                  u175_21 0328                                    u167_21 0268  
                                  u159_21 019E                                    u183_25 03CF  
                                  u167_25 0265                                    u192_20 0486  
                                  u184_20 03E3                                    u176_20 0339  
                                  u168_20 029A                                    u192_21 0485  
                                  u184_21 03E2                                    u176_21 0338  
                                  u168_21 0299                                    _INTPPS 1E90  
                                  u184_25 03DF                                    u176_25 0335  
                                  u193_20 04A9                                    u185_20 03FD  
                                  u177_20 0357                                    u169_20 02A8  
                                  u193_21 04A8                                    u185_21 03FC  
                                  u177_21 0356                                    u169_21 02A7  
                                  u193_25 04A5                                    u185_25 03F9  
                                  u169_25 02A4                                    u194_20 04C7  
                                  u186_20 0407                                    u178_20 0367  
                                  u194_21 04C6                                    u186_21 0406  
                                  u178_21 0366                                    u194_25 04C3  
                                  u178_25 0363                                    u258_27 0BC9  
                                  u195_20 04E5                                    u187_20 042B  
                                  u179_20 0383                                    u195_21 04E4  
                                  u187_21 042A                                    u179_21 0382  
                                  u195_25 04E1                                    u179_25 037F  
                                  u196_20 0503                                    u188_20 043D  
                                  u196_21 0502                                    u188_21 043C  
                                  u196_25 04FF                                    u197_20 052F  
                                  u189_20 044C                                    u197_21 052E  
                                  u189_21 044B                                    u189_25 0448  
                                  u198_20 0540                                    u198_21 053F  
                                  u199_20 0550                                    u199_21 054F  
                                  _OSCFRQ 0893                                    _WDTCON 080C  
                             ?i1_playNote 0070                __size_of_SPI1_ExchangeByte 000E  
    __end_of_TMR1_DefaultInterruptHandler 0004     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0003                         __end_of_TMR0_ISR_ 0A44  
                       __end_of_TMR1_ISR_ 05C0                              ?_TMR0_Reload 0070  
                               ??___awdiv 0074                          ?_TMR0_Initialize 0070  
                        ___awdiv@quotient 0077                             ?_INT_CallBack 0070  
                        __end_of_playNote 0BBB                              __pdataBIGRAM 207E  
                         ?_WDT_Initialize 0070          __size_of_INT_SetInterruptHandler 0006  
TMR1_SetInterruptHandler@InterruptHandler 00A0  TMR0_SetInterruptHandler@InterruptHandler 00A0  
 INT_SetInterruptHandler@InterruptHandler 00A0                   __end_of_TMR1_WriteTimer 0ADB  
                        ?_TMR1_Initialize 0070                          ?_PWM3_Initialize 0070  
                       _SYSTEM_Initialize 0B1E                   __end_of__initialization 0069  
                      ?_SYSTEM_Initialize 0070                             _last_prescale 00C8  
                    _silent_night_playing 0053                            __pcstackCOMMON 0070  
                            __pidataBANK0 0A63                              __pidataBANK1 0A5C  
                     ??_SYSTEM_Initialize 00A2                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                      i1playNote@prescale 0070                         ??_SPI1_Initialize 00A0  
                        ?_TMR2_Initialize 0070                            ??_INT_CallBack 0072  
                   SPI1_ExchangeByte@data 00A0                           EXT_ISR@debounce 0071  
                       shiftBytes@lowSide 00A1                        _spi1_configuration 1000  
             __size_of_EXT_INT_Initialize 000E                       __size_ofi1_playNote 0020  
               __end_of_SYSTEM_Initialize 0B3A                        TMR1_ISR_@jungle_sw 0023  
                              __pbssBANK0 004F                                __pbssBANK1 00C4  
                              __pmaintext 05C0          __end_of_TMR0_SetInterruptHandler 0A5C  
                              ??_TMR0_ISR 0070                                ??_TMR1_ISR 007E  
                              __pintentry 0004                      displayMatrix@lowSide 00A8  
                                 _INT_ISR 0A44                                   _EXT_ISR 0BBB  
                                 _OSCTUNE 0892                                   _PWM3DCH 0315  
                                 _PWM3DCL 0314                                   _PWM3CON 0316  
                                 _SSP1ADD 018D                                   _SLRCONA 1F3B  
                                 _SLRCONC 1F51                                   _SSP1BUF 018C  
                        ?_TMR1_WriteTimer 0070                                 ?_playNote 00A0  
                                 ___awdiv 0C2F                      __size_of_TMR0_Reload 0009  
                                 __ptext1 0B98                                   __ptext2 0BF1  
                                 __ptext3 0ABB                                   __ptext4 0AAD  
                                 __ptext5 0B1E                                   __ptext6 0A3D  
                                 __ptext7 0A9F                                   __ptext8 0B77  
                                 __ptext9 0A7B            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0A50  
                               _T2CONbits 028E                            displayMatrix@i 00A6  
       __size_of_TMR1_SetInterruptHandler 0009                  ??_PIN_MANAGER_Initialize 00A0  
               ?_TMR1_SetInterruptHandler 00A0                                 _T2HLTbits 028F  
                 _INT_SetInterruptHandler 0A4A                                   _presses 00C7  
              __size_of_SYSTEM_Initialize 001C                      end_of_initialization 0069  
                               _T2RSTbits 0291                                   init_ram 07F4  
                            ??i1_playNote 0071                                   initloop 07F5  
                    __end_of_INT_CallBack 0A91                                _shiftBytes 0ABB  
                              ??_playNote 00A1                                 _TMR0_ISR_ 0A40  
                               _TMR1_ISR_ 006D                          ??_WDT_Initialize 00A0  
                _TMR0_SetInterruptHandler 0A56                                 _PORTAbits 000C  
                      __end_ofi1_playNote 0B77                                 _TRISAbits 0012  
                               _TRISCbits 0014                     __end_of_displayMatrix 0C2F  
                              main@j_1183 00B3                                main@j_1185 00B5  
                        _silent_night_pre 2366                           _SPI1_Initialize 0ADB  
                    _timer0ReloadVal16bit 00C0                             __pidataBIGRAM 0C8E  
                              ?_TMR0_ISR_ 0070                                ?_TMR1_ISR_ 0070  
                       __size_of_TMR0_ISR 0017                         __size_of_TMR1_ISR 0017  
                  ?_OSCILLATOR_Initialize 0070                 ??_INT_SetInterruptHandler 00A2  
                      shiftBytes@highSide 00A2                       start_initialization 0033  
                __size_of_TMR0_Initialize 001D           __size_of_PIN_MANAGER_Initialize 0028  
            ?_INT_DefaultInterruptHandler 0070                               ?_shiftBytes 00A1  
                __size_of_PWM3_Initialize 0008                  __size_of_TMR1_Initialize 0021  
                             __pdataBANK0 0048                               __pdataBANK1 00B7  
              __end_of_EXT_INT_Initialize 0A9F                                 ___latbits 0002  
                                ?_INT_ISR 0070                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                                  ?_EXT_ISR 0070  
                __size_of_TMR2_Initialize 000E                   __end_of_SPI1_Initialize 0AF0  
                   __size_of_INT_CallBack 000D                           TMR1_ISR_@i_1200 003C  
                         TMR1_ISR_@i_1201 0042                           TMR1_ISR_@i_1210 0030  
                         TMR1_ISR_@i_1211 003E                           TMR1_ISR_@i_1203 0024  
                         TMR1_ISR_@i_1212 0032                           TMR1_ISR_@i_1204 0026  
                         TMR1_ISR_@i_1213 0046                           TMR1_ISR_@i_1205 0044  
                         TMR1_ISR_@i_1206 0028                           TMR1_ISR_@i_1207 002A  
                         TMR1_ISR_@i_1216 0034                           TMR1_ISR_@i_1208 002C  
                         TMR1_ISR_@i_1217 0036                           TMR1_ISR_@i_1209 002E  
                         TMR1_ISR_@i_1218 0038                           TMR1_ISR_@i_1219 003A  
                   _TMR0_InterruptHandler 00BE                                 __pnvBANK0 0054  
                               __pnvBANK1 00BE                           TMR1_ISR_@lights 0020  
                  _PIN_MANAGER_Initialize 07CC             ??_INT_DefaultInterruptHandler 0070  
                       __size_of_playNote 0023          __end_of_TMR1_SetInterruptHandler 0A84  
                                ?___awdiv 0070                               ??_TMR0_ISR_ 0070  
                             ??_TMR1_ISR_ 0079              ??_INTERRUPT_InterruptManager 007E  
                     displayMatrix@states 00A5                              _INT_CallBack 0A84  
                            playNote@note 00A2                       __size_of_shiftBytes 000F  
                               _last_note 0050                                TMR1_ISR_@i 0040  
                                _T2CLKCON 0290                         ??_TMR0_Initialize 00A2  
                                _LATCbits 001A                                  _PIE0bits 0716  
                                _PIE1bits 0717                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 002D                ??_TMR0_SetInterruptHandler 00A2  
                                _PIR0bits 070C                                  _PIR1bits 070D  
                           ??_TMR0_Reload 0070                                 _song2_pre 224B  
                               _song3_pre 207E                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0AF0  
                                _TMR1_ISR 0B07                                 _num_songs 004E  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00A2  
                       ??_PWM3_Initialize 00A0                                 main@light 00AE  
    __size_of_INT_DefaultInterruptHandler 0001                            i1playNote@note 0072  
                        __size_of_INT_ISR 0006                          __size_of_EXT_ISR 0036  
                        ?_SPI1_Initialize 0070                         ??_TMR2_Initialize 00A0  
                           _song2_playing 0051                             _song3_playing 0052  
                           _TMR0_complete 00C9                   ??_OSCILLATOR_Initialize 00A0  
                            _jungle_count 004F                          __size_of___awdiv 005F  
                             _light_array 00B7                  _TMR1_SetInterruptHandler 0A7B  
                     __end_of_TMR0_Reload 0A7B                     _TMR1_InterruptHandler 0054  
                              _T0CON0bits 059E                                  __ptext10 0B3A  
                                __ptext11 0A56                                  __ptext20 0ACA  
                                __ptext12 0ADB                                  __ptext21 0003  
                                __ptext13 0A6A                                _T1GCONbits 020F  
                                __ptext30 0BBB                                  __ptext22 006D  
                                __ptext14 07CC                                  __ptext31 0A3C  
                                __ptext23 0B57                                  __ptext15 0A50  
                                __ptext32 0A72                                  __ptext24 0C2F  
                                __ptext16 0A91                                  __ptext25 0AF0  
                                __ptext17 0A4A                                  __ptext26 0002  
                                __ptext27 0A40                                  __ptext19 0B07  
                                __ptext28 0A44                                  __ptext29 0A84  
                            _SSP1CON1bits 0190                             __size_of_main 020C  
    __end_of_TMR0_DefaultInterruptHandler 0003     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0002                              ??_shiftBytes 00A2  
                                _playNote 0B98                    __size_of_displayMatrix 003E  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0031  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0072  
                            _song2_length 004B                              _song3_length 0048  
                              _INTCONbits 000B                      _INT_InterruptHandler 00C2  
                      __end_of_shiftBytes 0ACA                               _jungle_bool 00C6  
                            _silent_night 22DB                        _EXT_INT_Initialize 0A91  
                 __size_of_WDT_Initialize 0003                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                       ?_EXT_INT_Initialize 0070  
           ?_TMR0_DefaultInterruptHandler 0070                               _TMR0_Reload 0A72  
                            _timer_high_2 004D                              _timer_high_3 004A  
                ?_INT_SetInterruptHandler 00A0                             __pstringtext1 1000  
                    ??_EXT_INT_Initialize 00A2                                _SSP1DATPPS 1EC6  
                              _SSP1CLKPPS 1EC5                           _TMR0_Initialize 0B3A  
                             _timer_low_2 004C                               _timer_low_3 0049  
                           _displayMatrix 0BF1            __end_of_PIN_MANAGER_Initialize 07F4  
                         _TMR1_Initialize 0B77                           _PWM3_Initialize 0A6A  
              __end_of_spi1_configuration 1004  
