

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 26 15:56:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15225
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	dataBIGRAM,global,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    54                           	dabs	1,0x620,48
    55                           	dabs	1,0x5A0,80
    56                           	dabs	1,0x566,10
    57                           	dabs	1,0x520,70
    58                           	dabs	1,0x4AB,69
    59                           	dabs	1,0x4A0,11
    60                           	dabs	1,0x420,80
    61                           	dabs	1,0x3BB,53
    62                           	dabs	1,0x3A0,27
    63                           	dabs	1,0x320,80
    64                           	dabs	1,0x2CA,38
    65                           	dabs	1,0x2A0,42
    66                           	dabs	1,0x220,80
    67                           	dabs	1,0x1CC,36
    68                           	dabs	1,0x1A0,44
    69                           	dabs	1,0x120,80
    70                           	dabs	1,0xCE,34
    71                           	dabs	1,0x207E,0,_song3_pre
    72                           	dabs	1,0x211C,0,_song3
    73                           	dabs	1,0x21BA,0,_song2
    74                           	dabs	1,0x224B,0,_song2_pre
    75                           	dabs	1,0x22DB,0,_silent_night
    76                           	dabs	1,0x2366,0,_silent_night_pre
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.35
    80                           ; Generated 13/04/2021 GMT
    81                           ; 
    82                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F15225 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000E                     	;# 
   128  0012                     	;# 
   129  0014                     	;# 
   130  0018                     	;# 
   131  001A                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011C                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  011F                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  018E                     	;# 
   152  018F                     	;# 
   153  0190                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  020C                     	;# 
   157  020D                     	;# 
   158  020E                     	;# 
   159  020E                     	;# 
   160  020F                     	;# 
   161  020F                     	;# 
   162  0210                     	;# 
   163  0210                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  028C                     	;# 
   167  028C                     	;# 
   168  028D                     	;# 
   169  028D                     	;# 
   170  028E                     	;# 
   171  028F                     	;# 
   172  0290                     	;# 
   173  0291                     	;# 
   174  030C                     	;# 
   175  030C                     	;# 
   176  030D                     	;# 
   177  030E                     	;# 
   178  030F                     	;# 
   179  0310                     	;# 
   180  0310                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0314                     	;# 
   185  0314                     	;# 
   186  0315                     	;# 
   187  0316                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  059C                     	;# 
   193  059C                     	;# 
   194  059D                     	;# 
   195  059D                     	;# 
   196  059E                     	;# 
   197  059F                     	;# 
   198  070C                     	;# 
   199  070D                     	;# 
   200  070E                     	;# 
   201  0716                     	;# 
   202  0717                     	;# 
   203  0718                     	;# 
   204  080C                     	;# 
   205  0811                     	;# 
   206  0813                     	;# 
   207  0814                     	;# 
   208  081A                     	;# 
   209  081A                     	;# 
   210  081B                     	;# 
   211  081C                     	;# 
   212  081C                     	;# 
   213  081D                     	;# 
   214  081E                     	;# 
   215  081F                     	;# 
   216  088E                     	;# 
   217  0890                     	;# 
   218  0891                     	;# 
   219  0892                     	;# 
   220  0893                     	;# 
   221  090C                     	;# 
   222  1E8F                     	;# 
   223  1E90                     	;# 
   224  1E91                     	;# 
   225  1E92                     	;# 
   226  1E93                     	;# 
   227  1E9C                     	;# 
   228  1EA1                     	;# 
   229  1EA2                     	;# 
   230  1EC3                     	;# 
   231  1EC5                     	;# 
   232  1EC6                     	;# 
   233  1EC7                     	;# 
   234  1ECB                     	;# 
   235  1ECB                     	;# 
   236  1ECB                     	;# 
   237  1ECC                     	;# 
   238  1ECC                     	;# 
   239  1ECC                     	;# 
   240  1F10                     	;# 
   241  1F11                     	;# 
   242  1F12                     	;# 
   243  1F14                     	;# 
   244  1F15                     	;# 
   245  1F20                     	;# 
   246  1F21                     	;# 
   247  1F22                     	;# 
   248  1F23                     	;# 
   249  1F24                     	;# 
   250  1F25                     	;# 
   251  1F38                     	;# 
   252  1F39                     	;# 
   253  1F3A                     	;# 
   254  1F3B                     	;# 
   255  1F3C                     	;# 
   256  1F3D                     	;# 
   257  1F3E                     	;# 
   258  1F3F                     	;# 
   259  1F4E                     	;# 
   260  1F4F                     	;# 
   261  1F50                     	;# 
   262  1F51                     	;# 
   263  1F52                     	;# 
   264  1F53                     	;# 
   265  1F54                     	;# 
   266  1F55                     	;# 
   267  1FE4                     	;# 
   268  1FE5                     	;# 
   269  1FE6                     	;# 
   270  1FE7                     	;# 
   271  1FE8                     	;# 
   272  1FE8                     	;# 
   273  1FE9                     	;# 
   274  1FEA                     	;# 
   275  1FEB                     	;# 
   276  1FED                     	;# 
   277  1FEE                     	;# 
   278  1FEF                     	;# 
   279  0000                     	;# 
   280  0001                     	;# 
   281  0002                     	;# 
   282  0003                     	;# 
   283  0004                     	;# 
   284  0005                     	;# 
   285  0006                     	;# 
   286  0007                     	;# 
   287  0008                     	;# 
   288  0009                     	;# 
   289  000A                     	;# 
   290  000B                     	;# 
   291  000C                     	;# 
   292  000E                     	;# 
   293  0012                     	;# 
   294  0014                     	;# 
   295  0018                     	;# 
   296  001A                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0119                     	;# 
   307  011A                     	;# 
   308  011B                     	;# 
   309  011B                     	;# 
   310  011C                     	;# 
   311  011D                     	;# 
   312  011E                     	;# 
   313  011F                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  018E                     	;# 
   317  018F                     	;# 
   318  0190                     	;# 
   319  0191                     	;# 
   320  0192                     	;# 
   321  020C                     	;# 
   322  020D                     	;# 
   323  020E                     	;# 
   324  020E                     	;# 
   325  020F                     	;# 
   326  020F                     	;# 
   327  0210                     	;# 
   328  0210                     	;# 
   329  0211                     	;# 
   330  0211                     	;# 
   331  028C                     	;# 
   332  028C                     	;# 
   333  028D                     	;# 
   334  028D                     	;# 
   335  028E                     	;# 
   336  028F                     	;# 
   337  0290                     	;# 
   338  0291                     	;# 
   339  030C                     	;# 
   340  030C                     	;# 
   341  030D                     	;# 
   342  030E                     	;# 
   343  030F                     	;# 
   344  0310                     	;# 
   345  0310                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0314                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  059C                     	;# 
   358  059C                     	;# 
   359  059D                     	;# 
   360  059D                     	;# 
   361  059E                     	;# 
   362  059F                     	;# 
   363  070C                     	;# 
   364  070D                     	;# 
   365  070E                     	;# 
   366  0716                     	;# 
   367  0717                     	;# 
   368  0718                     	;# 
   369  080C                     	;# 
   370  0811                     	;# 
   371  0813                     	;# 
   372  0814                     	;# 
   373  081A                     	;# 
   374  081A                     	;# 
   375  081B                     	;# 
   376  081C                     	;# 
   377  081C                     	;# 
   378  081D                     	;# 
   379  081E                     	;# 
   380  081F                     	;# 
   381  088E                     	;# 
   382  0890                     	;# 
   383  0891                     	;# 
   384  0892                     	;# 
   385  0893                     	;# 
   386  090C                     	;# 
   387  1E8F                     	;# 
   388  1E90                     	;# 
   389  1E91                     	;# 
   390  1E92                     	;# 
   391  1E93                     	;# 
   392  1E9C                     	;# 
   393  1EA1                     	;# 
   394  1EA2                     	;# 
   395  1EC3                     	;# 
   396  1EC5                     	;# 
   397  1EC6                     	;# 
   398  1EC7                     	;# 
   399  1ECB                     	;# 
   400  1ECB                     	;# 
   401  1ECB                     	;# 
   402  1ECC                     	;# 
   403  1ECC                     	;# 
   404  1ECC                     	;# 
   405  1F10                     	;# 
   406  1F11                     	;# 
   407  1F12                     	;# 
   408  1F14                     	;# 
   409  1F15                     	;# 
   410  1F20                     	;# 
   411  1F21                     	;# 
   412  1F22                     	;# 
   413  1F23                     	;# 
   414  1F24                     	;# 
   415  1F25                     	;# 
   416  1F38                     	;# 
   417  1F39                     	;# 
   418  1F3A                     	;# 
   419  1F3B                     	;# 
   420  1F3C                     	;# 
   421  1F3D                     	;# 
   422  1F3E                     	;# 
   423  1F3F                     	;# 
   424  1F4E                     	;# 
   425  1F4F                     	;# 
   426  1F50                     	;# 
   427  1F51                     	;# 
   428  1F52                     	;# 
   429  1F53                     	;# 
   430  1F54                     	;# 
   431  1F55                     	;# 
   432  1FE4                     	;# 
   433  1FE5                     	;# 
   434  1FE6                     	;# 
   435  1FE7                     	;# 
   436  1FE8                     	;# 
   437  1FE8                     	;# 
   438  1FE9                     	;# 
   439  1FEA                     	;# 
   440  1FEB                     	;# 
   441  1FED                     	;# 
   442  1FEE                     	;# 
   443  1FEF                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000E                     	;# 
   458  0012                     	;# 
   459  0014                     	;# 
   460  0018                     	;# 
   461  001A                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009B                     	;# 
   465  009C                     	;# 
   466  009D                     	;# 
   467  009E                     	;# 
   468  009F                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  0119                     	;# 
   472  011A                     	;# 
   473  011B                     	;# 
   474  011B                     	;# 
   475  011C                     	;# 
   476  011D                     	;# 
   477  011E                     	;# 
   478  011F                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  018E                     	;# 
   482  018F                     	;# 
   483  0190                     	;# 
   484  0191                     	;# 
   485  0192                     	;# 
   486  020C                     	;# 
   487  020D                     	;# 
   488  020E                     	;# 
   489  020E                     	;# 
   490  020F                     	;# 
   491  020F                     	;# 
   492  0210                     	;# 
   493  0210                     	;# 
   494  0211                     	;# 
   495  0211                     	;# 
   496  028C                     	;# 
   497  028C                     	;# 
   498  028D                     	;# 
   499  028D                     	;# 
   500  028E                     	;# 
   501  028F                     	;# 
   502  0290                     	;# 
   503  0291                     	;# 
   504  030C                     	;# 
   505  030C                     	;# 
   506  030D                     	;# 
   507  030E                     	;# 
   508  030F                     	;# 
   509  0310                     	;# 
   510  0310                     	;# 
   511  0311                     	;# 
   512  0312                     	;# 
   513  0313                     	;# 
   514  0314                     	;# 
   515  0314                     	;# 
   516  0315                     	;# 
   517  0316                     	;# 
   518  0318                     	;# 
   519  0318                     	;# 
   520  0319                     	;# 
   521  031A                     	;# 
   522  059C                     	;# 
   523  059C                     	;# 
   524  059D                     	;# 
   525  059D                     	;# 
   526  059E                     	;# 
   527  059F                     	;# 
   528  070C                     	;# 
   529  070D                     	;# 
   530  070E                     	;# 
   531  0716                     	;# 
   532  0717                     	;# 
   533  0718                     	;# 
   534  080C                     	;# 
   535  0811                     	;# 
   536  0813                     	;# 
   537  0814                     	;# 
   538  081A                     	;# 
   539  081A                     	;# 
   540  081B                     	;# 
   541  081C                     	;# 
   542  081C                     	;# 
   543  081D                     	;# 
   544  081E                     	;# 
   545  081F                     	;# 
   546  088E                     	;# 
   547  0890                     	;# 
   548  0891                     	;# 
   549  0892                     	;# 
   550  0893                     	;# 
   551  090C                     	;# 
   552  1E8F                     	;# 
   553  1E90                     	;# 
   554  1E91                     	;# 
   555  1E92                     	;# 
   556  1E93                     	;# 
   557  1E9C                     	;# 
   558  1EA1                     	;# 
   559  1EA2                     	;# 
   560  1EC3                     	;# 
   561  1EC5                     	;# 
   562  1EC6                     	;# 
   563  1EC7                     	;# 
   564  1ECB                     	;# 
   565  1ECB                     	;# 
   566  1ECB                     	;# 
   567  1ECC                     	;# 
   568  1ECC                     	;# 
   569  1ECC                     	;# 
   570  1F10                     	;# 
   571  1F11                     	;# 
   572  1F12                     	;# 
   573  1F14                     	;# 
   574  1F15                     	;# 
   575  1F20                     	;# 
   576  1F21                     	;# 
   577  1F22                     	;# 
   578  1F23                     	;# 
   579  1F24                     	;# 
   580  1F25                     	;# 
   581  1F38                     	;# 
   582  1F39                     	;# 
   583  1F3A                     	;# 
   584  1F3B                     	;# 
   585  1F3C                     	;# 
   586  1F3D                     	;# 
   587  1F3E                     	;# 
   588  1F3F                     	;# 
   589  1F4E                     	;# 
   590  1F4F                     	;# 
   591  1F50                     	;# 
   592  1F51                     	;# 
   593  1F52                     	;# 
   594  1F53                     	;# 
   595  1F54                     	;# 
   596  1F55                     	;# 
   597  1FE4                     	;# 
   598  1FE5                     	;# 
   599  1FE6                     	;# 
   600  1FE7                     	;# 
   601  1FE8                     	;# 
   602  1FE8                     	;# 
   603  1FE9                     	;# 
   604  1FEA                     	;# 
   605  1FEB                     	;# 
   606  1FED                     	;# 
   607  1FEE                     	;# 
   608  1FEF                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000E                     	;# 
   623  0012                     	;# 
   624  0014                     	;# 
   625  0018                     	;# 
   626  001A                     	;# 
   627  009A                     	;# 
   628  009B                     	;# 
   629  009B                     	;# 
   630  009C                     	;# 
   631  009D                     	;# 
   632  009E                     	;# 
   633  009F                     	;# 
   634  010E                     	;# 
   635  010F                     	;# 
   636  0119                     	;# 
   637  011A                     	;# 
   638  011B                     	;# 
   639  011B                     	;# 
   640  011C                     	;# 
   641  011D                     	;# 
   642  011E                     	;# 
   643  011F                     	;# 
   644  018C                     	;# 
   645  018D                     	;# 
   646  018E                     	;# 
   647  018F                     	;# 
   648  0190                     	;# 
   649  0191                     	;# 
   650  0192                     	;# 
   651  020C                     	;# 
   652  020D                     	;# 
   653  020E                     	;# 
   654  020E                     	;# 
   655  020F                     	;# 
   656  020F                     	;# 
   657  0210                     	;# 
   658  0210                     	;# 
   659  0211                     	;# 
   660  0211                     	;# 
   661  028C                     	;# 
   662  028C                     	;# 
   663  028D                     	;# 
   664  028D                     	;# 
   665  028E                     	;# 
   666  028F                     	;# 
   667  0290                     	;# 
   668  0291                     	;# 
   669  030C                     	;# 
   670  030C                     	;# 
   671  030D                     	;# 
   672  030E                     	;# 
   673  030F                     	;# 
   674  0310                     	;# 
   675  0310                     	;# 
   676  0311                     	;# 
   677  0312                     	;# 
   678  0313                     	;# 
   679  0314                     	;# 
   680  0314                     	;# 
   681  0315                     	;# 
   682  0316                     	;# 
   683  0318                     	;# 
   684  0318                     	;# 
   685  0319                     	;# 
   686  031A                     	;# 
   687  059C                     	;# 
   688  059C                     	;# 
   689  059D                     	;# 
   690  059D                     	;# 
   691  059E                     	;# 
   692  059F                     	;# 
   693  070C                     	;# 
   694  070D                     	;# 
   695  070E                     	;# 
   696  0716                     	;# 
   697  0717                     	;# 
   698  0718                     	;# 
   699  080C                     	;# 
   700  0811                     	;# 
   701  0813                     	;# 
   702  0814                     	;# 
   703  081A                     	;# 
   704  081A                     	;# 
   705  081B                     	;# 
   706  081C                     	;# 
   707  081C                     	;# 
   708  081D                     	;# 
   709  081E                     	;# 
   710  081F                     	;# 
   711  088E                     	;# 
   712  0890                     	;# 
   713  0891                     	;# 
   714  0892                     	;# 
   715  0893                     	;# 
   716  090C                     	;# 
   717  1E8F                     	;# 
   718  1E90                     	;# 
   719  1E91                     	;# 
   720  1E92                     	;# 
   721  1E93                     	;# 
   722  1E9C                     	;# 
   723  1EA1                     	;# 
   724  1EA2                     	;# 
   725  1EC3                     	;# 
   726  1EC5                     	;# 
   727  1EC6                     	;# 
   728  1EC7                     	;# 
   729  1ECB                     	;# 
   730  1ECB                     	;# 
   731  1ECB                     	;# 
   732  1ECC                     	;# 
   733  1ECC                     	;# 
   734  1ECC                     	;# 
   735  1F10                     	;# 
   736  1F11                     	;# 
   737  1F12                     	;# 
   738  1F14                     	;# 
   739  1F15                     	;# 
   740  1F20                     	;# 
   741  1F21                     	;# 
   742  1F22                     	;# 
   743  1F23                     	;# 
   744  1F24                     	;# 
   745  1F25                     	;# 
   746  1F38                     	;# 
   747  1F39                     	;# 
   748  1F3A                     	;# 
   749  1F3B                     	;# 
   750  1F3C                     	;# 
   751  1F3D                     	;# 
   752  1F3E                     	;# 
   753  1F3F                     	;# 
   754  1F4E                     	;# 
   755  1F4F                     	;# 
   756  1F50                     	;# 
   757  1F51                     	;# 
   758  1F52                     	;# 
   759  1F53                     	;# 
   760  1F54                     	;# 
   761  1F55                     	;# 
   762  1FE4                     	;# 
   763  1FE5                     	;# 
   764  1FE6                     	;# 
   765  1FE7                     	;# 
   766  1FE8                     	;# 
   767  1FE8                     	;# 
   768  1FE9                     	;# 
   769  1FEA                     	;# 
   770  1FEB                     	;# 
   771  1FED                     	;# 
   772  1FEE                     	;# 
   773  1FEF                     	;# 
   774  0000                     	;# 
   775  0001                     	;# 
   776  0002                     	;# 
   777  0003                     	;# 
   778  0004                     	;# 
   779  0005                     	;# 
   780  0006                     	;# 
   781  0007                     	;# 
   782  0008                     	;# 
   783  0009                     	;# 
   784  000A                     	;# 
   785  000B                     	;# 
   786  000C                     	;# 
   787  000E                     	;# 
   788  0012                     	;# 
   789  0014                     	;# 
   790  0018                     	;# 
   791  001A                     	;# 
   792  009A                     	;# 
   793  009B                     	;# 
   794  009B                     	;# 
   795  009C                     	;# 
   796  009D                     	;# 
   797  009E                     	;# 
   798  009F                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  0119                     	;# 
   802  011A                     	;# 
   803  011B                     	;# 
   804  011B                     	;# 
   805  011C                     	;# 
   806  011D                     	;# 
   807  011E                     	;# 
   808  011F                     	;# 
   809  018C                     	;# 
   810  018D                     	;# 
   811  018E                     	;# 
   812  018F                     	;# 
   813  0190                     	;# 
   814  0191                     	;# 
   815  0192                     	;# 
   816  020C                     	;# 
   817  020D                     	;# 
   818  020E                     	;# 
   819  020E                     	;# 
   820  020F                     	;# 
   821  020F                     	;# 
   822  0210                     	;# 
   823  0210                     	;# 
   824  0211                     	;# 
   825  0211                     	;# 
   826  028C                     	;# 
   827  028C                     	;# 
   828  028D                     	;# 
   829  028D                     	;# 
   830  028E                     	;# 
   831  028F                     	;# 
   832  0290                     	;# 
   833  0291                     	;# 
   834  030C                     	;# 
   835  030C                     	;# 
   836  030D                     	;# 
   837  030E                     	;# 
   838  030F                     	;# 
   839  0310                     	;# 
   840  0310                     	;# 
   841  0311                     	;# 
   842  0312                     	;# 
   843  0313                     	;# 
   844  0314                     	;# 
   845  0314                     	;# 
   846  0315                     	;# 
   847  0316                     	;# 
   848  0318                     	;# 
   849  0318                     	;# 
   850  0319                     	;# 
   851  031A                     	;# 
   852  059C                     	;# 
   853  059C                     	;# 
   854  059D                     	;# 
   855  059D                     	;# 
   856  059E                     	;# 
   857  059F                     	;# 
   858  070C                     	;# 
   859  070D                     	;# 
   860  070E                     	;# 
   861  0716                     	;# 
   862  0717                     	;# 
   863  0718                     	;# 
   864  080C                     	;# 
   865  0811                     	;# 
   866  0813                     	;# 
   867  0814                     	;# 
   868  081A                     	;# 
   869  081A                     	;# 
   870  081B                     	;# 
   871  081C                     	;# 
   872  081C                     	;# 
   873  081D                     	;# 
   874  081E                     	;# 
   875  081F                     	;# 
   876  088E                     	;# 
   877  0890                     	;# 
   878  0891                     	;# 
   879  0892                     	;# 
   880  0893                     	;# 
   881  090C                     	;# 
   882  1E8F                     	;# 
   883  1E90                     	;# 
   884  1E91                     	;# 
   885  1E92                     	;# 
   886  1E93                     	;# 
   887  1E9C                     	;# 
   888  1EA1                     	;# 
   889  1EA2                     	;# 
   890  1EC3                     	;# 
   891  1EC5                     	;# 
   892  1EC6                     	;# 
   893  1EC7                     	;# 
   894  1ECB                     	;# 
   895  1ECB                     	;# 
   896  1ECB                     	;# 
   897  1ECC                     	;# 
   898  1ECC                     	;# 
   899  1ECC                     	;# 
   900  1F10                     	;# 
   901  1F11                     	;# 
   902  1F12                     	;# 
   903  1F14                     	;# 
   904  1F15                     	;# 
   905  1F20                     	;# 
   906  1F21                     	;# 
   907  1F22                     	;# 
   908  1F23                     	;# 
   909  1F24                     	;# 
   910  1F25                     	;# 
   911  1F38                     	;# 
   912  1F39                     	;# 
   913  1F3A                     	;# 
   914  1F3B                     	;# 
   915  1F3C                     	;# 
   916  1F3D                     	;# 
   917  1F3E                     	;# 
   918  1F3F                     	;# 
   919  1F4E                     	;# 
   920  1F4F                     	;# 
   921  1F50                     	;# 
   922  1F51                     	;# 
   923  1F52                     	;# 
   924  1F53                     	;# 
   925  1F54                     	;# 
   926  1F55                     	;# 
   927  1FE4                     	;# 
   928  1FE5                     	;# 
   929  1FE6                     	;# 
   930  1FE7                     	;# 
   931  1FE8                     	;# 
   932  1FE8                     	;# 
   933  1FE9                     	;# 
   934  1FEA                     	;# 
   935  1FEB                     	;# 
   936  1FED                     	;# 
   937  1FEE                     	;# 
   938  1FEF                     	;# 
   939  0000                     	;# 
   940  0001                     	;# 
   941  0002                     	;# 
   942  0003                     	;# 
   943  0004                     	;# 
   944  0005                     	;# 
   945  0006                     	;# 
   946  0007                     	;# 
   947  0008                     	;# 
   948  0009                     	;# 
   949  000A                     	;# 
   950  000B                     	;# 
   951  000C                     	;# 
   952  000E                     	;# 
   953  0012                     	;# 
   954  0014                     	;# 
   955  0018                     	;# 
   956  001A                     	;# 
   957  009A                     	;# 
   958  009B                     	;# 
   959  009B                     	;# 
   960  009C                     	;# 
   961  009D                     	;# 
   962  009E                     	;# 
   963  009F                     	;# 
   964  010E                     	;# 
   965  010F                     	;# 
   966  0119                     	;# 
   967  011A                     	;# 
   968  011B                     	;# 
   969  011B                     	;# 
   970  011C                     	;# 
   971  011D                     	;# 
   972  011E                     	;# 
   973  011F                     	;# 
   974  018C                     	;# 
   975  018D                     	;# 
   976  018E                     	;# 
   977  018F                     	;# 
   978  0190                     	;# 
   979  0191                     	;# 
   980  0192                     	;# 
   981  020C                     	;# 
   982  020D                     	;# 
   983  020E                     	;# 
   984  020E                     	;# 
   985  020F                     	;# 
   986  020F                     	;# 
   987  0210                     	;# 
   988  0210                     	;# 
   989  0211                     	;# 
   990  0211                     	;# 
   991  028C                     	;# 
   992  028C                     	;# 
   993  028D                     	;# 
   994  028D                     	;# 
   995  028E                     	;# 
   996  028F                     	;# 
   997  0290                     	;# 
   998  0291                     	;# 
   999  030C                     	;# 
  1000  030C                     	;# 
  1001  030D                     	;# 
  1002  030E                     	;# 
  1003  030F                     	;# 
  1004  0310                     	;# 
  1005  0310                     	;# 
  1006  0311                     	;# 
  1007  0312                     	;# 
  1008  0313                     	;# 
  1009  0314                     	;# 
  1010  0314                     	;# 
  1011  0315                     	;# 
  1012  0316                     	;# 
  1013  0318                     	;# 
  1014  0318                     	;# 
  1015  0319                     	;# 
  1016  031A                     	;# 
  1017  059C                     	;# 
  1018  059C                     	;# 
  1019  059D                     	;# 
  1020  059D                     	;# 
  1021  059E                     	;# 
  1022  059F                     	;# 
  1023  070C                     	;# 
  1024  070D                     	;# 
  1025  070E                     	;# 
  1026  0716                     	;# 
  1027  0717                     	;# 
  1028  0718                     	;# 
  1029  080C                     	;# 
  1030  0811                     	;# 
  1031  0813                     	;# 
  1032  0814                     	;# 
  1033  081A                     	;# 
  1034  081A                     	;# 
  1035  081B                     	;# 
  1036  081C                     	;# 
  1037  081C                     	;# 
  1038  081D                     	;# 
  1039  081E                     	;# 
  1040  081F                     	;# 
  1041  088E                     	;# 
  1042  0890                     	;# 
  1043  0891                     	;# 
  1044  0892                     	;# 
  1045  0893                     	;# 
  1046  090C                     	;# 
  1047  1E8F                     	;# 
  1048  1E90                     	;# 
  1049  1E91                     	;# 
  1050  1E92                     	;# 
  1051  1E93                     	;# 
  1052  1E9C                     	;# 
  1053  1EA1                     	;# 
  1054  1EA2                     	;# 
  1055  1EC3                     	;# 
  1056  1EC5                     	;# 
  1057  1EC6                     	;# 
  1058  1EC7                     	;# 
  1059  1ECB                     	;# 
  1060  1ECB                     	;# 
  1061  1ECB                     	;# 
  1062  1ECC                     	;# 
  1063  1ECC                     	;# 
  1064  1ECC                     	;# 
  1065  1F10                     	;# 
  1066  1F11                     	;# 
  1067  1F12                     	;# 
  1068  1F14                     	;# 
  1069  1F15                     	;# 
  1070  1F20                     	;# 
  1071  1F21                     	;# 
  1072  1F22                     	;# 
  1073  1F23                     	;# 
  1074  1F24                     	;# 
  1075  1F25                     	;# 
  1076  1F38                     	;# 
  1077  1F39                     	;# 
  1078  1F3A                     	;# 
  1079  1F3B                     	;# 
  1080  1F3C                     	;# 
  1081  1F3D                     	;# 
  1082  1F3E                     	;# 
  1083  1F3F                     	;# 
  1084  1F4E                     	;# 
  1085  1F4F                     	;# 
  1086  1F50                     	;# 
  1087  1F51                     	;# 
  1088  1F52                     	;# 
  1089  1F53                     	;# 
  1090  1F54                     	;# 
  1091  1F55                     	;# 
  1092  1FE4                     	;# 
  1093  1FE5                     	;# 
  1094  1FE6                     	;# 
  1095  1FE7                     	;# 
  1096  1FE8                     	;# 
  1097  1FE8                     	;# 
  1098  1FE9                     	;# 
  1099  1FEA                     	;# 
  1100  1FEB                     	;# 
  1101  1FED                     	;# 
  1102  1FEE                     	;# 
  1103  1FEF                     	;# 
  1104  0000                     	;# 
  1105  0001                     	;# 
  1106  0002                     	;# 
  1107  0003                     	;# 
  1108  0004                     	;# 
  1109  0005                     	;# 
  1110  0006                     	;# 
  1111  0007                     	;# 
  1112  0008                     	;# 
  1113  0009                     	;# 
  1114  000A                     	;# 
  1115  000B                     	;# 
  1116  000C                     	;# 
  1117  000E                     	;# 
  1118  0012                     	;# 
  1119  0014                     	;# 
  1120  0018                     	;# 
  1121  001A                     	;# 
  1122  009A                     	;# 
  1123  009B                     	;# 
  1124  009B                     	;# 
  1125  009C                     	;# 
  1126  009D                     	;# 
  1127  009E                     	;# 
  1128  009F                     	;# 
  1129  010E                     	;# 
  1130  010F                     	;# 
  1131  0119                     	;# 
  1132  011A                     	;# 
  1133  011B                     	;# 
  1134  011B                     	;# 
  1135  011C                     	;# 
  1136  011D                     	;# 
  1137  011E                     	;# 
  1138  011F                     	;# 
  1139  018C                     	;# 
  1140  018D                     	;# 
  1141  018E                     	;# 
  1142  018F                     	;# 
  1143  0190                     	;# 
  1144  0191                     	;# 
  1145  0192                     	;# 
  1146  020C                     	;# 
  1147  020D                     	;# 
  1148  020E                     	;# 
  1149  020E                     	;# 
  1150  020F                     	;# 
  1151  020F                     	;# 
  1152  0210                     	;# 
  1153  0210                     	;# 
  1154  0211                     	;# 
  1155  0211                     	;# 
  1156  028C                     	;# 
  1157  028C                     	;# 
  1158  028D                     	;# 
  1159  028D                     	;# 
  1160  028E                     	;# 
  1161  028F                     	;# 
  1162  0290                     	;# 
  1163  0291                     	;# 
  1164  030C                     	;# 
  1165  030C                     	;# 
  1166  030D                     	;# 
  1167  030E                     	;# 
  1168  030F                     	;# 
  1169  0310                     	;# 
  1170  0310                     	;# 
  1171  0311                     	;# 
  1172  0312                     	;# 
  1173  0313                     	;# 
  1174  0314                     	;# 
  1175  0314                     	;# 
  1176  0315                     	;# 
  1177  0316                     	;# 
  1178  0318                     	;# 
  1179  0318                     	;# 
  1180  0319                     	;# 
  1181  031A                     	;# 
  1182  059C                     	;# 
  1183  059C                     	;# 
  1184  059D                     	;# 
  1185  059D                     	;# 
  1186  059E                     	;# 
  1187  059F                     	;# 
  1188  070C                     	;# 
  1189  070D                     	;# 
  1190  070E                     	;# 
  1191  0716                     	;# 
  1192  0717                     	;# 
  1193  0718                     	;# 
  1194  080C                     	;# 
  1195  0811                     	;# 
  1196  0813                     	;# 
  1197  0814                     	;# 
  1198  081A                     	;# 
  1199  081A                     	;# 
  1200  081B                     	;# 
  1201  081C                     	;# 
  1202  081C                     	;# 
  1203  081D                     	;# 
  1204  081E                     	;# 
  1205  081F                     	;# 
  1206  088E                     	;# 
  1207  0890                     	;# 
  1208  0891                     	;# 
  1209  0892                     	;# 
  1210  0893                     	;# 
  1211  090C                     	;# 
  1212  1E8F                     	;# 
  1213  1E90                     	;# 
  1214  1E91                     	;# 
  1215  1E92                     	;# 
  1216  1E93                     	;# 
  1217  1E9C                     	;# 
  1218  1EA1                     	;# 
  1219  1EA2                     	;# 
  1220  1EC3                     	;# 
  1221  1EC5                     	;# 
  1222  1EC6                     	;# 
  1223  1EC7                     	;# 
  1224  1ECB                     	;# 
  1225  1ECB                     	;# 
  1226  1ECB                     	;# 
  1227  1ECC                     	;# 
  1228  1ECC                     	;# 
  1229  1ECC                     	;# 
  1230  1F10                     	;# 
  1231  1F11                     	;# 
  1232  1F12                     	;# 
  1233  1F14                     	;# 
  1234  1F15                     	;# 
  1235  1F20                     	;# 
  1236  1F21                     	;# 
  1237  1F22                     	;# 
  1238  1F23                     	;# 
  1239  1F24                     	;# 
  1240  1F25                     	;# 
  1241  1F38                     	;# 
  1242  1F39                     	;# 
  1243  1F3A                     	;# 
  1244  1F3B                     	;# 
  1245  1F3C                     	;# 
  1246  1F3D                     	;# 
  1247  1F3E                     	;# 
  1248  1F3F                     	;# 
  1249  1F4E                     	;# 
  1250  1F4F                     	;# 
  1251  1F50                     	;# 
  1252  1F51                     	;# 
  1253  1F52                     	;# 
  1254  1F53                     	;# 
  1255  1F54                     	;# 
  1256  1F55                     	;# 
  1257  1FE4                     	;# 
  1258  1FE5                     	;# 
  1259  1FE6                     	;# 
  1260  1FE7                     	;# 
  1261  1FE8                     	;# 
  1262  1FE8                     	;# 
  1263  1FE9                     	;# 
  1264  1FEA                     	;# 
  1265  1FEB                     	;# 
  1266  1FED                     	;# 
  1267  1FEE                     	;# 
  1268  1FEF                     	;# 
  1269  0000                     	;# 
  1270  0001                     	;# 
  1271  0002                     	;# 
  1272  0003                     	;# 
  1273  0004                     	;# 
  1274  0005                     	;# 
  1275  0006                     	;# 
  1276  0007                     	;# 
  1277  0008                     	;# 
  1278  0009                     	;# 
  1279  000A                     	;# 
  1280  000B                     	;# 
  1281  000C                     	;# 
  1282  000E                     	;# 
  1283  0012                     	;# 
  1284  0014                     	;# 
  1285  0018                     	;# 
  1286  001A                     	;# 
  1287  009A                     	;# 
  1288  009B                     	;# 
  1289  009B                     	;# 
  1290  009C                     	;# 
  1291  009D                     	;# 
  1292  009E                     	;# 
  1293  009F                     	;# 
  1294  010E                     	;# 
  1295  010F                     	;# 
  1296  0119                     	;# 
  1297  011A                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011C                     	;# 
  1301  011D                     	;# 
  1302  011E                     	;# 
  1303  011F                     	;# 
  1304  018C                     	;# 
  1305  018D                     	;# 
  1306  018E                     	;# 
  1307  018F                     	;# 
  1308  0190                     	;# 
  1309  0191                     	;# 
  1310  0192                     	;# 
  1311  020C                     	;# 
  1312  020D                     	;# 
  1313  020E                     	;# 
  1314  020E                     	;# 
  1315  020F                     	;# 
  1316  020F                     	;# 
  1317  0210                     	;# 
  1318  0210                     	;# 
  1319  0211                     	;# 
  1320  0211                     	;# 
  1321  028C                     	;# 
  1322  028C                     	;# 
  1323  028D                     	;# 
  1324  028D                     	;# 
  1325  028E                     	;# 
  1326  028F                     	;# 
  1327  0290                     	;# 
  1328  0291                     	;# 
  1329  030C                     	;# 
  1330  030C                     	;# 
  1331  030D                     	;# 
  1332  030E                     	;# 
  1333  030F                     	;# 
  1334  0310                     	;# 
  1335  0310                     	;# 
  1336  0311                     	;# 
  1337  0312                     	;# 
  1338  0313                     	;# 
  1339  0314                     	;# 
  1340  0314                     	;# 
  1341  0315                     	;# 
  1342  0316                     	;# 
  1343  0318                     	;# 
  1344  0318                     	;# 
  1345  0319                     	;# 
  1346  031A                     	;# 
  1347  059C                     	;# 
  1348  059C                     	;# 
  1349  059D                     	;# 
  1350  059D                     	;# 
  1351  059E                     	;# 
  1352  059F                     	;# 
  1353  070C                     	;# 
  1354  070D                     	;# 
  1355  070E                     	;# 
  1356  0716                     	;# 
  1357  0717                     	;# 
  1358  0718                     	;# 
  1359  080C                     	;# 
  1360  0811                     	;# 
  1361  0813                     	;# 
  1362  0814                     	;# 
  1363  081A                     	;# 
  1364  081A                     	;# 
  1365  081B                     	;# 
  1366  081C                     	;# 
  1367  081C                     	;# 
  1368  081D                     	;# 
  1369  081E                     	;# 
  1370  081F                     	;# 
  1371  088E                     	;# 
  1372  0890                     	;# 
  1373  0891                     	;# 
  1374  0892                     	;# 
  1375  0893                     	;# 
  1376  090C                     	;# 
  1377  1E8F                     	;# 
  1378  1E90                     	;# 
  1379  1E91                     	;# 
  1380  1E92                     	;# 
  1381  1E93                     	;# 
  1382  1E9C                     	;# 
  1383  1EA1                     	;# 
  1384  1EA2                     	;# 
  1385  1EC3                     	;# 
  1386  1EC5                     	;# 
  1387  1EC6                     	;# 
  1388  1EC7                     	;# 
  1389  1ECB                     	;# 
  1390  1ECB                     	;# 
  1391  1ECB                     	;# 
  1392  1ECC                     	;# 
  1393  1ECC                     	;# 
  1394  1ECC                     	;# 
  1395  1F10                     	;# 
  1396  1F11                     	;# 
  1397  1F12                     	;# 
  1398  1F14                     	;# 
  1399  1F15                     	;# 
  1400  1F20                     	;# 
  1401  1F21                     	;# 
  1402  1F22                     	;# 
  1403  1F23                     	;# 
  1404  1F24                     	;# 
  1405  1F25                     	;# 
  1406  1F38                     	;# 
  1407  1F39                     	;# 
  1408  1F3A                     	;# 
  1409  1F3B                     	;# 
  1410  1F3C                     	;# 
  1411  1F3D                     	;# 
  1412  1F3E                     	;# 
  1413  1F3F                     	;# 
  1414  1F4E                     	;# 
  1415  1F4F                     	;# 
  1416  1F50                     	;# 
  1417  1F51                     	;# 
  1418  1F52                     	;# 
  1419  1F53                     	;# 
  1420  1F54                     	;# 
  1421  1F55                     	;# 
  1422  1FE4                     	;# 
  1423  1FE5                     	;# 
  1424  1FE6                     	;# 
  1425  1FE7                     	;# 
  1426  1FE8                     	;# 
  1427  1FE8                     	;# 
  1428  1FE9                     	;# 
  1429  1FEA                     	;# 
  1430  1FEB                     	;# 
  1431  1FED                     	;# 
  1432  1FEE                     	;# 
  1433  1FEF                     	;# 
  1434  0000                     	;# 
  1435  0001                     	;# 
  1436  0002                     	;# 
  1437  0003                     	;# 
  1438  0004                     	;# 
  1439  0005                     	;# 
  1440  0006                     	;# 
  1441  0007                     	;# 
  1442  0008                     	;# 
  1443  0009                     	;# 
  1444  000A                     	;# 
  1445  000B                     	;# 
  1446  000C                     	;# 
  1447  000E                     	;# 
  1448  0012                     	;# 
  1449  0014                     	;# 
  1450  0018                     	;# 
  1451  001A                     	;# 
  1452  009A                     	;# 
  1453  009B                     	;# 
  1454  009B                     	;# 
  1455  009C                     	;# 
  1456  009D                     	;# 
  1457  009E                     	;# 
  1458  009F                     	;# 
  1459  010E                     	;# 
  1460  010F                     	;# 
  1461  0119                     	;# 
  1462  011A                     	;# 
  1463  011B                     	;# 
  1464  011B                     	;# 
  1465  011C                     	;# 
  1466  011D                     	;# 
  1467  011E                     	;# 
  1468  011F                     	;# 
  1469  018C                     	;# 
  1470  018D                     	;# 
  1471  018E                     	;# 
  1472  018F                     	;# 
  1473  0190                     	;# 
  1474  0191                     	;# 
  1475  0192                     	;# 
  1476  020C                     	;# 
  1477  020D                     	;# 
  1478  020E                     	;# 
  1479  020E                     	;# 
  1480  020F                     	;# 
  1481  020F                     	;# 
  1482  0210                     	;# 
  1483  0210                     	;# 
  1484  0211                     	;# 
  1485  0211                     	;# 
  1486  028C                     	;# 
  1487  028C                     	;# 
  1488  028D                     	;# 
  1489  028D                     	;# 
  1490  028E                     	;# 
  1491  028F                     	;# 
  1492  0290                     	;# 
  1493  0291                     	;# 
  1494  030C                     	;# 
  1495  030C                     	;# 
  1496  030D                     	;# 
  1497  030E                     	;# 
  1498  030F                     	;# 
  1499  0310                     	;# 
  1500  0310                     	;# 
  1501  0311                     	;# 
  1502  0312                     	;# 
  1503  0313                     	;# 
  1504  0314                     	;# 
  1505  0314                     	;# 
  1506  0315                     	;# 
  1507  0316                     	;# 
  1508  0318                     	;# 
  1509  0318                     	;# 
  1510  0319                     	;# 
  1511  031A                     	;# 
  1512  059C                     	;# 
  1513  059C                     	;# 
  1514  059D                     	;# 
  1515  059D                     	;# 
  1516  059E                     	;# 
  1517  059F                     	;# 
  1518  070C                     	;# 
  1519  070D                     	;# 
  1520  070E                     	;# 
  1521  0716                     	;# 
  1522  0717                     	;# 
  1523  0718                     	;# 
  1524  080C                     	;# 
  1525  0811                     	;# 
  1526  0813                     	;# 
  1527  0814                     	;# 
  1528  081A                     	;# 
  1529  081A                     	;# 
  1530  081B                     	;# 
  1531  081C                     	;# 
  1532  081C                     	;# 
  1533  081D                     	;# 
  1534  081E                     	;# 
  1535  081F                     	;# 
  1536  088E                     	;# 
  1537  0890                     	;# 
  1538  0891                     	;# 
  1539  0892                     	;# 
  1540  0893                     	;# 
  1541  090C                     	;# 
  1542  1E8F                     	;# 
  1543  1E90                     	;# 
  1544  1E91                     	;# 
  1545  1E92                     	;# 
  1546  1E93                     	;# 
  1547  1E9C                     	;# 
  1548  1EA1                     	;# 
  1549  1EA2                     	;# 
  1550  1EC3                     	;# 
  1551  1EC5                     	;# 
  1552  1EC6                     	;# 
  1553  1EC7                     	;# 
  1554  1ECB                     	;# 
  1555  1ECB                     	;# 
  1556  1ECB                     	;# 
  1557  1ECC                     	;# 
  1558  1ECC                     	;# 
  1559  1ECC                     	;# 
  1560  1F10                     	;# 
  1561  1F11                     	;# 
  1562  1F12                     	;# 
  1563  1F14                     	;# 
  1564  1F15                     	;# 
  1565  1F20                     	;# 
  1566  1F21                     	;# 
  1567  1F22                     	;# 
  1568  1F23                     	;# 
  1569  1F24                     	;# 
  1570  1F25                     	;# 
  1571  1F38                     	;# 
  1572  1F39                     	;# 
  1573  1F3A                     	;# 
  1574  1F3B                     	;# 
  1575  1F3C                     	;# 
  1576  1F3D                     	;# 
  1577  1F3E                     	;# 
  1578  1F3F                     	;# 
  1579  1F4E                     	;# 
  1580  1F4F                     	;# 
  1581  1F50                     	;# 
  1582  1F51                     	;# 
  1583  1F52                     	;# 
  1584  1F53                     	;# 
  1585  1F54                     	;# 
  1586  1F55                     	;# 
  1587  1FE4                     	;# 
  1588  1FE5                     	;# 
  1589  1FE6                     	;# 
  1590  1FE7                     	;# 
  1591  1FE8                     	;# 
  1592  1FE8                     	;# 
  1593  1FE9                     	;# 
  1594  1FEA                     	;# 
  1595  1FEB                     	;# 
  1596  1FED                     	;# 
  1597  1FEE                     	;# 
  1598  1FEF                     	;# 
  1599  0000                     	;# 
  1600  0001                     	;# 
  1601  0002                     	;# 
  1602  0003                     	;# 
  1603  0004                     	;# 
  1604  0005                     	;# 
  1605  0006                     	;# 
  1606  0007                     	;# 
  1607  0008                     	;# 
  1608  0009                     	;# 
  1609  000A                     	;# 
  1610  000B                     	;# 
  1611  000C                     	;# 
  1612  000E                     	;# 
  1613  0012                     	;# 
  1614  0014                     	;# 
  1615  0018                     	;# 
  1616  001A                     	;# 
  1617  009A                     	;# 
  1618  009B                     	;# 
  1619  009B                     	;# 
  1620  009C                     	;# 
  1621  009D                     	;# 
  1622  009E                     	;# 
  1623  009F                     	;# 
  1624  010E                     	;# 
  1625  010F                     	;# 
  1626  0119                     	;# 
  1627  011A                     	;# 
  1628  011B                     	;# 
  1629  011B                     	;# 
  1630  011C                     	;# 
  1631  011D                     	;# 
  1632  011E                     	;# 
  1633  011F                     	;# 
  1634  018C                     	;# 
  1635  018D                     	;# 
  1636  018E                     	;# 
  1637  018F                     	;# 
  1638  0190                     	;# 
  1639  0191                     	;# 
  1640  0192                     	;# 
  1641  020C                     	;# 
  1642  020D                     	;# 
  1643  020E                     	;# 
  1644  020E                     	;# 
  1645  020F                     	;# 
  1646  020F                     	;# 
  1647  0210                     	;# 
  1648  0210                     	;# 
  1649  0211                     	;# 
  1650  0211                     	;# 
  1651  028C                     	;# 
  1652  028C                     	;# 
  1653  028D                     	;# 
  1654  028D                     	;# 
  1655  028E                     	;# 
  1656  028F                     	;# 
  1657  0290                     	;# 
  1658  0291                     	;# 
  1659  030C                     	;# 
  1660  030C                     	;# 
  1661  030D                     	;# 
  1662  030E                     	;# 
  1663  030F                     	;# 
  1664  0310                     	;# 
  1665  0310                     	;# 
  1666  0311                     	;# 
  1667  0312                     	;# 
  1668  0313                     	;# 
  1669  0314                     	;# 
  1670  0314                     	;# 
  1671  0315                     	;# 
  1672  0316                     	;# 
  1673  0318                     	;# 
  1674  0318                     	;# 
  1675  0319                     	;# 
  1676  031A                     	;# 
  1677  059C                     	;# 
  1678  059C                     	;# 
  1679  059D                     	;# 
  1680  059D                     	;# 
  1681  059E                     	;# 
  1682  059F                     	;# 
  1683  070C                     	;# 
  1684  070D                     	;# 
  1685  070E                     	;# 
  1686  0716                     	;# 
  1687  0717                     	;# 
  1688  0718                     	;# 
  1689  080C                     	;# 
  1690  0811                     	;# 
  1691  0813                     	;# 
  1692  0814                     	;# 
  1693  081A                     	;# 
  1694  081A                     	;# 
  1695  081B                     	;# 
  1696  081C                     	;# 
  1697  081C                     	;# 
  1698  081D                     	;# 
  1699  081E                     	;# 
  1700  081F                     	;# 
  1701  088E                     	;# 
  1702  0890                     	;# 
  1703  0891                     	;# 
  1704  0892                     	;# 
  1705  0893                     	;# 
  1706  090C                     	;# 
  1707  1E8F                     	;# 
  1708  1E90                     	;# 
  1709  1E91                     	;# 
  1710  1E92                     	;# 
  1711  1E93                     	;# 
  1712  1E9C                     	;# 
  1713  1EA1                     	;# 
  1714  1EA2                     	;# 
  1715  1EC3                     	;# 
  1716  1EC5                     	;# 
  1717  1EC6                     	;# 
  1718  1EC7                     	;# 
  1719  1ECB                     	;# 
  1720  1ECB                     	;# 
  1721  1ECB                     	;# 
  1722  1ECC                     	;# 
  1723  1ECC                     	;# 
  1724  1ECC                     	;# 
  1725  1F10                     	;# 
  1726  1F11                     	;# 
  1727  1F12                     	;# 
  1728  1F14                     	;# 
  1729  1F15                     	;# 
  1730  1F20                     	;# 
  1731  1F21                     	;# 
  1732  1F22                     	;# 
  1733  1F23                     	;# 
  1734  1F24                     	;# 
  1735  1F25                     	;# 
  1736  1F38                     	;# 
  1737  1F39                     	;# 
  1738  1F3A                     	;# 
  1739  1F3B                     	;# 
  1740  1F3C                     	;# 
  1741  1F3D                     	;# 
  1742  1F3E                     	;# 
  1743  1F3F                     	;# 
  1744  1F4E                     	;# 
  1745  1F4F                     	;# 
  1746  1F50                     	;# 
  1747  1F51                     	;# 
  1748  1F52                     	;# 
  1749  1F53                     	;# 
  1750  1F54                     	;# 
  1751  1F55                     	;# 
  1752  1FE4                     	;# 
  1753  1FE5                     	;# 
  1754  1FE6                     	;# 
  1755  1FE7                     	;# 
  1756  1FE8                     	;# 
  1757  1FE8                     	;# 
  1758  1FE9                     	;# 
  1759  1FEA                     	;# 
  1760  1FEB                     	;# 
  1761  1FED                     	;# 
  1762  1FEE                     	;# 
  1763  1FEF                     	;_song3_pre
  1764                           
  1765                           	psect	idataBIGRAM
  1766  0C8E                     __pidataBIGRAM:
  1767                           
  1768                           ;initializer for _song3_pre
  1769  0C8E  34E0               	retlw	224
  1770  0C8F  34E0               	retlw	224
  1771  0C90  34E0               	retlw	224
  1772  0C91  34E0               	retlw	224
  1773  0C92  34E0               	retlw	224
  1774  0C93  34E0               	retlw	224
  1775  0C94  34E0               	retlw	224
  1776  0C95  34E0               	retlw	224
  1777  0C96  34E0               	retlw	224
  1778  0C97  34E0               	retlw	224
  1779  0C98  34E0               	retlw	224
  1780  0C99  34E0               	retlw	224
  1781  0C9A  34E0               	retlw	224
  1782  0C9B  34E0               	retlw	224
  1783  0C9C  34E0               	retlw	224
  1784  0C9D  34E0               	retlw	224
  1785  0C9E  34E0               	retlw	224
  1786  0C9F  34E0               	retlw	224
  1787  0CA0  34E0               	retlw	224
  1788  0CA1  34E0               	retlw	224
  1789  0CA2  34E0               	retlw	224
  1790  0CA3  34E0               	retlw	224
  1791  0CA4  34E0               	retlw	224
  1792  0CA5  34E0               	retlw	224
  1793  0CA6  34E0               	retlw	224
  1794  0CA7  34E0               	retlw	224
  1795  0CA8  34E0               	retlw	224
  1796  0CA9  34E0               	retlw	224
  1797  0CAA  34E0               	retlw	224
  1798  0CAB  34E0               	retlw	224
  1799  0CAC  34E0               	retlw	224
  1800  0CAD  34E0               	retlw	224
  1801  0CAE  34D0               	retlw	208
  1802  0CAF  34D0               	retlw	208
  1803  0CB0  34D0               	retlw	208
  1804  0CB1  34D0               	retlw	208
  1805  0CB2  34D0               	retlw	208
  1806  0CB3  34D0               	retlw	208
  1807  0CB4  34D0               	retlw	208
  1808  0CB5  34D0               	retlw	208
  1809  0CB6  34D0               	retlw	208
  1810  0CB7  34D0               	retlw	208
  1811  0CB8  34C0               	retlw	192
  1812  0CB9  34C0               	retlw	192
  1813  0CBA  34C0               	retlw	192
  1814  0CBB  34C0               	retlw	192
  1815  0CBC  34D0               	retlw	208
  1816  0CBD  34D0               	retlw	208
  1817  0CBE  34D0               	retlw	208
  1818  0CBF  34D0               	retlw	208
  1819  0CC0  34D0               	retlw	208
  1820  0CC1  34D0               	retlw	208
  1821  0CC2  34D0               	retlw	208
  1822  0CC3  34D0               	retlw	208
  1823  0CC4  34D0               	retlw	208
  1824  0CC5  34D0               	retlw	208
  1825  0CC6  34D0               	retlw	208
  1826  0CC7  34D0               	retlw	208
  1827  0CC8  34D0               	retlw	208
  1828  0CC9  34D0               	retlw	208
  1829  0CCA  34C0               	retlw	192
  1830  0CCB  34C0               	retlw	192
  1831  0CCC  34D0               	retlw	208
  1832  0CCD  34D0               	retlw	208
  1833  0CCE  34D0               	retlw	208
  1834  0CCF  34D0               	retlw	208
  1835  0CD0  34D0               	retlw	208
  1836  0CD1  34D0               	retlw	208
  1837  0CD2  34E0               	retlw	224
  1838  0CD3  34D0               	retlw	208
  1839  0CD4  34D0               	retlw	208
  1840  0CD5  34D0               	retlw	208
  1841  0CD6  34D0               	retlw	208
  1842  0CD7  34D0               	retlw	208
  1843  0CD8  34D0               	retlw	208
  1844  0CD9  34D0               	retlw	208
  1845  0CDA  34D0               	retlw	208
  1846  0CDB  34D0               	retlw	208
  1847  0CDC  34D0               	retlw	208
  1848  0CDD  34D0               	retlw	208
  1849  0CDE  34D0               	retlw	208
  1850  0CDF  34D0               	retlw	208
  1851  0CE0  34D0               	retlw	208
  1852  0CE1  34D0               	retlw	208
  1853  0CE2  34E0               	retlw	224
  1854  0CE3  34D0               	retlw	208
  1855  0CE4  34D0               	retlw	208
  1856  0CE5  34D0               	retlw	208
  1857  0CE6  34D0               	retlw	208
  1858  0CE7  34D0               	retlw	208
  1859  0CE8  34D0               	retlw	208
  1860  0CE9  34D0               	retlw	208
  1861  0CEA  34D0               	retlw	208
  1862  0CEB  34D0               	retlw	208
  1863  0CEC  34D0               	retlw	208
  1864  0CED  34D0               	retlw	208
  1865  0CEE  34D0               	retlw	208
  1866  0CEF  34D0               	retlw	208
  1867  0CF0  34D0               	retlw	208
  1868  0CF1  34D0               	retlw	208
  1869  0CF2  34E0               	retlw	224
  1870  0CF3  34D0               	retlw	208
  1871  0CF4  34D0               	retlw	208
  1872  0CF5  34D0               	retlw	208
  1873  0CF6  34D0               	retlw	208
  1874  0CF7  34D0               	retlw	208
  1875  0CF8  34D0               	retlw	208
  1876  0CF9  34D0               	retlw	208
  1877  0CFA  34D0               	retlw	208
  1878  0CFB  34D0               	retlw	208
  1879  0CFC  34D0               	retlw	208
  1880  0CFD  34D0               	retlw	208
  1881  0CFE  34D0               	retlw	208
  1882  0CFF  34D0               	retlw	208
  1883  0D00  34D0               	retlw	208
  1884  0D01  34D0               	retlw	208
  1885  0D02  34E0               	retlw	224
  1886  0D03  34D0               	retlw	208
  1887  0D04  34D0               	retlw	208
  1888  0D05  34D0               	retlw	208
  1889  0D06  34D0               	retlw	208
  1890  0D07  34D0               	retlw	208
  1891  0D08  34D0               	retlw	208
  1892  0D09  34D0               	retlw	208
  1893  0D0A  34D0               	retlw	208
  1894  0D0B  34D0               	retlw	208
  1895  0D0C  34D0               	retlw	208
  1896  0D0D  34D0               	retlw	208
  1897  0D0E  34D0               	retlw	208
  1898  0D0F  34D0               	retlw	208
  1899  0D10  34D0               	retlw	208
  1900  0D11  34D0               	retlw	208
  1901  0D12  34E0               	retlw	224
  1902  0D13  34D0               	retlw	208
  1903  0D14  34D0               	retlw	208
  1904  0D15  34D0               	retlw	208
  1905  0D16  34D0               	retlw	208
  1906  0D17  34D0               	retlw	208
  1907  0D18  34D0               	retlw	208
  1908  0D19  34D0               	retlw	208
  1909  0D1A  34D0               	retlw	208
  1910  0D1B  34D0               	retlw	208
  1911  0D1C  34D0               	retlw	208
  1912  0D1D  34D0               	retlw	208
  1913  0D1E  34D0               	retlw	208
  1914  0D1F  34D0               	retlw	208
  1915  0D20  34D0               	retlw	208
  1916  0D21  34D0               	retlw	208
  1917  0D22  34E0               	retlw	224
  1918  0D23  34D0               	retlw	208
  1919  0D24  34D0               	retlw	208
  1920  0D25  34D0               	retlw	208
  1921  0D26  34D0               	retlw	208
  1922  0D27  34D0               	retlw	208
  1923  0D28  34D0               	retlw	208
  1924  0D29  34D0               	retlw	208
  1925  0D2A  34D0               	retlw	208
  1926  0D2B  34D0               	retlw	208
  1927                           
  1928                           ;initializer for _song3
  1929  0D2C  34D4               	retlw	212
  1930  0D2D  34D4               	retlw	212
  1931  0D2E  34D4               	retlw	212
  1932  0D2F  34D4               	retlw	212
  1933  0D30  34D4               	retlw	212
  1934  0D31  34D4               	retlw	212
  1935  0D32  34D4               	retlw	212
  1936  0D33  34D4               	retlw	212
  1937  0D34  34D4               	retlw	212
  1938  0D35  34D4               	retlw	212
  1939  0D36  34FC               	retlw	252
  1940  0D37  34FC               	retlw	252
  1941  0D38  34FC               	retlw	252
  1942  0D39  34FC               	retlw	252
  1943  0D3A  34FC               	retlw	252
  1944  0D3B  34FC               	retlw	252
  1945  0D3C  34FC               	retlw	252
  1946  0D3D  34FC               	retlw	252
  1947  0D3E  34FC               	retlw	252
  1948  0D3F  34FC               	retlw	252
  1949  0D40  34B2               	retlw	178
  1950  0D41  34B2               	retlw	178
  1951  0D42  34B2               	retlw	178
  1952  0D43  34B2               	retlw	178
  1953  0D44  34B2               	retlw	178
  1954  0D45  34B2               	retlw	178
  1955  0D46  34B2               	retlw	178
  1956  0D47  34B2               	retlw	178
  1957  0D48  34B2               	retlw	178
  1958  0D49  34B2               	retlw	178
  1959  0D4A  348D               	retlw	141
  1960  0D4B  348D               	retlw	141
  1961  0D4C  34EE               	retlw	238
  1962  0D4D  34EE               	retlw	238
  1963  0D4E  34D4               	retlw	212
  1964  0D4F  34D4               	retlw	212
  1965  0D50  34BD               	retlw	189
  1966  0D51  34BD               	retlw	189
  1967  0D52  349E               	retlw	158
  1968  0D53  349E               	retlw	158
  1969  0D54  348D               	retlw	141
  1970  0D55  348D               	retlw	141
  1971  0D56  34EE               	retlw	238
  1972  0D57  34EE               	retlw	238
  1973  0D58  34D4               	retlw	212
  1974  0D59  34D4               	retlw	212
  1975  0D5A  34BD               	retlw	189
  1976  0D5B  3400               	retlw	0
  1977  0D5C  34BD               	retlw	189
  1978  0D5D  3400               	retlw	0
  1979  0D5E  34BD               	retlw	189
  1980  0D5F  3400               	retlw	0
  1981  0D60  34BD               	retlw	189
  1982  0D61  3400               	retlw	0
  1983  0D62  34BD               	retlw	189
  1984  0D63  3400               	retlw	0
  1985  0D64  34BD               	retlw	189
  1986  0D65  3400               	retlw	0
  1987  0D66  34BD               	retlw	189
  1988  0D67  3400               	retlw	0
  1989  0D68  34BD               	retlw	189
  1990  0D69  34BD               	retlw	189
  1991  0D6A  349E               	retlw	158
  1992  0D6B  349E               	retlw	158
  1993  0D6C  349E               	retlw	158
  1994  0D6D  349E               	retlw	158
  1995  0D6E  34B2               	retlw	178
  1996  0D6F  34B2               	retlw	178
  1997  0D70  349E               	retlw	158
  1998  0D71  349E               	retlw	158
  1999  0D72  349E               	retlw	158
  2000  0D73  349E               	retlw	158
  2001  0D74  34B2               	retlw	178
  2002  0D75  34B2               	retlw	178
  2003  0D76  34BD               	retlw	189
  2004  0D77  34BD               	retlw	189
  2005  0D78  34D4               	retlw	212
  2006  0D79  34D4               	retlw	212
  2007  0D7A  349E               	retlw	158
  2008  0D7B  349E               	retlw	158
  2009  0D7C  349E               	retlw	158
  2010  0D7D  349E               	retlw	158
  2011  0D7E  34B2               	retlw	178
  2012  0D7F  34B2               	retlw	178
  2013  0D80  349E               	retlw	158
  2014  0D81  349E               	retlw	158
  2015  0D82  349E               	retlw	158
  2016  0D83  349E               	retlw	158
  2017  0D84  34B2               	retlw	178
  2018  0D85  34B2               	retlw	178
  2019  0D86  34BD               	retlw	189
  2020  0D87  34BD               	retlw	189
  2021  0D88  34D4               	retlw	212
  2022  0D89  34D4               	retlw	212
  2023  0D8A  349E               	retlw	158
  2024  0D8B  349E               	retlw	158
  2025  0D8C  349E               	retlw	158
  2026  0D8D  349E               	retlw	158
  2027  0D8E  34B2               	retlw	178
  2028  0D8F  34B2               	retlw	178
  2029  0D90  349E               	retlw	158
  2030  0D91  349E               	retlw	158
  2031  0D92  349E               	retlw	158
  2032  0D93  349E               	retlw	158
  2033  0D94  34B2               	retlw	178
  2034  0D95  34B2               	retlw	178
  2035  0D96  34BD               	retlw	189
  2036  0D97  34BD               	retlw	189
  2037  0D98  34D4               	retlw	212
  2038  0D99  34D4               	retlw	212
  2039  0D9A  349E               	retlw	158
  2040  0D9B  349E               	retlw	158
  2041  0D9C  349E               	retlw	158
  2042  0D9D  349E               	retlw	158
  2043  0D9E  34B2               	retlw	178
  2044  0D9F  34B2               	retlw	178
  2045  0DA0  349E               	retlw	158
  2046  0DA1  349E               	retlw	158
  2047  0DA2  349E               	retlw	158
  2048  0DA3  349E               	retlw	158
  2049  0DA4  34B2               	retlw	178
  2050  0DA5  34B2               	retlw	178
  2051  0DA6  34BD               	retlw	189
  2052  0DA7  34BD               	retlw	189
  2053  0DA8  34D4               	retlw	212
  2054  0DA9  34D4               	retlw	212
  2055  0DAA  349E               	retlw	158
  2056  0DAB  349E               	retlw	158
  2057  0DAC  349E               	retlw	158
  2058  0DAD  349E               	retlw	158
  2059  0DAE  34B2               	retlw	178
  2060  0DAF  34B2               	retlw	178
  2061  0DB0  349E               	retlw	158
  2062  0DB1  349E               	retlw	158
  2063  0DB2  349E               	retlw	158
  2064  0DB3  349E               	retlw	158
  2065  0DB4  34B2               	retlw	178
  2066  0DB5  34B2               	retlw	178
  2067  0DB6  34BD               	retlw	189
  2068  0DB7  34BD               	retlw	189
  2069  0DB8  34D4               	retlw	212
  2070  0DB9  34D4               	retlw	212
  2071  0DBA  349E               	retlw	158
  2072  0DBB  349E               	retlw	158
  2073  0DBC  349E               	retlw	158
  2074  0DBD  349E               	retlw	158
  2075  0DBE  34B2               	retlw	178
  2076  0DBF  34B2               	retlw	178
  2077  0DC0  349E               	retlw	158
  2078  0DC1  349E               	retlw	158
  2079  0DC2  349E               	retlw	158
  2080  0DC3  349E               	retlw	158
  2081  0DC4  34B2               	retlw	178
  2082  0DC5  34B2               	retlw	178
  2083  0DC6  34BD               	retlw	189
  2084  0DC7  34BD               	retlw	189
  2085  0DC8  34D4               	retlw	212
  2086  0DC9  34D4               	retlw	212
  2087                           
  2088                           ;initializer for _song2
  2089  0DCA  3432               	retlw	50
  2090  0DCB  3432               	retlw	50
  2091  0DCC  34D4               	retlw	212
  2092  0DCD  34D4               	retlw	212
  2093  0DCE  34EE               	retlw	238
  2094  0DCF  34EE               	retlw	238
  2095  0DD0  34FC               	retlw	252
  2096  0DD1  34FC               	retlw	252
  2097  0DD2  349E               	retlw	158
  2098  0DD3  349E               	retlw	158
  2099  0DD4  349E               	retlw	158
  2100  0DD5  349E               	retlw	158
  2101  0DD6  34FC               	retlw	252
  2102  0DD7  34FC               	retlw	252
  2103  0DD8  349E               	retlw	158
  2104  0DD9  349E               	retlw	158
  2105  0DDA  34FC               	retlw	252
  2106  0DDB  34FC               	retlw	252
  2107  0DDC  34EE               	retlw	238
  2108  0DDD  34EE               	retlw	238
  2109  0DDE  34EE               	retlw	238
  2110  0DDF  34EE               	retlw	238
  2111  0DE0  34FC               	retlw	252
  2112  0DE1  34FC               	retlw	252
  2113  0DE2  34FC               	retlw	252
  2114  0DE3  34FC               	retlw	252
  2115  0DE4  34EE               	retlw	238
  2116  0DE5  34EE               	retlw	238
  2117  0DE6  34EE               	retlw	238
  2118  0DE7  34EE               	retlw	238
  2119  0DE8  34FC               	retlw	252
  2120  0DE9  34FC               	retlw	252
  2121  0DEA  3400               	retlw	0
  2122  0DEB  3400               	retlw	0
  2123  0DEC  34D4               	retlw	212
  2124  0DED  34D4               	retlw	212
  2125  0DEE  34EE               	retlw	238
  2126  0DEF  34EE               	retlw	238
  2127  0DF0  34FC               	retlw	252
  2128  0DF1  34FC               	retlw	252
  2129  0DF2  349E               	retlw	158
  2130  0DF3  349E               	retlw	158
  2131  0DF4  349E               	retlw	158
  2132  0DF5  349E               	retlw	158
  2133  0DF6  34FC               	retlw	252
  2134  0DF7  34FC               	retlw	252
  2135  0DF8  349E               	retlw	158
  2136  0DF9  349E               	retlw	158
  2137  0DFA  348D               	retlw	141
  2138  0DFB  348D               	retlw	141
  2139  0DFC  34FC               	retlw	252
  2140  0DFD  34FC               	retlw	252
  2141  0DFE  348D               	retlw	141
  2142  0DFF  348D               	retlw	141
  2143  0E00  349E               	retlw	158
  2144  0E01  349E               	retlw	158
  2145  0E02  34B2               	retlw	178
  2146  0E03  34B2               	retlw	178
  2147  0E04  34B2               	retlw	178
  2148  0E05  34B2               	retlw	178
  2149  0E06  34A8               	retlw	168
  2150  0E07  34A8               	retlw	168
  2151  0E08  34A8               	retlw	168
  2152  0E09  34A8               	retlw	168
  2153  0E0A  3400               	retlw	0
  2154  0E0B  3400               	retlw	0
  2155  0E0C  34D4               	retlw	212
  2156  0E0D  34D4               	retlw	212
  2157  0E0E  34EE               	retlw	238
  2158  0E0F  34EE               	retlw	238
  2159  0E10  34FC               	retlw	252
  2160  0E11  34FC               	retlw	252
  2161  0E12  349E               	retlw	158
  2162  0E13  349E               	retlw	158
  2163  0E14  349E               	retlw	158
  2164  0E15  349E               	retlw	158
  2165  0E16  34FC               	retlw	252
  2166  0E17  34FC               	retlw	252
  2167  0E18  349E               	retlw	158
  2168  0E19  349E               	retlw	158
  2169  0E1A  3400               	retlw	0
  2170  0E1B  3400               	retlw	0
  2171  0E1C  349E               	retlw	158
  2172  0E1D  3400               	retlw	0
  2173  0E1E  349E               	retlw	158
  2174  0E1F  349E               	retlw	158
  2175  0E20  349E               	retlw	158
  2176  0E21  349E               	retlw	158
  2177  0E22  3400               	retlw	0
  2178  0E23  3400               	retlw	0
  2179  0E24  348D               	retlw	141
  2180  0E25  3400               	retlw	0
  2181  0E26  348D               	retlw	141
  2182  0E27  348D               	retlw	141
  2183  0E28  348D               	retlw	141
  2184  0E29  348D               	retlw	141
  2185  0E2A  3400               	retlw	0
  2186  0E2B  3400               	retlw	0
  2187  0E2C  34D4               	retlw	212
  2188  0E2D  34D4               	retlw	212
  2189  0E2E  34EE               	retlw	238
  2190  0E2F  34EE               	retlw	238
  2191  0E30  34FC               	retlw	252
  2192  0E31  34FC               	retlw	252
  2193  0E32  349E               	retlw	158
  2194  0E33  349E               	retlw	158
  2195  0E34  349E               	retlw	158
  2196  0E35  349E               	retlw	158
  2197  0E36  3400               	retlw	0
  2198  0E37  3400               	retlw	0
  2199  0E38  349E               	retlw	158
  2200  0E39  349E               	retlw	158
  2201  0E3A  34FC               	retlw	252
  2202  0E3B  34FC               	retlw	252
  2203  0E3C  34EE               	retlw	238
  2204  0E3D  34EE               	retlw	238
  2205  0E3E  34EE               	retlw	238
  2206  0E3F  34EE               	retlw	238
  2207  0E40  34FC               	retlw	252
  2208  0E41  34FC               	retlw	252
  2209  0E42  34FC               	retlw	252
  2210  0E43  34FC               	retlw	252
  2211  0E44  34FC               	retlw	252
  2212  0E45  34FC               	retlw	252
  2213  0E46  34EE               	retlw	238
  2214  0E47  34EE               	retlw	238
  2215  0E48  34EE               	retlw	238
  2216  0E49  34EE               	retlw	238
  2217  0E4A  3400               	retlw	0
  2218  0E4B  3400               	retlw	0
  2219  0E4C  34D4               	retlw	212
  2220  0E4D  34D4               	retlw	212
  2221  0E4E  34EE               	retlw	238
  2222  0E4F  34EE               	retlw	238
  2223  0E50  34FC               	retlw	252
  2224  0E51  34FC               	retlw	252
  2225  0E52  349E               	retlw	158
  2226  0E53  349E               	retlw	158
  2227  0E54  349E               	retlw	158
  2228  0E55  349E               	retlw	158
  2229  0E56  3400               	retlw	0
  2230  0E57  3400               	retlw	0
  2231  0E58  349E               	retlw	158
  2232  0E59  349E               	retlw	158
  2233  0E5A  3400               	retlw	0
  2234                           
  2235                           ;initializer for _song2_pre
  2236  0E5B  3400               	retlw	0
  2237  0E5C  3400               	retlw	0
  2238  0E5D  34D0               	retlw	208
  2239  0E5E  34D0               	retlw	208
  2240  0E5F  34D0               	retlw	208
  2241  0E60  34D0               	retlw	208
  2242  0E61  34D0               	retlw	208
  2243  0E62  34D0               	retlw	208
  2244  0E63  34E0               	retlw	224
  2245  0E64  34E0               	retlw	224
  2246  0E65  34E0               	retlw	224
  2247  0E66  34E0               	retlw	224
  2248  0E67  34D0               	retlw	208
  2249  0E68  34D0               	retlw	208
  2250  0E69  34E0               	retlw	224
  2251  0E6A  34E0               	retlw	224
  2252  0E6B  34D0               	retlw	208
  2253  0E6C  34D0               	retlw	208
  2254  0E6D  34D0               	retlw	208
  2255  0E6E  34D0               	retlw	208
  2256  0E6F  34D0               	retlw	208
  2257  0E70  34D0               	retlw	208
  2258  0E71  34D0               	retlw	208
  2259  0E72  34D0               	retlw	208
  2260  0E73  34D0               	retlw	208
  2261  0E74  34D0               	retlw	208
  2262  0E75  34D0               	retlw	208
  2263  0E76  34D0               	retlw	208
  2264  0E77  34D0               	retlw	208
  2265  0E78  34D0               	retlw	208
  2266  0E79  34D0               	retlw	208
  2267  0E7A  34D0               	retlw	208
  2268  0E7B  34D0               	retlw	208
  2269  0E7C  34D0               	retlw	208
  2270  0E7D  34D0               	retlw	208
  2271  0E7E  34D0               	retlw	208
  2272  0E7F  34D0               	retlw	208
  2273  0E80  34D0               	retlw	208
  2274  0E81  34D0               	retlw	208
  2275  0E82  34D0               	retlw	208
  2276  0E83  34E0               	retlw	224
  2277  0E84  34E0               	retlw	224
  2278  0E85  34E0               	retlw	224
  2279  0E86  34E0               	retlw	224
  2280  0E87  34D0               	retlw	208
  2281  0E88  34D0               	retlw	208
  2282  0E89  34E0               	retlw	224
  2283  0E8A  34E0               	retlw	224
  2284  0E8B  34E0               	retlw	224
  2285  0E8C  34E0               	retlw	224
  2286  0E8D  34D0               	retlw	208
  2287  0E8E  34D0               	retlw	208
  2288  0E8F  34E0               	retlw	224
  2289  0E90  34E0               	retlw	224
  2290  0E91  34E0               	retlw	224
  2291  0E92  34E0               	retlw	224
  2292  0E93  34E0               	retlw	224
  2293  0E94  34E0               	retlw	224
  2294  0E95  34E0               	retlw	224
  2295  0E96  34E0               	retlw	224
  2296  0E97  34E0               	retlw	224
  2297  0E98  34E0               	retlw	224
  2298  0E99  34E0               	retlw	224
  2299  0E9A  34E0               	retlw	224
  2300  0E9B  34D0               	retlw	208
  2301  0E9C  34D0               	retlw	208
  2302  0E9D  34D0               	retlw	208
  2303  0E9E  34D0               	retlw	208
  2304  0E9F  34D0               	retlw	208
  2305  0EA0  34D0               	retlw	208
  2306  0EA1  34D0               	retlw	208
  2307  0EA2  34D0               	retlw	208
  2308  0EA3  34E0               	retlw	224
  2309  0EA4  34E0               	retlw	224
  2310  0EA5  34E0               	retlw	224
  2311  0EA6  34E0               	retlw	224
  2312  0EA7  34D0               	retlw	208
  2313  0EA8  34D0               	retlw	208
  2314  0EA9  34E0               	retlw	224
  2315  0EAA  34E0               	retlw	224
  2316  0EAB  34E0               	retlw	224
  2317  0EAC  34E0               	retlw	224
  2318  0EAD  34E0               	retlw	224
  2319  0EAE  34E0               	retlw	224
  2320  0EAF  34E0               	retlw	224
  2321  0EB0  34E0               	retlw	224
  2322  0EB1  34E0               	retlw	224
  2323  0EB2  34E0               	retlw	224
  2324  0EB3  34E0               	retlw	224
  2325  0EB4  34E0               	retlw	224
  2326  0EB5  34E0               	retlw	224
  2327  0EB6  34E0               	retlw	224
  2328  0EB7  34E0               	retlw	224
  2329  0EB8  34E0               	retlw	224
  2330  0EB9  34E0               	retlw	224
  2331  0EBA  34E0               	retlw	224
  2332  0EBB  34D0               	retlw	208
  2333  0EBC  34D0               	retlw	208
  2334  0EBD  34D0               	retlw	208
  2335  0EBE  34D0               	retlw	208
  2336  0EBF  34D0               	retlw	208
  2337  0EC0  34D0               	retlw	208
  2338  0EC1  34D0               	retlw	208
  2339  0EC2  34D0               	retlw	208
  2340  0EC3  34E0               	retlw	224
  2341  0EC4  34E0               	retlw	224
  2342  0EC5  34E0               	retlw	224
  2343  0EC6  34E0               	retlw	224
  2344  0EC7  34D0               	retlw	208
  2345  0EC8  34D0               	retlw	208
  2346  0EC9  34E0               	retlw	224
  2347  0ECA  34E0               	retlw	224
  2348  0ECB  34D0               	retlw	208
  2349  0ECC  34D0               	retlw	208
  2350  0ECD  34D0               	retlw	208
  2351  0ECE  34D0               	retlw	208
  2352  0ECF  34D0               	retlw	208
  2353  0ED0  34D0               	retlw	208
  2354  0ED1  34D0               	retlw	208
  2355  0ED2  34D0               	retlw	208
  2356  0ED3  34D0               	retlw	208
  2357  0ED4  34D0               	retlw	208
  2358  0ED5  34D0               	retlw	208
  2359  0ED6  34D0               	retlw	208
  2360  0ED7  34D0               	retlw	208
  2361  0ED8  34D0               	retlw	208
  2362  0ED9  34D0               	retlw	208
  2363  0EDA  34D0               	retlw	208
  2364  0EDB  34D0               	retlw	208
  2365  0EDC  34D0               	retlw	208
  2366  0EDD  34D0               	retlw	208
  2367  0EDE  34D0               	retlw	208
  2368  0EDF  34D0               	retlw	208
  2369  0EE0  34D0               	retlw	208
  2370  0EE1  34D0               	retlw	208
  2371  0EE2  34D0               	retlw	208
  2372  0EE3  34E0               	retlw	224
  2373  0EE4  34E0               	retlw	224
  2374  0EE5  34E0               	retlw	224
  2375  0EE6  34E0               	retlw	224
  2376  0EE7  34D0               	retlw	208
  2377  0EE8  34D0               	retlw	208
  2378  0EE9  34E0               	retlw	224
  2379  0EEA  34E0               	retlw	224
  2380                           
  2381                           ;initializer for _silent_night
  2382  0EEB  349E               	retlw	158
  2383  0EEC  349E               	retlw	158
  2384  0EED  349E               	retlw	158
  2385  0EEE  348D               	retlw	141
  2386  0EEF  349E               	retlw	158
  2387  0EF0  349E               	retlw	158
  2388  0EF1  34BC               	retlw	188
  2389  0EF2  34BC               	retlw	188
  2390  0EF3  34BC               	retlw	188
  2391  0EF4  34BC               	retlw	188
  2392  0EF5  34BC               	retlw	188
  2393  0EF6  34BC               	retlw	188
  2394  0EF7  349E               	retlw	158
  2395  0EF8  349E               	retlw	158
  2396  0EF9  349E               	retlw	158
  2397  0EFA  348D               	retlw	141
  2398  0EFB  349E               	retlw	158
  2399  0EFC  349E               	retlw	158
  2400  0EFD  34BC               	retlw	188
  2401  0EFE  34BC               	retlw	188
  2402  0EFF  34BC               	retlw	188
  2403  0F00  34BC               	retlw	188
  2404  0F01  34BC               	retlw	188
  2405  0F02  34BC               	retlw	188
  2406  0F03  34D3               	retlw	211
  2407  0F04  34D3               	retlw	211
  2408  0F05  34D3               	retlw	211
  2409  0F06  34D3               	retlw	211
  2410  0F07  34D3               	retlw	211
  2411  0F08  34D3               	retlw	211
  2412  0F09  34FC               	retlw	252
  2413  0F0A  34FC               	retlw	252
  2414  0F0B  34FC               	retlw	252
  2415  0F0C  34FC               	retlw	252
  2416  0F0D  34FC               	retlw	252
  2417  0F0E  34FC               	retlw	252
  2418  0F0F  34EE               	retlw	238
  2419  0F10  34EE               	retlw	238
  2420  0F11  34EE               	retlw	238
  2421  0F12  34EE               	retlw	238
  2422  0F13  34EE               	retlw	238
  2423  0F14  34EE               	retlw	238
  2424  0F15  349E               	retlw	158
  2425  0F16  349E               	retlw	158
  2426  0F17  349E               	retlw	158
  2427  0F18  349E               	retlw	158
  2428  0F19  349E               	retlw	158
  2429  0F1A  349E               	retlw	158
  2430  0F1B  348D               	retlw	141
  2431  0F1C  348D               	retlw	141
  2432  0F1D  348D               	retlw	141
  2433  0F1E  348D               	retlw	141
  2434  0F1F  348D               	retlw	141
  2435  0F20  348D               	retlw	141
  2436  0F21  34ED               	retlw	237
  2437  0F22  34ED               	retlw	237
  2438  0F23  34ED               	retlw	237
  2439  0F24  34FC               	retlw	252
  2440  0F25  348D               	retlw	141
  2441  0F26  348D               	retlw	141
  2442  0F27  349E               	retlw	158
  2443  0F28  349E               	retlw	158
  2444  0F29  349E               	retlw	158
  2445  0F2A  348D               	retlw	141
  2446  0F2B  349E               	retlw	158
  2447  0F2C  349E               	retlw	158
  2448  0F2D  34BC               	retlw	188
  2449  0F2E  34BC               	retlw	188
  2450  0F2F  34BC               	retlw	188
  2451  0F30  34BC               	retlw	188
  2452  0F31  34BC               	retlw	188
  2453  0F32  34BC               	retlw	188
  2454  0F33  348D               	retlw	141
  2455  0F34  348D               	retlw	141
  2456  0F35  348D               	retlw	141
  2457  0F36  348D               	retlw	141
  2458  0F37  348D               	retlw	141
  2459  0F38  348D               	retlw	141
  2460  0F39  34ED               	retlw	237
  2461  0F3A  34ED               	retlw	237
  2462  0F3B  34ED               	retlw	237
  2463  0F3C  34FC               	retlw	252
  2464  0F3D  348D               	retlw	141
  2465  0F3E  348D               	retlw	141
  2466  0F3F  349E               	retlw	158
  2467  0F40  349E               	retlw	158
  2468  0F41  349E               	retlw	158
  2469  0F42  348D               	retlw	141
  2470  0F43  349E               	retlw	158
  2471  0F44  349E               	retlw	158
  2472  0F45  34BC               	retlw	188
  2473  0F46  34BC               	retlw	188
  2474  0F47  34BC               	retlw	188
  2475  0F48  34BC               	retlw	188
  2476  0F49  34BC               	retlw	188
  2477  0F4A  34BC               	retlw	188
  2478  0F4B  34D3               	retlw	211
  2479  0F4C  34D3               	retlw	211
  2480  0F4D  34D3               	retlw	211
  2481  0F4E  34D3               	retlw	211
  2482  0F4F  34D3               	retlw	211
  2483  0F50  34D3               	retlw	211
  2484  0F51  34B1               	retlw	177
  2485  0F52  34B1               	retlw	177
  2486  0F53  34B1               	retlw	177
  2487  0F54  34D3               	retlw	211
  2488  0F55  34FC               	retlw	252
  2489  0F56  34FC               	retlw	252
  2490  0F57  34ED               	retlw	237
  2491  0F58  34ED               	retlw	237
  2492  0F59  34ED               	retlw	237
  2493  0F5A  34ED               	retlw	237
  2494  0F5B  34ED               	retlw	237
  2495  0F5C  34ED               	retlw	237
  2496  0F5D  34BC               	retlw	188
  2497  0F5E  34BC               	retlw	188
  2498  0F5F  34BC               	retlw	188
  2499  0F60  34BC               	retlw	188
  2500  0F61  34BC               	retlw	188
  2501  0F62  34BC               	retlw	188
  2502  0F63  34ED               	retlw	237
  2503  0F64  34ED               	retlw	237
  2504  0F65  349E               	retlw	158
  2505  0F66  349E               	retlw	158
  2506  0F67  34BC               	retlw	188
  2507  0F68  34BC               	retlw	188
  2508  0F69  349E               	retlw	158
  2509  0F6A  349E               	retlw	158
  2510  0F6B  349E               	retlw	158
  2511  0F6C  34B1               	retlw	177
  2512  0F6D  34D3               	retlw	211
  2513  0F6E  34D3               	retlw	211
  2514  0F6F  34EE               	retlw	238
  2515  0F70  34EE               	retlw	238
  2516  0F71  34EE               	retlw	238
  2517  0F72  34EE               	retlw	238
  2518  0F73  34EE               	retlw	238
  2519  0F74  34EE               	retlw	238
  2520  0F75  3400               	retlw	0
  2521                           
  2522                           ;initializer for _silent_night_pre
  2523  0F76  34D0               	retlw	208
  2524  0F77  34D0               	retlw	208
  2525  0F78  34D0               	retlw	208
  2526  0F79  34D0               	retlw	208
  2527  0F7A  34D0               	retlw	208
  2528  0F7B  34D0               	retlw	208
  2529  0F7C  34D0               	retlw	208
  2530  0F7D  34D0               	retlw	208
  2531  0F7E  34D0               	retlw	208
  2532  0F7F  34D0               	retlw	208
  2533  0F80  34D0               	retlw	208
  2534  0F81  34D0               	retlw	208
  2535  0F82  34D0               	retlw	208
  2536  0F83  34D0               	retlw	208
  2537  0F84  34D0               	retlw	208
  2538  0F85  34D0               	retlw	208
  2539  0F86  34D0               	retlw	208
  2540  0F87  34D0               	retlw	208
  2541  0F88  34D0               	retlw	208
  2542  0F89  34D0               	retlw	208
  2543  0F8A  34D0               	retlw	208
  2544  0F8B  34D0               	retlw	208
  2545  0F8C  34D0               	retlw	208
  2546  0F8D  34D0               	retlw	208
  2547  0F8E  34C0               	retlw	192
  2548  0F8F  34C0               	retlw	192
  2549  0F90  34C0               	retlw	192
  2550  0F91  34C0               	retlw	192
  2551  0F92  34C0               	retlw	192
  2552  0F93  34C0               	retlw	192
  2553  0F94  34C0               	retlw	192
  2554  0F95  34C0               	retlw	192
  2555  0F96  34C0               	retlw	192
  2556  0F97  34C0               	retlw	192
  2557  0F98  34C0               	retlw	192
  2558  0F99  34C0               	retlw	192
  2559  0F9A  34C0               	retlw	192
  2560  0F9B  34C0               	retlw	192
  2561  0F9C  34C0               	retlw	192
  2562  0F9D  34C0               	retlw	192
  2563  0F9E  34C0               	retlw	192
  2564  0F9F  34C0               	retlw	192
  2565  0FA0  34D0               	retlw	208
  2566  0FA1  34D0               	retlw	208
  2567  0FA2  34D0               	retlw	208
  2568  0FA3  34D0               	retlw	208
  2569  0FA4  34D0               	retlw	208
  2570  0FA5  34D0               	retlw	208
  2571  0FA6  34D0               	retlw	208
  2572  0FA7  34D0               	retlw	208
  2573  0FA8  34D0               	retlw	208
  2574  0FA9  34D0               	retlw	208
  2575  0FAA  34D0               	retlw	208
  2576  0FAB  34D0               	retlw	208
  2577  0FAC  34C0               	retlw	192
  2578  0FAD  34C0               	retlw	192
  2579  0FAE  34C0               	retlw	192
  2580  0FAF  34C0               	retlw	192
  2581  0FB0  34D0               	retlw	208
  2582  0FB1  34D0               	retlw	208
  2583  0FB2  34D0               	retlw	208
  2584  0FB3  34D0               	retlw	208
  2585  0FB4  34D0               	retlw	208
  2586  0FB5  34D0               	retlw	208
  2587  0FB6  34D0               	retlw	208
  2588  0FB7  34D0               	retlw	208
  2589  0FB8  34D0               	retlw	208
  2590  0FB9  34D0               	retlw	208
  2591  0FBA  34D0               	retlw	208
  2592  0FBB  34D0               	retlw	208
  2593  0FBC  34D0               	retlw	208
  2594  0FBD  34D0               	retlw	208
  2595  0FBE  34D0               	retlw	208
  2596  0FBF  34D0               	retlw	208
  2597  0FC0  34D0               	retlw	208
  2598  0FC1  34D0               	retlw	208
  2599  0FC2  34D0               	retlw	208
  2600  0FC3  34D0               	retlw	208
  2601  0FC4  34C0               	retlw	192
  2602  0FC5  34C0               	retlw	192
  2603  0FC6  34C0               	retlw	192
  2604  0FC7  34C0               	retlw	192
  2605  0FC8  34D0               	retlw	208
  2606  0FC9  34D0               	retlw	208
  2607  0FCA  34D0               	retlw	208
  2608  0FCB  34D0               	retlw	208
  2609  0FCC  34D0               	retlw	208
  2610  0FCD  34D0               	retlw	208
  2611  0FCE  34D0               	retlw	208
  2612  0FCF  34D0               	retlw	208
  2613  0FD0  34D0               	retlw	208
  2614  0FD1  34D0               	retlw	208
  2615  0FD2  34D0               	retlw	208
  2616  0FD3  34D0               	retlw	208
  2617  0FD4  34D0               	retlw	208
  2618  0FD5  34D0               	retlw	208
  2619  0FD6  34C0               	retlw	192
  2620  0FD7  34C0               	retlw	192
  2621  0FD8  34C0               	retlw	192
  2622  0FD9  34C0               	retlw	192
  2623  0FDA  34C0               	retlw	192
  2624  0FDB  34C0               	retlw	192
  2625  0FDC  34C0               	retlw	192
  2626  0FDD  34C0               	retlw	192
  2627  0FDE  34C0               	retlw	192
  2628  0FDF  34C0               	retlw	192
  2629  0FE0  34C0               	retlw	192
  2630  0FE1  34C0               	retlw	192
  2631  0FE2  34C0               	retlw	192
  2632  0FE3  34C0               	retlw	192
  2633  0FE4  34C0               	retlw	192
  2634  0FE5  34C0               	retlw	192
  2635  0FE6  34C0               	retlw	192
  2636  0FE7  34C0               	retlw	192
  2637  0FE8  34C0               	retlw	192
  2638  0FE9  34C0               	retlw	192
  2639  0FEA  34C0               	retlw	192
  2640  0FEB  34C0               	retlw	192
  2641  0FEC  34C0               	retlw	192
  2642  0FED  34C0               	retlw	192
  2643  0FEE  34C0               	retlw	192
  2644  0FEF  34C0               	retlw	192
  2645  0FF0  34D0               	retlw	208
  2646  0FF1  34D0               	retlw	208
  2647  0FF2  34D0               	retlw	208
  2648  0FF3  34D0               	retlw	208
  2649  0FF4  34D0               	retlw	208
  2650  0FF5  34D0               	retlw	208
  2651  0FF6  34D0               	retlw	208
  2652  0FF7  34D0               	retlw	208
  2653  0FF8  34D0               	retlw	208
  2654  0FF9  34D0               	retlw	208
  2655  0FFA  34D0               	retlw	208
  2656  0FFB  34D0               	retlw	208
  2657  0FFC  34D0               	retlw	208
  2658  0FFD  34D0               	retlw	208
  2659  0FFE  34D0               	retlw	208
  2660  0FFF  34D0               	retlw	208
  2661                           
  2662                           	psect	idataBANK0
  2663  0A7B                     __pidataBANK0:
  2664                           
  2665                           ;initializer for _song3_length
  2666  0A7B  349E               	retlw	158
  2667                           
  2668                           ;initializer for _timer_low_3
  2669  0A7C  343A               	retlw	58
  2670                           
  2671                           ;initializer for _timer_high_3
  2672  0A7D  34F1               	retlw	241
  2673                           
  2674                           ;initializer for _song2_length
  2675  0A7E  3490               	retlw	144
  2676                           
  2677                           ;initializer for _timer_low_2
  2678  0A7F  341C               	retlw	28
  2679                           
  2680                           ;initializer for _timer_high_2
  2681  0A80  34ED               	retlw	237
  2682                           
  2683                           ;initializer for _num_songs
  2684  0A81  3403               	retlw	3
  2685                           
  2686                           	psect	idataBANK1
  2687  0A74                     __pidataBANK1:
  2688                           
  2689                           ;initializer for _light_array
  2690  0A74  34FE               	retlw	254
  2691  0A75  34FF               	retlw	255
  2692  0A76  34FE               	retlw	254
  2693  0A77  34FF               	retlw	255
  2694  0A78  34FE               	retlw	254
  2695  0A79  34FF               	retlw	255
  2696  0A7A  34FE               	retlw	254
  2697                           
  2698                           	psect	stringtext1
  2699  1000                     __pstringtext1:
  2700  1000                     _spi1_configuration:
  2701  1000  3400               	retlw	0
  2702  1001  3440               	retlw	64
  2703  1002  3401               	retlw	1
  2704  1003  3400               	retlw	0
  2705  1004                     __end_of_spi1_configuration:
  2706                           
  2707                           	psect	nvBANK0
  2708  0054                     __pnvBANK0:
  2709  0054                     _TMR1_InterruptHandler:
  2710  0054                     	ds	2
  2711  0056                     _timer1ReloadVal:
  2712  0056                     	ds	2
  2713                           
  2714                           	psect	nvBANK1
  2715  00BE                     __pnvBANK1:
  2716  00BE                     _TMR0_InterruptHandler:
  2717  00BE                     	ds	2
  2718  00C0                     _timer0ReloadVal16bit:
  2719  00C0                     	ds	2
  2720  00C2                     _INT_InterruptHandler:
  2721  00C2                     	ds	2
  2722  001A                     _LATCbits	set	26
  2723  0012                     _TRISAbits	set	18
  2724  000B                     _INTCONbits	set	11
  2725  0014                     _TRISC	set	20
  2726  0012                     _TRISA	set	18
  2727  001A                     _LATC	set	26
  2728  0018                     _LATA	set	24
  2729  0014                     _TRISCbits	set	20
  2730  018C                     _SSP1BUF	set	396
  2731  0191                     _SSP1CON2	set	401
  2732  0190                     _SSP1CON1bits	set	400
  2733  018D                     _SSP1ADD	set	397
  2734  0190                     _SSP1CON1	set	400
  2735  018F                     _SSP1STAT	set	399
  2736  020F                     _T1GCONbits	set	527
  2737  020E                     _T1CONbits	set	526
  2738  020E                     _T1CON	set	526
  2739  020C                     _TMR1L	set	524
  2740  020D                     _TMR1H	set	525
  2741  0211                     _T1CLK	set	529
  2742  0210                     _T1GATE	set	528
  2743  020F                     _T1GCON	set	527
  2744  028D                     _PR2	set	653
  2745  028C                     _TMR2	set	652
  2746  028E                     _T2CONbits	set	654
  2747  0291                     _T2RSTbits	set	657
  2748  028F                     _T2HLTbits	set	655
  2749  028E                     _T2CON	set	654
  2750  028C                     _T2TMR	set	652
  2751  028D                     _T2PR	set	653
  2752  0291                     _T2RST	set	657
  2753  028F                     _T2HLT	set	655
  2754  0290                     _T2CLKCON	set	656
  2755  0314                     _PWM3DCL	set	788
  2756  0315                     _PWM3DCH	set	789
  2757  0316                     _PWM3CON	set	790
  2758  059E                     _T0CON0bits	set	1438
  2759  059E                     _T0CON0	set	1438
  2760  059C                     _TMR0L	set	1436
  2761  059D                     _TMR0H	set	1437
  2762  059F                     _T0CON1	set	1439
  2763  0717                     _PIE1bits	set	1815
  2764  070C                     _PIR0bits	set	1804
  2765  0716                     _PIE0bits	set	1814
  2766  070D                     _PIR1bits	set	1805
  2767  080C                     _WDTCON	set	2060
  2768  0892                     _OSCTUNE	set	2194
  2769  0893                     _OSCFRQ	set	2195
  2770  0891                     _OSCEN	set	2193
  2771  1E90                     _INTPPS	set	7824
  2772  1EC6                     _SSP1DATPPS	set	7878
  2773  1EC5                     _SSP1CLKPPS	set	7877
  2774  1F15                     _RA5PPS	set	7957
  2775  1F52                     _INLVLC	set	8018
  2776  1F3C                     _INLVLA	set	7996
  2777  1F51                     _SLRCONC	set	8017
  2778  1F3B                     _SLRCONA	set	7995
  2779  1F50                     _ODCONC	set	8016
  2780  1F3A                     _ODCONA	set	7994
  2781  1F4F                     _WPUC	set	8015
  2782  1F39                     _WPUA	set	7993
  2783  1F38                     _ANSELA	set	7992
  2784  1F4E                     _ANSELC	set	8014
  2785  1F23                     _RC3PPS	set	7971
  2786  1F25                     _RC5PPS	set	7973
  2787                           
  2788                           	psect	cinit
  2789  0033                     start_initialization:	
  2790                           ; #config settings
  2791                           
  2792  0033                     __initialization:	;BIGRAM
  2793                           
  2794                           ; Initialize objects allocated to BIGRAM
  2795  0033  308E               	movlw	low __pidataBIGRAM
  2796  0034  0084               	movwf	4
  2797  0035  308C               	movlw	(high __pidataBIGRAM)| (0+128)
  2798  0036  0085               	movwf	5
  2799  0037  307E               	movlw	low (0+8318)
  2800  0038  0086               	movwf	6
  2801  0039  3020               	movlw	high (0+8318)
  2802  003A  0087               	movwf	7
  2803  003B  3003               	movlw	3
  2804  003C  00FF               	movwf	btemp+1
  2805  003D  3072               	movlw	114
  2806  003E  3187  27F4  3180   	fcall	init_ram
  2807                           
  2808                           ; Initialize objects allocated to BANK0
  2809  0041  307B               	movlw	low __pidataBANK0
  2810  0042  0084               	movwf	4
  2811  0043  308A               	movlw	(high __pidataBANK0)| (0+128)
  2812  0044  0085               	movwf	5
  2813  0045  3048               	movlw	low __pdataBANK0
  2814  0046  0086               	movwf	6
  2815  0047  3000               	movlw	high __pdataBANK0
  2816  0048  0087               	movwf	7
  2817  0049  3000               	movlw	0
  2818  004A  00FF               	movwf	btemp+1
  2819  004B  3007               	movlw	7
  2820  004C  3187  27F4  3180   	fcall	init_ram
  2821                           
  2822                           ; Initialize objects allocated to BANK1
  2823  004F  3074               	movlw	low __pidataBANK1
  2824  0050  0084               	movwf	4
  2825  0051  308A               	movlw	(high __pidataBANK1)| (0+128)
  2826  0052  0085               	movwf	5
  2827  0053  30B7               	movlw	low __pdataBANK1
  2828  0054  0086               	movwf	6
  2829  0055  3000               	movlw	high __pdataBANK1
  2830  0056  0087               	movwf	7
  2831  0057  3000               	movlw	0
  2832  0058  00FF               	movwf	btemp+1
  2833  0059  3007               	movlw	7
  2834  005A  3187  27F4  3180   	fcall	init_ram
  2835                           
  2836                           ; Clear objects allocated to BANK0
  2837  005D  01CF               	clrf	__pbssBANK0& (0+127)
  2838  005E  01D0               	clrf	(__pbssBANK0+1)& (0+127)
  2839  005F  01D1               	clrf	(__pbssBANK0+2)& (0+127)
  2840  0060  01D2               	clrf	(__pbssBANK0+3)& (0+127)
  2841  0061  01D3               	clrf	(__pbssBANK0+4)& (0+127)
  2842                           
  2843                           ; Clear objects allocated to BANK1
  2844  0062  0141               	movlb	1	; select bank1
  2845  0063  01C4               	clrf	__pbssBANK1& (0+127)
  2846  0064  01C5               	clrf	(__pbssBANK1+1)& (0+127)
  2847  0065  01C6               	clrf	(__pbssBANK1+2)& (0+127)
  2848  0066  01C7               	clrf	(__pbssBANK1+3)& (0+127)
  2849  0067  01C8               	clrf	(__pbssBANK1+4)& (0+127)
  2850  0068  01C9               	clrf	(__pbssBANK1+5)& (0+127)
  2851  0069                     end_of_initialization:	
  2852                           ;End of C runtime variable initialization code
  2853                           
  2854  0069                     __end_of__initialization:
  2855  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2856  006A  0140               	movlb	0
  2857  006B  3185  2DC0         	ljmp	_main	;jump to C main() function
  2858                           
  2859                           	psect	bssBANK0
  2860  004F                     __pbssBANK0:
  2861  004F                     _jungle_count:
  2862  004F                     	ds	1
  2863  0050                     _last_note:
  2864  0050                     	ds	1
  2865  0051                     _song2_playing:
  2866  0051                     	ds	1
  2867  0052                     _song3_playing:
  2868  0052                     	ds	1
  2869  0053                     _silent_night_playing:
  2870  0053                     	ds	1
  2871                           
  2872                           	psect	dataBANK0
  2873  0048                     __pdataBANK0:
  2874  0048                     _song3_length:
  2875  0048                     	ds	1
  2876  0049                     _timer_low_3:
  2877  0049                     	ds	1
  2878  004A                     _timer_high_3:
  2879  004A                     	ds	1
  2880  004B                     _song2_length:
  2881  004B                     	ds	1
  2882  004C                     _timer_low_2:
  2883  004C                     	ds	1
  2884  004D                     _timer_high_2:
  2885  004D                     	ds	1
  2886  004E                     _num_songs:
  2887  004E                     	ds	1
  2888                           
  2889                           	psect	bssBANK1
  2890  00C4                     __pbssBANK1:
  2891  00C4                     _count:
  2892  00C4                     	ds	2
  2893  00C6                     _jungle_bool:
  2894  00C6                     	ds	1
  2895  00C7                     _presses:
  2896  00C7                     	ds	1
  2897  00C8                     _last_prescale:
  2898  00C8                     	ds	1
  2899  00C9                     _TMR0_complete:
  2900  00C9                     	ds	1
  2901                           
  2902                           	psect	dataBANK1
  2903  00B7                     __pdataBANK1:
  2904  00B7                     _light_array:
  2905  00B7                     	ds	7
  2906                           
  2907                           	psect	inittext
  2908  07F4                     init_ram:
  2909  07F4  00FE               	movwf	btemp
  2910  07F5                     initloop:
  2911  07F5  0012               	moviw fsr0++
  2912  07F6  001E               	movwi fsr1++
  2913  07F7  3001               	movlw	1
  2914  07F8  02FE               	subwf	btemp,f
  2915  07F9  3000               	movlw	0
  2916  07FA  3BFF               	subwfb	btemp+1,f
  2917  07FB  087F               	movf	btemp+1,w
  2918  07FC  047E               	iorwf	btemp,w
  2919  07FD  1D03               	skipz
  2920  07FE  2FF5               	goto	initloop
  2921  07FF  3400               	retlw	0
  2922                           
  2923                           	psect	cstackBANK1
  2924  00A0                     __pcstackBANK1:
  2925  00A0                     ??_SPI1_Initialize:
  2926  00A0                     ??_PIN_MANAGER_Initialize:	
  2927                           ; 1 bytes @ 0x0
  2928                           
  2929  00A0                     ??_OSCILLATOR_Initialize:	
  2930                           ; 1 bytes @ 0x0
  2931                           
  2932  00A0                     ??_WDT_Initialize:	
  2933                           ; 1 bytes @ 0x0
  2934                           
  2935  00A0                     ??_PWM3_Initialize:	
  2936                           ; 1 bytes @ 0x0
  2937                           
  2938  00A0                     ??_TMR2_Initialize:	
  2939                           ; 1 bytes @ 0x0
  2940                           
  2941  00A0                     ?_TMR0_SetInterruptHandler:	
  2942                           ; 1 bytes @ 0x0
  2943                           
  2944  00A0                     ?_TMR1_SetInterruptHandler:	
  2945                           ; 1 bytes @ 0x0
  2946                           
  2947  00A0                     ?_playNote:	
  2948                           ; 1 bytes @ 0x0
  2949                           
  2950  00A0                     ??_SPI1_ExchangeByte:	
  2951                           ; 1 bytes @ 0x0
  2952                           
  2953  00A0                     ?_INT_SetInterruptHandler:	
  2954                           ; 1 bytes @ 0x0
  2955                           
  2956  00A0                     SPI1_ExchangeByte@data:	
  2957                           ; 1 bytes @ 0x0
  2958                           
  2959  00A0                     playNote@prescale:	
  2960                           ; 1 bytes @ 0x0
  2961                           
  2962  00A0                     INT_SetInterruptHandler@InterruptHandler:	
  2963                           ; 1 bytes @ 0x0
  2964                           
  2965  00A0                     TMR0_SetInterruptHandler@InterruptHandler:	
  2966                           ; 2 bytes @ 0x0
  2967                           
  2968  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  2969                           ; 2 bytes @ 0x0
  2970                           
  2971                           
  2972                           ; 2 bytes @ 0x0
  2973  00A0                     	ds	1
  2974  00A1                     ?_shiftBytes:
  2975  00A1                     ??_playNote:	
  2976                           ; 1 bytes @ 0x1
  2977                           
  2978  00A1                     shiftBytes@lowSide:	
  2979                           ; 1 bytes @ 0x1
  2980                           
  2981                           
  2982                           ; 1 bytes @ 0x1
  2983  00A1                     	ds	1
  2984  00A2                     ??_TMR1_Initialize:
  2985  00A2                     ??_EXT_INT_Initialize:	
  2986                           ; 1 bytes @ 0x2
  2987                           
  2988  00A2                     ??_TMR0_Initialize:	
  2989                           ; 1 bytes @ 0x2
  2990                           
  2991  00A2                     ??_TMR0_SetInterruptHandler:	
  2992                           ; 1 bytes @ 0x2
  2993                           
  2994  00A2                     ??_TMR1_SetInterruptHandler:	
  2995                           ; 1 bytes @ 0x2
  2996                           
  2997  00A2                     ??_shiftBytes:	
  2998                           ; 1 bytes @ 0x2
  2999                           
  3000  00A2                     ??_SYSTEM_Initialize:	
  3001                           ; 1 bytes @ 0x2
  3002                           
  3003  00A2                     ??_INT_SetInterruptHandler:	
  3004                           ; 1 bytes @ 0x2
  3005                           
  3006  00A2                     playNote@note:	
  3007                           ; 1 bytes @ 0x2
  3008                           
  3009  00A2                     shiftBytes@highSide:	
  3010                           ; 1 bytes @ 0x2
  3011                           
  3012                           
  3013                           ; 1 bytes @ 0x2
  3014  00A2                     	ds	1
  3015  00A3                     ??_displayMatrix:
  3016                           
  3017                           ; 1 bytes @ 0x3
  3018  00A3                     	ds	2
  3019  00A5                     displayMatrix@states:
  3020                           
  3021                           ; 1 bytes @ 0x5
  3022  00A5                     	ds	1
  3023  00A6                     displayMatrix@i:
  3024                           
  3025                           ; 2 bytes @ 0x6
  3026  00A6                     	ds	2
  3027  00A8                     displayMatrix@lowSide:
  3028                           
  3029                           ; 1 bytes @ 0x8
  3030  00A8                     	ds	1
  3031  00A9                     ??_main:
  3032                           
  3033                           ; 1 bytes @ 0x9
  3034  00A9                     	ds	5
  3035  00AE                     main@light:
  3036                           
  3037                           ; 1 bytes @ 0xE
  3038  00AE                     	ds	1
  3039  00AF                     main@j:
  3040                           
  3041                           ; 2 bytes @ 0xF
  3042  00AF                     	ds	2
  3043  00B1                     main@i:
  3044                           
  3045                           ; 2 bytes @ 0x11
  3046  00B1                     	ds	2
  3047  00B3                     main@j_1166:
  3048                           
  3049                           ; 2 bytes @ 0x13
  3050  00B3                     	ds	2
  3051  00B5                     main@j_1168:
  3052                           
  3053                           ; 2 bytes @ 0x15
  3054  00B5                     	ds	2
  3055                           
  3056                           	psect	cstackCOMMON
  3057  0070                     __pcstackCOMMON:
  3058  0070                     ?_SPI1_Initialize:
  3059  0070                     ?_PIN_MANAGER_Initialize:	
  3060                           ; 1 bytes @ 0x0
  3061                           
  3062  0070                     ?_OSCILLATOR_Initialize:	
  3063                           ; 1 bytes @ 0x0
  3064                           
  3065  0070                     ?_WDT_Initialize:	
  3066                           ; 1 bytes @ 0x0
  3067                           
  3068  0070                     ?_PWM3_Initialize:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071  0070                     ?_TMR2_Initialize:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074  0070                     ?_TMR1_Initialize:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  0070                     ?_EXT_INT_Initialize:	
  3078                           ; 1 bytes @ 0x0
  3079                           
  3080  0070                     ?_TMR0_Initialize:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083  0070                     ?_TMR0_ISR:	
  3084                           ; 1 bytes @ 0x0
  3085                           
  3086  0070                     ??_TMR0_ISR:	
  3087                           ; 1 bytes @ 0x0
  3088                           
  3089  0070                     ?_INT_ISR:	
  3090                           ; 1 bytes @ 0x0
  3091                           
  3092  0070                     ?_TMR1_ISR:	
  3093                           ; 1 bytes @ 0x0
  3094                           
  3095  0070                     ?_INT_CallBack:	
  3096                           ; 1 bytes @ 0x0
  3097                           
  3098  0070                     ?_TMR0_DefaultInterruptHandler:	
  3099                           ; 1 bytes @ 0x0
  3100                           
  3101  0070                     ??_TMR0_DefaultInterruptHandler:	
  3102                           ; 1 bytes @ 0x0
  3103                           
  3104  0070                     ?_TMR1_DefaultInterruptHandler:	
  3105                           ; 1 bytes @ 0x0
  3106                           
  3107  0070                     ??_TMR1_DefaultInterruptHandler:	
  3108                           ; 1 bytes @ 0x0
  3109                           
  3110  0070                     ?_EXT_ISR:	
  3111                           ; 1 bytes @ 0x0
  3112                           
  3113  0070                     ??_EXT_ISR:	
  3114                           ; 1 bytes @ 0x0
  3115                           
  3116  0070                     ?_TMR0_ISR_:	
  3117                           ; 1 bytes @ 0x0
  3118                           
  3119  0070                     ??_TMR0_ISR_:	
  3120                           ; 1 bytes @ 0x0
  3121                           
  3122  0070                     ?_TMR1_ISR_:	
  3123                           ; 1 bytes @ 0x0
  3124                           
  3125  0070                     ?_displayMatrix:	
  3126                           ; 1 bytes @ 0x0
  3127                           
  3128  0070                     ?_SYSTEM_Initialize:	
  3129                           ; 1 bytes @ 0x0
  3130                           
  3131  0070                     ?_SPI1_ExchangeByte:	
  3132                           ; 1 bytes @ 0x0
  3133                           
  3134  0070                     ?_INTERRUPT_InterruptManager:	
  3135                           ; 1 bytes @ 0x0
  3136                           
  3137  0070                     ?_INT_DefaultInterruptHandler:	
  3138                           ; 1 bytes @ 0x0
  3139                           
  3140  0070                     ??_INT_DefaultInterruptHandler:	
  3141                           ; 1 bytes @ 0x0
  3142                           
  3143  0070                     ?_TMR0_Reload:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  0070                     ??_TMR0_Reload:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  0070                     ?_TMR1_WriteTimer:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  0070                     ?_main:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155  0070                     ?i1_playNote:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158  0070                     ?___awdiv:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161  0070                     i1playNote@prescale:	
  3162                           ; 2 bytes @ 0x0
  3163                           
  3164  0070                     TMR1_WriteTimer@timerVal:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167  0070                     ___awdiv@divisor:	
  3168                           ; 2 bytes @ 0x0
  3169                           
  3170                           
  3171                           ; 2 bytes @ 0x0
  3172  0070                     	ds	1
  3173  0071                     ??_INT_ISR:
  3174  0071                     ??_INT_CallBack:	
  3175                           ; 1 bytes @ 0x1
  3176                           
  3177  0071                     ??i1_playNote:	
  3178                           ; 1 bytes @ 0x1
  3179                           
  3180                           
  3181                           ; 1 bytes @ 0x1
  3182  0071                     	ds	1
  3183  0072                     ??_TMR1_WriteTimer:
  3184  0072                     i1playNote@note:	
  3185                           ; 1 bytes @ 0x2
  3186                           
  3187  0072                     ___awdiv@dividend:	
  3188                           ; 1 bytes @ 0x2
  3189                           
  3190                           
  3191                           ; 2 bytes @ 0x2
  3192  0072                     	ds	2
  3193  0074                     ??___awdiv:
  3194                           
  3195                           ; 1 bytes @ 0x4
  3196  0074                     	ds	1
  3197  0075                     ___awdiv@counter:
  3198                           
  3199                           ; 1 bytes @ 0x5
  3200  0075                     	ds	1
  3201  0076                     ___awdiv@sign:
  3202                           
  3203                           ; 1 bytes @ 0x6
  3204  0076                     	ds	1
  3205  0077                     ___awdiv@quotient:
  3206                           
  3207                           ; 2 bytes @ 0x7
  3208  0077                     	ds	2
  3209  0079                     ??_TMR1_ISR_:
  3210                           
  3211                           ; 1 bytes @ 0x9
  3212  0079                     	ds	5
  3213  007E                     ??_TMR1_ISR:
  3214  007E                     ??_INTERRUPT_InterruptManager:	
  3215                           ; 1 bytes @ 0xE
  3216                           
  3217                           
  3218                           	psect	cstackBANK0
  3219  0020                     __pcstackBANK0:	
  3220                           ; 1 bytes @ 0xE
  3221                           
  3222  0020                     TMR1_ISR_@lights:
  3223                           
  3224                           ; 1 bytes @ 0x0
  3225  0020                     	ds	1
  3226  0021                     TMR1_ISR_@lights_1178:
  3227                           
  3228                           ; 1 bytes @ 0x1
  3229  0021                     	ds	1
  3230  0022                     TMR1_ISR_@lights_1190:
  3231                           
  3232                           ; 1 bytes @ 0x2
  3233  0022                     	ds	1
  3234  0023                     TMR1_ISR_@jungle_sw:
  3235                           
  3236                           ; 1 bytes @ 0x3
  3237  0023                     	ds	1
  3238  0024                     TMR1_ISR_@i_1179:
  3239                           
  3240                           ; 2 bytes @ 0x4
  3241  0024                     	ds	2
  3242  0026                     TMR1_ISR_@i_1180:
  3243                           
  3244                           ; 2 bytes @ 0x6
  3245  0026                     	ds	2
  3246  0028                     TMR1_ISR_@i_1182:
  3247                           
  3248                           ; 2 bytes @ 0x8
  3249  0028                     	ds	2
  3250  002A                     TMR1_ISR_@i_1183:
  3251                           
  3252                           ; 2 bytes @ 0xA
  3253  002A                     	ds	2
  3254  002C                     TMR1_ISR_@i_1184:
  3255                           
  3256                           ; 2 bytes @ 0xC
  3257  002C                     	ds	2
  3258  002E                     TMR1_ISR_@i_1185:
  3259                           
  3260                           ; 2 bytes @ 0xE
  3261  002E                     	ds	2
  3262  0030                     TMR1_ISR_@i_1186:
  3263                           
  3264                           ; 2 bytes @ 0x10
  3265  0030                     	ds	2
  3266  0032                     TMR1_ISR_@i_1188:
  3267                           
  3268                           ; 2 bytes @ 0x12
  3269  0032                     	ds	2
  3270  0034                     TMR1_ISR_@i_1192:
  3271                           
  3272                           ; 2 bytes @ 0x14
  3273  0034                     	ds	2
  3274  0036                     TMR1_ISR_@i_1193:
  3275                           
  3276                           ; 2 bytes @ 0x16
  3277  0036                     	ds	2
  3278  0038                     TMR1_ISR_@i_1194:
  3279                           
  3280                           ; 2 bytes @ 0x18
  3281  0038                     	ds	2
  3282  003A                     TMR1_ISR_@i_1195:
  3283                           
  3284                           ; 2 bytes @ 0x1A
  3285  003A                     	ds	2
  3286  003C                     TMR1_ISR_@i_1176:
  3287                           
  3288                           ; 2 bytes @ 0x1C
  3289  003C                     	ds	2
  3290  003E                     TMR1_ISR_@i_1187:
  3291                           
  3292                           ; 2 bytes @ 0x1E
  3293  003E                     	ds	2
  3294  0040                     TMR1_ISR_@i:
  3295                           
  3296                           ; 2 bytes @ 0x20
  3297  0040                     	ds	2
  3298  0042                     TMR1_ISR_@i_1177:
  3299                           
  3300                           ; 2 bytes @ 0x22
  3301  0042                     	ds	2
  3302  0044                     TMR1_ISR_@i_1181:
  3303                           
  3304                           ; 2 bytes @ 0x24
  3305  0044                     	ds	2
  3306  0046                     TMR1_ISR_@i_1189:
  3307                           
  3308                           ; 2 bytes @ 0x26
  3309  0046                     	ds	2
  3310                           
  3311                           	psect	maintext
  3312  05C0                     __pmaintext:	
  3313 ;;
  3314 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  3315 ;;
  3316 ;; *************** function _main *****************
  3317 ;; Defined at:
  3318 ;;		line 419 in file "main.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  light           1    0        unsigned char 
  3323 ;;  light           1   14[BANK1 ] unsigned char 
  3324 ;;  j               2   21[BANK1 ] int 
  3325 ;;  j               2   19[BANK1 ] int 
  3326 ;;  j               2   15[BANK1 ] int 
  3327 ;;  i               2   17[BANK1 ] int 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : B3F/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;Total ram usage:       14 bytes
  3342 ;; Hardware stack levels required when called: 8
  3343 ;; This function calls:
  3344 ;;		_EXT_INT_Initialize
  3345 ;;		_INT_SetInterruptHandler
  3346 ;;		_PWM3_Initialize
  3347 ;;		_SPI1_Initialize
  3348 ;;		_SYSTEM_Initialize
  3349 ;;		_TMR0_Initialize
  3350 ;;		_TMR0_SetInterruptHandler
  3351 ;;		_TMR1_Initialize
  3352 ;;		_TMR1_SetInterruptHandler
  3353 ;;		_TMR2_Initialize
  3354 ;;		_displayMatrix
  3355 ;;		_playNote
  3356 ;;		_shiftBytes
  3357 ;; This function is called by:
  3358 ;;		Startup code after reset
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           
  3363                           ;psect for function _main
  3364  05C0                     _main:
  3365  05C0                     l3159:	
  3366                           ;incstack = 0
  3367                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3368                           
  3369                           
  3370                           ;main.c: 422:     SYSTEM_Initialize();
  3371  05C0  318B  2336  3185   	fcall	_SYSTEM_Initialize
  3372  05C3                     l3161:
  3373                           
  3374                           ;main.c: 428:     (INTCONbits.GIE = 1);
  3375  05C3  178B               	bsf	11,7	;volatile
  3376  05C4                     l3163:
  3377                           
  3378                           ;main.c: 431:     (INTCONbits.PEIE = 1);
  3379  05C4  170B               	bsf	11,6	;volatile
  3380                           
  3381                           ;main.c: 440:     SPI1_Initialize();
  3382  05C5  318A  22F3  3185   	fcall	_SPI1_Initialize
  3383  05C8                     l3165:
  3384                           
  3385                           ;main.c: 441:     SSP1CON1bits.SSPEN = 0;
  3386  05C8  0143               	movlb	3	; select bank3
  3387  05C9  1290               	bcf	16,5	;volatile
  3388  05CA                     l3167:
  3389                           
  3390                           ;main.c: 442:     TRISCbits.TRISC3 = 0;
  3391  05CA  0140               	movlb	0	; select bank0
  3392  05CB  1194               	bcf	20,3	;volatile
  3393  05CC                     l3169:
  3394                           
  3395                           ;main.c: 443:     TRISAbits.TRISA4 = 1;
  3396  05CC  1612               	bsf	18,4	;volatile
  3397  05CD                     l3171:
  3398                           
  3399                           ;main.c: 444:     TRISCbits.TRISC5 = 0;
  3400  05CD  1294               	bcf	20,5	;volatile
  3401  05CE                     l3173:
  3402                           
  3403                           ;main.c: 447:     SSP1CON1bits.SSPEN = 1;
  3404  05CE  0143               	movlb	3	; select bank3
  3405  05CF  1690               	bsf	16,5	;volatile
  3406                           
  3407                           ;main.c: 450:     EXT_INT_Initialize();
  3408  05D0  318A  22A9  3185   	fcall	_EXT_INT_Initialize
  3409                           
  3410                           ;main.c: 451:     INT_SetInterruptHandler(EXT_ISR);
  3411  05D3  306F               	movlw	low _EXT_ISR
  3412  05D4  0141               	movlb	1	; select bank1
  3413  05D5  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  3414  05D6  300B               	movlw	high _EXT_ISR
  3415  05D7  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3416  05D8  318A  2262  3185   	fcall	_INT_SetInterruptHandler
  3417  05DB                     l3175:
  3418                           
  3419                           ;main.c: 452:     PIE0bits.INTE = 1;
  3420  05DB  014E               	movlb	14	; select bank14
  3421  05DC  1416               	bsf	22,0	;volatile
  3422                           
  3423                           ;main.c: 455:     TMR0_Initialize();
  3424  05DD  318B  2352  3185   	fcall	_TMR0_Initialize
  3425                           
  3426                           ;main.c: 456:     TMR0_SetInterruptHandler(TMR0_ISR_);
  3427  05E0  3058               	movlw	low _TMR0_ISR_
  3428  05E1  0141               	movlb	1	; select bank1
  3429  05E2  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3430  05E3  300A               	movlw	high _TMR0_ISR_
  3431  05E4  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3432  05E5  318A  226E  3185   	fcall	_TMR0_SetInterruptHandler
  3433  05E8                     l3177:
  3434                           
  3435                           ;main.c: 457:     T0CON0bits.T0EN = 0;
  3436  05E8  014B               	movlb	11	; select bank11
  3437  05E9  139E               	bcf	30,7	;volatile
  3438                           
  3439                           ;main.c: 460:     TMR1_Initialize();
  3440  05EA  318B  23AD  3185   	fcall	_TMR1_Initialize
  3441                           
  3442                           ;main.c: 461:     TMR1_SetInterruptHandler(TMR1_ISR_);
  3443  05ED  306D               	movlw	low _TMR1_ISR_
  3444  05EE  0141               	movlb	1	; select bank1
  3445  05EF  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  3446  05F0  3000               	movlw	high _TMR1_ISR_
  3447  05F1  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3448  05F2  318A  2293  3185   	fcall	_TMR1_SetInterruptHandler
  3449  05F5                     l3179:
  3450                           
  3451                           ;main.c: 462:     T1CONbits.TMR1ON = 0;
  3452  05F5  0144               	movlb	4	; select bank4
  3453  05F6  100E               	bcf	14,0	;volatile
  3454                           
  3455                           ;main.c: 465:     TMR2_Initialize();
  3456  05F7  318A  22B7  3185   	fcall	_TMR2_Initialize
  3457  05FA                     l3181:
  3458                           
  3459                           ;main.c: 466:     T2CONbits.TMR2ON = 0;
  3460  05FA  0145               	movlb	5	; select bank5
  3461  05FB  138E               	bcf	14,7	;volatile
  3462                           
  3463                           ;main.c: 469:     PWM3_Initialize();
  3464  05FC  318A  2282  3185   	fcall	_PWM3_Initialize
  3465  05FF                     l3183:
  3466  05FF  0140               	movlb	0	; select bank0
  3467  0600  111A               	bcf	26,2	;volatile
  3468  0601                     l3185:
  3469  0601  121A               	bcf	26,4	;volatile
  3470  0602                     l3187:
  3471  0602  101A               	bcf	26,0	;volatile
  3472  0603                     l3189:
  3473                           
  3474                           ;main.c: 479:     for (int i = 0; i < 15; i++)
  3475  0603  0141               	movlb	1	; select bank1
  3476  0604  01B1               	clrf	main@i^(0+128)
  3477  0605  01B2               	clrf	(main@i+1)^(0+128)
  3478  0606                     l3195:
  3479                           
  3480                           ;main.c: 480:     {;main.c: 481:         for (int j = 0; j < 12; j++)
  3481  0606  0141               	movlb	1	; select bank1
  3482  0607  01AF               	clrf	main@j^(0+128)
  3483  0608  01B0               	clrf	(main@j+1)^(0+128)
  3484  0609                     l3201:
  3485                           
  3486                           ;main.c: 482:         {;main.c: 483:             displayMatrix(light_array);
  3487  0609  30B7               	movlw	(low (_light_array| 0))& (0+255)
  3488  060A  318B  23F1  3185   	fcall	_displayMatrix
  3489  060D                     l3203:
  3490                           
  3491                           ;main.c: 484:         }
  3492  060D  3001               	movlw	1
  3493  060E  0141               	movlb	1	; select bank1
  3494  060F  07AF               	addwf	main@j^(0+128),f
  3495  0610  3000               	movlw	0
  3496  0611  3DB0               	addwfc	(main@j+1)^(0+128),f
  3497  0612                     l3205:
  3498  0612  0830               	movf	(main@j+1)^(0+128),w
  3499  0613  3A80               	xorlw	128
  3500  0614  00A9               	movwf	??_main^(0+128)
  3501  0615  3080               	movlw	128
  3502  0616  0229               	subwf	??_main^(0+128),w
  3503  0617  1D03               	skipz
  3504  0618  2E1B               	goto	u2395
  3505  0619  300C               	movlw	12
  3506  061A  022F               	subwf	main@j^(0+128),w
  3507  061B                     u2395:
  3508  061B  1C03               	skipc
  3509  061C  2E1E               	goto	u2391
  3510  061D  2E1F               	goto	u2390
  3511  061E                     u2391:
  3512  061E  2E09               	goto	l3201
  3513  061F                     u2390:
  3514  061F                     l3207:
  3515                           
  3516                           ;main.c: 485:         if (i < 7)
  3517  061F  0141               	movlb	1	; select bank1
  3518  0620  0832               	movf	(main@i+1)^(0+128),w
  3519  0621  3A80               	xorlw	128
  3520  0622  00A9               	movwf	??_main^(0+128)
  3521  0623  3080               	movlw	128
  3522  0624  0229               	subwf	??_main^(0+128),w
  3523  0625  1D03               	skipz
  3524  0626  2E29               	goto	u2405
  3525  0627  3007               	movlw	7
  3526  0628  0231               	subwf	main@i^(0+128),w
  3527  0629                     u2405:
  3528  0629  1803               	skipnc
  3529  062A  2E2C               	goto	u2401
  3530  062B  2E2D               	goto	u2400
  3531  062C                     u2401:
  3532  062C  2E65               	goto	l3221
  3533  062D                     u2400:
  3534  062D                     l3209:
  3535                           
  3536                           ;main.c: 486:         {;main.c: 487:             for (int j = 0; j < 7; j++)
  3537  062D  0141               	movlb	1	; select bank1
  3538  062E  01B3               	clrf	main@j_1166^(0+128)
  3539  062F  01B4               	clrf	(main@j_1166+1)^(0+128)
  3540  0630                     l3215:
  3541                           
  3542                           ;main.c: 488:             {;main.c: 489:                 uint8_t light = (~light_array[j
      +                          ]) << 7;
  3543  0630  0141               	movlb	1	; select bank1
  3544  0631  0833               	movf	main@j_1166^(0+128),w
  3545  0632  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3546  0633  0086               	movwf	6
  3547  0634  0187               	clrf	7
  3548  0635  0901               	comf	1,w
  3549  0636  00A9               	movwf	??_main^(0+128)
  3550  0637  3006               	movlw	6
  3551  0638                     u2415:
  3552  0638  35A9               	lslf	??_main^(0+128),f
  3553  0639  3EFF               	addlw	-1
  3554  063A  1D03               	skipz
  3555  063B  2E38               	goto	u2415
  3556  063C  3529               	lslf	??_main^(0+128),w
  3557  063D  00AA               	movwf	(??_main+1)^(0+128)
  3558  063E  082A               	movf	(??_main+1)^(0+128),w
  3559  063F  00AE               	movwf	main@light^(0+128)
  3560                           
  3561                           ;main.c: 490:                 light_array[j] = (light_array[j] << 1) + (light >> 7);
  3562  0640  082E               	movf	main@light^(0+128),w
  3563  0641  00A9               	movwf	??_main^(0+128)
  3564  0642  3007               	movlw	7
  3565  0643                     u2425:
  3566  0643  36A9               	lsrf	??_main^(0+128),f
  3567  0644  0B89               	decfsz	9,f
  3568  0645  2E43               	goto	u2425
  3569  0646  0833               	movf	main@j_1166^(0+128),w
  3570  0647  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3571  0648  0086               	movwf	6
  3572  0649  0187               	clrf	7
  3573  064A  3501               	lslf	1,w
  3574  064B  0729               	addwf	??_main^(0+128),w
  3575  064C  00AA               	movwf	(??_main+1)^(0+128)
  3576  064D  0833               	movf	main@j_1166^(0+128),w
  3577  064E  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3578  064F  0086               	movwf	6
  3579  0650  0187               	clrf	7
  3580  0651  082A               	movf	(??_main+1)^(0+128),w
  3581  0652  0081               	movwf	1
  3582  0653                     l3217:
  3583                           
  3584                           ;main.c: 491:             }
  3585  0653  3001               	movlw	1
  3586  0654  07B3               	addwf	main@j_1166^(0+128),f
  3587  0655  3000               	movlw	0
  3588  0656  3DB4               	addwfc	(main@j_1166+1)^(0+128),f
  3589  0657                     l3219:
  3590  0657  0834               	movf	(main@j_1166+1)^(0+128),w
  3591  0658  3A80               	xorlw	128
  3592  0659  00A9               	movwf	??_main^(0+128)
  3593  065A  3080               	movlw	128
  3594  065B  0229               	subwf	??_main^(0+128),w
  3595  065C  1D03               	skipz
  3596  065D  2E60               	goto	u2435
  3597  065E  3007               	movlw	7
  3598  065F  0233               	subwf	main@j_1166^(0+128),w
  3599  0660                     u2435:
  3600  0660  1C03               	skipc
  3601  0661  2E63               	goto	u2431
  3602  0662  2E64               	goto	u2430
  3603  0663                     u2431:
  3604  0663  2E30               	goto	l3215
  3605  0664                     u2430:
  3606  0664  2E87               	goto	l3233
  3607  0665                     l3221:
  3608                           
  3609                           ;main.c: 494:         {;main.c: 495:             for (int j = 0; j < 7; j++)
  3610  0665  0141               	movlb	1	; select bank1
  3611  0666  01B5               	clrf	main@j_1168^(0+128)
  3612  0667  01B6               	clrf	(main@j_1168+1)^(0+128)
  3613  0668                     l3227:
  3614                           
  3615                           ;main.c: 498:                 light_array[j] = (light_array[j] << 1) + 1;
  3616  0668  0141               	movlb	1	; select bank1
  3617  0669  0835               	movf	main@j_1168^(0+128),w
  3618  066A  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3619  066B  0086               	movwf	6
  3620  066C  0187               	clrf	7
  3621  066D  1403               	setc
  3622  066E  0D01               	rlf	1,w
  3623  066F  00A9               	movwf	??_main^(0+128)
  3624  0670  0835               	movf	main@j_1168^(0+128),w
  3625  0671  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  3626  0672  0086               	movwf	6
  3627  0673  0187               	clrf	7
  3628  0674  0829               	movf	??_main^(0+128),w
  3629  0675  0081               	movwf	1
  3630  0676                     l3229:
  3631                           
  3632                           ;main.c: 499:             }
  3633  0676  3001               	movlw	1
  3634  0677  07B5               	addwf	main@j_1168^(0+128),f
  3635  0678  3000               	movlw	0
  3636  0679  3DB6               	addwfc	(main@j_1168+1)^(0+128),f
  3637  067A                     l3231:
  3638  067A  0836               	movf	(main@j_1168+1)^(0+128),w
  3639  067B  3A80               	xorlw	128
  3640  067C  00A9               	movwf	??_main^(0+128)
  3641  067D  3080               	movlw	128
  3642  067E  0229               	subwf	??_main^(0+128),w
  3643  067F  1D03               	skipz
  3644  0680  2E83               	goto	u2445
  3645  0681  3007               	movlw	7
  3646  0682  0235               	subwf	main@j_1168^(0+128),w
  3647  0683                     u2445:
  3648  0683  1C03               	skipc
  3649  0684  2E86               	goto	u2441
  3650  0685  2E87               	goto	u2440
  3651  0686                     u2441:
  3652  0686  2E68               	goto	l3227
  3653  0687                     u2440:
  3654  0687                     l3233:
  3655                           
  3656                           ;main.c: 501:     }
  3657  0687  3001               	movlw	1
  3658  0688  0141               	movlb	1	; select bank1
  3659  0689  07B1               	addwf	main@i^(0+128),f
  3660  068A  3000               	movlw	0
  3661  068B  3DB2               	addwfc	(main@i+1)^(0+128),f
  3662  068C  0832               	movf	(main@i+1)^(0+128),w
  3663  068D  3A80               	xorlw	128
  3664  068E  00A9               	movwf	??_main^(0+128)
  3665  068F  3080               	movlw	128
  3666  0690  0229               	subwf	??_main^(0+128),w
  3667  0691  1D03               	skipz
  3668  0692  2E95               	goto	u2455
  3669  0693  300F               	movlw	15
  3670  0694  0231               	subwf	main@i^(0+128),w
  3671  0695                     u2455:
  3672  0695  1C03               	skipc
  3673  0696  2E98               	goto	u2451
  3674  0697  2E99               	goto	u2450
  3675  0698                     u2451:
  3676  0698  2E06               	goto	l3195
  3677  0699                     u2450:
  3678  0699                     l533:	
  3679                           ;main.c: 509:     while (1)
  3680                           
  3681                           
  3682                           ;main.c: 510:     {;main.c: 511:         T0CON0bits.T0EN = 1;
  3683  0699  014B               	movlb	11	; select bank11
  3684  069A  179E               	bsf	30,7	;volatile
  3685  069B                     l3235:
  3686                           
  3687                           ;main.c: 512:         shiftBytes(0xFE, 0x08);
  3688  069B  3008               	movlw	8
  3689  069C  0141               	movlb	1	; select bank1
  3690  069D  00A9               	movwf	??_main^(0+128)
  3691  069E  0829               	movf	??_main^(0+128),w
  3692  069F  00A1               	movwf	shiftBytes@lowSide^(0+128)
  3693  06A0  30FE               	movlw	254
  3694  06A1  318A  22D3  3185   	fcall	_shiftBytes
  3695  06A4                     l3237:
  3696  06A4  0140               	movlb	0	; select bank0
  3697  06A5  111A               	bcf	26,2	;volatile
  3698  06A6                     l3239:
  3699  06A6  101A               	bcf	26,0	;volatile
  3700  06A7                     l3241:
  3701                           
  3702                           ;main.c: 515:         if (presses && TMR0_complete)
  3703  06A7  0141               	movlb	1	; select bank1
  3704  06A8  0847               	movf	_presses^(0+128),w
  3705  06A9  1903               	btfsc	3,2
  3706  06AA  2EAC               	goto	u2461
  3707  06AB  2EAD               	goto	u2460
  3708  06AC                     u2461:
  3709  06AC  2FB1               	goto	l3285
  3710  06AD                     u2460:
  3711  06AD                     l3243:
  3712  06AD  0849               	movf	_TMR0_complete^(0+128),w
  3713  06AE  1903               	btfsc	3,2
  3714  06AF  2EB1               	goto	u2471
  3715  06B0  2EB2               	goto	u2470
  3716  06B1                     u2471:
  3717  06B1  2FB1               	goto	l3285
  3718  06B2                     u2470:
  3719  06B2                     l3245:
  3720                           
  3721                           ;main.c: 516:         {;main.c: 517:             T0CON0bits.T0EN = 0;
  3722  06B2  014B               	movlb	11	; select bank11
  3723  06B3  139E               	bcf	30,7	;volatile
  3724                           
  3725                           ;main.c: 520:             switch (presses)
  3726  06B4  2F19               	goto	l3265
  3727  06B5                     l3247:
  3728                           
  3729                           ;main.c: 523:                     light_array[0] = 0x88;
  3730  06B5  3088               	movlw	136
  3731  06B6  00A9               	movwf	??_main^(0+128)
  3732  06B7  0829               	movf	??_main^(0+128),w
  3733  06B8  00B7               	movwf	_light_array^(0+128)
  3734                           
  3735                           ;main.c: 524:                     light_array[1] = 0x44;
  3736  06B9  3044               	movlw	68
  3737  06BA  00A9               	movwf	??_main^(0+128)
  3738  06BB  0829               	movf	??_main^(0+128),w
  3739  06BC  00B8               	movwf	(_light_array^(0+128)+1)
  3740                           
  3741                           ;main.c: 525:                     light_array[2] = 0x22;
  3742  06BD  3022               	movlw	34
  3743  06BE  00A9               	movwf	??_main^(0+128)
  3744  06BF  0829               	movf	??_main^(0+128),w
  3745  06C0  00B9               	movwf	(_light_array^(0+128)+2)
  3746                           
  3747                           ;main.c: 526:                     light_array[3] = 0x11;
  3748  06C1  3011               	movlw	17
  3749  06C2  00A9               	movwf	??_main^(0+128)
  3750  06C3  0829               	movf	??_main^(0+128),w
  3751  06C4  00BA               	movwf	(_light_array^(0+128)+3)
  3752                           
  3753                           ;main.c: 527:                     light_array[4] = 0x88;
  3754  06C5  3088               	movlw	136
  3755  06C6  00A9               	movwf	??_main^(0+128)
  3756  06C7  0829               	movf	??_main^(0+128),w
  3757  06C8  00BB               	movwf	(_light_array^(0+128)+4)
  3758                           
  3759                           ;main.c: 528:                     light_array[5] = 0x44;
  3760  06C9  3044               	movlw	68
  3761  06CA  00A9               	movwf	??_main^(0+128)
  3762  06CB  0829               	movf	??_main^(0+128),w
  3763  06CC  00BC               	movwf	(_light_array^(0+128)+5)
  3764                           
  3765                           ;main.c: 529:                     light_array[6] = 0x22;
  3766  06CD  3022               	movlw	34
  3767  06CE  00A9               	movwf	??_main^(0+128)
  3768  06CF  0829               	movf	??_main^(0+128),w
  3769  06D0  00BD               	movwf	(_light_array^(0+128)+6)
  3770  06D1                     l3249:
  3771                           
  3772                           ;main.c: 530:                     silent_night_playing = 1;
  3773  06D1  0140               	movlb	0	; select bank0
  3774  06D2  01D3               	clrf	_silent_night_playing
  3775  06D3  0AD3               	incf	_silent_night_playing,f
  3776                           
  3777                           ;main.c: 531:                     break;
  3778  06D4  2F2D               	goto	l541
  3779  06D5                     l3251:
  3780                           
  3781                           ;main.c: 552:                     light_array[0] = 0xFF;
  3782  06D5  30FF               	movlw	255
  3783  06D6  00A9               	movwf	??_main^(0+128)
  3784  06D7  0829               	movf	??_main^(0+128),w
  3785  06D8  00B7               	movwf	_light_array^(0+128)
  3786                           
  3787                           ;main.c: 553:                     light_array[1] = 0xFF;
  3788  06D9  30FF               	movlw	255
  3789  06DA  00A9               	movwf	??_main^(0+128)
  3790  06DB  0829               	movf	??_main^(0+128),w
  3791  06DC  00B8               	movwf	(_light_array^(0+128)+1)
  3792                           
  3793                           ;main.c: 554:                     light_array[2] = 0xFF;
  3794  06DD  30FF               	movlw	255
  3795  06DE  00A9               	movwf	??_main^(0+128)
  3796  06DF  0829               	movf	??_main^(0+128),w
  3797  06E0  00B9               	movwf	(_light_array^(0+128)+2)
  3798                           
  3799                           ;main.c: 555:                     light_array[3] = 0xFF;
  3800  06E1  30FF               	movlw	255
  3801  06E2  00A9               	movwf	??_main^(0+128)
  3802  06E3  0829               	movf	??_main^(0+128),w
  3803  06E4  00BA               	movwf	(_light_array^(0+128)+3)
  3804                           
  3805                           ;main.c: 556:                     light_array[4] = 0xFF;
  3806  06E5  30FF               	movlw	255
  3807  06E6  00A9               	movwf	??_main^(0+128)
  3808  06E7  0829               	movf	??_main^(0+128),w
  3809  06E8  00BB               	movwf	(_light_array^(0+128)+4)
  3810                           
  3811                           ;main.c: 557:                     light_array[5] = 0xFF;
  3812  06E9  30FF               	movlw	255
  3813  06EA  00A9               	movwf	??_main^(0+128)
  3814  06EB  0829               	movf	??_main^(0+128),w
  3815  06EC  00BC               	movwf	(_light_array^(0+128)+5)
  3816                           
  3817                           ;main.c: 558:                     light_array[6] = 0xFF;
  3818  06ED  30FF               	movlw	255
  3819  06EE  00A9               	movwf	??_main^(0+128)
  3820  06EF  0829               	movf	??_main^(0+128),w
  3821  06F0  00BD               	movwf	(_light_array^(0+128)+6)
  3822  06F1                     l3253:
  3823                           
  3824                           ;main.c: 572:                     song2_playing = 1;
  3825  06F1  0140               	movlb	0	; select bank0
  3826  06F2  01D1               	clrf	_song2_playing
  3827  06F3  0AD1               	incf	_song2_playing,f
  3828                           
  3829                           ;main.c: 573:                     break;
  3830  06F4  2F2D               	goto	l541
  3831  06F5                     l3255:
  3832                           
  3833                           ;main.c: 595:                     light_array[0] = 0xFF;
  3834  06F5  30FF               	movlw	255
  3835  06F6  00A9               	movwf	??_main^(0+128)
  3836  06F7  0829               	movf	??_main^(0+128),w
  3837  06F8  00B7               	movwf	_light_array^(0+128)
  3838                           
  3839                           ;main.c: 596:                     light_array[1] = 0xFF;
  3840  06F9  30FF               	movlw	255
  3841  06FA  00A9               	movwf	??_main^(0+128)
  3842  06FB  0829               	movf	??_main^(0+128),w
  3843  06FC  00B8               	movwf	(_light_array^(0+128)+1)
  3844                           
  3845                           ;main.c: 597:                     light_array[2] = 0xFF;
  3846  06FD  30FF               	movlw	255
  3847  06FE  00A9               	movwf	??_main^(0+128)
  3848  06FF  0829               	movf	??_main^(0+128),w
  3849  0700  00B9               	movwf	(_light_array^(0+128)+2)
  3850                           
  3851                           ;main.c: 598:                     light_array[3] = 0xFF;
  3852  0701  30FF               	movlw	255
  3853  0702  00A9               	movwf	??_main^(0+128)
  3854  0703  0829               	movf	??_main^(0+128),w
  3855  0704  00BA               	movwf	(_light_array^(0+128)+3)
  3856                           
  3857                           ;main.c: 599:                     light_array[4] = 0xFF;
  3858  0705  30FF               	movlw	255
  3859  0706  00A9               	movwf	??_main^(0+128)
  3860  0707  0829               	movf	??_main^(0+128),w
  3861  0708  00BB               	movwf	(_light_array^(0+128)+4)
  3862                           
  3863                           ;main.c: 600:                     light_array[5] = 0xFF;
  3864  0709  30FF               	movlw	255
  3865  070A  00A9               	movwf	??_main^(0+128)
  3866  070B  0829               	movf	??_main^(0+128),w
  3867  070C  00BC               	movwf	(_light_array^(0+128)+5)
  3868                           
  3869                           ;main.c: 601:                     light_array[6] = 0xFF;
  3870  070D  30FF               	movlw	255
  3871  070E  00A9               	movwf	??_main^(0+128)
  3872  070F  0829               	movf	??_main^(0+128),w
  3873  0710  00BD               	movwf	(_light_array^(0+128)+6)
  3874  0711                     l3257:
  3875                           
  3876                           ;main.c: 602:                     jungle_count = 0;
  3877  0711  0140               	movlb	0	; select bank0
  3878  0712  01CF               	clrf	_jungle_count
  3879  0713                     l3259:
  3880                           
  3881                           ;main.c: 603:                     jungle_bool = 0;
  3882  0713  0141               	movlb	1	; select bank1
  3883  0714  01C6               	clrf	_jungle_bool^(0+128)
  3884  0715                     l3261:
  3885                           
  3886                           ;main.c: 606:                     song3_playing = 1;
  3887  0715  0140               	movlb	0	; select bank0
  3888  0716  01D2               	clrf	_song3_playing
  3889  0717  0AD2               	incf	_song3_playing,f
  3890                           
  3891                           ;main.c: 607:                     break;
  3892  0718  2F2D               	goto	l541
  3893  0719                     l3265:
  3894  0719  0141               	movlb	1	; select bank1
  3895  071A  0847               	movf	_presses^(0+128),w
  3896  071B  00A9               	movwf	??_main^(0+128)
  3897  071C  01AA               	clrf	(??_main^(0+128)+1)
  3898                           
  3899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3900                           ; Switch size 1, requested type "simple"
  3901                           ; Number of cases is 1, Range of values is 0 to 0
  3902                           ; switch strategies available:
  3903                           ; Name         Instructions Cycles
  3904                           ; simple_byte            4     3 (average)
  3905                           ; direct_byte            8     6 (fixed)
  3906                           ; jumptable            260     6 (fixed)
  3907                           ;	Chosen strategy is simple_byte
  3908  071D  082A               	movf	(??_main+1)^(0+128),w
  3909  071E  3A00               	xorlw	0	; case 0
  3910  071F  1903               	skipnz
  3911  0720  2F22               	goto	l3351
  3912  0721  2F2D               	goto	l541
  3913  0722                     l3351:
  3914                           
  3915                           ; Switch size 1, requested type "simple"
  3916                           ; Number of cases is 3, Range of values is 1 to 3
  3917                           ; switch strategies available:
  3918                           ; Name         Instructions Cycles
  3919                           ; simple_byte           10     6 (average)
  3920                           ; direct_byte           15     9 (fixed)
  3921                           ; jumptable            263     9 (fixed)
  3922                           ;	Chosen strategy is simple_byte
  3923  0722  0829               	movf	??_main^(0+128),w
  3924  0723  3A01               	xorlw	1	; case 1
  3925  0724  1903               	skipnz
  3926  0725  2EB5               	goto	l3247
  3927  0726  3A03               	xorlw	3	; case 2
  3928  0727  1903               	skipnz
  3929  0728  2ED5               	goto	l3251
  3930  0729  3A01               	xorlw	1	; case 3
  3931  072A  1903               	skipnz
  3932  072B  2EF5               	goto	l3255
  3933  072C  2F2D               	goto	l541
  3934  072D                     l541:
  3935                           
  3936                           ;main.c: 609:             T1CONbits.TMR1ON = 1;
  3937  072D  0144               	movlb	4	; select bank4
  3938  072E  140E               	bsf	14,0	;volatile
  3939                           
  3940                           ;main.c: 610:             T2CONbits.TMR2ON = 1;
  3941  072F  0145               	movlb	5	; select bank5
  3942  0730  178E               	bsf	14,7	;volatile
  3943                           
  3944                           ;main.c: 613:             while (presses == 1)
  3945  0731  2F52               	goto	l3269
  3946  0732                     l3267:
  3947                           
  3948                           ;main.c: 614:             {;main.c: 615:                 playNote(silent_night[count], s
      +                          ilent_night_pre[count]);
  3949  0732  3066               	movlw	102
  3950  0733  00A9               	movwf	??_main^(0+128)
  3951  0734  3023               	movlw	35
  3952  0735  00AA               	movwf	(??_main^(0+128)+1)
  3953  0736  0844               	movf	_count^(0+128),w
  3954  0737  0729               	addwf	??_main^(0+128),w
  3955  0738  0086               	movwf	6
  3956  0739  0845               	movf	(_count+1)^(0+128),w
  3957  073A  3D2A               	addwfc	(??_main+1)^(0+128),w
  3958  073B  0087               	movwf	7
  3959  073C  0801               	movf	1,w
  3960  073D  00AB               	movwf	(??_main+2)^(0+128)
  3961  073E  082B               	movf	(??_main+2)^(0+128),w
  3962  073F  00A0               	movwf	playNote@prescale^(0+128)
  3963  0740  30DB               	movlw	219
  3964  0741  00AC               	movwf	(??_main+3)^(0+128)
  3965  0742  3022               	movlw	34
  3966  0743  00AD               	movwf	((??_main+3)^(0+128)+1)
  3967  0744  0844               	movf	_count^(0+128),w
  3968  0745  072C               	addwf	(??_main+3)^(0+128),w
  3969  0746  0086               	movwf	6
  3970  0747  0845               	movf	(_count+1)^(0+128),w
  3971  0748  3D2D               	addwfc	(??_main+4)^(0+128),w
  3972  0749  0087               	movwf	7
  3973  074A  0801               	movf	1,w
  3974  074B  318B  23CE  3185   	fcall	_playNote
  3975                           
  3976                           ;main.c: 616:                 displayMatrix(light_array);
  3977  074E  30B7               	movlw	(low (_light_array| 0))& (0+255)
  3978  074F  318B  23F1  3185   	fcall	_displayMatrix
  3979  0752                     l3269:
  3980                           
  3981                           ;main.c: 613:             while (presses == 1)
  3982  0752  0141               	movlb	1	; select bank1
  3983  0753  0347               	decf	_presses^(0+128),w
  3984  0754  1903               	btfsc	3,2
  3985  0755  2F57               	goto	u2481
  3986  0756  2F58               	goto	u2480
  3987  0757                     u2481:
  3988  0757  2F32               	goto	l3267
  3989  0758                     u2480:
  3990  0758  2F79               	goto	l3273
  3991  0759                     l3271:
  3992                           
  3993                           ;main.c: 620:             {;main.c: 655:                 playNote(song2[count], song2_pr
      +                          e[count]);
  3994  0759  304B               	movlw	75
  3995  075A  00A9               	movwf	??_main^(0+128)
  3996  075B  3022               	movlw	34
  3997  075C  00AA               	movwf	(??_main^(0+128)+1)
  3998  075D  0844               	movf	_count^(0+128),w
  3999  075E  0729               	addwf	??_main^(0+128),w
  4000  075F  0086               	movwf	6
  4001  0760  0845               	movf	(_count+1)^(0+128),w
  4002  0761  3D2A               	addwfc	(??_main+1)^(0+128),w
  4003  0762  0087               	movwf	7
  4004  0763  0801               	movf	1,w
  4005  0764  00AB               	movwf	(??_main+2)^(0+128)
  4006  0765  082B               	movf	(??_main+2)^(0+128),w
  4007  0766  00A0               	movwf	playNote@prescale^(0+128)
  4008  0767  30BA               	movlw	186
  4009  0768  00AC               	movwf	(??_main+3)^(0+128)
  4010  0769  3021               	movlw	33
  4011  076A  00AD               	movwf	((??_main+3)^(0+128)+1)
  4012  076B  0844               	movf	_count^(0+128),w
  4013  076C  072C               	addwf	(??_main+3)^(0+128),w
  4014  076D  0086               	movwf	6
  4015  076E  0845               	movf	(_count+1)^(0+128),w
  4016  076F  3D2D               	addwfc	(??_main+4)^(0+128),w
  4017  0770  0087               	movwf	7
  4018  0771  0801               	movf	1,w
  4019  0772  318B  23CE  3185   	fcall	_playNote
  4020                           
  4021                           ;main.c: 656:                 displayMatrix(light_array);
  4022  0775  30B7               	movlw	(low (_light_array| 0))& (0+255)
  4023  0776  318B  23F1  3185   	fcall	_displayMatrix
  4024  0779                     l3273:
  4025                           
  4026                           ;main.c: 619:             while (presses == 2)
  4027  0779  3002               	movlw	2
  4028  077A  0141               	movlb	1	; select bank1
  4029  077B  0647               	xorwf	_presses^(0+128),w
  4030  077C  1903               	btfsc	3,2
  4031  077D  2F7F               	goto	u2491
  4032  077E  2F80               	goto	u2490
  4033  077F                     u2491:
  4034  077F  2F59               	goto	l3271
  4035  0780                     u2490:
  4036  0780  2FA1               	goto	l3277
  4037  0781                     l3275:
  4038                           
  4039                           ;main.c: 661:             {;main.c: 662:                 playNote(song3[count], song3_pr
      +                          e[count]);
  4040  0781  307E               	movlw	126
  4041  0782  00A9               	movwf	??_main^(0+128)
  4042  0783  3020               	movlw	32
  4043  0784  00AA               	movwf	(??_main^(0+128)+1)
  4044  0785  0844               	movf	_count^(0+128),w
  4045  0786  0729               	addwf	??_main^(0+128),w
  4046  0787  0086               	movwf	6
  4047  0788  0845               	movf	(_count+1)^(0+128),w
  4048  0789  3D2A               	addwfc	(??_main+1)^(0+128),w
  4049  078A  0087               	movwf	7
  4050  078B  0801               	movf	1,w
  4051  078C  00AB               	movwf	(??_main+2)^(0+128)
  4052  078D  082B               	movf	(??_main+2)^(0+128),w
  4053  078E  00A0               	movwf	playNote@prescale^(0+128)
  4054  078F  301C               	movlw	28
  4055  0790  00AC               	movwf	(??_main+3)^(0+128)
  4056  0791  3021               	movlw	33
  4057  0792  00AD               	movwf	((??_main+3)^(0+128)+1)
  4058  0793  0844               	movf	_count^(0+128),w
  4059  0794  072C               	addwf	(??_main+3)^(0+128),w
  4060  0795  0086               	movwf	6
  4061  0796  0845               	movf	(_count+1)^(0+128),w
  4062  0797  3D2D               	addwfc	(??_main+4)^(0+128),w
  4063  0798  0087               	movwf	7
  4064  0799  0801               	movf	1,w
  4065  079A  318B  23CE  3185   	fcall	_playNote
  4066                           
  4067                           ;main.c: 663:                 displayMatrix(light_array);
  4068  079D  30B7               	movlw	(low (_light_array| 0))& (0+255)
  4069  079E  318B  23F1  3185   	fcall	_displayMatrix
  4070  07A1                     l3277:
  4071                           
  4072                           ;main.c: 660:             while (presses == 3)
  4073  07A1  3003               	movlw	3
  4074  07A2  0141               	movlb	1	; select bank1
  4075  07A3  0647               	xorwf	_presses^(0+128),w
  4076  07A4  1903               	btfsc	3,2
  4077  07A5  2FA7               	goto	u2501
  4078  07A6  2FA8               	goto	u2500
  4079  07A7                     u2501:
  4080  07A7  2F81               	goto	l3275
  4081  07A8                     u2500:
  4082  07A8                     l3279:
  4083                           
  4084                           ;main.c: 665:             presses = 0;
  4085  07A8  01C7               	clrf	_presses^(0+128)
  4086                           
  4087                           ;main.c: 666:             silent_night_playing = 0;
  4088  07A9  0140               	movlb	0	; select bank0
  4089  07AA  01D3               	clrf	_silent_night_playing
  4090                           
  4091                           ;main.c: 667:             song2_playing = 0;
  4092  07AB  01D1               	clrf	_song2_playing
  4093                           
  4094                           ;main.c: 668:             song3_playing = 0;
  4095  07AC  01D2               	clrf	_song3_playing
  4096  07AD                     l3281:
  4097                           
  4098                           ;main.c: 669:             T1CONbits.TMR1ON = 0;
  4099  07AD  0144               	movlb	4	; select bank4
  4100  07AE  100E               	bcf	14,0	;volatile
  4101  07AF                     l3283:
  4102                           
  4103                           ;main.c: 670:             T2CONbits.TMR2ON = 0;
  4104  07AF  0145               	movlb	5	; select bank5
  4105  07B0  138E               	bcf	14,7	;volatile
  4106  07B1                     l3285:
  4107                           
  4108                           ;main.c: 673:         if (TMR0_complete && (!presses))
  4109  07B1  0141               	movlb	1	; select bank1
  4110  07B2  0849               	movf	_TMR0_complete^(0+128),w
  4111  07B3  1903               	btfsc	3,2
  4112  07B4  2FB6               	goto	u2511
  4113  07B5  2FB7               	goto	u2510
  4114  07B6                     u2511:
  4115  07B6  2E99               	goto	l533
  4116  07B7                     u2510:
  4117  07B7                     l3287:
  4118  07B7  0847               	movf	_presses^(0+128),w
  4119  07B8  1D03               	btfss	3,2
  4120  07B9  2FBB               	goto	u2521
  4121  07BA  2FBC               	goto	u2520
  4122  07BB                     u2521:
  4123  07BB  2E99               	goto	l533
  4124  07BC                     u2520:
  4125  07BC                     l3289:
  4126                           
  4127                           ;main.c: 674:         {;main.c: 675:             T0CON0bits.T0EN = 0;
  4128  07BC  014B               	movlb	11	; select bank11
  4129  07BD  139E               	bcf	30,7	;volatile
  4130                           
  4131                           ;main.c: 676:             T1CONbits.TMR1ON = 0;
  4132  07BE  0144               	movlb	4	; select bank4
  4133  07BF  100E               	bcf	14,0	;volatile
  4134                           
  4135                           ;main.c: 677:             T2CONbits.TMR2ON = 0;
  4136  07C0  0145               	movlb	5	; select bank5
  4137  07C1  138E               	bcf	14,7	;volatile
  4138                           
  4139                           ;main.c: 678:             PIR0bits.INTF = 0;
  4140  07C2  014E               	movlb	14	; select bank14
  4141  07C3  100C               	bcf	12,0	;volatile
  4142                           
  4143                           ;main.c: 679:             PIE0bits.INTE = 1;
  4144  07C4  1416               	bsf	22,0	;volatile
  4145  07C5                     l554:	
  4146                           ;main.c: 680:             do { LATCbits.LATC2 = 1; } while(0);
  4147                           
  4148  07C5  0140               	movlb	0	; select bank0
  4149  07C6  151A               	bsf	26,2	;volatile
  4150  07C7                     l556:	
  4151                           ;main.c: 681:             do { LATCbits.LATC0 = 1; } while(0);
  4152                           
  4153  07C7  141A               	bsf	26,0	;volatile
  4154  07C8                     l557:
  4155  07C8  0063               	sleep	;# 
  4156  07C9  2E99               	goto	l533
  4157  07CA  3180  2831         	ljmp	start
  4158  07CC                     __end_of_main:
  4159                           
  4160                           	psect	text1
  4161  0BCE                     __ptext1:	
  4162 ;; *************** function _playNote *****************
  4163 ;; Defined at:
  4164 ;;		line 1244 in file "main.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  note            1    wreg     unsigned char 
  4167 ;;  prescale        1    0[BANK1 ] unsigned char 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  note            1    2[BANK1 ] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4179 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4180 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4181 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4182 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4183 ;;Total ram usage:        3 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; Hardware stack levels required when called: 5
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_main
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _playNote
  4195  0BCE                     _playNote:
  4196                           
  4197                           ;incstack = 0
  4198                           ; Regs used in _playNote: [wreg]
  4199                           ;playNote@note stored from wreg
  4200  0BCE  0141               	movlb	1	; select bank1
  4201  0BCF  00A2               	movwf	playNote@note^(0+128)
  4202  0BD0                     l2763:
  4203                           
  4204                           ;main.c: 1244: void playNote(uint8_t note, uint8_t prescale);main.c: 1245: {;main.c: 124
      +                          7:     if (note != last_note)
  4205  0BD0  0822               	movf	playNote@note^(0+128),w
  4206  0BD1  0140               	movlb	0	; select bank0
  4207  0BD2  0650               	xorwf	_last_note,w
  4208  0BD3  1903               	skipnz
  4209  0BD4  2BD6               	goto	u2091
  4210  0BD5  2BD7               	goto	u2090
  4211  0BD6                     u2091:
  4212  0BD6  2BDB               	goto	l680
  4213  0BD7                     u2090:
  4214  0BD7                     l2765:
  4215                           
  4216                           ;main.c: 1248:     {;main.c: 1249:         T2PR = note;
  4217  0BD7  0141               	movlb	1	; select bank1
  4218  0BD8  0822               	movf	playNote@note^(0+128),w
  4219  0BD9  0145               	movlb	5	; select bank5
  4220  0BDA  008D               	movwf	13	;volatile
  4221  0BDB                     l680:	
  4222                           ;main.c: 1250:     }
  4223                           
  4224                           
  4225                           ;main.c: 1252:     if (prescale != last_prescale)
  4226  0BDB  0141               	movlb	1	; select bank1
  4227  0BDC  0820               	movf	playNote@prescale^(0+128),w
  4228  0BDD  0648               	xorwf	_last_prescale^(0+128),w
  4229  0BDE  1903               	skipnz
  4230  0BDF  2BE1               	goto	u2101
  4231  0BE0  2BE2               	goto	u2100
  4232  0BE1                     u2101:
  4233  0BE1  2BE5               	goto	l681
  4234  0BE2                     u2100:
  4235  0BE2                     l2767:
  4236                           
  4237                           ;main.c: 1253:     {;main.c: 1254:         T2CON = prescale;
  4238  0BE2  0820               	movf	playNote@prescale^(0+128),w
  4239  0BE3  0145               	movlb	5	; select bank5
  4240  0BE4  008E               	movwf	14	;volatile
  4241  0BE5                     l681:	
  4242                           ;main.c: 1255:     }
  4243                           
  4244                           
  4245                           ;main.c: 1256:     last_note = note;
  4246  0BE5  0141               	movlb	1	; select bank1
  4247  0BE6  0822               	movf	playNote@note^(0+128),w
  4248  0BE7  00A1               	movwf	??_playNote^(0+128)
  4249  0BE8  0821               	movf	??_playNote^(0+128),w
  4250  0BE9  0140               	movlb	0	; select bank0
  4251  0BEA  00D0               	movwf	_last_note
  4252                           
  4253                           ;main.c: 1257:     last_prescale = prescale;
  4254  0BEB  0141               	movlb	1	; select bank1
  4255  0BEC  0820               	movf	playNote@prescale^(0+128),w
  4256  0BED  00A1               	movwf	??_playNote^(0+128)
  4257  0BEE  0821               	movf	??_playNote^(0+128),w
  4258  0BEF  00C8               	movwf	_last_prescale^(0+128)
  4259  0BF0                     l682:
  4260  0BF0  0008               	return
  4261  0BF1                     __end_of_playNote:
  4262                           
  4263                           	psect	text2
  4264  0BF1                     __ptext2:	
  4265 ;; *************** function _displayMatrix *****************
  4266 ;; Defined at:
  4267 ;;		line 1282 in file "main.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  states          1    wreg     PTR unsigned char 
  4270 ;;		 -> light_array(7), 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  states          1    5[BANK1 ] PTR unsigned char 
  4273 ;;		 -> light_array(7), 
  4274 ;;  i               2    6[BANK1 ] int 
  4275 ;;  lowSide         1    8[BANK1 ] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;Total ram usage:        6 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 7
  4292 ;; This function calls:
  4293 ;;		_shiftBytes
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _displayMatrix
  4301  0BF1                     _displayMatrix:
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _displayMatrix: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4305                           ;displayMatrix@states stored from wreg
  4306  0BF1  0141               	movlb	1	; select bank1
  4307  0BF2  00A5               	movwf	displayMatrix@states^(0+128)
  4308  0BF3                     l3123:
  4309                           
  4310                           ;main.c: 1282: void displayMatrix(uint8_t states[8]);main.c: 1283: {;main.c: 1286:     u
      +                          int8_t lowSide = 0x00;
  4311  0BF3  01A8               	clrf	displayMatrix@lowSide^(0+128)
  4312                           
  4313                           ;main.c: 1287:     for (int i = 0; i < 7; i++)
  4314  0BF4  01A6               	clrf	displayMatrix@i^(0+128)
  4315  0BF5  01A7               	clrf	(displayMatrix@i+1)^(0+128)
  4316  0BF6                     l3129:
  4317                           
  4318                           ;main.c: 1288:     {;main.c: 1289:         if (!lowSide)
  4319  0BF6  0141               	movlb	1	; select bank1
  4320  0BF7  0828               	movf	displayMatrix@lowSide^(0+128),w
  4321  0BF8  1D03               	btfss	3,2
  4322  0BF9  2BFB               	goto	u2351
  4323  0BFA  2BFC               	goto	u2350
  4324  0BFB                     u2351:
  4325  0BFB  2C01               	goto	l3133
  4326  0BFC                     u2350:
  4327  0BFC                     l3131:
  4328                           
  4329                           ;main.c: 1290:         {;main.c: 1291:             lowSide++;
  4330  0BFC  3001               	movlw	1
  4331  0BFD  00A3               	movwf	??_displayMatrix^(0+128)
  4332  0BFE  0823               	movf	??_displayMatrix^(0+128),w
  4333  0BFF  07A8               	addwf	displayMatrix@lowSide^(0+128),f
  4334                           
  4335                           ;main.c: 1292:         }
  4336  0C00  2C05               	goto	l3135
  4337  0C01                     l3133:
  4338                           
  4339                           ;main.c: 1294:         {;main.c: 1295:             lowSide = lowSide << 1;
  4340  0C01  3528               	lslf	displayMatrix@lowSide^(0+128),w
  4341  0C02  00A3               	movwf	??_displayMatrix^(0+128)
  4342  0C03  0823               	movf	??_displayMatrix^(0+128),w
  4343  0C04  00A8               	movwf	displayMatrix@lowSide^(0+128)
  4344  0C05                     l3135:
  4345                           
  4346                           ;main.c: 1298:         shiftBytes(states[i], lowSide);
  4347  0C05  0828               	movf	displayMatrix@lowSide^(0+128),w
  4348  0C06  00A3               	movwf	??_displayMatrix^(0+128)
  4349  0C07  0823               	movf	??_displayMatrix^(0+128),w
  4350  0C08  00A1               	movwf	shiftBytes@lowSide^(0+128)
  4351  0C09  0826               	movf	displayMatrix@i^(0+128),w
  4352  0C0A  0725               	addwf	displayMatrix@states^(0+128),w
  4353  0C0B  00A4               	movwf	(??_displayMatrix+1)^(0+128)
  4354  0C0C  0824               	movf	(??_displayMatrix+1)^(0+128),w
  4355  0C0D  0086               	movwf	6
  4356  0C0E  0187               	clrf	7
  4357  0C0F  0801               	movf	1,w
  4358  0C10  318A  22D3  318B   	fcall	_shiftBytes
  4359  0C13                     l3137:
  4360                           
  4361                           ;main.c: 1299:         _delay((unsigned long)((1)*(8000000/4000.0)));
  4362  0C13  3003               	movlw	3
  4363  0C14  0141               	movlb	1	; select bank1
  4364  0C15  00A3               	movwf	??_displayMatrix^(0+128)
  4365  0C16  3097               	movlw	151
  4366  0C17                     u2537:
  4367  0C17  0B89               	decfsz	9,f
  4368  0C18  2C17               	goto	u2537
  4369  0C19  0BA3               	decfsz	??_displayMatrix^(0+128),f
  4370  0C1A  2C17               	goto	u2537
  4371  0C1B  3200               	nop2
  4372  0C1C                     l3139:
  4373                           
  4374                           ;main.c: 1300:     }
  4375  0C1C  3001               	movlw	1
  4376  0C1D  0141               	movlb	1	; select bank1
  4377  0C1E  07A6               	addwf	displayMatrix@i^(0+128),f
  4378  0C1F  3000               	movlw	0
  4379  0C20  3DA7               	addwfc	(displayMatrix@i+1)^(0+128),f
  4380  0C21                     l3141:
  4381  0C21  0827               	movf	(displayMatrix@i+1)^(0+128),w
  4382  0C22  3A80               	xorlw	128
  4383  0C23  00A3               	movwf	??_displayMatrix^(0+128)
  4384  0C24  3080               	movlw	128
  4385  0C25  0223               	subwf	??_displayMatrix^(0+128),w
  4386  0C26  1D03               	skipz
  4387  0C27  2C2A               	goto	u2365
  4388  0C28  3007               	movlw	7
  4389  0C29  0226               	subwf	displayMatrix@i^(0+128),w
  4390  0C2A                     u2365:
  4391  0C2A  1C03               	skipc
  4392  0C2B  2C2D               	goto	u2361
  4393  0C2C  2C2E               	goto	u2360
  4394  0C2D                     u2361:
  4395  0C2D  2BF6               	goto	l3129
  4396  0C2E                     u2360:
  4397  0C2E                     l703:
  4398  0C2E  0008               	return
  4399  0C2F                     __end_of_displayMatrix:
  4400                           
  4401                           	psect	text3
  4402  0AD3                     __ptext3:	
  4403 ;; *************** function _shiftBytes *****************
  4404 ;; Defined at:
  4405 ;;		line 1270 in file "main.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  highSide        1    wreg     unsigned char 
  4408 ;;  lowSide         1    1[BANK1 ] unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  highSide        1    2[BANK1 ] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0, pclath, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4420 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;Total ram usage:        2 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; Hardware stack levels required when called: 6
  4427 ;; This function calls:
  4428 ;;		_SPI1_ExchangeByte
  4429 ;; This function is called by:
  4430 ;;		_main
  4431 ;;		_displayMatrix
  4432 ;;		_Initialize_Matrix
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           
  4437                           ;psect for function _shiftBytes
  4438  0AD3                     _shiftBytes:
  4439                           
  4440                           ;incstack = 0
  4441                           ; Regs used in _shiftBytes: [wreg+status,2+status,0+pclath+cstack]
  4442                           ;shiftBytes@highSide stored from wreg
  4443  0AD3  0141               	movlb	1	; select bank1
  4444  0AD4  00A2               	movwf	shiftBytes@highSide^(0+128)
  4445  0AD5                     l3103:
  4446                           
  4447                           ;main.c: 1270: void shiftBytes(uint8_t highSide, uint8_t lowSide);main.c: 1271: {;main.c
      +                          : 1273:     SPI1_ExchangeByte(lowSide);
  4448  0AD5  0821               	movf	shiftBytes@lowSide^(0+128),w
  4449  0AD6  318A  22C5  318A   	fcall	_SPI1_ExchangeByte
  4450                           
  4451                           ;main.c: 1274:     SPI1_ExchangeByte(highSide);
  4452  0AD9  0141               	movlb	1	; select bank1
  4453  0ADA  0822               	movf	shiftBytes@highSide^(0+128),w
  4454  0ADB  318A  22C5  318A   	fcall	_SPI1_ExchangeByte
  4455  0ADE                     l3105:
  4456  0ADE  0140               	movlb	0	; select bank0
  4457  0ADF  161A               	bsf	26,4	;volatile
  4458  0AE0                     l3107:
  4459  0AE0  121A               	bcf	26,4	;volatile
  4460  0AE1                     l696:
  4461  0AE1  0008               	return
  4462  0AE2                     __end_of_shiftBytes:
  4463                           
  4464                           	psect	text4
  4465  0AC5                     __ptext4:	
  4466 ;; *************** function _SPI1_ExchangeByte *****************
  4467 ;; Defined at:
  4468 ;;		line 97 in file "mcc_generated_files/spi1.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  data            1    wreg     unsigned char 
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  data            1    0[BANK1 ] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      unsigned char 
  4475 ;; Registers used:
  4476 ;;		wreg
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;Total ram usage:        1 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; Hardware stack levels required when called: 5
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_shiftBytes
  4493 ;;		_SPI1_WriteBlock
  4494 ;;		_SPI1_ReadBlock
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           
  4499                           ;psect for function _SPI1_ExchangeByte
  4500  0AC5                     _SPI1_ExchangeByte:
  4501                           
  4502                           ;incstack = 0
  4503                           ; Regs used in _SPI1_ExchangeByte: [wreg]
  4504                           ;SPI1_ExchangeByte@data stored from wreg
  4505  0AC5  0141               	movlb	1	; select bank1
  4506  0AC6  00A0               	movwf	SPI1_ExchangeByte@data^(0+128)
  4507  0AC7                     l2995:
  4508                           
  4509                           ;mcc_generated_files/spi1.c: 97: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 98: {;mcc_generated_files/spi1.c: 99:     SSP1BUF = data;
  4510  0AC7  0820               	movf	SPI1_ExchangeByte@data^(0+128),w
  4511  0AC8  0143               	movlb	3	; select bank3
  4512  0AC9  008C               	movwf	12	;volatile
  4513  0ACA                     l74:	
  4514                           ;mcc_generated_files/spi1.c: 100:     while(!PIR1bits.SSP1IF);
  4515                           
  4516  0ACA  014E               	movlb	14	; select bank14
  4517  0ACB  1C8D               	btfss	13,1	;volatile
  4518  0ACC  2ACE               	goto	u2341
  4519  0ACD  2ACF               	goto	u2340
  4520  0ACE                     u2341:
  4521  0ACE  2ACA               	goto	l74
  4522  0ACF                     u2340:
  4523  0ACF                     l76:
  4524                           
  4525                           ;mcc_generated_files/spi1.c: 101:     PIR1bits.SSP1IF = 0;
  4526  0ACF  108D               	bcf	13,1	;volatile
  4527  0AD0                     l2997:
  4528                           
  4529                           ;mcc_generated_files/spi1.c: 102:     return SSP1BUF;
  4530  0AD0  0143               	movlb	3	; select bank3
  4531  0AD1  080C               	movf	12,w	;volatile
  4532  0AD2                     l77:
  4533  0AD2  0008               	return
  4534  0AD3                     __end_of_SPI1_ExchangeByte:
  4535                           
  4536                           	psect	text5
  4537  0B36                     __ptext5:	
  4538 ;; *************** function _SYSTEM_Initialize *****************
  4539 ;; Defined at:
  4540 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0, pclath, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used: 1
  4560 ;; Hardware stack levels required when called: 7
  4561 ;; This function calls:
  4562 ;;		_EXT_INT_Initialize
  4563 ;;		_OSCILLATOR_Initialize
  4564 ;;		_PIN_MANAGER_Initialize
  4565 ;;		_PWM3_Initialize
  4566 ;;		_SPI1_Initialize
  4567 ;;		_TMR0_Initialize
  4568 ;;		_TMR1_Initialize
  4569 ;;		_TMR2_Initialize
  4570 ;;		_WDT_Initialize
  4571 ;; This function is called by:
  4572 ;;		_main
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function _SYSTEM_Initialize
  4578  0B36                     _SYSTEM_Initialize:
  4579  0B36                     l3109:	
  4580                           ;incstack = 0
  4581                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4582                           
  4583                           
  4584                           ;mcc_generated_files/mcc.c: 53:     SPI1_Initialize();
  4585  0B36  318A  22F3  318B   	fcall	_SPI1_Initialize
  4586                           
  4587                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4588  0B39  3187  27CC  318B   	fcall	_PIN_MANAGER_Initialize
  4589                           
  4590                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4591  0B3C  318A  2268  318B   	fcall	_OSCILLATOR_Initialize
  4592  0B3F                     l3111:
  4593                           
  4594                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4595  0B3F  318A  2255  318B   	fcall	_WDT_Initialize
  4596  0B42                     l3113:
  4597                           
  4598                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  4599  0B42  318A  2282  318B   	fcall	_PWM3_Initialize
  4600  0B45                     l3115:
  4601                           
  4602                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  4603  0B45  318A  22B7  318B   	fcall	_TMR2_Initialize
  4604  0B48                     l3117:
  4605                           
  4606                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  4607  0B48  318B  23AD  318B   	fcall	_TMR1_Initialize
  4608  0B4B                     l3119:
  4609                           
  4610                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
  4611  0B4B  318A  22A9  318B   	fcall	_EXT_INT_Initialize
  4612  0B4E                     l3121:
  4613                           
  4614                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4615  0B4E  318B  2352  318B   	fcall	_TMR0_Initialize
  4616  0B51                     l29:
  4617  0B51  0008               	return
  4618  0B52                     __end_of_SYSTEM_Initialize:
  4619                           
  4620                           	psect	text6
  4621  0A55                     __ptext6:	
  4622 ;; *************** function _WDT_Initialize *****************
  4623 ;; Defined at:
  4624 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		status,2
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 5
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_SYSTEM_Initialize
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _WDT_Initialize
  4654  0A55                     _WDT_Initialize:
  4655  0A55                     l3053:	
  4656                           ;incstack = 0
  4657                           ; Regs used in _WDT_Initialize: [status,2]
  4658                           
  4659                           
  4660                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x00;
  4661  0A55  0150               	movlb	16	; select bank16
  4662  0A56  018C               	clrf	12	;volatile
  4663  0A57                     l35:
  4664  0A57  0008               	return
  4665  0A58                     __end_of_WDT_Initialize:
  4666                           
  4667                           	psect	text7
  4668  0AB7                     __ptext7:	
  4669 ;; *************** function _TMR2_Initialize *****************
  4670 ;; Defined at:
  4671 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 5
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_SYSTEM_Initialize
  4696 ;;		_main
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _TMR2_Initialize
  4702  0AB7                     _TMR2_Initialize:
  4703  0AB7                     l3057:	
  4704                           ;incstack = 0
  4705                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4706                           
  4707                           
  4708                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  4709  0AB7  3001               	movlw	1
  4710  0AB8  0145               	movlb	5	; select bank5
  4711  0AB9  0090               	movwf	16	;volatile
  4712  0ABA                     l3059:
  4713                           
  4714                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  4715  0ABA  018F               	clrf	15	;volatile
  4716  0ABB                     l3061:
  4717                           
  4718                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  4719  0ABB  0191               	clrf	17	;volatile
  4720                           
  4721                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  4722  0ABC  30FF               	movlw	255
  4723  0ABD  008D               	movwf	13	;volatile
  4724  0ABE                     l3063:
  4725                           
  4726                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  4727  0ABE  018C               	clrf	12	;volatile
  4728  0ABF                     l3065:
  4729                           
  4730                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
  4731  0ABF  014E               	movlb	14	; select bank14
  4732  0AC0  130D               	bcf	13,6	;volatile
  4733  0AC1                     l3067:
  4734                           
  4735                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  4736  0AC1  30B0               	movlw	176
  4737  0AC2  0145               	movlb	5	; select bank5
  4738  0AC3  008E               	movwf	14	;volatile
  4739  0AC4                     l177:
  4740  0AC4  0008               	return
  4741  0AC5                     __end_of_TMR2_Initialize:
  4742                           
  4743                           	psect	text8
  4744  0BAD                     __ptext8:	
  4745 ;; *************** function _TMR1_Initialize *****************
  4746 ;; Defined at:
  4747 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0, pclath, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 6
  4768 ;; This function calls:
  4769 ;;		_TMR1_SetInterruptHandler
  4770 ;; This function is called by:
  4771 ;;		_SYSTEM_Initialize
  4772 ;;		_main
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           
  4777                           ;psect for function _TMR1_Initialize
  4778  0BAD                     _TMR1_Initialize:
  4779  0BAD                     l3069:	
  4780                           ;incstack = 0
  4781                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4782                           
  4783                           
  4784                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4785  0BAD  0144               	movlb	4	; select bank4
  4786  0BAE  018F               	clrf	15	;volatile
  4787                           
  4788                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  4789  0BAF  0190               	clrf	16	;volatile
  4790  0BB0                     l3071:
  4791                           
  4792                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
  4793  0BB0  3004               	movlw	4
  4794  0BB1  0091               	movwf	17	;volatile
  4795  0BB2                     l3073:
  4796                           
  4797                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
  4798  0BB2  30E1               	movlw	225
  4799  0BB3  008D               	movwf	13	;volatile
  4800  0BB4                     l3075:
  4801                           
  4802                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
  4803  0BB4  30BA               	movlw	186
  4804  0BB5  008C               	movwf	12	;volatile
  4805  0BB6                     l3077:
  4806                           
  4807                           ;mcc_generated_files/tmr1.c: 84:     PIR1bits.TMR1IF = 0;
  4808  0BB6  014E               	movlb	14	; select bank14
  4809  0BB7  128D               	bcf	13,5	;volatile
  4810  0BB8                     l3079:
  4811                           
  4812                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4813  0BB8  0144               	movlb	4	; select bank4
  4814  0BB9  080D               	movf	13,w	;volatile
  4815  0BBA  0140               	movlb	0	; select bank0
  4816  0BBB  00D7               	movwf	_timer1ReloadVal+1	;volatile
  4817  0BBC  0144               	movlb	4	; select bank4
  4818  0BBD  080C               	movf	12,w	;volatile
  4819  0BBE  0140               	movlb	0	; select bank0
  4820  0BBF  00D6               	movwf	_timer1ReloadVal	;volatile
  4821  0BC0                     l3081:
  4822                           
  4823                           ;mcc_generated_files/tmr1.c: 90:     PIE1bits.TMR1IE = 1;
  4824  0BC0  014E               	movlb	14	; select bank14
  4825  0BC1  1697               	bsf	23,5	;volatile
  4826  0BC2                     l3083:
  4827                           
  4828                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4829  0BC2  3003               	movlw	low _TMR1_DefaultInterruptHandler
  4830  0BC3  0141               	movlb	1	; select bank1
  4831  0BC4  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  4832  0BC5  3000               	movlw	high _TMR1_DefaultInterruptHandler
  4833  0BC6  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4834  0BC7  318A  2293  318B   	fcall	_TMR1_SetInterruptHandler
  4835  0BCA                     l3085:
  4836                           
  4837                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x05;
  4838  0BCA  3005               	movlw	5
  4839  0BCB  0144               	movlb	4	; select bank4
  4840  0BCC  008E               	movwf	14	;volatile
  4841  0BCD                     l365:
  4842  0BCD  0008               	return
  4843  0BCE                     __end_of_TMR1_Initialize:
  4844                           
  4845                           	psect	text9
  4846  0A93                     __ptext9:	
  4847 ;; *************** function _TMR1_SetInterruptHandler *****************
  4848 ;; Defined at:
  4849 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4852 ;;		 -> TMR1_ISR_(1), TMR1_DefaultInterruptHandler(1), 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4864 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;Total ram usage:        2 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 5
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_TMR1_Initialize
  4875 ;;		_main
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           
  4880                           ;psect for function _TMR1_SetInterruptHandler
  4881  0A93                     _TMR1_SetInterruptHandler:
  4882  0A93                     l3005:	
  4883                           ;incstack = 0
  4884                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  4885                           
  4886                           
  4887                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  4888  0A93  0141               	movlb	1	; select bank1
  4889  0A94  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4890  0A95  0140               	movlb	0	; select bank0
  4891  0A96  00D5               	movwf	_TMR1_InterruptHandler+1
  4892  0A97  0141               	movlb	1	; select bank1
  4893  0A98  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  4894  0A99  0140               	movlb	0	; select bank0
  4895  0A9A  00D4               	movwf	_TMR1_InterruptHandler
  4896  0A9B                     l395:
  4897  0A9B  0008               	return
  4898  0A9C                     __end_of_TMR1_SetInterruptHandler:
  4899                           
  4900                           	psect	text10
  4901  0B52                     __ptext10:	
  4902 ;; *************** function _TMR0_Initialize *****************
  4903 ;; Defined at:
  4904 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, pclath, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;Total ram usage:        0 bytes
  4923 ;; Hardware stack levels used: 1
  4924 ;; Hardware stack levels required when called: 6
  4925 ;; This function calls:
  4926 ;;		_TMR0_SetInterruptHandler
  4927 ;; This function is called by:
  4928 ;;		_SYSTEM_Initialize
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           
  4934                           ;psect for function _TMR0_Initialize
  4935  0B52                     _TMR0_Initialize:
  4936  0B52                     l3093:	
  4937                           ;incstack = 0
  4938                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4939                           
  4940                           
  4941                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x90;
  4942  0B52  3090               	movlw	144
  4943  0B53  014B               	movlb	11	; select bank11
  4944  0B54  009F               	movwf	31	;volatile
  4945                           
  4946                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x86;
  4947  0B55  3086               	movlw	134
  4948  0B56  009D               	movwf	29	;volatile
  4949                           
  4950                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xE8;
  4951  0B57  30E8               	movlw	232
  4952  0B58  009C               	movwf	28	;volatile
  4953                           
  4954                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  4955  0B59  081D               	movf	29,w	;volatile
  4956  0B5A  0141               	movlb	1	; select bank1
  4957  0B5B  00C1               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
  4958  0B5C  014B               	movlb	11	; select bank11
  4959  0B5D  081C               	movf	28,w	;volatile
  4960  0B5E  0141               	movlb	1	; select bank1
  4961  0B5F  00C0               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
  4962  0B60                     l3095:
  4963                           
  4964                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  4965  0B60  014E               	movlb	14	; select bank14
  4966  0B61  128C               	bcf	12,5	;volatile
  4967  0B62                     l3097:
  4968                           
  4969                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  4970  0B62  1696               	bsf	22,5	;volatile
  4971  0B63                     l3099:
  4972                           
  4973                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4974  0B63  3002               	movlw	low _TMR0_DefaultInterruptHandler
  4975  0B64  0141               	movlb	1	; select bank1
  4976  0B65  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  4977  0B66  3000               	movlw	high _TMR0_DefaultInterruptHandler
  4978  0B67  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4979  0B68  318A  226E  318B   	fcall	_TMR0_SetInterruptHandler
  4980  0B6B                     l3101:
  4981                           
  4982                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  4983  0B6B  3090               	movlw	144
  4984  0B6C  014B               	movlb	11	; select bank11
  4985  0B6D  009E               	movwf	30	;volatile
  4986  0B6E                     l309:
  4987  0B6E  0008               	return
  4988  0B6F                     __end_of_TMR0_Initialize:
  4989                           
  4990                           	psect	text11
  4991  0A6E                     __ptext11:	
  4992 ;; *************** function _TMR0_SetInterruptHandler *****************
  4993 ;; Defined at:
  4994 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4997 ;;		 -> TMR0_ISR_(1), TMR0_DefaultInterruptHandler(1), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5009 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;Total ram usage:        2 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 5
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_TMR0_Initialize
  5020 ;;		_main
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function _TMR0_SetInterruptHandler
  5026  0A6E                     _TMR0_SetInterruptHandler:
  5027  0A6E                     l3003:	
  5028                           ;incstack = 0
  5029                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5030                           
  5031                           
  5032                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  5033  0A6E  0141               	movlb	1	; select bank1
  5034  0A6F  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5035  0A70  00BF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5036  0A71  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  5037  0A72  00BE               	movwf	_TMR0_InterruptHandler^(0+128)
  5038  0A73                     l331:
  5039  0A73  0008               	return
  5040  0A74                     __end_of_TMR0_SetInterruptHandler:
  5041                           
  5042                           	psect	text12
  5043  0AF3                     __ptext12:	
  5044 ;; *************** function _SPI1_Initialize *****************
  5045 ;; Defined at:
  5046 ;;		line 62 in file "mcc_generated_files/spi1.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;Total ram usage:        0 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 5
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_SYSTEM_Initialize
  5071 ;;		_main
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           
  5076                           ;psect for function _SPI1_Initialize
  5077  0AF3                     _SPI1_Initialize:
  5078  0AF3                     l3007:	
  5079                           ;incstack = 0
  5080                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  5081                           
  5082                           
  5083                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 21;
  5084  0AF3  3015               	movlw	21
  5085  0AF4  017D               	movlb	61	; select bank61
  5086  0AF5  00C5               	movwf	69	;volatile
  5087                           
  5088                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 4;
  5089  0AF6  3004               	movlw	4
  5090  0AF7  00C6               	movwf	70	;volatile
  5091                           
  5092                           ;mcc_generated_files/spi1.c: 67:     RC5PPS = 7;
  5093  0AF8  3007               	movlw	7
  5094  0AF9  017E               	movlb	62	; select bank62
  5095  0AFA  00A5               	movwf	37	;volatile
  5096                           
  5097                           ;mcc_generated_files/spi1.c: 68:     RC3PPS = 8;
  5098  0AFB  3008               	movlw	8
  5099  0AFC  00A3               	movwf	35	;volatile
  5100                           
  5101                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x40;
  5102  0AFD  3040               	movlw	64
  5103  0AFE  0143               	movlb	3	; select bank3
  5104  0AFF  008F               	movwf	15	;volatile
  5105  0B00                     l3009:
  5106                           
  5107                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x00;
  5108  0B00  0190               	clrf	16	;volatile
  5109  0B01                     l3011:
  5110                           
  5111                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x01;
  5112  0B01  3001               	movlw	1
  5113  0B02  008D               	movwf	13	;volatile
  5114  0B03                     l3013:
  5115                           
  5116                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC5 = 0;
  5117  0B03  0140               	movlb	0	; select bank0
  5118  0B04  1294               	bcf	20,5	;volatile
  5119  0B05                     l3015:
  5120                           
  5121                           ;mcc_generated_files/spi1.c: 74:     SSP1CON1bits.SSPEN = 0;
  5122  0B05  0143               	movlb	3	; select bank3
  5123  0B06  1290               	bcf	16,5	;volatile
  5124  0B07                     l64:
  5125  0B07  0008               	return
  5126  0B08                     __end_of_SPI1_Initialize:
  5127                           
  5128                           	psect	text13
  5129  0A82                     __ptext13:	
  5130 ;; *************** function _PWM3_Initialize *****************
  5131 ;; Defined at:
  5132 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;Total ram usage:        0 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 5
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_SYSTEM_Initialize
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _PWM3_Initialize
  5163  0A82                     _PWM3_Initialize:
  5164  0A82                     l3055:	
  5165                           ;incstack = 0
  5166                           ; Regs used in _PWM3_Initialize: [wreg]
  5167                           
  5168                           
  5169                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  5170  0A82  3080               	movlw	128
  5171  0A83  0146               	movlb	6	; select bank6
  5172  0A84  0096               	movwf	22	;volatile
  5173                           
  5174                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  5175  0A85  307F               	movlw	127
  5176  0A86  0095               	movwf	21	;volatile
  5177                           
  5178                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  5179  0A87  30C0               	movlw	192
  5180  0A88  0094               	movwf	20	;volatile
  5181  0A89                     l226:
  5182  0A89  0008               	return
  5183  0A8A                     __end_of_PWM3_Initialize:
  5184                           
  5185                           	psect	text14
  5186  07CC                     __ptext14:	
  5187 ;; *************** function _PIN_MANAGER_Initialize *****************
  5188 ;; Defined at:
  5189 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 5
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_SYSTEM_Initialize
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217                           
  5218                           ;psect for function _PIN_MANAGER_Initialize
  5219  07CC                     _PIN_MANAGER_Initialize:
  5220  07CC                     l3017:	
  5221                           ;incstack = 0
  5222                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5223                           
  5224                           
  5225                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5226  07CC  0140               	movlb	0	; select bank0
  5227  07CD  0198               	clrf	24	;volatile
  5228                           
  5229                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  5230  07CE  019A               	clrf	26	;volatile
  5231  07CF                     l3019:
  5232                           
  5233                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x1F;
  5234  07CF  301F               	movlw	31
  5235  07D0  0092               	movwf	18	;volatile
  5236  07D1                     l3021:
  5237                           
  5238                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x02;
  5239  07D1  3002               	movlw	2
  5240  07D2  0094               	movwf	20	;volatile
  5241  07D3                     l3023:
  5242                           
  5243                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x1F;
  5244  07D3  301F               	movlw	31
  5245  07D4  017E               	movlb	62	; select bank62
  5246  07D5  00CE               	movwf	78	;volatile
  5247  07D6                     l3025:
  5248                           
  5249                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x23;
  5250  07D6  3023               	movlw	35
  5251  07D7  00B8               	movwf	56	;volatile
  5252                           
  5253                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  5254  07D8  01B9               	clrf	57	;volatile
  5255                           
  5256                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  5257  07D9  01CF               	clrf	79	;volatile
  5258                           
  5259                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  5260  07DA  01BA               	clrf	58	;volatile
  5261                           
  5262                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  5263  07DB  01D0               	clrf	80	;volatile
  5264  07DC                     l3027:
  5265                           
  5266                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  5267  07DC  3037               	movlw	55
  5268  07DD  00BB               	movwf	59	;volatile
  5269  07DE                     l3029:
  5270                           
  5271                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  5272  07DE  303F               	movlw	63
  5273  07DF  00D1               	movwf	81	;volatile
  5274  07E0                     l3031:
  5275                           
  5276                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  5277  07E0  303F               	movlw	63
  5278  07E1  00BC               	movwf	60	;volatile
  5279  07E2                     l3033:
  5280                           
  5281                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  5282  07E2  303F               	movlw	63
  5283  07E3  00D2               	movwf	82	;volatile
  5284  07E4                     l3035:
  5285                           
  5286                           ;mcc_generated_files/pin_manager.c: 106:     INTPPS = 0x02;
  5287  07E4  3002               	movlw	2
  5288  07E5  017D               	movlb	61	; select bank61
  5289  07E6  0090               	movwf	16	;volatile
  5290  07E7                     l3037:
  5291                           
  5292                           ;mcc_generated_files/pin_manager.c: 107:     SSP1CLKPPS = 0x15;
  5293  07E7  3015               	movlw	21
  5294  07E8  00C5               	movwf	69	;volatile
  5295  07E9                     l3039:
  5296                           
  5297                           ;mcc_generated_files/pin_manager.c: 108:     RC3PPS = 0x08;
  5298  07E9  3008               	movlw	8
  5299  07EA  017E               	movlb	62	; select bank62
  5300  07EB  00A3               	movwf	35	;volatile
  5301  07EC                     l3041:
  5302                           
  5303                           ;mcc_generated_files/pin_manager.c: 109:     RA5PPS = 0x03;
  5304  07EC  3003               	movlw	3
  5305  07ED  0095               	movwf	21	;volatile
  5306  07EE                     l3043:
  5307                           
  5308                           ;mcc_generated_files/pin_manager.c: 110:     RC5PPS = 0x07;
  5309  07EE  3007               	movlw	7
  5310  07EF  00A5               	movwf	37	;volatile
  5311  07F0                     l3045:
  5312                           
  5313                           ;mcc_generated_files/pin_manager.c: 111:     SSP1DATPPS = 0x04;
  5314  07F0  3004               	movlw	4
  5315  07F1  017D               	movlb	61	; select bank61
  5316  07F2  00C6               	movwf	70	;volatile
  5317  07F3                     l147:
  5318  07F3  0008               	return
  5319  07F4                     __end_of_PIN_MANAGER_Initialize:
  5320                           
  5321                           	psect	text15
  5322  0A68                     __ptext15:	
  5323 ;; *************** function _OSCILLATOR_Initialize *****************
  5324 ;; Defined at:
  5325 ;;		line 64 in file "mcc_generated_files/mcc.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      void 
  5332 ;; Registers used:
  5333 ;;		wreg, status,2
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;Total ram usage:        0 bytes
  5344 ;; Hardware stack levels used: 1
  5345 ;; Hardware stack levels required when called: 5
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_SYSTEM_Initialize
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _OSCILLATOR_Initialize
  5355  0A68                     _OSCILLATOR_Initialize:
  5356  0A68                     l3047:	
  5357                           ;incstack = 0
  5358                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5359                           
  5360                           
  5361                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  5362  0A68  0151               	movlb	17	; select bank17
  5363  0A69  0191               	clrf	17	;volatile
  5364  0A6A                     l3049:
  5365                           
  5366                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  5367  0A6A  3003               	movlw	3
  5368  0A6B  0093               	movwf	19	;volatile
  5369  0A6C                     l3051:
  5370                           
  5371                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  5372  0A6C  0192               	clrf	18	;volatile
  5373  0A6D                     l32:
  5374  0A6D  0008               	return
  5375  0A6E                     __end_of_OSCILLATOR_Initialize:
  5376                           
  5377                           	psect	text16
  5378  0AA9                     __ptext16:	
  5379 ;; *************** function _EXT_INT_Initialize *****************
  5380 ;; Defined at:
  5381 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;		None
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0, pclath, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5399 ;;Total ram usage:        0 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 6
  5402 ;; This function calls:
  5403 ;;		_INT_SetInterruptHandler
  5404 ;; This function is called by:
  5405 ;;		_SYSTEM_Initialize
  5406 ;;		_main
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           
  5411                           ;psect for function _EXT_INT_Initialize
  5412  0AA9                     _EXT_INT_Initialize:
  5413  0AA9                     l3087:	
  5414                           ;incstack = 0
  5415                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5416                           
  5417                           
  5418                           ;mcc_generated_files/ext_int.c: 77:     (PIR0bits.INTF = 0);
  5419  0AA9  014E               	movlb	14	; select bank14
  5420  0AAA  100C               	bcf	12,0	;volatile
  5421                           
  5422                           ;mcc_generated_files/ext_int.c: 78:     (INTCONbits.INTEDG = 1);
  5423  0AAB  140B               	bsf	11,0	;volatile
  5424  0AAC                     l3089:
  5425                           
  5426                           ;mcc_generated_files/ext_int.c: 80:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
  5427  0AAC  3054               	movlw	low _INT_DefaultInterruptHandler
  5428  0AAD  0141               	movlb	1	; select bank1
  5429  0AAE  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  5430  0AAF  300A               	movlw	high _INT_DefaultInterruptHandler
  5431  0AB0  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5432  0AB1  318A  2262  318A   	fcall	_INT_SetInterruptHandler
  5433  0AB4                     l3091:
  5434                           
  5435                           ;mcc_generated_files/ext_int.c: 81:     (PIE0bits.INTE = 1);
  5436  0AB4  014E               	movlb	14	; select bank14
  5437  0AB5  1416               	bsf	22,0	;volatile
  5438  0AB6                     l284:
  5439  0AB6  0008               	return
  5440  0AB7                     __end_of_EXT_INT_Initialize:
  5441                           
  5442                           	psect	text17
  5443  0A62                     __ptext17:	
  5444 ;; *************** function _INT_SetInterruptHandler *****************
  5445 ;; Defined at:
  5446 ;;		line 63 in file "mcc_generated_files/ext_int.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5449 ;;		 -> EXT_ISR(1), INT_DefaultInterruptHandler(1), 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5461 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;Total ram usage:        2 bytes
  5466 ;; Hardware stack levels used: 1
  5467 ;; Hardware stack levels required when called: 5
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_EXT_INT_Initialize
  5472 ;;		_main
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           
  5477                           ;psect for function _INT_SetInterruptHandler
  5478  0A62                     _INT_SetInterruptHandler:
  5479  0A62                     l3001:	
  5480                           ;incstack = 0
  5481                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5482                           
  5483                           
  5484                           ;mcc_generated_files/ext_int.c: 64:     INT_InterruptHandler = InterruptHandler;
  5485  0A62  0141               	movlb	1	; select bank1
  5486  0A63  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5487  0A64  00C3               	movwf	(_INT_InterruptHandler+1)^(0+128)
  5488  0A65  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
  5489  0A66  00C2               	movwf	_INT_InterruptHandler^(0+128)
  5490  0A67                     l278:
  5491  0A67  0008               	return
  5492  0A68                     __end_of_INT_SetInterruptHandler:
  5493                           
  5494                           	psect	intentry
  5495  0004                     __pintentry:	
  5496 ;; *************** function _INTERRUPT_InterruptManager *****************
  5497 ;; Defined at:
  5498 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; Hardware stack levels required when called: 4
  5519 ;; This function calls:
  5520 ;;		_INT_ISR
  5521 ;;		_TMR0_ISR
  5522 ;;		_TMR1_ISR
  5523 ;; This function is called by:
  5524 ;;		Interrupt level 1
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528  0004                     _INTERRUPT_InterruptManager:
  5529                           
  5530                           ;incstack = 0
  5531  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5532                           
  5533                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5534  0005  3180               	pagesel	$
  5535  0006                     i1l2785:
  5536                           
  5537                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  5538  0006  014E               	movlb	14	; select bank14
  5539  0007  1E96               	btfss	22,5	;volatile
  5540  0008  280A               	goto	u213_21
  5541  0009  280B               	goto	u213_20
  5542  000A                     u213_21:
  5543  000A  2813               	goto	i1l250
  5544  000B                     u213_20:
  5545  000B                     i1l2787:
  5546  000B  1E8C               	btfss	12,5	;volatile
  5547  000C  280E               	goto	u214_21
  5548  000D  280F               	goto	u214_20
  5549  000E                     u214_21:
  5550  000E  2813               	goto	i1l250
  5551  000F                     u214_20:
  5552  000F                     i1l2789:
  5553                           
  5554                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5555  000F  318B  2308  3180   	fcall	_TMR0_ISR
  5556                           
  5557                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5558  0012  282F               	goto	i1l258
  5559  0013                     i1l250:	
  5560                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.INTE == 1 && PIR0bits
      +                          .INTF == 1)
  5561                           
  5562  0013  1C16               	btfss	22,0	;volatile
  5563  0014  2816               	goto	u215_21
  5564  0015  2817               	goto	u215_20
  5565  0016                     u215_21:
  5566  0016  281F               	goto	i1l252
  5567  0017                     u215_20:
  5568  0017                     i1l2791:
  5569  0017  1C0C               	btfss	12,0	;volatile
  5570  0018  281A               	goto	u216_21
  5571  0019  281B               	goto	u216_20
  5572  001A                     u216_21:
  5573  001A  281F               	goto	i1l252
  5574  001B                     u216_20:
  5575  001B                     i1l2793:
  5576                           
  5577                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         INT_ISR();
  5578  001B  318A  225C  3180   	fcall	_INT_ISR
  5579                           
  5580                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  5581  001E  282F               	goto	i1l258
  5582  001F                     i1l252:	
  5583                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  5584                           
  5585  001F  1F0B               	btfss	11,6	;volatile
  5586  0020  2822               	goto	u217_21
  5587  0021  2823               	goto	u217_20
  5588  0022                     u217_21:
  5589  0022  282F               	goto	i1l253
  5590  0023                     u217_20:
  5591  0023                     i1l2795:
  5592                           
  5593                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5594  0023  1E97               	btfss	23,5	;volatile
  5595  0024  2826               	goto	u218_21
  5596  0025  2827               	goto	u218_20
  5597  0026                     u218_21:
  5598  0026  282F               	goto	i1l253
  5599  0027                     u218_20:
  5600  0027                     i1l2797:
  5601  0027  1E8D               	btfss	13,5	;volatile
  5602  0028  282A               	goto	u219_21
  5603  0029  282B               	goto	u219_20
  5604  002A                     u219_21:
  5605  002A  282F               	goto	i1l253
  5606  002B                     u219_20:
  5607  002B                     i1l2799:
  5608                           
  5609                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  5610  002B  318B  231F  3180   	fcall	_TMR1_ISR
  5611                           
  5612                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5613  002E  282F               	goto	i1l258
  5614  002F                     i1l253:
  5615  002F                     i1l258:
  5616  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5617  0030  0009               	retfie
  5618  0031                     __end_of_INTERRUPT_InterruptManager:
  5619                           
  5620                           	psect	text19
  5621  0B1F                     __ptext19:	
  5622 ;; *************** function _TMR1_ISR *****************
  5623 ;; Defined at:
  5624 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; Hardware stack levels required when called: 2
  5645 ;; This function calls:
  5646 ;;		Absolute function
  5647 ;;		_TMR1_DefaultInterruptHandler
  5648 ;;		_TMR1_ISR_
  5649 ;;		_TMR1_WriteTimer
  5650 ;; This function is called by:
  5651 ;;		_INTERRUPT_InterruptManager
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           
  5656                           ;psect for function _TMR1_ISR
  5657  0B1F                     _TMR1_ISR:
  5658  0B1F                     i1l2735:	
  5659                           ;incstack = 0
  5660                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5661                           
  5662                           
  5663                           ;mcc_generated_files/tmr1.c: 168:     PIR1bits.TMR1IF = 0;
  5664  0B1F  014E               	movlb	14	; select bank14
  5665  0B20  128D               	bcf	13,5	;volatile
  5666  0B21                     i1l2737:
  5667                           
  5668                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  5669  0B21  0140               	movlb	0	; select bank0
  5670  0B22  0857               	movf	_timer1ReloadVal+1,w	;volatile
  5671  0B23  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  5672  0B24  0856               	movf	_timer1ReloadVal,w	;volatile
  5673  0B25  00F0               	movwf	TMR1_WriteTimer@timerVal
  5674  0B26  318A  22E2  318B   	fcall	_TMR1_WriteTimer
  5675  0B29                     i1l2739:
  5676                           
  5677                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  5678  0B29  0140               	movlb	0	; select bank0
  5679  0B2A  0854               	movf	_TMR1_InterruptHandler,w
  5680  0B2B  0455               	iorwf	_TMR1_InterruptHandler+1,w
  5681  0B2C  1903               	btfsc	3,2
  5682  0B2D  2B2F               	goto	u206_21
  5683  0B2E  2B30               	goto	u206_20
  5684  0B2F                     u206_21:
  5685  0B2F  2B35               	goto	i1l392
  5686  0B30                     u206_20:
  5687  0B30                     i1l2741:
  5688                           
  5689                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  5690  0B30  0855               	movf	_TMR1_InterruptHandler+1,w
  5691  0B31  008A               	movwf	10
  5692  0B32  0854               	movf	_TMR1_InterruptHandler,w
  5693  0B33  000A               	callw
  5694  0B34  318B               	pagesel	$
  5695  0B35                     i1l392:
  5696  0B35  0008               	return
  5697  0B36                     __end_of_TMR1_ISR:
  5698                           
  5699                           	psect	text20
  5700  0AE2                     __ptext20:	
  5701 ;; *************** function _TMR1_WriteTimer *****************
  5702 ;; Defined at:
  5703 ;;		line 127 in file "mcc_generated_files/tmr1.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  timerVal        2    0[COMMON] unsigned short 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;Total ram usage:        2 bytes
  5722 ;; Hardware stack levels used: 1
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_TMR1_ISR
  5727 ;;		_TMR1_Reload
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           
  5732                           ;psect for function _TMR1_WriteTimer
  5733  0AE2                     _TMR1_WriteTimer:
  5734  0AE2                     i1l2341:	
  5735                           ;incstack = 0
  5736                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  5737                           
  5738                           
  5739                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.NOT_SYNC == 1)
  5740  0AE2  0144               	movlb	4	; select bank4
  5741  0AE3  1D0E               	btfss	14,2	;volatile
  5742  0AE4  2AE6               	goto	u136_21
  5743  0AE5  2AE7               	goto	u136_20
  5744  0AE6                     u136_21:
  5745  0AE6  2AEE               	goto	i1l2351
  5746  0AE7                     u136_20:
  5747  0AE7                     i1l2343:
  5748                           
  5749                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
  5750  0AE7  100E               	bcf	14,0	;volatile
  5751  0AE8                     i1l2345:
  5752                           
  5753                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
  5754  0AE8  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5755  0AE9  008D               	movwf	13	;volatile
  5756  0AEA                     i1l2347:
  5757                           
  5758                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
  5759  0AEA  0870               	movf	TMR1_WriteTimer@timerVal,w
  5760  0AEB  008C               	movwf	12	;volatile
  5761  0AEC                     i1l2349:
  5762                           
  5763                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
  5764  0AEC  140E               	bsf	14,0	;volatile
  5765                           
  5766                           ;mcc_generated_files/tmr1.c: 140:     }
  5767  0AED  2AF2               	goto	i1l379
  5768  0AEE                     i1l2351:
  5769                           
  5770                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  5771  0AEE  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  5772  0AEF  008D               	movwf	13	;volatile
  5773  0AF0                     i1l2353:
  5774                           
  5775                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
  5776  0AF0  0870               	movf	TMR1_WriteTimer@timerVal,w
  5777  0AF1  008C               	movwf	12	;volatile
  5778  0AF2                     i1l379:
  5779  0AF2  0008               	return
  5780  0AF3                     __end_of_TMR1_WriteTimer:
  5781                           
  5782                           	psect	text21
  5783  0003                     __ptext21:	
  5784 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5785 ;; Defined at:
  5786 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		None
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used: 1
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_TMR1_Initialize
  5810 ;;		_TMR1_ISR
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           
  5815                           ;psect for function _TMR1_DefaultInterruptHandler
  5816  0003                     _TMR1_DefaultInterruptHandler:
  5817  0003                     i1l398:	
  5818                           ;incstack = 0
  5819                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  5820                           
  5821  0003  0008               	return
  5822  0004                     __end_of_TMR1_DefaultInterruptHandler:
  5823                           
  5824                           	psect	text22
  5825  006D                     __ptext22:	
  5826 ;; *************** function _TMR1_ISR_ *****************
  5827 ;; Defined at:
  5828 ;;		line 734 in file "main.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  i               2   26[BANK0 ] int 
  5833 ;;  i               2   24[BANK0 ] int 
  5834 ;;  i               2   22[BANK0 ] int 
  5835 ;;  i               2   20[BANK0 ] int 
  5836 ;;  lights          1    2[BANK0 ] unsigned char 
  5837 ;;  i               2   38[BANK0 ] int 
  5838 ;;  lights          1    0[BANK0 ] unsigned char 
  5839 ;;  jungle_sw       1    3[BANK0 ] unsigned char 
  5840 ;;  i               2    4[BANK0 ] int 
  5841 ;;  lights          1    1[BANK0 ] unsigned char 
  5842 ;;  i               2   32[BANK0 ] int 
  5843 ;;  i               2   18[BANK0 ] int 
  5844 ;;  i               2   30[BANK0 ] int 
  5845 ;;  i               2   16[BANK0 ] int 
  5846 ;;  i               2   14[BANK0 ] int 
  5847 ;;  i               2   12[BANK0 ] int 
  5848 ;;  i               2   10[BANK0 ] int 
  5849 ;;  i               2    8[BANK0 ] int 
  5850 ;;  i               2   36[BANK0 ] int 
  5851 ;;  i               2    6[BANK0 ] int 
  5852 ;;  i               2   34[BANK0 ] int 
  5853 ;;  i               2   28[BANK0 ] int 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Totals:         5      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;Total ram usage:       45 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 1
  5870 ;; This function calls:
  5871 ;;		___awdiv
  5872 ;;		i1_playNote
  5873 ;; This function is called by:
  5874 ;;		_main
  5875 ;;		_TMR1_ISR
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           
  5880                           ;psect for function _TMR1_ISR_
  5881  006D                     _TMR1_ISR_:
  5882  006D                     i1l2363:	
  5883                           ;incstack = 0
  5884                           ; Regs used in _TMR1_ISR_: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5885                           
  5886                           
  5887                           ;main.c: 736:     count++;
  5888  006D  3001               	movlw	1
  5889  006E  0141               	movlb	1	; select bank1
  5890  006F  07C4               	addwf	_count^(0+128),f
  5891  0070  3000               	movlw	0
  5892  0071  3DC5               	addwfc	(_count+1)^(0+128),f
  5893  0072                     i1l2365:
  5894                           
  5895                           ;main.c: 739:     if (silent_night_playing)
  5896  0072  0140               	movlb	0	; select bank0
  5897  0073  0853               	movf	_silent_night_playing,w
  5898  0074  1903               	btfsc	3,2
  5899  0075  2877               	goto	u137_21
  5900  0076  2878               	goto	u137_20
  5901  0077                     u137_21:
  5902  0077  2965               	goto	i1l2417
  5903  0078                     u137_20:
  5904  0078                     i1l2367:
  5905                           
  5906                           ;main.c: 740:     {;main.c: 741:         if (count < 24 || ((count > 48) && (count < 96)
      +                          ))
  5907  0078  0141               	movlb	1	; select bank1
  5908  0079  0845               	movf	(_count+1)^(0+128),w
  5909  007A  3A80               	xorlw	128
  5910  007B  00F9               	movwf	??_TMR1_ISR_
  5911  007C  3080               	movlw	128
  5912  007D  0279               	subwf	??_TMR1_ISR_,w
  5913  007E  1D03               	skipz
  5914  007F  2882               	goto	u138_25
  5915  0080  3018               	movlw	24
  5916  0081  0244               	subwf	_count^(0+128),w
  5917  0082                     u138_25:
  5918  0082  1C03               	skipc
  5919  0083  2885               	goto	u138_21
  5920  0084  2886               	goto	u138_20
  5921  0085                     u138_21:
  5922  0085  28A2               	goto	i1l2373
  5923  0086                     u138_20:
  5924  0086                     i1l2369:
  5925  0086  0141               	movlb	1	; select bank1
  5926  0087  0845               	movf	(_count+1)^(0+128),w
  5927  0088  3A80               	xorlw	128
  5928  0089  00F9               	movwf	??_TMR1_ISR_
  5929  008A  3080               	movlw	128
  5930  008B  0279               	subwf	??_TMR1_ISR_,w
  5931  008C  1D03               	skipz
  5932  008D  2890               	goto	u139_25
  5933  008E  3031               	movlw	49
  5934  008F  0244               	subwf	_count^(0+128),w
  5935  0090                     u139_25:
  5936  0090  1C03               	skipc
  5937  0091  2893               	goto	u139_21
  5938  0092  2894               	goto	u139_20
  5939  0093                     u139_21:
  5940  0093  28E4               	goto	i1l2387
  5941  0094                     u139_20:
  5942  0094                     i1l2371:
  5943  0094  0141               	movlb	1	; select bank1
  5944  0095  0845               	movf	(_count+1)^(0+128),w
  5945  0096  3A80               	xorlw	128
  5946  0097  00F9               	movwf	??_TMR1_ISR_
  5947  0098  3080               	movlw	128
  5948  0099  0279               	subwf	??_TMR1_ISR_,w
  5949  009A  1D03               	skipz
  5950  009B  289E               	goto	u140_25
  5951  009C  3060               	movlw	96
  5952  009D  0244               	subwf	_count^(0+128),w
  5953  009E                     u140_25:
  5954  009E  1803               	skipnc
  5955  009F  28A1               	goto	u140_21
  5956  00A0  28A2               	goto	u140_20
  5957  00A1                     u140_21:
  5958  00A1  28E4               	goto	i1l2387
  5959  00A2                     u140_20:
  5960  00A2                     i1l2373:
  5961                           
  5962                           ;main.c: 742:         {;main.c: 743:             if (last_note != silent_night[count])
  5963  00A2  30DB               	movlw	219
  5964  00A3  00F9               	movwf	??_TMR1_ISR_
  5965  00A4  3022               	movlw	34
  5966  00A5  00FA               	movwf	??_TMR1_ISR_+1
  5967  00A6  0141               	movlb	1	; select bank1
  5968  00A7  0844               	movf	_count^(0+128),w
  5969  00A8  0779               	addwf	??_TMR1_ISR_,w
  5970  00A9  0086               	movwf	6
  5971  00AA  0845               	movf	(_count+1)^(0+128),w
  5972  00AB  3D7A               	addwfc	??_TMR1_ISR_+1,w
  5973  00AC  0087               	movwf	7
  5974  00AD  0801               	movf	1,w
  5975  00AE  0140               	movlb	0	; select bank0
  5976  00AF  0650               	xorwf	_last_note,w
  5977  00B0  1903               	skipnz
  5978  00B1  28B3               	goto	u141_21
  5979  00B2  28B4               	goto	u141_20
  5980  00B3                     u141_21:
  5981  00B3  2965               	goto	i1l2417
  5982  00B4                     u141_20:
  5983  00B4                     i1l2375:
  5984                           
  5985                           ;main.c: 744:             {;main.c: 745:                 for (int i = 0; i < 7; i++)
  5986  00B4  01C0               	clrf	TMR1_ISR_@i
  5987  00B5  01C1               	clrf	TMR1_ISR_@i+1
  5988  00B6                     i1l2381:
  5989                           
  5990                           ;main.c: 746:                 {;main.c: 747:                     uint8_t lights = light_
      +                          array[i] >> 7;
  5991  00B6  0140               	movlb	0	; select bank0
  5992  00B7  0840               	movf	TMR1_ISR_@i,w
  5993  00B8  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  5994  00B9  0086               	movwf	6
  5995  00BA  0187               	clrf	7
  5996  00BB  0801               	movf	1,w
  5997  00BC  00F9               	movwf	??_TMR1_ISR_
  5998  00BD  3007               	movlw	7
  5999  00BE                     u142_25:
  6000  00BE  36F9               	lsrf	??_TMR1_ISR_,f
  6001  00BF  0B89               	decfsz	9,f
  6002  00C0  28BE               	goto	u142_25
  6003  00C1  0879               	movf	??_TMR1_ISR_,w
  6004  00C2  00FA               	movwf	??_TMR1_ISR_+1
  6005  00C3  087A               	movf	??_TMR1_ISR_+1,w
  6006  00C4  00A0               	movwf	TMR1_ISR_@lights
  6007                           
  6008                           ;main.c: 748:                     light_array[i] = (light_array[i] << 1) + lights;
  6009  00C5  0840               	movf	TMR1_ISR_@i,w
  6010  00C6  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6011  00C7  0086               	movwf	6
  6012  00C8  0187               	clrf	7
  6013  00C9  3501               	lslf	1,w
  6014  00CA  0720               	addwf	TMR1_ISR_@lights,w
  6015  00CB  00F9               	movwf	??_TMR1_ISR_
  6016  00CC  0840               	movf	TMR1_ISR_@i,w
  6017  00CD  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6018  00CE  0086               	movwf	6
  6019  00CF  0187               	clrf	7
  6020  00D0  0879               	movf	??_TMR1_ISR_,w
  6021  00D1  0081               	movwf	1
  6022  00D2                     i1l2383:
  6023                           
  6024                           ;main.c: 749:                 }
  6025  00D2  3001               	movlw	1
  6026  00D3  07C0               	addwf	TMR1_ISR_@i,f
  6027  00D4  3000               	movlw	0
  6028  00D5  3DC1               	addwfc	TMR1_ISR_@i+1,f
  6029  00D6                     i1l2385:
  6030  00D6  0841               	movf	TMR1_ISR_@i+1,w
  6031  00D7  3A80               	xorlw	128
  6032  00D8  00F9               	movwf	??_TMR1_ISR_
  6033  00D9  3080               	movlw	128
  6034  00DA  0279               	subwf	??_TMR1_ISR_,w
  6035  00DB  1D03               	skipz
  6036  00DC  28DF               	goto	u143_25
  6037  00DD  3007               	movlw	7
  6038  00DE  0240               	subwf	TMR1_ISR_@i,w
  6039  00DF                     u143_25:
  6040  00DF  1C03               	skipc
  6041  00E0  28E2               	goto	u143_21
  6042  00E1  28E3               	goto	u143_20
  6043  00E2                     u143_21:
  6044  00E2  28B6               	goto	i1l2381
  6045  00E3                     u143_20:
  6046  00E3  2965               	goto	i1l2417
  6047  00E4                     i1l2387:
  6048  00E4  0141               	movlb	1	; select bank1
  6049  00E5  0845               	movf	(_count+1)^(0+128),w
  6050  00E6  3A80               	xorlw	128
  6051  00E7  00F9               	movwf	??_TMR1_ISR_
  6052  00E8  3080               	movlw	128
  6053  00E9  0279               	subwf	??_TMR1_ISR_,w
  6054  00EA  1D03               	skipz
  6055  00EB  28EE               	goto	u144_25
  6056  00EC  3078               	movlw	120
  6057  00ED  0244               	subwf	_count^(0+128),w
  6058  00EE                     u144_25:
  6059  00EE  1C03               	skipc
  6060  00EF  28F1               	goto	u144_21
  6061  00F0  28F2               	goto	u144_20
  6062  00F1                     u144_21:
  6063  00F1  2926               	goto	i1l2403
  6064  00F2                     u144_20:
  6065  00F2                     i1l2389:
  6066  00F2  30DB               	movlw	219
  6067  00F3  00F9               	movwf	??_TMR1_ISR_
  6068  00F4  3022               	movlw	34
  6069  00F5  00FA               	movwf	??_TMR1_ISR_+1
  6070  00F6  0141               	movlb	1	; select bank1
  6071  00F7  0844               	movf	_count^(0+128),w
  6072  00F8  0779               	addwf	??_TMR1_ISR_,w
  6073  00F9  0086               	movwf	6
  6074  00FA  0845               	movf	(_count+1)^(0+128),w
  6075  00FB  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6076  00FC  0087               	movwf	7
  6077  00FD  0801               	movf	1,w
  6078  00FE  0140               	movlb	0	; select bank0
  6079  00FF  0650               	xorwf	_last_note,w
  6080  0100  1903               	skipnz
  6081  0101  2903               	goto	u145_21
  6082  0102  2904               	goto	u145_20
  6083  0103                     u145_21:
  6084  0103  2926               	goto	i1l2403
  6085  0104                     u145_20:
  6086  0104                     i1l2391:
  6087                           
  6088                           ;main.c: 753:         {;main.c: 754:             for (int i = 0; i < 7; i++)
  6089  0104  01BC               	clrf	TMR1_ISR_@i_1176
  6090  0105  01BD               	clrf	TMR1_ISR_@i_1176+1
  6091  0106                     i1l2397:
  6092                           
  6093                           ;main.c: 755:             {;main.c: 756:                 light_array[i] = (light_array[i
      +                          ] << 1) + 1;
  6094  0106  0140               	movlb	0	; select bank0
  6095  0107  083C               	movf	TMR1_ISR_@i_1176,w
  6096  0108  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6097  0109  0086               	movwf	6
  6098  010A  0187               	clrf	7
  6099  010B  1403               	setc
  6100  010C  0D01               	rlf	1,w
  6101  010D  00F9               	movwf	??_TMR1_ISR_
  6102  010E  083C               	movf	TMR1_ISR_@i_1176,w
  6103  010F  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6104  0110  0086               	movwf	6
  6105  0111  0187               	clrf	7
  6106  0112  0879               	movf	??_TMR1_ISR_,w
  6107  0113  0081               	movwf	1
  6108  0114                     i1l2399:
  6109                           
  6110                           ;main.c: 757:             }
  6111  0114  3001               	movlw	1
  6112  0115  07BC               	addwf	TMR1_ISR_@i_1176,f
  6113  0116  3000               	movlw	0
  6114  0117  3DBD               	addwfc	TMR1_ISR_@i_1176+1,f
  6115  0118                     i1l2401:
  6116  0118  083D               	movf	TMR1_ISR_@i_1176+1,w
  6117  0119  3A80               	xorlw	128
  6118  011A  00F9               	movwf	??_TMR1_ISR_
  6119  011B  3080               	movlw	128
  6120  011C  0279               	subwf	??_TMR1_ISR_,w
  6121  011D  1D03               	skipz
  6122  011E  2921               	goto	u146_25
  6123  011F  3007               	movlw	7
  6124  0120  023C               	subwf	TMR1_ISR_@i_1176,w
  6125  0121                     u146_25:
  6126  0121  1C03               	skipc
  6127  0122  2924               	goto	u146_21
  6128  0123  2925               	goto	u146_20
  6129  0124                     u146_21:
  6130  0124  2906               	goto	i1l2397
  6131  0125                     u146_20:
  6132  0125  2965               	goto	i1l2417
  6133  0126                     i1l2403:
  6134  0126  0141               	movlb	1	; select bank1
  6135  0127  0845               	movf	(_count+1)^(0+128),w
  6136  0128  3A80               	xorlw	128
  6137  0129  00F9               	movwf	??_TMR1_ISR_
  6138  012A  3080               	movlw	128
  6139  012B  0279               	subwf	??_TMR1_ISR_,w
  6140  012C  1D03               	skipz
  6141  012D  2930               	goto	u147_25
  6142  012E  3078               	movlw	120
  6143  012F  0244               	subwf	_count^(0+128),w
  6144  0130                     u147_25:
  6145  0130  1803               	skipnc
  6146  0131  2933               	goto	u147_21
  6147  0132  2934               	goto	u147_20
  6148  0133                     u147_21:
  6149  0133  2965               	goto	i1l579
  6150  0134                     u147_20:
  6151  0134                     i1l2405:
  6152                           
  6153                           ;main.c: 760:         {;main.c: 761:             for (int i = 0; i < 7; i++)
  6154  0134  0140               	movlb	0	; select bank0
  6155  0135  01C2               	clrf	TMR1_ISR_@i_1177
  6156  0136  01C3               	clrf	TMR1_ISR_@i_1177+1
  6157  0137                     i1l2411:
  6158                           
  6159                           ;main.c: 762:             {;main.c: 763:                 uint8_t lights = light_array[i]
      +                           >> 7;
  6160  0137  0140               	movlb	0	; select bank0
  6161  0138  0842               	movf	TMR1_ISR_@i_1177,w
  6162  0139  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6163  013A  0086               	movwf	6
  6164  013B  0187               	clrf	7
  6165  013C  0801               	movf	1,w
  6166  013D  00F9               	movwf	??_TMR1_ISR_
  6167  013E  3007               	movlw	7
  6168  013F                     u148_25:
  6169  013F  36F9               	lsrf	??_TMR1_ISR_,f
  6170  0140  0B89               	decfsz	9,f
  6171  0141  293F               	goto	u148_25
  6172  0142  0879               	movf	??_TMR1_ISR_,w
  6173  0143  00FA               	movwf	??_TMR1_ISR_+1
  6174  0144  087A               	movf	??_TMR1_ISR_+1,w
  6175  0145  00A1               	movwf	TMR1_ISR_@lights_1178
  6176                           
  6177                           ;main.c: 764:                 light_array[i] = (light_array[i] << 1) + lights;
  6178  0146  0842               	movf	TMR1_ISR_@i_1177,w
  6179  0147  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6180  0148  0086               	movwf	6
  6181  0149  0187               	clrf	7
  6182  014A  3501               	lslf	1,w
  6183  014B  0721               	addwf	TMR1_ISR_@lights_1178,w
  6184  014C  00F9               	movwf	??_TMR1_ISR_
  6185  014D  0842               	movf	TMR1_ISR_@i_1177,w
  6186  014E  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6187  014F  0086               	movwf	6
  6188  0150  0187               	clrf	7
  6189  0151  0879               	movf	??_TMR1_ISR_,w
  6190  0152  0081               	movwf	1
  6191  0153                     i1l2413:
  6192                           
  6193                           ;main.c: 765:             }
  6194  0153  3001               	movlw	1
  6195  0154  07C2               	addwf	TMR1_ISR_@i_1177,f
  6196  0155  3000               	movlw	0
  6197  0156  3DC3               	addwfc	TMR1_ISR_@i_1177+1,f
  6198  0157                     i1l2415:
  6199  0157  0843               	movf	TMR1_ISR_@i_1177+1,w
  6200  0158  3A80               	xorlw	128
  6201  0159  00F9               	movwf	??_TMR1_ISR_
  6202  015A  3080               	movlw	128
  6203  015B  0279               	subwf	??_TMR1_ISR_,w
  6204  015C  1D03               	skipz
  6205  015D  2960               	goto	u149_25
  6206  015E  3007               	movlw	7
  6207  015F  0242               	subwf	TMR1_ISR_@i_1177,w
  6208  0160                     u149_25:
  6209  0160  1C03               	skipc
  6210  0161  2963               	goto	u149_21
  6211  0162  2964               	goto	u149_20
  6212  0163                     u149_21:
  6213  0163  2937               	goto	i1l2411
  6214  0164                     u149_20:
  6215  0164  2965               	goto	i1l2417
  6216  0165                     i1l579:
  6217  0165                     i1l2417:
  6218                           
  6219                           ;main.c: 770:     if (song2_playing)
  6220  0165  0140               	movlb	0	; select bank0
  6221  0166  0851               	movf	_song2_playing,w
  6222  0167  1903               	btfsc	3,2
  6223  0168  296A               	goto	u150_21
  6224  0169  296B               	goto	u150_20
  6225  016A                     u150_21:
  6226  016A  2A94               	goto	i1l2479
  6227  016B                     u150_20:
  6228  016B                     i1l2419:
  6229                           
  6230                           ;main.c: 771:     {;main.c: 845:         if (((song2[count] == 212) &&(song2_pre[count] 
      +                          == 0xD0))||((count == 110) || (count == 111)))
  6231  016B  30BA               	movlw	186
  6232  016C  00F9               	movwf	??_TMR1_ISR_
  6233  016D  3021               	movlw	33
  6234  016E  00FA               	movwf	??_TMR1_ISR_+1
  6235  016F  0141               	movlb	1	; select bank1
  6236  0170  0844               	movf	_count^(0+128),w
  6237  0171  0779               	addwf	??_TMR1_ISR_,w
  6238  0172  0086               	movwf	6
  6239  0173  0845               	movf	(_count+1)^(0+128),w
  6240  0174  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6241  0175  0087               	movwf	7
  6242  0176  30D4               	movlw	212
  6243  0177  0601               	xorwf	1,w
  6244  0178  1D03               	btfss	3,2
  6245  0179  297B               	goto	u151_21
  6246  017A  297C               	goto	u151_20
  6247  017B                     u151_21:
  6248  017B  298C               	goto	i1l2423
  6249  017C                     u151_20:
  6250  017C                     i1l2421:
  6251  017C  304B               	movlw	75
  6252  017D  00F9               	movwf	??_TMR1_ISR_
  6253  017E  3022               	movlw	34
  6254  017F  00FA               	movwf	??_TMR1_ISR_+1
  6255  0180  0844               	movf	_count^(0+128),w
  6256  0181  0779               	addwf	??_TMR1_ISR_,w
  6257  0182  0086               	movwf	6
  6258  0183  0845               	movf	(_count+1)^(0+128),w
  6259  0184  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6260  0185  0087               	movwf	7
  6261  0186  30D0               	movlw	208
  6262  0187  0601               	xorwf	1,w
  6263  0188  1903               	btfsc	3,2
  6264  0189  298B               	goto	u152_21
  6265  018A  298C               	goto	u152_20
  6266  018B                     u152_21:
  6267  018B  299A               	goto	i1l2427
  6268  018C                     u152_20:
  6269  018C                     i1l2423:
  6270  018C  306E               	movlw	110
  6271  018D  0644               	xorwf	_count^(0+128),w
  6272  018E  0445               	iorwf	(_count+1)^(0+128),w
  6273  018F  1903               	btfsc	3,2
  6274  0190  2992               	goto	u153_21
  6275  0191  2993               	goto	u153_20
  6276  0192                     u153_21:
  6277  0192  299A               	goto	i1l2427
  6278  0193                     u153_20:
  6279  0193                     i1l2425:
  6280  0193  306F               	movlw	111
  6281  0194  0644               	xorwf	_count^(0+128),w
  6282  0195  0445               	iorwf	(_count+1)^(0+128),w
  6283  0196  1D03               	btfss	3,2
  6284  0197  2999               	goto	u154_21
  6285  0198  299A               	goto	u154_20
  6286  0199                     u154_21:
  6287  0199  29D7               	goto	i1l2443
  6288  019A                     u154_20:
  6289  019A                     i1l2427:
  6290                           
  6291                           ;main.c: 846:         {;main.c: 847:            if (light_array[3] == 0xFF)
  6292  019A  0A3A               	incf	(_light_array^(0+128)+3),w
  6293  019B  1D03               	btfss	3,2
  6294  019C  299E               	goto	u155_21
  6295  019D  299F               	goto	u155_20
  6296  019E                     u155_21:
  6297  019E  29BC               	goto	i1l2431
  6298  019F                     u155_20:
  6299  019F                     i1l2429:
  6300                           
  6301                           ;main.c: 848:            {;main.c: 849:                 light_array[0] = 0xFF;
  6302  019F  30FF               	movlw	255
  6303  01A0  00F9               	movwf	??_TMR1_ISR_
  6304  01A1  0879               	movf	??_TMR1_ISR_,w
  6305  01A2  00B7               	movwf	_light_array^(0+128)
  6306                           
  6307                           ;main.c: 850:                 light_array[1] = 0xFF;
  6308  01A3  30FF               	movlw	255
  6309  01A4  00F9               	movwf	??_TMR1_ISR_
  6310  01A5  0879               	movf	??_TMR1_ISR_,w
  6311  01A6  00B8               	movwf	(_light_array^(0+128)+1)
  6312                           
  6313                           ;main.c: 851:                 light_array[2] = 0xF3;
  6314  01A7  30F3               	movlw	243
  6315  01A8  00F9               	movwf	??_TMR1_ISR_
  6316  01A9  0879               	movf	??_TMR1_ISR_,w
  6317  01AA  00B9               	movwf	(_light_array^(0+128)+2)
  6318                           
  6319                           ;main.c: 852:                 light_array[3] = 0xE3;
  6320  01AB  30E3               	movlw	227
  6321  01AC  00F9               	movwf	??_TMR1_ISR_
  6322  01AD  0879               	movf	??_TMR1_ISR_,w
  6323  01AE  00BA               	movwf	(_light_array^(0+128)+3)
  6324                           
  6325                           ;main.c: 853:                 light_array[4] = 0xE3;
  6326  01AF  30E3               	movlw	227
  6327  01B0  00F9               	movwf	??_TMR1_ISR_
  6328  01B1  0879               	movf	??_TMR1_ISR_,w
  6329  01B2  00BB               	movwf	(_light_array^(0+128)+4)
  6330                           
  6331                           ;main.c: 854:                 light_array[5] = 0xFF;
  6332  01B3  30FF               	movlw	255
  6333  01B4  00F9               	movwf	??_TMR1_ISR_
  6334  01B5  0879               	movf	??_TMR1_ISR_,w
  6335  01B6  00BC               	movwf	(_light_array^(0+128)+5)
  6336                           
  6337                           ;main.c: 855:                 light_array[6] = 0xFF;
  6338  01B7  30FF               	movlw	255
  6339  01B8  00F9               	movwf	??_TMR1_ISR_
  6340  01B9  0879               	movf	??_TMR1_ISR_,w
  6341  01BA  00BD               	movwf	(_light_array^(0+128)+6)
  6342                           
  6343                           ;main.c: 856:            }
  6344  01BB  2A94               	goto	i1l2479
  6345  01BC                     i1l2431:
  6346                           
  6347                           ;main.c: 858:            {;main.c: 859:                for (int i = 0; i < 7; i++)
  6348  01BC  0140               	movlb	0	; select bank0
  6349  01BD  01A4               	clrf	TMR1_ISR_@i_1179
  6350  01BE  01A5               	clrf	TMR1_ISR_@i_1179+1
  6351  01BF                     i1l2437:
  6352                           
  6353                           ;main.c: 860:                 {;main.c: 861:                     light_array[i] = 0x00;
  6354  01BF  0140               	movlb	0	; select bank0
  6355  01C0  0824               	movf	TMR1_ISR_@i_1179,w
  6356  01C1  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6357  01C2  0086               	movwf	6
  6358  01C3  0187               	clrf	7
  6359  01C4  0181               	clrf	1
  6360  01C5                     i1l2439:
  6361                           
  6362                           ;main.c: 862:                 }
  6363  01C5  3001               	movlw	1
  6364  01C6  07A4               	addwf	TMR1_ISR_@i_1179,f
  6365  01C7  3000               	movlw	0
  6366  01C8  3DA5               	addwfc	TMR1_ISR_@i_1179+1,f
  6367  01C9                     i1l2441:
  6368  01C9  0825               	movf	TMR1_ISR_@i_1179+1,w
  6369  01CA  3A80               	xorlw	128
  6370  01CB  00F9               	movwf	??_TMR1_ISR_
  6371  01CC  3080               	movlw	128
  6372  01CD  0279               	subwf	??_TMR1_ISR_,w
  6373  01CE  1D03               	skipz
  6374  01CF  29D2               	goto	u156_25
  6375  01D0  3007               	movlw	7
  6376  01D1  0224               	subwf	TMR1_ISR_@i_1179,w
  6377  01D2                     u156_25:
  6378  01D2  1C03               	skipc
  6379  01D3  29D5               	goto	u156_21
  6380  01D4  29D6               	goto	u156_20
  6381  01D5                     u156_21:
  6382  01D5  29BF               	goto	i1l2437
  6383  01D6                     u156_20:
  6384  01D6  2A94               	goto	i1l2479
  6385  01D7                     i1l2443:
  6386  01D7  30BA               	movlw	186
  6387  01D8  00F9               	movwf	??_TMR1_ISR_
  6388  01D9  3021               	movlw	33
  6389  01DA  00FA               	movwf	??_TMR1_ISR_+1
  6390  01DB  0844               	movf	_count^(0+128),w
  6391  01DC  0779               	addwf	??_TMR1_ISR_,w
  6392  01DD  0086               	movwf	6
  6393  01DE  0845               	movf	(_count+1)^(0+128),w
  6394  01DF  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6395  01E0  0087               	movwf	7
  6396  01E1  0801               	movf	1,w
  6397  01E2  1903               	btfsc	3,2
  6398  01E3  29E5               	goto	u157_21
  6399  01E4  29E6               	goto	u157_20
  6400  01E5                     u157_21:
  6401  01E5  29F6               	goto	i1l2447
  6402  01E6                     u157_20:
  6403  01E6                     i1l2445:
  6404  01E6  30BA               	movlw	186
  6405  01E7  00F9               	movwf	??_TMR1_ISR_
  6406  01E8  3021               	movlw	33
  6407  01E9  00FA               	movwf	??_TMR1_ISR_+1
  6408  01EA  0844               	movf	_count^(0+128),w
  6409  01EB  0779               	addwf	??_TMR1_ISR_,w
  6410  01EC  0086               	movwf	6
  6411  01ED  0845               	movf	(_count+1)^(0+128),w
  6412  01EE  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6413  01EF  0087               	movwf	7
  6414  01F0  3032               	movlw	50
  6415  01F1  0601               	xorwf	1,w
  6416  01F2  1D03               	btfss	3,2
  6417  01F3  29F5               	goto	u158_21
  6418  01F4  29F6               	goto	u158_20
  6419  01F5                     u158_21:
  6420  01F5  2A14               	goto	i1l2459
  6421  01F6                     u158_20:
  6422  01F6                     i1l2447:
  6423                           
  6424                           ;main.c: 866:         {;main.c: 867:             for (int i = 0; i < 7; i++)
  6425  01F6  0140               	movlb	0	; select bank0
  6426  01F7  01A6               	clrf	TMR1_ISR_@i_1180
  6427  01F8  01A7               	clrf	TMR1_ISR_@i_1180+1
  6428  01F9                     i1l2453:
  6429                           
  6430                           ;main.c: 868:             {;main.c: 869:                 light_array[i] = 0xFF;
  6431  01F9  30FF               	movlw	255
  6432  01FA  00F9               	movwf	??_TMR1_ISR_
  6433  01FB  0140               	movlb	0	; select bank0
  6434  01FC  0826               	movf	TMR1_ISR_@i_1180,w
  6435  01FD  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6436  01FE  0086               	movwf	6
  6437  01FF  0187               	clrf	7
  6438  0200  0879               	movf	??_TMR1_ISR_,w
  6439  0201  0081               	movwf	1
  6440  0202                     i1l2455:
  6441                           
  6442                           ;main.c: 870:             }
  6443  0202  3001               	movlw	1
  6444  0203  07A6               	addwf	TMR1_ISR_@i_1180,f
  6445  0204  3000               	movlw	0
  6446  0205  3DA7               	addwfc	TMR1_ISR_@i_1180+1,f
  6447  0206                     i1l2457:
  6448  0206  0827               	movf	TMR1_ISR_@i_1180+1,w
  6449  0207  3A80               	xorlw	128
  6450  0208  00F9               	movwf	??_TMR1_ISR_
  6451  0209  3080               	movlw	128
  6452  020A  0279               	subwf	??_TMR1_ISR_,w
  6453  020B  1D03               	skipz
  6454  020C  2A0F               	goto	u159_25
  6455  020D  3007               	movlw	7
  6456  020E  0226               	subwf	TMR1_ISR_@i_1180,w
  6457  020F                     u159_25:
  6458  020F  1C03               	skipc
  6459  0210  2A12               	goto	u159_21
  6460  0211  2A13               	goto	u159_20
  6461  0212                     u159_21:
  6462  0212  29F9               	goto	i1l2453
  6463  0213                     u159_20:
  6464  0213  2A94               	goto	i1l2479
  6465  0214                     i1l2459:
  6466  0214  0838               	movf	(_light_array^(0+128)+1),w
  6467  0215  1D03               	btfss	3,2
  6468  0216  2A18               	goto	u160_21
  6469  0217  2A19               	goto	u160_20
  6470  0218                     u160_21:
  6471  0218  2A48               	goto	i1l2465
  6472  0219                     u160_20:
  6473  0219                     i1l2461:
  6474  0219  30BA               	movlw	186
  6475  021A  00F9               	movwf	??_TMR1_ISR_
  6476  021B  3021               	movlw	33
  6477  021C  00FA               	movwf	??_TMR1_ISR_+1
  6478  021D  0844               	movf	_count^(0+128),w
  6479  021E  0779               	addwf	??_TMR1_ISR_,w
  6480  021F  0086               	movwf	6
  6481  0220  0845               	movf	(_count+1)^(0+128),w
  6482  0221  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6483  0222  0087               	movwf	7
  6484  0223  0801               	movf	1,w
  6485  0224  0140               	movlb	0	; select bank0
  6486  0225  0650               	xorwf	_last_note,w
  6487  0226  1903               	skipnz
  6488  0227  2A29               	goto	u161_21
  6489  0228  2A2A               	goto	u161_20
  6490  0229                     u161_21:
  6491  0229  2A48               	goto	i1l2465
  6492  022A                     u161_20:
  6493  022A                     i1l2463:
  6494                           
  6495                           ;main.c: 873:         {;main.c: 874:             light_array[0] = 0x88;
  6496  022A  3088               	movlw	136
  6497  022B  00F9               	movwf	??_TMR1_ISR_
  6498  022C  0879               	movf	??_TMR1_ISR_,w
  6499  022D  0141               	movlb	1	; select bank1
  6500  022E  00B7               	movwf	_light_array^(0+128)
  6501                           
  6502                           ;main.c: 875:             light_array[1] = 0x44;
  6503  022F  3044               	movlw	68
  6504  0230  00F9               	movwf	??_TMR1_ISR_
  6505  0231  0879               	movf	??_TMR1_ISR_,w
  6506  0232  00B8               	movwf	(_light_array^(0+128)+1)
  6507                           
  6508                           ;main.c: 876:             light_array[2] = 0x22;
  6509  0233  3022               	movlw	34
  6510  0234  00F9               	movwf	??_TMR1_ISR_
  6511  0235  0879               	movf	??_TMR1_ISR_,w
  6512  0236  00B9               	movwf	(_light_array^(0+128)+2)
  6513                           
  6514                           ;main.c: 877:             light_array[3] = 0x11;
  6515  0237  3011               	movlw	17
  6516  0238  00F9               	movwf	??_TMR1_ISR_
  6517  0239  0879               	movf	??_TMR1_ISR_,w
  6518  023A  00BA               	movwf	(_light_array^(0+128)+3)
  6519                           
  6520                           ;main.c: 878:             light_array[4] = 0x88;
  6521  023B  3088               	movlw	136
  6522  023C  00F9               	movwf	??_TMR1_ISR_
  6523  023D  0879               	movf	??_TMR1_ISR_,w
  6524  023E  00BB               	movwf	(_light_array^(0+128)+4)
  6525                           
  6526                           ;main.c: 879:             light_array[5] = 0x44;
  6527  023F  3044               	movlw	68
  6528  0240  00F9               	movwf	??_TMR1_ISR_
  6529  0241  0879               	movf	??_TMR1_ISR_,w
  6530  0242  00BC               	movwf	(_light_array^(0+128)+5)
  6531                           
  6532                           ;main.c: 880:             light_array[6] = 0x22;
  6533  0243  3022               	movlw	34
  6534  0244  00F9               	movwf	??_TMR1_ISR_
  6535  0245  0879               	movf	??_TMR1_ISR_,w
  6536  0246  00BD               	movwf	(_light_array^(0+128)+6)
  6537                           
  6538                           ;main.c: 881:         }
  6539  0247  2A94               	goto	i1l2479
  6540  0248                     i1l2465:
  6541  0248  30BA               	movlw	186
  6542  0249  00F9               	movwf	??_TMR1_ISR_
  6543  024A  3021               	movlw	33
  6544  024B  00FA               	movwf	??_TMR1_ISR_+1
  6545  024C  0141               	movlb	1	; select bank1
  6546  024D  0844               	movf	_count^(0+128),w
  6547  024E  0779               	addwf	??_TMR1_ISR_,w
  6548  024F  0086               	movwf	6
  6549  0250  0845               	movf	(_count+1)^(0+128),w
  6550  0251  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6551  0252  0087               	movwf	7
  6552  0253  0801               	movf	1,w
  6553  0254  0140               	movlb	0	; select bank0
  6554  0255  0650               	xorwf	_last_note,w
  6555  0256  1903               	skipnz
  6556  0257  2A59               	goto	u162_21
  6557  0258  2A5A               	goto	u162_20
  6558  0259                     u162_21:
  6559  0259  2A94               	goto	i1l2479
  6560  025A                     u162_20:
  6561  025A                     i1l2467:
  6562                           
  6563                           ;main.c: 883:         {;main.c: 884:             for (int i = 0; i < 7; i++)
  6564  025A  01C4               	clrf	TMR1_ISR_@i_1181
  6565  025B  01C5               	clrf	TMR1_ISR_@i_1181+1
  6566  025C                     i1l2469:
  6567  025C  0845               	movf	TMR1_ISR_@i_1181+1,w
  6568  025D  3A80               	xorlw	128
  6569  025E  00F9               	movwf	??_TMR1_ISR_
  6570  025F  3080               	movlw	128
  6571  0260  0279               	subwf	??_TMR1_ISR_,w
  6572  0261  1D03               	skipz
  6573  0262  2A65               	goto	u163_25
  6574  0263  3007               	movlw	7
  6575  0264  0244               	subwf	TMR1_ISR_@i_1181,w
  6576  0265                     u163_25:
  6577  0265  1C03               	skipc
  6578  0266  2A68               	goto	u163_21
  6579  0267  2A69               	goto	u163_20
  6580  0268                     u163_21:
  6581  0268  2A6A               	goto	i1l2473
  6582  0269                     u163_20:
  6583  0269  2A94               	goto	i1l2479
  6584  026A                     i1l2473:
  6585                           
  6586                           ;main.c: 885:             {;main.c: 886:                 light_array[i] =(light_array[i]
      +                           << 1) + light_array[i]*2/3;
  6587  026A  3003               	movlw	3
  6588  026B  00F0               	movwf	___awdiv@divisor
  6589  026C  3000               	movlw	0
  6590  026D  00F1               	movwf	___awdiv@divisor+1
  6591  026E  0140               	movlb	0	; select bank0
  6592  026F  0844               	movf	TMR1_ISR_@i_1181,w
  6593  0270  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6594  0271  0086               	movwf	6
  6595  0272  0187               	clrf	7
  6596  0273  0801               	movf	1,w
  6597  0274  00F9               	movwf	??_TMR1_ISR_
  6598  0275  01FA               	clrf	??_TMR1_ISR_+1
  6599  0276  3579               	lslf	??_TMR1_ISR_,w
  6600  0277  00F2               	movwf	___awdiv@dividend
  6601  0278  0D7A               	rlf	??_TMR1_ISR_+1,w
  6602  0279  00F3               	movwf	___awdiv@dividend+1
  6603  027A  318C  242F  3180   	fcall	___awdiv
  6604  027D  0870               	movf	?___awdiv,w
  6605  027E  00FB               	movwf	??_TMR1_ISR_+2
  6606  027F  0871               	movf	?___awdiv+1,w
  6607  0280  00FC               	movwf	??_TMR1_ISR_+3
  6608  0281  0140               	movlb	0	; select bank0
  6609  0282  0844               	movf	TMR1_ISR_@i_1181,w
  6610  0283  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6611  0284  0086               	movwf	6
  6612  0285  0187               	clrf	7
  6613  0286  3501               	lslf	1,w
  6614  0287  077B               	addwf	??_TMR1_ISR_+2,w
  6615  0288  00FD               	movwf	??_TMR1_ISR_+4
  6616  0289  0844               	movf	TMR1_ISR_@i_1181,w
  6617  028A  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6618  028B  0086               	movwf	6
  6619  028C  0187               	clrf	7
  6620  028D  087D               	movf	??_TMR1_ISR_+4,w
  6621  028E  0081               	movwf	1
  6622  028F                     i1l2475:
  6623                           
  6624                           ;main.c: 887:             }
  6625  028F  3001               	movlw	1
  6626  0290  07C4               	addwf	TMR1_ISR_@i_1181,f
  6627  0291  3000               	movlw	0
  6628  0292  3DC5               	addwfc	TMR1_ISR_@i_1181+1,f
  6629  0293  2A5C               	goto	i1l2469
  6630  0294                     i1l2479:
  6631                           
  6632                           ;main.c: 939:     if (song3_playing)
  6633  0294  0140               	movlb	0	; select bank0
  6634  0295  0852               	movf	_song3_playing,w
  6635  0296  1903               	btfsc	3,2
  6636  0297  2A99               	goto	u164_21
  6637  0298  2A9A               	goto	u164_20
  6638  0299                     u164_21:
  6639  0299  2D29               	goto	i1l2665
  6640  029A                     u164_20:
  6641  029A                     i1l2481:
  6642                           
  6643                           ;main.c: 940:     {;main.c: 1053:         if (count < 10)
  6644  029A  0141               	movlb	1	; select bank1
  6645  029B  0845               	movf	(_count+1)^(0+128),w
  6646  029C  3A80               	xorlw	128
  6647  029D  00F9               	movwf	??_TMR1_ISR_
  6648  029E  3080               	movlw	128
  6649  029F  0279               	subwf	??_TMR1_ISR_,w
  6650  02A0  1D03               	skipz
  6651  02A1  2AA4               	goto	u165_25
  6652  02A2  300A               	movlw	10
  6653  02A3  0244               	subwf	_count^(0+128),w
  6654  02A4                     u165_25:
  6655  02A4  1803               	skipnc
  6656  02A5  2AA7               	goto	u165_21
  6657  02A6  2AA8               	goto	u165_20
  6658  02A7                     u165_21:
  6659  02A7  2AC7               	goto	i1l2495
  6660  02A8                     u165_20:
  6661  02A8                     i1l2483:
  6662                           
  6663                           ;main.c: 1054:         {;main.c: 1055:            for (int i = 0; i < 7; i++)
  6664  02A8  0140               	movlb	0	; select bank0
  6665  02A9  01A8               	clrf	TMR1_ISR_@i_1182
  6666  02AA  01A9               	clrf	TMR1_ISR_@i_1182+1
  6667  02AB                     i1l2485:
  6668  02AB  0829               	movf	TMR1_ISR_@i_1182+1,w
  6669  02AC  3A80               	xorlw	128
  6670  02AD  00F9               	movwf	??_TMR1_ISR_
  6671  02AE  3080               	movlw	128
  6672  02AF  0279               	subwf	??_TMR1_ISR_,w
  6673  02B0  1D03               	skipz
  6674  02B1  2AB4               	goto	u166_25
  6675  02B2  3007               	movlw	7
  6676  02B3  0228               	subwf	TMR1_ISR_@i_1182,w
  6677  02B4                     u166_25:
  6678  02B4  1C03               	skipc
  6679  02B5  2AB7               	goto	u166_21
  6680  02B6  2AB8               	goto	u166_20
  6681  02B7                     u166_21:
  6682  02B7  2AB9               	goto	i1l2489
  6683  02B8                     u166_20:
  6684  02B8  2D29               	goto	i1l2665
  6685  02B9                     i1l2489:
  6686                           
  6687                           ;main.c: 1056:              {;main.c: 1057:                  light_array[i] = 0xF3;
  6688  02B9  30F3               	movlw	243
  6689  02BA  00F9               	movwf	??_TMR1_ISR_
  6690  02BB  0140               	movlb	0	; select bank0
  6691  02BC  0828               	movf	TMR1_ISR_@i_1182,w
  6692  02BD  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6693  02BE  0086               	movwf	6
  6694  02BF  0187               	clrf	7
  6695  02C0  0879               	movf	??_TMR1_ISR_,w
  6696  02C1  0081               	movwf	1
  6697  02C2                     i1l2491:
  6698                           
  6699                           ;main.c: 1058:              }
  6700  02C2  3001               	movlw	1
  6701  02C3  07A8               	addwf	TMR1_ISR_@i_1182,f
  6702  02C4  3000               	movlw	0
  6703  02C5  3DA9               	addwfc	TMR1_ISR_@i_1182+1,f
  6704  02C6  2AAB               	goto	i1l2485
  6705  02C7                     i1l2495:
  6706  02C7  0141               	movlb	1	; select bank1
  6707  02C8  0845               	movf	(_count+1)^(0+128),w
  6708  02C9  3A80               	xorlw	128
  6709  02CA  00F9               	movwf	??_TMR1_ISR_
  6710  02CB  3080               	movlw	128
  6711  02CC  0279               	subwf	??_TMR1_ISR_,w
  6712  02CD  1D03               	skipz
  6713  02CE  2AD1               	goto	u167_25
  6714  02CF  3014               	movlw	20
  6715  02D0  0244               	subwf	_count^(0+128),w
  6716  02D1                     u167_25:
  6717  02D1  1803               	skipnc
  6718  02D2  2AD4               	goto	u167_21
  6719  02D3  2AD5               	goto	u167_20
  6720  02D4                     u167_21:
  6721  02D4  2AF4               	goto	i1l2509
  6722  02D5                     u167_20:
  6723  02D5                     i1l2497:
  6724                           
  6725                           ;main.c: 1061:         {;main.c: 1062:            for (int i = 0; i < 7; i++)
  6726  02D5  0140               	movlb	0	; select bank0
  6727  02D6  01AA               	clrf	TMR1_ISR_@i_1183
  6728  02D7  01AB               	clrf	TMR1_ISR_@i_1183+1
  6729  02D8                     i1l2499:
  6730  02D8  082B               	movf	TMR1_ISR_@i_1183+1,w
  6731  02D9  3A80               	xorlw	128
  6732  02DA  00F9               	movwf	??_TMR1_ISR_
  6733  02DB  3080               	movlw	128
  6734  02DC  0279               	subwf	??_TMR1_ISR_,w
  6735  02DD  1D03               	skipz
  6736  02DE  2AE1               	goto	u168_25
  6737  02DF  3007               	movlw	7
  6738  02E0  022A               	subwf	TMR1_ISR_@i_1183,w
  6739  02E1                     u168_25:
  6740  02E1  1C03               	skipc
  6741  02E2  2AE4               	goto	u168_21
  6742  02E3  2AE5               	goto	u168_20
  6743  02E4                     u168_21:
  6744  02E4  2AE6               	goto	i1l2503
  6745  02E5                     u168_20:
  6746  02E5  2D29               	goto	i1l2665
  6747  02E6                     i1l2503:
  6748                           
  6749                           ;main.c: 1063:              {;main.c: 1064:                  light_array[i] = 0x0F;
  6750  02E6  300F               	movlw	15
  6751  02E7  00F9               	movwf	??_TMR1_ISR_
  6752  02E8  0140               	movlb	0	; select bank0
  6753  02E9  082A               	movf	TMR1_ISR_@i_1183,w
  6754  02EA  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6755  02EB  0086               	movwf	6
  6756  02EC  0187               	clrf	7
  6757  02ED  0879               	movf	??_TMR1_ISR_,w
  6758  02EE  0081               	movwf	1
  6759  02EF                     i1l2505:
  6760                           
  6761                           ;main.c: 1065:              }
  6762  02EF  3001               	movlw	1
  6763  02F0  07AA               	addwf	TMR1_ISR_@i_1183,f
  6764  02F1  3000               	movlw	0
  6765  02F2  3DAB               	addwfc	TMR1_ISR_@i_1183+1,f
  6766  02F3  2AD8               	goto	i1l2499
  6767  02F4                     i1l2509:
  6768  02F4  0141               	movlb	1	; select bank1
  6769  02F5  0845               	movf	(_count+1)^(0+128),w
  6770  02F6  3A80               	xorlw	128
  6771  02F7  00F9               	movwf	??_TMR1_ISR_
  6772  02F8  3080               	movlw	128
  6773  02F9  0279               	subwf	??_TMR1_ISR_,w
  6774  02FA  1D03               	skipz
  6775  02FB  2AFE               	goto	u169_25
  6776  02FC  301D               	movlw	29
  6777  02FD  0244               	subwf	_count^(0+128),w
  6778  02FE                     u169_25:
  6779  02FE  1803               	skipnc
  6780  02FF  2B01               	goto	u169_21
  6781  0300  2B02               	goto	u169_20
  6782  0301                     u169_21:
  6783  0301  2B21               	goto	i1l2523
  6784  0302                     u169_20:
  6785  0302                     i1l2511:
  6786                           
  6787                           ;main.c: 1068:         {;main.c: 1069:            for (int i = 0; i < 7; i++)
  6788  0302  0140               	movlb	0	; select bank0
  6789  0303  01AC               	clrf	TMR1_ISR_@i_1184
  6790  0304  01AD               	clrf	TMR1_ISR_@i_1184+1
  6791  0305                     i1l2513:
  6792  0305  082D               	movf	TMR1_ISR_@i_1184+1,w
  6793  0306  3A80               	xorlw	128
  6794  0307  00F9               	movwf	??_TMR1_ISR_
  6795  0308  3080               	movlw	128
  6796  0309  0279               	subwf	??_TMR1_ISR_,w
  6797  030A  1D03               	skipz
  6798  030B  2B0E               	goto	u170_25
  6799  030C  3007               	movlw	7
  6800  030D  022C               	subwf	TMR1_ISR_@i_1184,w
  6801  030E                     u170_25:
  6802  030E  1C03               	skipc
  6803  030F  2B11               	goto	u170_21
  6804  0310  2B12               	goto	u170_20
  6805  0311                     u170_21:
  6806  0311  2B13               	goto	i1l2517
  6807  0312                     u170_20:
  6808  0312  2D29               	goto	i1l2665
  6809  0313                     i1l2517:
  6810                           
  6811                           ;main.c: 1070:              {;main.c: 1071:                  light_array[i] = 0xFC;
  6812  0313  30FC               	movlw	252
  6813  0314  00F9               	movwf	??_TMR1_ISR_
  6814  0315  0140               	movlb	0	; select bank0
  6815  0316  082C               	movf	TMR1_ISR_@i_1184,w
  6816  0317  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6817  0318  0086               	movwf	6
  6818  0319  0187               	clrf	7
  6819  031A  0879               	movf	??_TMR1_ISR_,w
  6820  031B  0081               	movwf	1
  6821  031C                     i1l2519:
  6822                           
  6823                           ;main.c: 1072:              }
  6824  031C  3001               	movlw	1
  6825  031D  07AC               	addwf	TMR1_ISR_@i_1184,f
  6826  031E  3000               	movlw	0
  6827  031F  3DAD               	addwfc	TMR1_ISR_@i_1184+1,f
  6828  0320  2B05               	goto	i1l2513
  6829  0321                     i1l2523:
  6830  0321  301D               	movlw	29
  6831  0322  0141               	movlb	1	; select bank1
  6832  0323  0644               	xorwf	_count^(0+128),w
  6833  0324  0445               	iorwf	(_count+1)^(0+128),w
  6834  0325  1D03               	btfss	3,2
  6835  0326  2B28               	goto	u171_21
  6836  0327  2B29               	goto	u171_20
  6837  0328                     u171_21:
  6838  0328  2B48               	goto	i1l2537
  6839  0329                     u171_20:
  6840  0329                     i1l2525:
  6841                           
  6842                           ;main.c: 1075:         {;main.c: 1076:            for (int i = 0; i < 7; i++)
  6843  0329  0140               	movlb	0	; select bank0
  6844  032A  01AE               	clrf	TMR1_ISR_@i_1185
  6845  032B  01AF               	clrf	TMR1_ISR_@i_1185+1
  6846  032C                     i1l2527:
  6847  032C  082F               	movf	TMR1_ISR_@i_1185+1,w
  6848  032D  3A80               	xorlw	128
  6849  032E  00F9               	movwf	??_TMR1_ISR_
  6850  032F  3080               	movlw	128
  6851  0330  0279               	subwf	??_TMR1_ISR_,w
  6852  0331  1D03               	skipz
  6853  0332  2B35               	goto	u172_25
  6854  0333  3007               	movlw	7
  6855  0334  022E               	subwf	TMR1_ISR_@i_1185,w
  6856  0335                     u172_25:
  6857  0335  1C03               	skipc
  6858  0336  2B38               	goto	u172_21
  6859  0337  2B39               	goto	u172_20
  6860  0338                     u172_21:
  6861  0338  2B3A               	goto	i1l2531
  6862  0339                     u172_20:
  6863  0339  2D29               	goto	i1l2665
  6864  033A                     i1l2531:
  6865                           
  6866                           ;main.c: 1077:              {;main.c: 1078:                  light_array[i] = 0x7F;
  6867  033A  307F               	movlw	127
  6868  033B  00F9               	movwf	??_TMR1_ISR_
  6869  033C  0140               	movlb	0	; select bank0
  6870  033D  082E               	movf	TMR1_ISR_@i_1185,w
  6871  033E  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6872  033F  0086               	movwf	6
  6873  0340  0187               	clrf	7
  6874  0341  0879               	movf	??_TMR1_ISR_,w
  6875  0342  0081               	movwf	1
  6876  0343                     i1l2533:
  6877                           
  6878                           ;main.c: 1079:              }
  6879  0343  3001               	movlw	1
  6880  0344  07AE               	addwf	TMR1_ISR_@i_1185,f
  6881  0345  3000               	movlw	0
  6882  0346  3DAF               	addwfc	TMR1_ISR_@i_1185+1,f
  6883  0347  2B2C               	goto	i1l2527
  6884  0348                     i1l2537:
  6885  0348  301C               	movlw	28
  6886  0349  00F9               	movwf	??_TMR1_ISR_
  6887  034A  3021               	movlw	33
  6888  034B  00FA               	movwf	??_TMR1_ISR_+1
  6889  034C  0844               	movf	_count^(0+128),w
  6890  034D  0779               	addwf	??_TMR1_ISR_,w
  6891  034E  0086               	movwf	6
  6892  034F  0845               	movf	(_count+1)^(0+128),w
  6893  0350  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6894  0351  0087               	movwf	7
  6895  0352  0801               	movf	1,w
  6896  0353  1D03               	btfss	3,2
  6897  0354  2B56               	goto	u173_21
  6898  0355  2B57               	goto	u173_20
  6899  0356                     u173_21:
  6900  0356  2B76               	goto	i1l2551
  6901  0357                     u173_20:
  6902  0357                     i1l2539:
  6903                           
  6904                           ;main.c: 1082:         {;main.c: 1083:            for (int i = 0; i < 7; i++)
  6905  0357  0140               	movlb	0	; select bank0
  6906  0358  01B0               	clrf	TMR1_ISR_@i_1186
  6907  0359  01B1               	clrf	TMR1_ISR_@i_1186+1
  6908  035A                     i1l2541:
  6909  035A  0831               	movf	TMR1_ISR_@i_1186+1,w
  6910  035B  3A80               	xorlw	128
  6911  035C  00F9               	movwf	??_TMR1_ISR_
  6912  035D  3080               	movlw	128
  6913  035E  0279               	subwf	??_TMR1_ISR_,w
  6914  035F  1D03               	skipz
  6915  0360  2B63               	goto	u174_25
  6916  0361  3007               	movlw	7
  6917  0362  0230               	subwf	TMR1_ISR_@i_1186,w
  6918  0363                     u174_25:
  6919  0363  1C03               	skipc
  6920  0364  2B66               	goto	u174_21
  6921  0365  2B67               	goto	u174_20
  6922  0366                     u174_21:
  6923  0366  2B68               	goto	i1l2545
  6924  0367                     u174_20:
  6925  0367  2D29               	goto	i1l2665
  6926  0368                     i1l2545:
  6927                           
  6928                           ;main.c: 1084:            {;main.c: 1085:                 light_array[i] = 0x7F;
  6929  0368  307F               	movlw	127
  6930  0369  00F9               	movwf	??_TMR1_ISR_
  6931  036A  0140               	movlb	0	; select bank0
  6932  036B  0830               	movf	TMR1_ISR_@i_1186,w
  6933  036C  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  6934  036D  0086               	movwf	6
  6935  036E  0187               	clrf	7
  6936  036F  0879               	movf	??_TMR1_ISR_,w
  6937  0370  0081               	movwf	1
  6938  0371                     i1l2547:
  6939                           
  6940                           ;main.c: 1086:            }
  6941  0371  3001               	movlw	1
  6942  0372  07B0               	addwf	TMR1_ISR_@i_1186,f
  6943  0373  3000               	movlw	0
  6944  0374  3DB1               	addwfc	TMR1_ISR_@i_1186+1,f
  6945  0375  2B5A               	goto	i1l2541
  6946  0376                     i1l2551:
  6947  0376  0845               	movf	(_count+1)^(0+128),w
  6948  0377  3A80               	xorlw	128
  6949  0378  00F9               	movwf	??_TMR1_ISR_
  6950  0379  3080               	movlw	128
  6951  037A  0279               	subwf	??_TMR1_ISR_,w
  6952  037B  1D03               	skipz
  6953  037C  2B7F               	goto	u175_25
  6954  037D  302E               	movlw	46
  6955  037E  0244               	subwf	_count^(0+128),w
  6956  037F                     u175_25:
  6957  037F  1803               	skipnc
  6958  0380  2B82               	goto	u175_21
  6959  0381  2B83               	goto	u175_20
  6960  0382                     u175_21:
  6961  0382  2BB7               	goto	i1l2567
  6962  0383                     u175_20:
  6963  0383                     i1l2553:
  6964  0383  301C               	movlw	28
  6965  0384  00F9               	movwf	??_TMR1_ISR_
  6966  0385  3021               	movlw	33
  6967  0386  00FA               	movwf	??_TMR1_ISR_+1
  6968  0387  0141               	movlb	1	; select bank1
  6969  0388  0844               	movf	_count^(0+128),w
  6970  0389  0779               	addwf	??_TMR1_ISR_,w
  6971  038A  0086               	movwf	6
  6972  038B  0845               	movf	(_count+1)^(0+128),w
  6973  038C  3D7A               	addwfc	??_TMR1_ISR_+1,w
  6974  038D  0087               	movwf	7
  6975  038E  0801               	movf	1,w
  6976  038F  0140               	movlb	0	; select bank0
  6977  0390  0650               	xorwf	_last_note,w
  6978  0391  1903               	skipnz
  6979  0392  2B94               	goto	u176_21
  6980  0393  2B95               	goto	u176_20
  6981  0394                     u176_21:
  6982  0394  2BB7               	goto	i1l2567
  6983  0395                     u176_20:
  6984  0395                     i1l2555:
  6985                           
  6986                           ;main.c: 1089:        {;main.c: 1090:            for (int i = 0; i < 7; i++)
  6987  0395  01BE               	clrf	TMR1_ISR_@i_1187
  6988  0396  01BF               	clrf	TMR1_ISR_@i_1187+1
  6989  0397                     i1l2557:
  6990  0397  083F               	movf	TMR1_ISR_@i_1187+1,w
  6991  0398  3A80               	xorlw	128
  6992  0399  00F9               	movwf	??_TMR1_ISR_
  6993  039A  3080               	movlw	128
  6994  039B  0279               	subwf	??_TMR1_ISR_,w
  6995  039C  1D03               	skipz
  6996  039D  2BA0               	goto	u177_25
  6997  039E  3007               	movlw	7
  6998  039F  023E               	subwf	TMR1_ISR_@i_1187,w
  6999  03A0                     u177_25:
  7000  03A0  1C03               	skipc
  7001  03A1  2BA3               	goto	u177_21
  7002  03A2  2BA4               	goto	u177_20
  7003  03A3                     u177_21:
  7004  03A3  2BA5               	goto	i1l2561
  7005  03A4                     u177_20:
  7006  03A4  2D29               	goto	i1l2665
  7007  03A5                     i1l2561:
  7008                           
  7009                           ;main.c: 1091:            {;main.c: 1092:                 light_array[i] = light_array[i
      +                          ] >> 1;
  7010  03A5  0140               	movlb	0	; select bank0
  7011  03A6  083E               	movf	TMR1_ISR_@i_1187,w
  7012  03A7  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7013  03A8  0086               	movwf	6
  7014  03A9  0187               	clrf	7
  7015  03AA  3601               	lsrf	1,w
  7016  03AB  00F9               	movwf	??_TMR1_ISR_
  7017  03AC  083E               	movf	TMR1_ISR_@i_1187,w
  7018  03AD  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7019  03AE  0086               	movwf	6
  7020  03AF  0187               	clrf	7
  7021  03B0  0879               	movf	??_TMR1_ISR_,w
  7022  03B1  0081               	movwf	1
  7023  03B2                     i1l2563:
  7024                           
  7025                           ;main.c: 1093:            }
  7026  03B2  3001               	movlw	1
  7027  03B3  07BE               	addwf	TMR1_ISR_@i_1187,f
  7028  03B4  3000               	movlw	0
  7029  03B5  3DBF               	addwfc	TMR1_ISR_@i_1187+1,f
  7030  03B6  2B97               	goto	i1l2557
  7031  03B7                     i1l2567:
  7032  03B7  0141               	movlb	1	; select bank1
  7033  03B8  0845               	movf	(_count+1)^(0+128),w
  7034  03B9  3A80               	xorlw	128
  7035  03BA  00F9               	movwf	??_TMR1_ISR_
  7036  03BB  3080               	movlw	128
  7037  03BC  0279               	subwf	??_TMR1_ISR_,w
  7038  03BD  1D03               	skipz
  7039  03BE  2BC1               	goto	u178_25
  7040  03BF  303E               	movlw	62
  7041  03C0  0244               	subwf	_count^(0+128),w
  7042  03C1                     u178_25:
  7043  03C1  1803               	skipnc
  7044  03C2  2BC4               	goto	u178_21
  7045  03C3  2BC5               	goto	u178_20
  7046  03C4                     u178_21:
  7047  03C4  2BEF               	goto	i1l2583
  7048  03C5                     u178_20:
  7049  03C5                     i1l2569:
  7050  03C5  0141               	movlb	1	; select bank1
  7051  03C6  0845               	movf	(_count+1)^(0+128),w
  7052  03C7  3A80               	xorlw	128
  7053  03C8  00F9               	movwf	??_TMR1_ISR_
  7054  03C9  3080               	movlw	128
  7055  03CA  0279               	subwf	??_TMR1_ISR_,w
  7056  03CB  1D03               	skipz
  7057  03CC  2BCF               	goto	u179_25
  7058  03CD  302E               	movlw	46
  7059  03CE  0244               	subwf	_count^(0+128),w
  7060  03CF                     u179_25:
  7061  03CF  1C03               	skipc
  7062  03D0  2BD2               	goto	u179_21
  7063  03D1  2BD3               	goto	u179_20
  7064  03D2                     u179_21:
  7065  03D2  2BEF               	goto	i1l2583
  7066  03D3                     u179_20:
  7067  03D3                     i1l2571:
  7068                           
  7069                           ;main.c: 1096:         {;main.c: 1097:            for (int i = 0; i < 7; i++)
  7070  03D3  0140               	movlb	0	; select bank0
  7071  03D4  01B2               	clrf	TMR1_ISR_@i_1188
  7072  03D5  01B3               	clrf	TMR1_ISR_@i_1188+1
  7073  03D6                     i1l2573:
  7074  03D6  0833               	movf	TMR1_ISR_@i_1188+1,w
  7075  03D7  3A80               	xorlw	128
  7076  03D8  00F9               	movwf	??_TMR1_ISR_
  7077  03D9  3080               	movlw	128
  7078  03DA  0279               	subwf	??_TMR1_ISR_,w
  7079  03DB  1D03               	skipz
  7080  03DC  2BDF               	goto	u180_25
  7081  03DD  3007               	movlw	7
  7082  03DE  0232               	subwf	TMR1_ISR_@i_1188,w
  7083  03DF                     u180_25:
  7084  03DF  1C03               	skipc
  7085  03E0  2BE2               	goto	u180_21
  7086  03E1  2BE3               	goto	u180_20
  7087  03E2                     u180_21:
  7088  03E2  2BE4               	goto	i1l2577
  7089  03E3                     u180_20:
  7090  03E3  2D29               	goto	i1l2665
  7091  03E4                     i1l2577:
  7092                           
  7093                           ;main.c: 1098:            {;main.c: 1099:                 light_array[i] = 0x00;
  7094  03E4  0140               	movlb	0	; select bank0
  7095  03E5  0832               	movf	TMR1_ISR_@i_1188,w
  7096  03E6  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7097  03E7  0086               	movwf	6
  7098  03E8  0187               	clrf	7
  7099  03E9  0181               	clrf	1
  7100  03EA                     i1l2579:
  7101                           
  7102                           ;main.c: 1100:            }
  7103  03EA  3001               	movlw	1
  7104  03EB  07B2               	addwf	TMR1_ISR_@i_1188,f
  7105  03EC  3000               	movlw	0
  7106  03ED  3DB3               	addwfc	TMR1_ISR_@i_1188+1,f
  7107  03EE  2BD6               	goto	i1l2573
  7108  03EF                     i1l2583:
  7109  03EF  0141               	movlb	1	; select bank1
  7110  03F0  0845               	movf	(_count+1)^(0+128),w
  7111  03F1  3A80               	xorlw	128
  7112  03F2  00F9               	movwf	??_TMR1_ISR_
  7113  03F3  3080               	movlw	128
  7114  03F4  0279               	subwf	??_TMR1_ISR_,w
  7115  03F5  1D03               	skipz
  7116  03F6  2BF9               	goto	u181_25
  7117  03F7  303E               	movlw	62
  7118  03F8  0244               	subwf	_count^(0+128),w
  7119  03F9                     u181_25:
  7120  03F9  1C03               	skipc
  7121  03FA  2BFC               	goto	u181_21
  7122  03FB  2BFD               	goto	u181_20
  7123  03FC                     u181_21:
  7124  03FC  2D29               	goto	i1l2665
  7125  03FD                     u181_20:
  7126  03FD                     i1l2585:
  7127                           
  7128                           ;main.c: 1103:        {;main.c: 1104:            jungle_count++;
  7129  03FD  3001               	movlw	1
  7130  03FE  00F9               	movwf	??_TMR1_ISR_
  7131  03FF  0879               	movf	??_TMR1_ISR_,w
  7132  0400  0140               	movlb	0	; select bank0
  7133  0401  07CF               	addwf	_jungle_count,f
  7134                           
  7135                           ;main.c: 1105:            if (jungle_count == 1)
  7136  0402  034F               	decf	_jungle_count,w
  7137  0403  1D03               	btfss	3,2
  7138  0404  2C06               	goto	u182_21
  7139  0405  2C07               	goto	u182_20
  7140  0406                     u182_21:
  7141  0406  2C25               	goto	i1l2589
  7142  0407                     u182_20:
  7143  0407                     i1l2587:
  7144                           
  7145                           ;main.c: 1106:            {;main.c: 1107:                 light_array[0] = 0x88;
  7146  0407  3088               	movlw	136
  7147  0408  00F9               	movwf	??_TMR1_ISR_
  7148  0409  0879               	movf	??_TMR1_ISR_,w
  7149  040A  0141               	movlb	1	; select bank1
  7150  040B  00B7               	movwf	_light_array^(0+128)
  7151                           
  7152                           ;main.c: 1108:                 light_array[1] = 0x44;
  7153  040C  3044               	movlw	68
  7154  040D  00F9               	movwf	??_TMR1_ISR_
  7155  040E  0879               	movf	??_TMR1_ISR_,w
  7156  040F  00B8               	movwf	(_light_array^(0+128)+1)
  7157                           
  7158                           ;main.c: 1109:                 light_array[2] = 0x22;
  7159  0410  3022               	movlw	34
  7160  0411  00F9               	movwf	??_TMR1_ISR_
  7161  0412  0879               	movf	??_TMR1_ISR_,w
  7162  0413  00B9               	movwf	(_light_array^(0+128)+2)
  7163                           
  7164                           ;main.c: 1110:                 light_array[3] = 0x11;
  7165  0414  3011               	movlw	17
  7166  0415  00F9               	movwf	??_TMR1_ISR_
  7167  0416  0879               	movf	??_TMR1_ISR_,w
  7168  0417  00BA               	movwf	(_light_array^(0+128)+3)
  7169                           
  7170                           ;main.c: 1111:                 light_array[4] = 0x88;
  7171  0418  3088               	movlw	136
  7172  0419  00F9               	movwf	??_TMR1_ISR_
  7173  041A  0879               	movf	??_TMR1_ISR_,w
  7174  041B  00BB               	movwf	(_light_array^(0+128)+4)
  7175                           
  7176                           ;main.c: 1112:                 light_array[5] = 0x44;
  7177  041C  3044               	movlw	68
  7178  041D  00F9               	movwf	??_TMR1_ISR_
  7179  041E  0879               	movf	??_TMR1_ISR_,w
  7180  041F  00BC               	movwf	(_light_array^(0+128)+5)
  7181                           
  7182                           ;main.c: 1113:                 light_array[6] = 0x22;
  7183  0420  3022               	movlw	34
  7184  0421  00F9               	movwf	??_TMR1_ISR_
  7185  0422  0879               	movf	??_TMR1_ISR_,w
  7186  0423  00BD               	movwf	(_light_array^(0+128)+6)
  7187                           
  7188                           ;main.c: 1114:            }
  7189  0424  2D29               	goto	i1l2665
  7190  0425                     i1l2589:
  7191  0425  3009               	movlw	9
  7192  0426  024F               	subwf	_jungle_count,w
  7193  0427  1803               	skipnc
  7194  0428  2C2A               	goto	u183_21
  7195  0429  2C2B               	goto	u183_20
  7196  042A                     u183_21:
  7197  042A  2C6E               	goto	i1l2605
  7198  042B                     u183_20:
  7199  042B                     i1l2591:
  7200                           
  7201                           ;main.c: 1116:            {;main.c: 1117:                if (last_note != song3[count])
  7202  042B  301C               	movlw	28
  7203  042C  00F9               	movwf	??_TMR1_ISR_
  7204  042D  3021               	movlw	33
  7205  042E  00FA               	movwf	??_TMR1_ISR_+1
  7206  042F  0141               	movlb	1	; select bank1
  7207  0430  0844               	movf	_count^(0+128),w
  7208  0431  0779               	addwf	??_TMR1_ISR_,w
  7209  0432  0086               	movwf	6
  7210  0433  0845               	movf	(_count+1)^(0+128),w
  7211  0434  3D7A               	addwfc	??_TMR1_ISR_+1,w
  7212  0435  0087               	movwf	7
  7213  0436  0801               	movf	1,w
  7214  0437  0140               	movlb	0	; select bank0
  7215  0438  0650               	xorwf	_last_note,w
  7216  0439  1903               	skipnz
  7217  043A  2C3C               	goto	u184_21
  7218  043B  2C3D               	goto	u184_20
  7219  043C                     u184_21:
  7220  043C  2D29               	goto	i1l2665
  7221  043D                     u184_20:
  7222  043D                     i1l2593:
  7223                           
  7224                           ;main.c: 1118:                {;main.c: 1119:                     for (int i = 0; i < 7;
      +                           i++)
  7225  043D  01C6               	clrf	TMR1_ISR_@i_1189
  7226  043E  01C7               	clrf	TMR1_ISR_@i_1189+1
  7227  043F                     i1l2595:
  7228  043F  0847               	movf	TMR1_ISR_@i_1189+1,w
  7229  0440  3A80               	xorlw	128
  7230  0441  00F9               	movwf	??_TMR1_ISR_
  7231  0442  3080               	movlw	128
  7232  0443  0279               	subwf	??_TMR1_ISR_,w
  7233  0444  1D03               	skipz
  7234  0445  2C48               	goto	u185_25
  7235  0446  3007               	movlw	7
  7236  0447  0246               	subwf	TMR1_ISR_@i_1189,w
  7237  0448                     u185_25:
  7238  0448  1C03               	skipc
  7239  0449  2C4B               	goto	u185_21
  7240  044A  2C4C               	goto	u185_20
  7241  044B                     u185_21:
  7242  044B  2C4D               	goto	i1l2599
  7243  044C                     u185_20:
  7244  044C  2D29               	goto	i1l2665
  7245  044D                     i1l2599:
  7246                           
  7247                           ;main.c: 1120:                     {;main.c: 1121:                         uint8_t light
      +                          s = light_array[i] >> 7;
  7248  044D  0140               	movlb	0	; select bank0
  7249  044E  0846               	movf	TMR1_ISR_@i_1189,w
  7250  044F  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7251  0450  0086               	movwf	6
  7252  0451  0187               	clrf	7
  7253  0452  0801               	movf	1,w
  7254  0453  00F9               	movwf	??_TMR1_ISR_
  7255  0454  3007               	movlw	7
  7256  0455                     u186_25:
  7257  0455  36F9               	lsrf	??_TMR1_ISR_,f
  7258  0456  0B89               	decfsz	9,f
  7259  0457  2C55               	goto	u186_25
  7260  0458  0879               	movf	??_TMR1_ISR_,w
  7261  0459  00FA               	movwf	??_TMR1_ISR_+1
  7262  045A  087A               	movf	??_TMR1_ISR_+1,w
  7263  045B  00A2               	movwf	TMR1_ISR_@lights_1190
  7264                           
  7265                           ;main.c: 1122:                         light_array[i] = (light_array[i] << 1) + lights;
  7266  045C  0846               	movf	TMR1_ISR_@i_1189,w
  7267  045D  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7268  045E  0086               	movwf	6
  7269  045F  0187               	clrf	7
  7270  0460  3501               	lslf	1,w
  7271  0461  0722               	addwf	TMR1_ISR_@lights_1190,w
  7272  0462  00F9               	movwf	??_TMR1_ISR_
  7273  0463  0846               	movf	TMR1_ISR_@i_1189,w
  7274  0464  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7275  0465  0086               	movwf	6
  7276  0466  0187               	clrf	7
  7277  0467  0879               	movf	??_TMR1_ISR_,w
  7278  0468  0081               	movwf	1
  7279  0469                     i1l2601:
  7280                           
  7281                           ;main.c: 1123:                     }
  7282  0469  3001               	movlw	1
  7283  046A  07C6               	addwf	TMR1_ISR_@i_1189,f
  7284  046B  3000               	movlw	0
  7285  046C  3DC7               	addwfc	TMR1_ISR_@i_1189+1,f
  7286  046D  2C3F               	goto	i1l2595
  7287  046E                     i1l2605:
  7288  046E  3010               	movlw	16
  7289  046F  024F               	subwf	_jungle_count,w
  7290  0470  1803               	skipnc
  7291  0471  2C73               	goto	u187_21
  7292  0472  2C74               	goto	u187_20
  7293  0473                     u187_21:
  7294  0473  2D28               	goto	i1l2663
  7295  0474                     u187_20:
  7296  0474                     i1l2607:
  7297                           
  7298                           ;main.c: 1127:            {;main.c: 1128:                if (last_note != song3[count])
  7299  0474  301C               	movlw	28
  7300  0475  00F9               	movwf	??_TMR1_ISR_
  7301  0476  3021               	movlw	33
  7302  0477  00FA               	movwf	??_TMR1_ISR_+1
  7303  0478  0141               	movlb	1	; select bank1
  7304  0479  0844               	movf	_count^(0+128),w
  7305  047A  0779               	addwf	??_TMR1_ISR_,w
  7306  047B  0086               	movwf	6
  7307  047C  0845               	movf	(_count+1)^(0+128),w
  7308  047D  3D7A               	addwfc	??_TMR1_ISR_+1,w
  7309  047E  0087               	movwf	7
  7310  047F  0801               	movf	1,w
  7311  0480  0140               	movlb	0	; select bank0
  7312  0481  0650               	xorwf	_last_note,w
  7313  0482  1903               	skipnz
  7314  0483  2C85               	goto	u188_21
  7315  0484  2C86               	goto	u188_20
  7316  0485                     u188_21:
  7317  0485  2D29               	goto	i1l2665
  7318  0486                     u188_20:
  7319  0486                     i1l2609:
  7320                           
  7321                           ;main.c: 1129:                {;main.c: 1130:                    uint8_t jungle_sw = (ju
      +                          ngle_count - 8)/2;
  7322  0486  3002               	movlw	2
  7323  0487  00F0               	movwf	___awdiv@divisor
  7324  0488  3000               	movlw	0
  7325  0489  00F1               	movwf	___awdiv@divisor+1
  7326  048A  084F               	movf	_jungle_count,w
  7327  048B  3EF8               	addlw	248
  7328  048C  00F2               	movwf	___awdiv@dividend
  7329  048D  30FF               	movlw	255
  7330  048E  1803               	skipnc
  7331  048F  3000               	movlw	0
  7332  0490  00F3               	movwf	___awdiv@dividend+1
  7333  0491  318C  242F  3180   	fcall	___awdiv
  7334  0494  0870               	movf	?___awdiv,w
  7335  0495  00F9               	movwf	??_TMR1_ISR_
  7336  0496  0879               	movf	??_TMR1_ISR_,w
  7337  0497  0140               	movlb	0	; select bank0
  7338  0498  00A3               	movwf	TMR1_ISR_@jungle_sw
  7339                           
  7340                           ;main.c: 1131:                    switch (jungle_sw)
  7341  0499  2D12               	goto	i1l2661
  7342  049A                     i1l2611:
  7343                           
  7344                           ;main.c: 1134:                             for (int i = 0; i < 7; i++)
  7345  049A  01B4               	clrf	TMR1_ISR_@i_1192
  7346  049B  01B5               	clrf	TMR1_ISR_@i_1192+1
  7347  049C                     i1l2613:
  7348  049C  0835               	movf	TMR1_ISR_@i_1192+1,w
  7349  049D  3A80               	xorlw	128
  7350  049E  00F9               	movwf	??_TMR1_ISR_
  7351  049F  3080               	movlw	128
  7352  04A0  0279               	subwf	??_TMR1_ISR_,w
  7353  04A1  1D03               	skipz
  7354  04A2  2CA5               	goto	u189_25
  7355  04A3  3007               	movlw	7
  7356  04A4  0234               	subwf	TMR1_ISR_@i_1192,w
  7357  04A5                     u189_25:
  7358  04A5  1C03               	skipc
  7359  04A6  2CA8               	goto	u189_21
  7360  04A7  2CA9               	goto	u189_20
  7361  04A8                     u189_21:
  7362  04A8  2CAA               	goto	i1l2617
  7363  04A9                     u189_20:
  7364  04A9  2D29               	goto	i1l2665
  7365  04AA                     i1l2617:
  7366                           
  7367                           ;main.c: 1135:                             {;main.c: 1136:                              
      +                             light_array[i] = 0x81;
  7368  04AA  3081               	movlw	129
  7369  04AB  00F9               	movwf	??_TMR1_ISR_
  7370  04AC  0140               	movlb	0	; select bank0
  7371  04AD  0834               	movf	TMR1_ISR_@i_1192,w
  7372  04AE  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7373  04AF  0086               	movwf	6
  7374  04B0  0187               	clrf	7
  7375  04B1  0879               	movf	??_TMR1_ISR_,w
  7376  04B2  0081               	movwf	1
  7377  04B3                     i1l2619:
  7378                           
  7379                           ;main.c: 1137:                             }
  7380  04B3  3001               	movlw	1
  7381  04B4  07B4               	addwf	TMR1_ISR_@i_1192,f
  7382  04B5  3000               	movlw	0
  7383  04B6  3DB5               	addwfc	TMR1_ISR_@i_1192+1,f
  7384  04B7  2C9C               	goto	i1l2613
  7385  04B8                     i1l2623:
  7386                           
  7387                           ;main.c: 1140:                             for (int i = 0; i < 7; i++)
  7388  04B8  01B6               	clrf	TMR1_ISR_@i_1193
  7389  04B9  01B7               	clrf	TMR1_ISR_@i_1193+1
  7390  04BA                     i1l2625:
  7391  04BA  0837               	movf	TMR1_ISR_@i_1193+1,w
  7392  04BB  3A80               	xorlw	128
  7393  04BC  00F9               	movwf	??_TMR1_ISR_
  7394  04BD  3080               	movlw	128
  7395  04BE  0279               	subwf	??_TMR1_ISR_,w
  7396  04BF  1D03               	skipz
  7397  04C0  2CC3               	goto	u190_25
  7398  04C1  3007               	movlw	7
  7399  04C2  0236               	subwf	TMR1_ISR_@i_1193,w
  7400  04C3                     u190_25:
  7401  04C3  1C03               	skipc
  7402  04C4  2CC6               	goto	u190_21
  7403  04C5  2CC7               	goto	u190_20
  7404  04C6                     u190_21:
  7405  04C6  2CC8               	goto	i1l2629
  7406  04C7                     u190_20:
  7407  04C7  2D29               	goto	i1l2665
  7408  04C8                     i1l2629:
  7409                           
  7410                           ;main.c: 1141:                             {;main.c: 1142:                              
      +                             light_array[i] = 0xC3;
  7411  04C8  30C3               	movlw	195
  7412  04C9  00F9               	movwf	??_TMR1_ISR_
  7413  04CA  0140               	movlb	0	; select bank0
  7414  04CB  0836               	movf	TMR1_ISR_@i_1193,w
  7415  04CC  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7416  04CD  0086               	movwf	6
  7417  04CE  0187               	clrf	7
  7418  04CF  0879               	movf	??_TMR1_ISR_,w
  7419  04D0  0081               	movwf	1
  7420  04D1                     i1l2631:
  7421                           
  7422                           ;main.c: 1143:                             }
  7423  04D1  3001               	movlw	1
  7424  04D2  07B6               	addwf	TMR1_ISR_@i_1193,f
  7425  04D3  3000               	movlw	0
  7426  04D4  3DB7               	addwfc	TMR1_ISR_@i_1193+1,f
  7427  04D5  2CBA               	goto	i1l2625
  7428  04D6                     i1l2635:
  7429                           
  7430                           ;main.c: 1146:                             for (int i = 0; i < 7; i++)
  7431  04D6  01B8               	clrf	TMR1_ISR_@i_1194
  7432  04D7  01B9               	clrf	TMR1_ISR_@i_1194+1
  7433  04D8                     i1l2637:
  7434  04D8  0839               	movf	TMR1_ISR_@i_1194+1,w
  7435  04D9  3A80               	xorlw	128
  7436  04DA  00F9               	movwf	??_TMR1_ISR_
  7437  04DB  3080               	movlw	128
  7438  04DC  0279               	subwf	??_TMR1_ISR_,w
  7439  04DD  1D03               	skipz
  7440  04DE  2CE1               	goto	u191_25
  7441  04DF  3007               	movlw	7
  7442  04E0  0238               	subwf	TMR1_ISR_@i_1194,w
  7443  04E1                     u191_25:
  7444  04E1  1C03               	skipc
  7445  04E2  2CE4               	goto	u191_21
  7446  04E3  2CE5               	goto	u191_20
  7447  04E4                     u191_21:
  7448  04E4  2CE6               	goto	i1l2641
  7449  04E5                     u191_20:
  7450  04E5  2D29               	goto	i1l2665
  7451  04E6                     i1l2641:
  7452                           
  7453                           ;main.c: 1147:                             {;main.c: 1148:                              
      +                             light_array[i] = 0xE7;
  7454  04E6  30E7               	movlw	231
  7455  04E7  00F9               	movwf	??_TMR1_ISR_
  7456  04E8  0140               	movlb	0	; select bank0
  7457  04E9  0838               	movf	TMR1_ISR_@i_1194,w
  7458  04EA  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7459  04EB  0086               	movwf	6
  7460  04EC  0187               	clrf	7
  7461  04ED  0879               	movf	??_TMR1_ISR_,w
  7462  04EE  0081               	movwf	1
  7463  04EF                     i1l2643:
  7464                           
  7465                           ;main.c: 1149:                             }
  7466  04EF  3001               	movlw	1
  7467  04F0  07B8               	addwf	TMR1_ISR_@i_1194,f
  7468  04F1  3000               	movlw	0
  7469  04F2  3DB9               	addwfc	TMR1_ISR_@i_1194+1,f
  7470  04F3  2CD8               	goto	i1l2637
  7471  04F4                     i1l2647:
  7472                           
  7473                           ;main.c: 1152:                             for (int i = 0; i < 7; i++)
  7474  04F4  01BA               	clrf	TMR1_ISR_@i_1195
  7475  04F5  01BB               	clrf	TMR1_ISR_@i_1195+1
  7476  04F6                     i1l2649:
  7477  04F6  083B               	movf	TMR1_ISR_@i_1195+1,w
  7478  04F7  3A80               	xorlw	128
  7479  04F8  00F9               	movwf	??_TMR1_ISR_
  7480  04F9  3080               	movlw	128
  7481  04FA  0279               	subwf	??_TMR1_ISR_,w
  7482  04FB  1D03               	skipz
  7483  04FC  2CFF               	goto	u192_25
  7484  04FD  3007               	movlw	7
  7485  04FE  023A               	subwf	TMR1_ISR_@i_1195,w
  7486  04FF                     u192_25:
  7487  04FF  1C03               	skipc
  7488  0500  2D02               	goto	u192_21
  7489  0501  2D03               	goto	u192_20
  7490  0502                     u192_21:
  7491  0502  2D04               	goto	i1l2653
  7492  0503                     u192_20:
  7493  0503  2D29               	goto	i1l2665
  7494  0504                     i1l2653:
  7495                           
  7496                           ;main.c: 1153:                             {;main.c: 1154:                              
      +                             light_array[i] = 0xFF;
  7497  0504  30FF               	movlw	255
  7498  0505  00F9               	movwf	??_TMR1_ISR_
  7499  0506  0140               	movlb	0	; select bank0
  7500  0507  083A               	movf	TMR1_ISR_@i_1195,w
  7501  0508  3EB7               	addlw	(low (_light_array| 0))& (0+255)
  7502  0509  0086               	movwf	6
  7503  050A  0187               	clrf	7
  7504  050B  0879               	movf	??_TMR1_ISR_,w
  7505  050C  0081               	movwf	1
  7506  050D                     i1l2655:
  7507                           
  7508                           ;main.c: 1155:                             }
  7509  050D  3001               	movlw	1
  7510  050E  07BA               	addwf	TMR1_ISR_@i_1195,f
  7511  050F  3000               	movlw	0
  7512  0510  3DBB               	addwfc	TMR1_ISR_@i_1195+1,f
  7513  0511  2CF6               	goto	i1l2649
  7514  0512                     i1l2661:
  7515  0512  0823               	movf	TMR1_ISR_@jungle_sw,w
  7516  0513  00F9               	movwf	??_TMR1_ISR_
  7517  0514  01FA               	clrf	??_TMR1_ISR_+1
  7518                           
  7519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7520                           ; Switch size 1, requested type "simple"
  7521                           ; Number of cases is 1, Range of values is 0 to 0
  7522                           ; switch strategies available:
  7523                           ; Name         Instructions Cycles
  7524                           ; simple_byte            4     3 (average)
  7525                           ; direct_byte            8     6 (fixed)
  7526                           ; jumptable            260     6 (fixed)
  7527                           ;	Chosen strategy is simple_byte
  7528  0515  087A               	movf	??_TMR1_ISR_+1,w
  7529  0516  3A00               	xorlw	0	; case 0
  7530  0517  1903               	skipnz
  7531  0518  2D1A               	goto	i1l3353
  7532  0519  2D29               	goto	i1l2665
  7533  051A                     i1l3353:
  7534                           
  7535                           ; Switch size 1, requested type "simple"
  7536                           ; Number of cases is 4, Range of values is 0 to 3
  7537                           ; switch strategies available:
  7538                           ; Name         Instructions Cycles
  7539                           ; simple_byte           13     7 (average)
  7540                           ; direct_byte           14     6 (fixed)
  7541                           ; jumptable            260     6 (fixed)
  7542                           ;	Chosen strategy is simple_byte
  7543  051A  0879               	movf	??_TMR1_ISR_,w
  7544  051B  3A00               	xorlw	0	; case 0
  7545  051C  1903               	skipnz
  7546  051D  2C9A               	goto	i1l2611
  7547  051E  3A01               	xorlw	1	; case 1
  7548  051F  1903               	skipnz
  7549  0520  2CB8               	goto	i1l2623
  7550  0521  3A03               	xorlw	3	; case 2
  7551  0522  1903               	skipnz
  7552  0523  2CD6               	goto	i1l2635
  7553  0524  3A01               	xorlw	1	; case 3
  7554  0525  1903               	skipnz
  7555  0526  2CF4               	goto	i1l2647
  7556  0527  2D29               	goto	i1l2665
  7557  0528                     i1l2663:
  7558                           
  7559                           ;main.c: 1161:            {;main.c: 1162:                jungle_count = 0;
  7560  0528  01CF               	clrf	_jungle_count
  7561  0529                     i1l2665:
  7562                           
  7563                           ;main.c: 1173:     if (song2_playing)
  7564  0529  0140               	movlb	0	; select bank0
  7565  052A  0851               	movf	_song2_playing,w
  7566  052B  1903               	btfsc	3,2
  7567  052C  2D2E               	goto	u193_21
  7568  052D  2D2F               	goto	u193_20
  7569  052E                     u193_21:
  7570  052E  2D71               	goto	i1l2683
  7571  052F                     u193_20:
  7572  052F                     i1l2667:
  7573                           
  7574                           ;main.c: 1174:     {;main.c: 1179:         if ((song2[count] == 212) &&(song2_pre[count]
      +                           == 0xD0))
  7575  052F  30BA               	movlw	186
  7576  0530  00F9               	movwf	??_TMR1_ISR_
  7577  0531  3021               	movlw	33
  7578  0532  00FA               	movwf	??_TMR1_ISR_+1
  7579  0533  0141               	movlb	1	; select bank1
  7580  0534  0844               	movf	_count^(0+128),w
  7581  0535  0779               	addwf	??_TMR1_ISR_,w
  7582  0536  0086               	movwf	6
  7583  0537  0845               	movf	(_count+1)^(0+128),w
  7584  0538  3D7A               	addwfc	??_TMR1_ISR_+1,w
  7585  0539  0087               	movwf	7
  7586  053A  30D4               	movlw	212
  7587  053B  0601               	xorwf	1,w
  7588  053C  1D03               	btfss	3,2
  7589  053D  2D3F               	goto	u194_21
  7590  053E  2D40               	goto	u194_20
  7591  053F                     u194_21:
  7592  053F  2D56               	goto	i1l2673
  7593  0540                     u194_20:
  7594  0540                     i1l2669:
  7595  0540  304B               	movlw	75
  7596  0541  00F9               	movwf	??_TMR1_ISR_
  7597  0542  3022               	movlw	34
  7598  0543  00FA               	movwf	??_TMR1_ISR_+1
  7599  0544  0844               	movf	_count^(0+128),w
  7600  0545  0779               	addwf	??_TMR1_ISR_,w
  7601  0546  0086               	movwf	6
  7602  0547  0845               	movf	(_count+1)^(0+128),w
  7603  0548  3D7A               	addwfc	??_TMR1_ISR_+1,w
  7604  0549  0087               	movwf	7
  7605  054A  30D0               	movlw	208
  7606  054B  0601               	xorwf	1,w
  7607  054C  1D03               	btfss	3,2
  7608  054D  2D4F               	goto	u195_21
  7609  054E  2D50               	goto	u195_20
  7610  054F                     u195_21:
  7611  054F  2D56               	goto	i1l2673
  7612  0550                     u195_20:
  7613  0550                     i1l2671:
  7614                           
  7615                           ;main.c: 1180:         {;main.c: 1181:            playNote(0, 0);
  7616  0550  01F0               	clrf	i1playNote@prescale
  7617  0551  3000               	movlw	0
  7618  0552  318B  238D  3180   	fcall	i1_playNote
  7619                           
  7620                           ;main.c: 1182:         }
  7621  0555  2D69               	goto	i1l2679
  7622  0556                     i1l2673:
  7623  0556  306E               	movlw	110
  7624  0557  0644               	xorwf	_count^(0+128),w
  7625  0558  0445               	iorwf	(_count+1)^(0+128),w
  7626  0559  1903               	btfsc	3,2
  7627  055A  2D5C               	goto	u196_21
  7628  055B  2D5D               	goto	u196_20
  7629  055C                     u196_21:
  7630  055C  2D64               	goto	i1l2677
  7631  055D                     u196_20:
  7632  055D                     i1l2675:
  7633  055D  306F               	movlw	111
  7634  055E  0644               	xorwf	_count^(0+128),w
  7635  055F  0445               	iorwf	(_count+1)^(0+128),w
  7636  0560  1D03               	btfss	3,2
  7637  0561  2D63               	goto	u197_21
  7638  0562  2D64               	goto	u197_20
  7639  0563                     u197_21:
  7640  0563  2D69               	goto	i1l2679
  7641  0564                     u197_20:
  7642  0564                     i1l2677:
  7643                           
  7644                           ;main.c: 1184:         {;main.c: 1185:            playNote(0, 0);
  7645  0564  01F0               	clrf	i1playNote@prescale
  7646  0565  3000               	movlw	0
  7647  0566  318B  238D  3180   	fcall	i1_playNote
  7648  0569                     i1l2679:
  7649                           
  7650                           ;main.c: 1200:         TMR1H = timer_high_2;
  7651  0569  0140               	movlb	0	; select bank0
  7652  056A  084D               	movf	_timer_high_2,w
  7653  056B  0144               	movlb	4	; select bank4
  7654  056C  008D               	movwf	13	;volatile
  7655  056D                     i1l2681:
  7656                           
  7657                           ;main.c: 1201:         TMR1L = timer_low_2;
  7658  056D  0140               	movlb	0	; select bank0
  7659  056E  084C               	movf	_timer_low_2,w
  7660  056F  0144               	movlb	4	; select bank4
  7661  0570  008C               	movwf	12	;volatile
  7662  0571                     i1l2683:
  7663                           
  7664                           ;main.c: 1205:     if (song3_playing)
  7665  0571  0140               	movlb	0	; select bank0
  7666  0572  0852               	movf	_song3_playing,w
  7667  0573  1903               	btfsc	3,2
  7668  0574  2D76               	goto	u198_21
  7669  0575  2D77               	goto	u198_20
  7670  0576                     u198_21:
  7671  0576  2D7E               	goto	i1l671
  7672  0577                     u198_20:
  7673  0577                     i1l2685:
  7674                           
  7675                           ;main.c: 1206:     {;main.c: 1207:         TMR1H = timer_high_3;
  7676  0577  084A               	movf	_timer_high_3,w
  7677  0578  0144               	movlb	4	; select bank4
  7678  0579  008D               	movwf	13	;volatile
  7679                           
  7680                           ;main.c: 1208:         TMR1L = timer_low_3;
  7681  057A  0140               	movlb	0	; select bank0
  7682  057B  0849               	movf	_timer_low_3,w
  7683  057C  0144               	movlb	4	; select bank4
  7684  057D  008C               	movwf	12	;volatile
  7685  057E                     i1l671:	
  7686                           ;main.c: 1209:     }
  7687                           
  7688                           
  7689                           ;main.c: 1212:     if ((count > 138) && silent_night_playing)
  7690  057E  0141               	movlb	1	; select bank1
  7691  057F  0845               	movf	(_count+1)^(0+128),w
  7692  0580  3A80               	xorlw	128
  7693  0581  00F9               	movwf	??_TMR1_ISR_
  7694  0582  3080               	movlw	128
  7695  0583  0279               	subwf	??_TMR1_ISR_,w
  7696  0584  1D03               	skipz
  7697  0585  2D88               	goto	u199_25
  7698  0586  308B               	movlw	139
  7699  0587  0244               	subwf	_count^(0+128),w
  7700  0588                     u199_25:
  7701  0588  1C03               	skipc
  7702  0589  2D8B               	goto	u199_21
  7703  058A  2D8C               	goto	u199_20
  7704  058B                     u199_21:
  7705  058B  2D97               	goto	i1l2691
  7706  058C                     u199_20:
  7707  058C                     i1l2687:
  7708  058C  0140               	movlb	0	; select bank0
  7709  058D  0853               	movf	_silent_night_playing,w
  7710  058E  1903               	btfsc	3,2
  7711  058F  2D91               	goto	u200_21
  7712  0590  2D92               	goto	u200_20
  7713  0591                     u200_21:
  7714  0591  2D97               	goto	i1l2691
  7715  0592                     u200_20:
  7716  0592                     i1l2689:
  7717                           
  7718                           ;main.c: 1213:     {;main.c: 1214:         presses = 0;
  7719  0592  0141               	movlb	1	; select bank1
  7720  0593  01C7               	clrf	_presses^(0+128)
  7721                           
  7722                           ;main.c: 1215:         count = 0;
  7723  0594  01C4               	clrf	_count^(0+128)
  7724  0595  01C5               	clrf	(_count+1)^(0+128)
  7725                           
  7726                           ;main.c: 1216:     }
  7727  0596  2DBF               	goto	i1l677
  7728  0597                     i1l2691:
  7729  0597  0141               	movlb	1	; select bank1
  7730  0598  0845               	movf	(_count+1)^(0+128),w
  7731  0599  3A80               	xorlw	128
  7732  059A  3C80               	sublw	128
  7733  059B  1D03               	skipz
  7734  059C  2DA0               	goto	u201_25
  7735  059D  0844               	movf	_count^(0+128),w
  7736  059E  0140               	movlb	0	; select bank0
  7737  059F  024B               	subwf	_song2_length,w
  7738  05A0                     u201_25:
  7739  05A0  1803               	skipnc
  7740  05A1  2DA3               	goto	u201_21
  7741  05A2  2DA4               	goto	u201_20
  7742  05A3                     u201_21:
  7743  05A3  2DAB               	goto	i1l2697
  7744  05A4                     u201_20:
  7745  05A4                     i1l2693:
  7746  05A4  0140               	movlb	0	; select bank0
  7747  05A5  0851               	movf	_song2_playing,w
  7748  05A6  1903               	btfsc	3,2
  7749  05A7  2DA9               	goto	u202_21
  7750  05A8  2DAA               	goto	u202_20
  7751  05A9                     u202_21:
  7752  05A9  2DAB               	goto	i1l2697
  7753  05AA                     u202_20:
  7754  05AA  2D92               	goto	i1l2689
  7755  05AB                     i1l2697:
  7756  05AB  0141               	movlb	1	; select bank1
  7757  05AC  0845               	movf	(_count+1)^(0+128),w
  7758  05AD  3A80               	xorlw	128
  7759  05AE  3C80               	sublw	128
  7760  05AF  1D03               	skipz
  7761  05B0  2DB4               	goto	u203_25
  7762  05B1  0844               	movf	_count^(0+128),w
  7763  05B2  0140               	movlb	0	; select bank0
  7764  05B3  0248               	subwf	_song3_length,w
  7765  05B4                     u203_25:
  7766  05B4  1803               	skipnc
  7767  05B5  2DB7               	goto	u203_21
  7768  05B6  2DB8               	goto	u203_20
  7769  05B7                     u203_21:
  7770  05B7  2DBF               	goto	i1l677
  7771  05B8                     u203_20:
  7772  05B8                     i1l2699:
  7773  05B8  0140               	movlb	0	; select bank0
  7774  05B9  0852               	movf	_song3_playing,w
  7775  05BA  1903               	btfsc	3,2
  7776  05BB  2DBD               	goto	u204_21
  7777  05BC  2DBE               	goto	u204_20
  7778  05BD                     u204_21:
  7779  05BD  2DBF               	goto	i1l677
  7780  05BE                     u204_20:
  7781  05BE  2D92               	goto	i1l2689
  7782  05BF                     i1l677:
  7783  05BF  0008               	return
  7784  05C0                     __end_of_TMR1_ISR_:
  7785                           
  7786                           	psect	text23
  7787  0B8D                     __ptext23:	
  7788 ;; *************** function i1_playNote *****************
  7789 ;; Defined at:
  7790 ;;		line 1244 in file "main.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  note            1    wreg     unsigned char 
  7793 ;;  prescale        1    0[COMMON] unsigned char 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  note            1    2[COMMON] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      void 
  7798 ;; Registers used:
  7799 ;;		wreg
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7805 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;Total ram usage:        3 bytes
  7810 ;; Hardware stack levels used: 1
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_TMR1_ISR_
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           
  7819                           ;psect for function i1_playNote
  7820  0B8D                     i1_playNote:
  7821                           
  7822                           ;incstack = 0
  7823                           ; Regs used in i1_playNote: [wreg]
  7824                           ;i1playNote@note stored from wreg
  7825  0B8D  00F2               	movwf	i1playNote@note
  7826  0B8E                     i1l2235:
  7827                           
  7828                           ;main.c: 1244: void playNote(uint8_t note, uint8_t prescale);main.c: 1245: {;main.c: 124
      +                          7:     if (note != last_note)
  7829  0B8E  0872               	movf	i1playNote@note,w
  7830  0B8F  0140               	movlb	0	; select bank0
  7831  0B90  0650               	xorwf	_last_note,w
  7832  0B91  1903               	skipnz
  7833  0B92  2B94               	goto	u133_21
  7834  0B93  2B95               	goto	u133_20
  7835  0B94                     u133_21:
  7836  0B94  2B98               	goto	i1l680
  7837  0B95                     u133_20:
  7838  0B95                     i1l2237:
  7839                           
  7840                           ;main.c: 1248:     {;main.c: 1249:         T2PR = note;
  7841  0B95  0872               	movf	i1playNote@note,w
  7842  0B96  0145               	movlb	5	; select bank5
  7843  0B97  008D               	movwf	13	;volatile
  7844  0B98                     i1l680:	
  7845                           ;main.c: 1250:     }
  7846                           
  7847                           
  7848                           ;main.c: 1252:     if (prescale != last_prescale)
  7849  0B98  0870               	movf	i1playNote@prescale,w
  7850  0B99  0141               	movlb	1	; select bank1
  7851  0B9A  0648               	xorwf	_last_prescale^(0+128),w
  7852  0B9B  1903               	skipnz
  7853  0B9C  2B9E               	goto	u134_21
  7854  0B9D  2B9F               	goto	u134_20
  7855  0B9E                     u134_21:
  7856  0B9E  2BA2               	goto	i1l681
  7857  0B9F                     u134_20:
  7858  0B9F                     i1l2239:
  7859                           
  7860                           ;main.c: 1253:     {;main.c: 1254:         T2CON = prescale;
  7861  0B9F  0870               	movf	i1playNote@prescale,w
  7862  0BA0  0145               	movlb	5	; select bank5
  7863  0BA1  008E               	movwf	14	;volatile
  7864  0BA2                     i1l681:	
  7865                           ;main.c: 1255:     }
  7866                           
  7867                           
  7868                           ;main.c: 1256:     last_note = note;
  7869  0BA2  0872               	movf	i1playNote@note,w
  7870  0BA3  00F1               	movwf	??i1_playNote
  7871  0BA4  0871               	movf	??i1_playNote,w
  7872  0BA5  0140               	movlb	0	; select bank0
  7873  0BA6  00D0               	movwf	_last_note
  7874                           
  7875                           ;main.c: 1257:     last_prescale = prescale;
  7876  0BA7  0870               	movf	i1playNote@prescale,w
  7877  0BA8  00F1               	movwf	??i1_playNote
  7878  0BA9  0871               	movf	??i1_playNote,w
  7879  0BAA  0141               	movlb	1	; select bank1
  7880  0BAB  00C8               	movwf	_last_prescale^(0+128)
  7881  0BAC                     i1l682:
  7882  0BAC  0008               	return
  7883  0BAD                     __end_ofi1_playNote:
  7884                           
  7885                           	psect	text24
  7886  0C2F                     __ptext24:	
  7887 ;; *************** function ___awdiv *****************
  7888 ;; Defined at:
  7889 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  divisor         2    0[COMMON] int 
  7892 ;;  dividend        2    2[COMMON] int 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  quotient        2    7[COMMON] int 
  7895 ;;  sign            1    6[COMMON] unsigned char 
  7896 ;;  counter         1    5[COMMON] unsigned char 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  2    0[COMMON] int 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;Total ram usage:        9 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; This function calls:
  7913 ;;		Nothing
  7914 ;; This function is called by:
  7915 ;;		_TMR1_ISR_
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function ___awdiv
  7921  0C2F                     ___awdiv:
  7922  0C2F                     i1l2191:	
  7923                           ;incstack = 0
  7924                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7925                           
  7926  0C2F  01F6               	clrf	___awdiv@sign
  7927  0C30                     i1l2193:
  7928  0C30  1FF1               	btfss	___awdiv@divisor+1,7
  7929  0C31  2C33               	goto	u123_21
  7930  0C32  2C34               	goto	u123_20
  7931  0C33                     u123_21:
  7932  0C33  2C3B               	goto	i1l2199
  7933  0C34                     u123_20:
  7934  0C34                     i1l2195:
  7935  0C34  09F0               	comf	___awdiv@divisor,f
  7936  0C35  09F1               	comf	___awdiv@divisor+1,f
  7937  0C36  0AF0               	incf	___awdiv@divisor,f
  7938  0C37  1903               	skipnz
  7939  0C38  0AF1               	incf	___awdiv@divisor+1,f
  7940  0C39                     i1l2197:
  7941  0C39  01F6               	clrf	___awdiv@sign
  7942  0C3A  0AF6               	incf	___awdiv@sign,f
  7943  0C3B                     i1l2199:
  7944  0C3B  1FF3               	btfss	___awdiv@dividend+1,7
  7945  0C3C  2C3E               	goto	u124_21
  7946  0C3D  2C3F               	goto	u124_20
  7947  0C3E                     u124_21:
  7948  0C3E  2C48               	goto	i1l2205
  7949  0C3F                     u124_20:
  7950  0C3F                     i1l2201:
  7951  0C3F  09F2               	comf	___awdiv@dividend,f
  7952  0C40  09F3               	comf	___awdiv@dividend+1,f
  7953  0C41  0AF2               	incf	___awdiv@dividend,f
  7954  0C42  1903               	skipnz
  7955  0C43  0AF3               	incf	___awdiv@dividend+1,f
  7956  0C44                     i1l2203:
  7957  0C44  3001               	movlw	1
  7958  0C45  00F4               	movwf	??___awdiv
  7959  0C46  0874               	movf	??___awdiv,w
  7960  0C47  06F6               	xorwf	___awdiv@sign,f
  7961  0C48                     i1l2205:
  7962  0C48  01F7               	clrf	___awdiv@quotient
  7963  0C49  01F8               	clrf	___awdiv@quotient+1
  7964  0C4A                     i1l2207:
  7965  0C4A  0870               	movf	___awdiv@divisor,w
  7966  0C4B  0471               	iorwf	___awdiv@divisor+1,w
  7967  0C4C  1903               	btfsc	3,2
  7968  0C4D  2C4F               	goto	u125_21
  7969  0C4E  2C50               	goto	u125_20
  7970  0C4F                     u125_21:
  7971  0C4F  2C7F               	goto	i1l2227
  7972  0C50                     u125_20:
  7973  0C50                     i1l2209:
  7974  0C50  01F5               	clrf	___awdiv@counter
  7975  0C51  0AF5               	incf	___awdiv@counter,f
  7976  0C52  2C5C               	goto	i1l2215
  7977  0C53                     i1l2211:
  7978  0C53  3001               	movlw	1
  7979  0C54                     u126_25:
  7980  0C54  35F0               	lslf	___awdiv@divisor,f
  7981  0C55  0DF1               	rlf	___awdiv@divisor+1,f
  7982  0C56  0B89               	decfsz	9,f
  7983  0C57  2C54               	goto	u126_25
  7984  0C58                     i1l2213:
  7985  0C58  3001               	movlw	1
  7986  0C59  00F4               	movwf	??___awdiv
  7987  0C5A  0874               	movf	??___awdiv,w
  7988  0C5B  07F5               	addwf	___awdiv@counter,f
  7989  0C5C                     i1l2215:
  7990  0C5C  1FF1               	btfss	___awdiv@divisor+1,7
  7991  0C5D  2C5F               	goto	u127_21
  7992  0C5E  2C60               	goto	u127_20
  7993  0C5F                     u127_21:
  7994  0C5F  2C53               	goto	i1l2211
  7995  0C60                     u127_20:
  7996  0C60                     i1l2217:
  7997  0C60  3001               	movlw	1
  7998  0C61                     u128_25:
  7999  0C61  35F7               	lslf	___awdiv@quotient,f
  8000  0C62  0DF8               	rlf	___awdiv@quotient+1,f
  8001  0C63  0B89               	decfsz	9,f
  8002  0C64  2C61               	goto	u128_25
  8003  0C65  0871               	movf	___awdiv@divisor+1,w
  8004  0C66  0273               	subwf	___awdiv@dividend+1,w
  8005  0C67  1D03               	skipz
  8006  0C68  2C6B               	goto	u129_25
  8007  0C69  0870               	movf	___awdiv@divisor,w
  8008  0C6A  0272               	subwf	___awdiv@dividend,w
  8009  0C6B                     u129_25:
  8010  0C6B  1C03               	skipc
  8011  0C6C  2C6E               	goto	u129_21
  8012  0C6D  2C6F               	goto	u129_20
  8013  0C6E                     u129_21:
  8014  0C6E  2C74               	goto	i1l2223
  8015  0C6F                     u129_20:
  8016  0C6F                     i1l2219:
  8017  0C6F  0870               	movf	___awdiv@divisor,w
  8018  0C70  02F2               	subwf	___awdiv@dividend,f
  8019  0C71  0871               	movf	___awdiv@divisor+1,w
  8020  0C72  3BF3               	subwfb	___awdiv@dividend+1,f
  8021  0C73                     i1l2221:
  8022  0C73  1477               	bsf	___awdiv@quotient,0
  8023  0C74                     i1l2223:
  8024  0C74  3001               	movlw	1
  8025  0C75                     u130_25:
  8026  0C75  36F1               	lsrf	___awdiv@divisor+1,f
  8027  0C76  0CF0               	rrf	___awdiv@divisor,f
  8028  0C77  0B89               	decfsz	9,f
  8029  0C78  2C75               	goto	u130_25
  8030  0C79                     i1l2225:
  8031  0C79  3001               	movlw	1
  8032  0C7A  02F5               	subwf	___awdiv@counter,f
  8033  0C7B  1D03               	btfss	3,2
  8034  0C7C  2C7E               	goto	u131_21
  8035  0C7D  2C7F               	goto	u131_20
  8036  0C7E                     u131_21:
  8037  0C7E  2C60               	goto	i1l2217
  8038  0C7F                     u131_20:
  8039  0C7F                     i1l2227:
  8040  0C7F  0876               	movf	___awdiv@sign,w
  8041  0C80  1903               	btfsc	3,2
  8042  0C81  2C83               	goto	u132_21
  8043  0C82  2C84               	goto	u132_20
  8044  0C83                     u132_21:
  8045  0C83  2C89               	goto	i1l2231
  8046  0C84                     u132_20:
  8047  0C84                     i1l2229:
  8048  0C84  09F7               	comf	___awdiv@quotient,f
  8049  0C85  09F8               	comf	___awdiv@quotient+1,f
  8050  0C86  0AF7               	incf	___awdiv@quotient,f
  8051  0C87  1903               	skipnz
  8052  0C88  0AF8               	incf	___awdiv@quotient+1,f
  8053  0C89                     i1l2231:
  8054  0C89  0878               	movf	___awdiv@quotient+1,w
  8055  0C8A  00F1               	movwf	?___awdiv+1
  8056  0C8B  0877               	movf	___awdiv@quotient,w
  8057  0C8C  00F0               	movwf	?___awdiv
  8058  0C8D                     i1l924:
  8059  0C8D  0008               	return
  8060  0C8E                     __end_of___awdiv:
  8061                           
  8062                           	psect	text25
  8063  0B08                     __ptext25:	
  8064 ;; *************** function _TMR0_ISR *****************
  8065 ;; Defined at:
  8066 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0, pclath, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;Total ram usage:        0 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 1
  8087 ;; This function calls:
  8088 ;;		Absolute function
  8089 ;;		_TMR0_DefaultInterruptHandler
  8090 ;;		_TMR0_ISR_
  8091 ;; This function is called by:
  8092 ;;		_INTERRUPT_InterruptManager
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           
  8097                           ;psect for function _TMR0_ISR
  8098  0B08                     _TMR0_ISR:
  8099  0B08                     i1l2721:	
  8100                           ;incstack = 0
  8101                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8102                           
  8103                           
  8104                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  8105  0B08  014E               	movlb	14	; select bank14
  8106  0B09  128C               	bcf	12,5	;volatile
  8107  0B0A                     i1l2723:
  8108                           
  8109                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  8110  0B0A  0141               	movlb	1	; select bank1
  8111  0B0B  0841               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
  8112  0B0C  014B               	movlb	11	; select bank11
  8113  0B0D  009D               	movwf	29	;volatile
  8114  0B0E                     i1l2725:
  8115                           
  8116                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  8117  0B0E  0141               	movlb	1	; select bank1
  8118  0B0F  0840               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
  8119  0B10  014B               	movlb	11	; select bank11
  8120  0B11  009C               	movwf	28	;volatile
  8121  0B12                     i1l2727:
  8122                           
  8123                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
  8124  0B12  0141               	movlb	1	; select bank1
  8125  0B13  083E               	movf	_TMR0_InterruptHandler^(0+128),w
  8126  0B14  043F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  8127  0B15  1903               	btfsc	3,2
  8128  0B16  2B18               	goto	u205_21
  8129  0B17  2B19               	goto	u205_20
  8130  0B18                     u205_21:
  8131  0B18  2B1E               	goto	i1l328
  8132  0B19                     u205_20:
  8133  0B19                     i1l2729:
  8134                           
  8135                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
  8136  0B19  083F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  8137  0B1A  008A               	movwf	10
  8138  0B1B  083E               	movf	_TMR0_InterruptHandler^(0+128),w
  8139  0B1C  000A               	callw
  8140  0B1D  318B               	pagesel	$
  8141  0B1E                     i1l328:
  8142  0B1E  0008               	return
  8143  0B1F                     __end_of_TMR0_ISR:
  8144                           
  8145                           	psect	text26
  8146  0002                     __ptext26:	
  8147 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8148 ;; Defined at:
  8149 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;		None
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      void 
  8156 ;; Registers used:
  8157 ;;		None
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;Total ram usage:        0 bytes
  8168 ;; Hardware stack levels used: 1
  8169 ;; This function calls:
  8170 ;;		Nothing
  8171 ;; This function is called by:
  8172 ;;		_TMR0_Initialize
  8173 ;;		_TMR0_ISR
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           
  8178                           ;psect for function _TMR0_DefaultInterruptHandler
  8179  0002                     _TMR0_DefaultInterruptHandler:
  8180  0002                     i1l334:	
  8181                           ;incstack = 0
  8182                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8183                           
  8184  0002  0008               	return
  8185  0003                     __end_of_TMR0_DefaultInterruptHandler:
  8186                           
  8187                           	psect	text27
  8188  0A58                     __ptext27:	
  8189 ;; *************** function _TMR0_ISR_ *****************
  8190 ;; Defined at:
  8191 ;;		line 728 in file "main.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;		None
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;		None
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      void 
  8198 ;; Registers used:
  8199 ;;		None
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;Total ram usage:        0 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_main
  8215 ;;		_TMR0_ISR
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           
  8220                           ;psect for function _TMR0_ISR_
  8221  0A58                     _TMR0_ISR_:
  8222  0A58                     i1l2361:	
  8223                           ;incstack = 0
  8224                           ; Regs used in _TMR0_ISR_: []
  8225                           
  8226                           
  8227                           ;main.c: 730:     TMR0_complete = 1;
  8228  0A58  0141               	movlb	1	; select bank1
  8229  0A59  01C9               	clrf	_TMR0_complete^(0+128)
  8230  0A5A  0AC9               	incf	_TMR0_complete^(0+128),f
  8231  0A5B                     i1l569:
  8232  0A5B  0008               	return
  8233  0A5C                     __end_of_TMR0_ISR_:
  8234                           
  8235                           	psect	text28
  8236  0A5C                     __ptext28:	
  8237 ;; *************** function _INT_ISR *****************
  8238 ;; Defined at:
  8239 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;		None
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;		None
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      void 
  8246 ;; Registers used:
  8247 ;;		wreg, status,2, status,0, pclath, cstack
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;Total ram usage:        0 bytes
  8258 ;; Hardware stack levels used: 1
  8259 ;; Hardware stack levels required when called: 3
  8260 ;; This function calls:
  8261 ;;		_INT_CallBack
  8262 ;; This function is called by:
  8263 ;;		_INTERRUPT_InterruptManager
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           
  8268                           ;psect for function _INT_ISR
  8269  0A5C                     _INT_ISR:
  8270  0A5C                     i1l2731:	
  8271                           ;incstack = 0
  8272                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  8273                           
  8274                           
  8275                           ;mcc_generated_files/ext_int.c: 47:     (PIR0bits.INTF = 0);
  8276  0A5C  014E               	movlb	14	; select bank14
  8277  0A5D  100C               	bcf	12,0	;volatile
  8278  0A5E                     i1l2733:
  8279                           
  8280                           ;mcc_generated_files/ext_int.c: 50:     INT_CallBack();
  8281  0A5E  318A  229C  318A   	fcall	_INT_CallBack
  8282  0A61                     i1l271:
  8283  0A61  0008               	return
  8284  0A62                     __end_of_INT_ISR:
  8285                           
  8286                           	psect	text29
  8287  0A9C                     __ptext29:	
  8288 ;; *************** function _INT_CallBack *****************
  8289 ;; Defined at:
  8290 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  1    wreg      void 
  8297 ;; Registers used:
  8298 ;;		wreg, status,2, status,0, pclath, cstack
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8308 ;;Total ram usage:        0 bytes
  8309 ;; Hardware stack levels used: 1
  8310 ;; Hardware stack levels required when called: 2
  8311 ;; This function calls:
  8312 ;;		Absolute function
  8313 ;;		_EXT_ISR
  8314 ;;		_INT_DefaultInterruptHandler
  8315 ;; This function is called by:
  8316 ;;		_INT_ISR
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _INT_CallBack
  8322  0A9C                     _INT_CallBack:
  8323  0A9C                     i1l2337:	
  8324                           ;incstack = 0
  8325                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8326                           
  8327                           
  8328                           ;mcc_generated_files/ext_int.c: 57:     if(INT_InterruptHandler)
  8329  0A9C  0141               	movlb	1	; select bank1
  8330  0A9D  0842               	movf	_INT_InterruptHandler^(0+128),w
  8331  0A9E  0443               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
  8332  0A9F  1903               	btfsc	3,2
  8333  0AA0  2AA2               	goto	u135_21
  8334  0AA1  2AA3               	goto	u135_20
  8335  0AA2                     u135_21:
  8336  0AA2  2AA8               	goto	i1l275
  8337  0AA3                     u135_20:
  8338  0AA3                     i1l2339:
  8339                           
  8340                           ;mcc_generated_files/ext_int.c: 58:     {;mcc_generated_files/ext_int.c: 59:         INT
      +                          _InterruptHandler();
  8341  0AA3  0843               	movf	(_INT_InterruptHandler+1)^(0+128),w
  8342  0AA4  008A               	movwf	10
  8343  0AA5  0842               	movf	_INT_InterruptHandler^(0+128),w
  8344  0AA6  000A               	callw
  8345  0AA7  318A               	pagesel	$
  8346  0AA8                     i1l275:
  8347  0AA8  0008               	return
  8348  0AA9                     __end_of_INT_CallBack:
  8349                           
  8350                           	psect	text30
  8351  0B6F                     __ptext30:	
  8352 ;; *************** function _EXT_ISR *****************
  8353 ;; Defined at:
  8354 ;;		line 691 in file "main.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  1    wreg      void 
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0, pclath, cstack
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;Total ram usage:        1 bytes
  8373 ;; Hardware stack levels used: 1
  8374 ;; Hardware stack levels required when called: 1
  8375 ;; This function calls:
  8376 ;;		_TMR0_Reload
  8377 ;; This function is called by:
  8378 ;;		_main
  8379 ;;		_INT_CallBack
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           
  8384                           ;psect for function _EXT_ISR
  8385  0B6F                     _EXT_ISR:
  8386  0B6F                     i1l2177:	
  8387                           ;incstack = 0
  8388                           ; Regs used in _EXT_ISR: [wreg+status,2+status,0+pclath+cstack]
  8389                           
  8390                           
  8391                           ;main.c: 706:     presses++;
  8392  0B6F  3001               	movlw	1
  8393  0B70  00F0               	movwf	??_EXT_ISR
  8394  0B71  0870               	movf	??_EXT_ISR,w
  8395  0B72  0141               	movlb	1	; select bank1
  8396  0B73  07C7               	addwf	_presses^(0+128),f
  8397  0B74                     i1l2179:
  8398                           
  8399                           ;main.c: 707:     TMR0_Reload();
  8400  0B74  318A  228A  318B   	fcall	_TMR0_Reload
  8401  0B77                     i1l2181:
  8402                           
  8403                           ;main.c: 710:     if (T1CONbits.TMR1ON)
  8404  0B77  0144               	movlb	4	; select bank4
  8405  0B78  1C0E               	btfss	14,0	;volatile
  8406  0B79  2B7B               	goto	u121_21
  8407  0B7A  2B7C               	goto	u121_20
  8408  0B7B                     u121_21:
  8409  0B7B  2B81               	goto	i1l2185
  8410  0B7C                     u121_20:
  8411  0B7C                     i1l2183:
  8412                           
  8413                           ;main.c: 711:     {;main.c: 712:         presses = 0;
  8414  0B7C  0141               	movlb	1	; select bank1
  8415  0B7D  01C7               	clrf	_presses^(0+128)
  8416                           
  8417                           ;main.c: 713:         count = 0;
  8418  0B7E  01C4               	clrf	_count^(0+128)
  8419  0B7F  01C5               	clrf	(_count+1)^(0+128)
  8420                           
  8421                           ;main.c: 714:     }
  8422  0B80  2B83               	goto	i1l2187
  8423  0B81                     i1l2185:
  8424                           
  8425                           ;main.c: 717:     {;main.c: 718:         TMR0_complete = 0;
  8426  0B81  0141               	movlb	1	; select bank1
  8427  0B82  01C9               	clrf	_TMR0_complete^(0+128)
  8428  0B83                     i1l2187:
  8429                           
  8430                           ;main.c: 721:     if (presses > num_songs)
  8431  0B83  0847               	movf	_presses^(0+128),w
  8432  0B84  0140               	movlb	0	; select bank0
  8433  0B85  024E               	subwf	_num_songs,w
  8434  0B86  1803               	skipnc
  8435  0B87  2B89               	goto	u122_21
  8436  0B88  2B8A               	goto	u122_20
  8437  0B89                     u122_21:
  8438  0B89  2B8C               	goto	i1l566
  8439  0B8A                     u122_20:
  8440  0B8A                     i1l2189:
  8441                           
  8442                           ;main.c: 722:     {;main.c: 723:         presses = 0;
  8443  0B8A  0141               	movlb	1	; select bank1
  8444  0B8B  01C7               	clrf	_presses^(0+128)
  8445  0B8C                     i1l566:
  8446  0B8C  0008               	return
  8447  0B8D                     __end_of_EXT_ISR:
  8448                           
  8449                           	psect	text31
  8450  0A54                     __ptext31:	
  8451 ;; *************** function _INT_DefaultInterruptHandler *****************
  8452 ;; Defined at:
  8453 ;;		line 67 in file "mcc_generated_files/ext_int.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;		None
  8456 ;; Auto vars:     Size  Location     Type
  8457 ;;		None
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  1    wreg      void 
  8460 ;; Registers used:
  8461 ;;		None
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8471 ;;Total ram usage:        0 bytes
  8472 ;; Hardware stack levels used: 1
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_EXT_INT_Initialize
  8477 ;;		_INT_CallBack
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           
  8482                           ;psect for function _INT_DefaultInterruptHandler
  8483  0A54                     _INT_DefaultInterruptHandler:
  8484  0A54                     i1l281:	
  8485                           ;incstack = 0
  8486                           ; Regs used in _INT_DefaultInterruptHandler: []
  8487                           
  8488  0A54  0008               	return
  8489  0A55                     __end_of_INT_DefaultInterruptHandler:
  8490                           
  8491                           	psect	text32
  8492  0A8A                     __ptext32:	
  8493 ;; *************** function _TMR0_Reload *****************
  8494 ;; Defined at:
  8495 ;;		line 127 in file "mcc_generated_files/tmr0.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;Total ram usage:        0 bytes
  8514 ;; Hardware stack levels used: 1
  8515 ;; This function calls:
  8516 ;;		Nothing
  8517 ;; This function is called by:
  8518 ;;		_EXT_ISR
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           
  8523                           ;psect for function _TMR0_Reload
  8524  0A8A                     _TMR0_Reload:
  8525  0A8A                     i1l2161:	
  8526                           ;incstack = 0
  8527                           ; Regs used in _TMR0_Reload: [wreg+status,2]
  8528                           
  8529                           
  8530                           ;mcc_generated_files/tmr0.c: 130:     TMR0H = timer0ReloadVal16bit >> 8;
  8531  0A8A  0141               	movlb	1	; select bank1
  8532  0A8B  0841               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
  8533  0A8C  014B               	movlb	11	; select bank11
  8534  0A8D  009D               	movwf	29	;volatile
  8535  0A8E                     i1l2163:
  8536                           
  8537                           ;mcc_generated_files/tmr0.c: 131:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  8538  0A8E  0141               	movlb	1	; select bank1
  8539  0A8F  0840               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
  8540  0A90  014B               	movlb	11	; select bank11
  8541  0A91  009C               	movwf	28	;volatile
  8542  0A92                     i1l324:
  8543  0A92  0008               	return
  8544  0A93                     __end_of_TMR0_Reload:
  8545  007E                     btemp	set	126	;btemp
  8546  007E                     int$flags	set	126
  8547  007E                     wtemp0	set	126
  8548  207E                     
  8549                           	psect	config
  8550                           
  8551                           ;Config register CONFIG1 @ 0x8007
  8552                           ;	External Oscillator Mode Selection bits
  8553                           ;	FEXTOSC = OFF, Oscillator not enabled
  8554                           ;	Power-up Default Value for COSC bits
  8555                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  8556                           ;	Clock Out Enable bit
  8557                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  8558                           ;	VDD Range Analog Calibration Selection bit
  8559                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  8560  8007                     	org	32775
  8561  8007  3FED               	dw	16365
  8562                           
  8563                           ;Config register CONFIG2 @ 0x8008
  8564                           ;	Master Clear Enable bit
  8565                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  8566                           ;	Power-up Timer Selection bits
  8567                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8568                           ;	WDT Operating Mode bits
  8569                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  8570                           ;	Brown-out Reset Enable bits
  8571                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8572                           ;	Brown-out Reset Voltage Selection bit
  8573                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  8574                           ;	PPSLOCKED One-Way Set Enable bit
  8575                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  8576                           ;	Stack Overflow/Underflow Reset Enable bit
  8577                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8578  8008                     	org	32776
  8579  8008  3FE7               	dw	16359
  8580                           
  8581                           ;Config register CONFIG4 @ 0x800A
  8582                           ;	Boot Block Size Selection bits
  8583                           ;	BBSIZE = BB512, 512 words boot block size
  8584                           ;	Boot Block Enable bit
  8585                           ;	BBEN = OFF, Boot Block is disabled
  8586                           ;	SAF Enable bit
  8587                           ;	SAFEN = OFF, SAF is disabled
  8588                           ;	Application Block Write Protection bit
  8589                           ;	WRTAPP = OFF, Application Block is not write-protected
  8590                           ;	Boot Block Write Protection bit
  8591                           ;	WRTB = OFF, Boot Block is not write-protected
  8592                           ;	Configuration Registers Write Protection bit
  8593                           ;	WRTC = OFF, Configuration Registers are not write-protected
  8594                           ;	Storage Area Flash (SAF) Write Protection bit
  8595                           ;	WRTSAF = OFF, SAF is not write-protected
  8596                           ;	Low Voltage Programming Enable bit
  8597                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  8598  800A                     	org	32778
  8599  800A  3FFF               	dw	16383
  8600                           
  8601                           ;Config register CONFIG5 @ 0x800B
  8602                           ;	User Program Flash Memory Code Protection bit
  8603                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  8604  800B                     	org	32779
  8605  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    4
    Data        896
    BSS         11
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      56
    BANK1            46     23      42
    BANK2             0      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    displayMatrix@states	PTR unsigned char  size(1) Largest target is 7
		 -> light_array(BANK1[7]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_ISR_(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_ISR_(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_ISR_(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXT_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EXT_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_ISR_
    _TMR1_ISR_->___awdiv
    _INT_CallBack->_EXT_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_ISR->_TMR1_ISR_

Critical Paths under _main in BANK1

    _main->_displayMatrix
    _displayMatrix->_shiftBytes
    _shiftBytes->_SPI1_ExchangeByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    3987
                                              9 BANK1     14    14      0
                 _EXT_INT_Initialize
            _INT_SetInterruptHandler
                    _PWM3_Initialize
                    _SPI1_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
           _TMR0_SetInterruptHandler
                    _TMR1_Initialize
           _TMR1_SetInterruptHandler
                    _TMR2_Initialize
                      _displayMatrix
                           _playNote
                         _shiftBytes
 ---------------------------------------------------------------------------------
 (1) _playNote                                             3     2      1     460
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _displayMatrix                                        6     6      0     739
                                              3 BANK1      6     6      0
                         _shiftBytes
 ---------------------------------------------------------------------------------
 (1) _shiftBytes                                           2     1      1     363
                                              1 BANK1      2     1      1
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (2) _SPI1_ExchangeByte                                    1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     633
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    2564
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    2564
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _TMR1_ISR_ *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR_                                           45    45      0    2324
                                              9 COMMON     5     5      0
                                              0 BANK0     40    40      0
                            ___awdiv
                         i1_playNote
 ---------------------------------------------------------------------------------
 (7) i1_playNote                                           3     2      1     184
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _TMR0_ISR_ *
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR_                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
                            _EXT_ISR *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EXT_ISR                                              1     1      0       0
                                              0 COMMON     1     1      0
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (8) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EXT_INT_Initialize
     _INT_SetInterruptHandler
   _INT_SetInterruptHandler
   _PWM3_Initialize
   _SPI1_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR0_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_Initialize
   _displayMatrix
     _shiftBytes
       _SPI1_ExchangeByte
   _playNote
   _shiftBytes

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _EXT_ISR *
         _TMR0_Reload
       _INT_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_ISR_ *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_ISR_ *
       ___awdiv
       i1_playNote
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      70       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      38       6       70.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               2E     17      2A       8       91.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      70      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 26 15:56:47 2021

                       _SPI1_ExchangeByte 0AC5                                        l32 0A6D  
                                      l35 0A57                                        l29 0B51  
                                      l64 0B07                                        l74 0ACA  
                                      l76 0ACF                                        l77 0AD2  
                            ___awdiv@sign 0076                        ?_SPI1_ExchangeByte 0070  
                                     l226 0A89                                       l147 07F3  
                                     l331 0A73                                       l309 0B6E  
                                     l177 0AC4                                       l284 0AB6  
                                     l365 0BCD                                       l541 072D  
                                     l533 0699                                       l278 0A67  
                                     l703 0C2E                                       l554 07C5  
                                     l395 0A9B                                       l556 07C7  
                                     l557 07C8                                       l680 0BDB  
                                     l681 0BE5                                       l682 0BF0  
                                     l696 0AE1                                       _PR2 028D  
                         _timer1ReloadVal 0056                       ??_SPI1_ExchangeByte 00A0  
                         _TMR2_Initialize 0AB7                                       wreg 0009  
                          ?_displayMatrix 0070                                      l3001 0A62  
                                    l3011 0B01                                      l3003 0A6E  
                                    l3021 07D1                                      l3013 0B03  
                                    l3101 0B6B                                      l3005 0A93  
                                    l3031 07E0                                      l3023 07D3  
                                    l3015 0B05                                      l3007 0AF3  
                                    l3111 0B3F                                      l3103 0AD5  
                                    l3041 07EC                                      l3033 07E2  
                                    l3025 07D6                                      l3017 07CC  
                                    l3009 0B00                                      l3121 0B4E  
                                    l3113 0B42                                      l3105 0ADE  
                                    l3201 0609                                      l3051 0A6C  
                                    l3043 07EE                                      l3035 07E4  
                                    l3027 07DC                                      l3019 07CF  
                                    l3115 0B45                                      l3107 0AE0  
                                    l3131 0BFC                                      l3123 0BF3  
                                    l3203 060D                                      l3045 07F0  
                                    l3037 07E7                                      l3029 07DE  
                                    l3061 0ABB                                      l3053 0A55  
                                    l3117 0B48                                      l3109 0B36  
                                    l3141 0C21                                      l3133 0C01  
                                    l3221 0665                                      l3205 0612  
                                    l3047 0A68                                      l3039 07E9  
                                    l3055 0A82                                      l3071 0BB0  
                                    l3063 0ABE                                      l3119 0B4B  
                                    l3135 0C05                                      l3231 067A  
                                    l3215 0630                                      l3207 061F  
                                    l3049 0A6A                                      l3081 0BC0  
                                    l3073 0BB2                                      l3065 0ABF  
                                    l3057 0AB7                                      l3137 0C13  
                                    l3129 0BF6                                      l3241 06A7  
                                    l3233 0687                                      l3217 0653  
                                    l3209 062D                                      l3161 05C3  
                                    l3091 0AB4                                      l3083 0BC2  
                                    l3075 0BB4                                      l3067 0AC1  
                                    l3059 0ABA                                      l3139 0C1C  
                                    l3251 06D5                                      l3243 06AD  
                                    l3235 069B                                      l3227 0668  
                                    l3219 0657                                      l3171 05CD  
                                    l3163 05C4                                      l3093 0B52  
                                    l3085 0BCA                                      l3077 0BB6  
                                    l3069 0BAD                                      l3261 0715  
                                    l3253 06F1                                      l3245 06B2  
                                    l3237 06A4                                      l3229 0676  
                                    l3181 05FA                                      l3173 05CE  
                                    l3165 05C8                                      l3087 0AA9  
                                    l3095 0B60                                      l3079 0BB8  
                                    l3271 0759                                      l3351 0722  
                                    l3255 06F5                                      l3247 06B5  
                                    l3239 06A6                                      l3183 05FF  
                                    l3175 05DB                                      l3167 05CA  
                                    l3159 05C0                                      l3089 0AAC  
                                    l3097 0B62                                      l3281 07AD  
                                    l3273 0779                                      l3257 0711  
                                    l3249 06D1                                      l3265 0719  
                                    l3185 0601                                      l3177 05E8  
                                    l3169 05CC                                      l3099 0B63  
                                    l3283 07AF                                      l3275 0781  
                                    l3267 0732                                      l3259 0713  
                                    l3195 0606                                      l3187 0602  
                                    l3179 05F5                                      l3277 07A1  
                                    l3269 0752                                      l3285 07B1  
                                    l3189 0603                                      l3287 07B7  
                                    l3279 07A8                                      l3289 07BC  
                                    l2763 0BD0                                      l2765 0BD7  
                                    l2767 0BE2                                      l2995 0AC7  
                                    l2997 0AD0                                      u2100 0BE2  
                                    u2101 0BE1                                      _LATA 0018  
                         __end_of_INT_ISR 0A62                                      _LATC 001A  
                                    u2400 062D                                      u2401 062C  
                                    u2090 0BD7                                      u2091 0BD6  
                                    u2340 0ACF                                      u2500 07A8  
                                    u2341 0ACE                                      u2501 07A7  
                                    u2405 0629                                      u2350 0BFC  
                                    u2510 07B7                                      u2430 0664  
                                    u2351 0BFB                                      u2511 07B6  
                                    u2431 0663                                      u2415 0638  
                                    u2360 0C2E                                      u2520 07BC  
                                    u2440 0687                                      u2361 0C2D  
                                    u2521 07BB                                      u2441 0686  
                                    u2425 0643                                      u2450 0699  
                                    _T2PR 028D                                      u2451 0698  
                                    u2435 0660                                      u2460 06AD  
                                    u2365 0C2A                                      u2461 06AC  
                                    u2445 0683                                      u2470 06B2  
                                    u2390 061F                                      u2471 06B1  
                                    u2455 0695                                      u2391 061E  
                                    u2480 0758                                      u2537 0C17  
                                    u2481 0757                                      u2490 0780  
                                    u2491 077F                                      u2395 061B  
                         __end_of_EXT_ISR 0B8D                                      _TMR2 028C  
                                    _WPUA 1F39                                      _WPUC 1F4F  
                                    _main 05C0                                i1_playNote 0B8D  
                                    fsr0h 0005                                      fsr1h 0007  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
     __end_of_INT_DefaultInterruptHandler 0A55               _INT_DefaultInterruptHandler 0A54  
                                    start 0031           __end_of_INT_SetInterruptHandler 0A68  
               __end_of_SPI1_ExchangeByte 0AD3                ??_TMR1_SetInterruptHandler 00A2  
                 __end_of_TMR0_Initialize 0B6F            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0006             __end_of_OSCILLATOR_Initialize 0A6E  
                                   ?_main 0070                           __end_of___awdiv 0C8E  
                                   _T1CLK 0211                           ___awdiv@divisor 0070  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                                     _T2TMR 028C  
                                   i1l250 0013                                     _T2RST 0291  
                                   i1l324 0A92                                     i1l252 001F  
                                   i1l253 002F                                     i1l334 0002  
                                   i1l271 0A61                                     i1l328 0B1E  
                                   i1l281 0A54                                     i1l258 002F  
                                   i1l275 0AA8                                     i1l392 0B35  
                                   i1l379 0AF2                                     i1l566 0B8C  
                                   i1l398 0003                                     i1l671 057E  
                                   i1l680 0B98                                     i1l569 0A5B  
                                   i1l681 0BA2                                     i1l682 0BAC  
                                   i1l579 0165                                     i1l924 0C8D  
                                   i1l677 05BF                           ___awdiv@counter 0075  
                                   _OSCEN 0891                                     _TMR0H 059D  
                        playNote@prescale 00A0                                     _TMR1H 020D  
                                   _TMR0L 059C                                     _TMR1L 020C  
                                   _TRISA 0012                                     _TRISC 0014  
       __size_of_TMR0_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 00A0  
                      __size_of_TMR0_ISR_ 0004                        __size_of_TMR1_ISR_ 0553  
                        __end_of_TMR0_ISR 0B1F                          __end_of_TMR1_ISR 0B36  
                          _WDT_Initialize 0A55                                     _count 00C4  
                                   _song2 21BA                                     _song3 211C  
                                   main@i 00B1                                     main@j 00AF  
                 __end_of_PWM3_Initialize 0A8A                   __end_of_TMR1_Initialize 0BCE  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0AE2  
                __size_of_SPI1_Initialize 0015                           __initialization 0033  
                            __end_of_main 07CC                   __end_of_TMR2_Initialize 0AC5  
             ?_INTERRUPT_InterruptManager 0070                      TMR1_ISR_@lights_1190 0022  
                    TMR1_ISR_@lights_1178 0021                                    ??_main 00A9  
                         ??_displayMatrix 00A3                    __end_of_WDT_Initialize 0A58  
                               ??_INT_ISR 0071                                 ??_EXT_ISR 0070  
                        ___awdiv@dividend 0072                                    _ANSELA 1F38  
                                  _ANSELC 1F4E                                    _T0CON0 059E  
                                  _T0CON1 059F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _RA5PPS 1F15  
                                  _RC3PPS 1F23                   TMR1_WriteTimer@timerVal 0070  
                                  i1l2201 0C3F                                    i1l2211 0C53  
                                  i1l2203 0C44                                    _RC5PPS 1F25  
                                  i1l2221 0C73                                    i1l2213 0C58  
                                  i1l2205 0C48                                    i1l2231 0C89  
                                  i1l2223 0C74                                    i1l2215 0C5C  
                                  i1l2207 0C4A                                    u200_20 0592  
                                  i1l2161 0A8A                                    i1l2225 0C79  
                                  i1l2217 0C60                                    i1l2209 0C50  
                                  u200_21 0591                                    i1l2401 0118  
                                  _ODCONA 1F3A                                    i1l2163 0A8E  
                                  i1l2219 0C6F                                    i1l2227 0C7F  
                                  i1l2235 0B8E                                    i1l2411 0137  
                                  i1l2403 0126                                    _ODCONC 1F50  
                                  i1l2181 0B77                                    i1l2229 0C84  
                                  i1l2237 0B95                                    i1l2421 017C  
                                  i1l2413 0153                                    i1l2405 0134  
                                  i1l2341 0AE2                                    i1l2183 0B7C  
                                  i1l2191 0C2F                                    i1l2239 0B9F  
                                  i1l2511 0302                                    i1l2503 02E6  
                                  i1l2431 01BC                                    i1l2423 018C  
                                  i1l2415 0157                                    i1l2343 0AE7  
                                  i1l2351 0AEE                                    u121_20 0B7C  
                                  u201_20 05A4                                    i1l2185 0B81  
                                  u121_21 0B7B                                    i1l2177 0B6F  
                                  i1l2337 0A9C                                    i1l2361 0A58  
                                  i1l2193 0C30                                    u201_21 05A3  
                                  i1l2601 0469                                    i1l2513 0305  
                                  i1l2505 02EF                                    i1l2441 01C9  
                                  i1l2425 0193                                    i1l2417 0165  
                                  i1l2353 0AF0                                    i1l2345 0AE8  
                                  i1l2187 0B83                                    i1l2179 0B74  
                                  i1l2339 0AA3                                    i1l2195 0C34  
                                  i1l2611 049A                                    i1l2531 033A  
                                  i1l2523 0321                                    i1l2443 01D7  
                                  i1l2427 019A                                    i1l2419 016B  
                                  i1l2371 0094                                    i1l2363 006D  
                                  i1l2347 0AEA                                    i1l2189 0B8A  
                                  i1l2197 0C39                                    u201_25 05A0  
                                  i1l2613 049C                                    i1l2605 046E  
                                  i1l2541 035A                                    i1l2533 0343  
                                  i1l2525 0329                                    i1l2517 0313  
                                  i1l2509 02F4                                    i1l2461 0219  
                                  i1l2453 01F9                                    i1l2445 01E6  
                                  i1l2437 01BF                                    i1l2429 019F  
                                  i1l2381 00B6                                    i1l2373 00A2  
                                  i1l2365 0072                                    i1l2349 0AEC  
                                  i1l2199 0C3B                                    i1l2631 04D1  
                                  i1l2623 04B8                                    i1l2607 0474  
                                  i1l2551 0376                                    i1l2527 032C  
                                  i1l2519 031C                                    i1l2463 022A  
                                  i1l2455 0202                                    i1l2447 01F6  
                                  i1l2439 01C5                                    i1l2391 0104  
                                  i1l2383 00D2                                    i1l2375 00B4  
                                  i1l2367 0078                                    u122_20 0B8A  
                                  u202_20 05AA                                    u122_21 0B89  
                                  i1l2721 0B08                                    u202_21 05A9  
                                  i1l3353 051A                                    i1l2641 04E6  
                                  i1l2625 04BA                                    i1l2617 04AA  
                                  i1l2609 0486                                    i1l2561 03A5  
                                  i1l2553 0383                                    i1l2545 0368  
                                  i1l2537 0348                                    i1l2481 029A  
                                  i1l2473 026A                                    i1l2465 0248  
                                  i1l2457 0206                                    i1l2385 00D6  
                                  i1l2369 0086                                    i1l2731 0A5C  
                                  i1l2723 0B0A                                    i1l2643 04EF  
                                  i1l2635 04D6                                    i1l2619 04B3  
                                  i1l2571 03D3                                    i1l2563 03B2  
                                  i1l2555 0395                                    i1l2547 0371  
                                  i1l2539 0357                                    i1l2491 02C2  
                                  i1l2483 02A8                                    i1l2475 028F  
                                  i1l2467 025A                                    i1l2459 0214  
                                  i1l2387 00E4                                    i1l2733 0A5E  
                                  i1l2725 0B0E                                    u130_25 0C75  
                                  i1l2653 0504                                    i1l2637 04D8  
                                  i1l2629 04C8                                    i1l2661 0512  
                                  i1l2573 03D6                                    i1l2557 0397  
                                  i1l2485 02AB                                    i1l2469 025C  
                                  i1l2397 0106                                    i1l2389 00F2  
                                  i1l2741 0B30                                    i1l2727 0B12  
                                  i1l2671 0550                                    i1l2655 050D  
                                  i1l2647 04F4                                    i1l2663 0528  
                                  i1l2591 042B                                    i1l2583 03EF  
                                  i1l2567 03B7                                    i1l2495 02C7  
                                  i1l2479 0294                                    i1l2399 0114  
                                  i1l2735 0B1F                                    u131_20 0C7F  
                                  u123_20 0C34                                    u203_20 05B8  
                                  i1l2729 0B19                                    u131_21 0C7E  
                                  u123_21 0C33                                    u203_21 05B7  
                                  i1l2681 056D                                    i1l2673 0556  
                                  i1l2649 04F6                                    i1l2593 043D  
                                  i1l2585 03FD                                    i1l2577 03E4  
                                  i1l2569 03C5                                    i1l2497 02D5  
                                  i1l2489 02B9                                    i1l2665 0529  
                                  i1l2737 0B21                                    i1l2691 0597  
                                  i1l2675 055D                                    i1l2667 052F  
                                  i1l2683 0571                                    i1l2595 043F  
                                  i1l2587 0407                                    i1l2579 03EA  
                                  i1l2499 02D8                                    i1l2739 0B29  
                                  u203_25 05B4                                    i1l2693 05A4  
                                  i1l2685 0577                                    i1l2677 0564  
                                  i1l2669 0540                                    i1l2589 0425  
                                  i1l2687 058C                                    i1l2679 0569  
                                  i1l2599 044D                                    i1l2791 0017  
                                  u132_20 0C84                                    u124_20 0C3F  
                                  u204_20 05BE                                    u140_20 00A2  
                                  u132_21 0C83                                    u124_21 0C3E  
                                  u204_21 05BD                                    i1l2697 05AB  
                                  i1l2689 0592                                    u140_21 00A1  
                                  i1l2793 001B                                    i1l2785 0006  
                                  i1l2699 05B8                                    i1l2795 0023  
                                  i1l2787 000B                                    u140_25 009E  
                                  i1l2797 0027                                    i1l2789 000F  
                                  i1l2799 002B                                    u205_20 0B19  
                                  u125_20 0C50                                    u133_20 0B95  
                                  u141_20 00B4                                    u213_20 000B  
                                  u205_21 0B18                                    u125_21 0C4F  
                                  u133_21 0B94                                    u141_21 00B3  
                                  u213_21 000A                                    u134_20 0B9F  
                                  u150_20 016B                                    u206_20 0B30  
                                  u214_20 000F                                    u134_21 0B9E  
                                  u150_21 016A                                    u206_21 0B2F  
                                  u214_21 000E                                    u126_25 0C54  
                                  u142_25 00BE                                    u135_20 0AA3  
                                  u127_20 0C60                                    u151_20 017C  
                                  u143_20 00E3                                    u215_20 0017  
                                  u135_21 0AA2                                    u127_21 0C5F  
                                  u151_21 017B                                    u143_21 00E2  
                                  u215_21 0016                                    u143_25 00DF  
                                  u160_20 0219                                    u152_20 018C  
                                  u144_20 00F2                                    u136_20 0AE7  
                                  u216_20 001B                                    u160_21 0218  
                                  u152_21 018B                                    u144_21 00F1  
                                  u136_21 0AE6                                    u216_21 001A  
                                  _INLVLA 1F3C                                    _INLVLC 1F52  
                                  u128_25 0C61                                    u144_25 00EE  
                                  u129_20 0C6F                                    u161_20 022A  
                                  u153_20 0193                                    u145_20 0104  
                                  u137_20 0078                                    u217_20 0023  
                                  u129_21 0C6E                                    u161_21 0229  
                                  u153_21 0192                                    u145_21 0103  
                                  u137_21 0077                                    u217_21 0022  
                                  u129_25 0C6B                                    u170_20 0312  
                                  u162_20 025A                                    u154_20 019A  
                                  u146_20 0125                                    u138_20 0086  
                                  u218_20 0027                                    u170_21 0311  
                                  u162_21 0259                                    u154_21 0199  
                                  u146_21 0124                                    u138_21 0085  
                                  u218_21 0026                                    u170_25 030E  
                                  u146_25 0121                                    u138_25 0082  
                                  u171_20 0329                                    u163_20 0269  
                                  u155_20 019F                                    u147_20 0134  
                                  u139_20 0094                                    u219_20 002B  
                                  u171_21 0328                                    u163_21 0268  
                                  u155_21 019E                                    u147_21 0133  
                                  u139_21 0093                                    u219_21 002A  
                                  u163_25 0265                                    u147_25 0130  
                                  u139_25 0090                                    u180_20 03E3  
                                  u172_20 0339                                    u164_20 029A  
                                  u156_20 01D6                                    u180_21 03E2  
                                  u172_21 0338                                    u164_21 0299  
                                  u156_21 01D5                                    u180_25 03DF  
                                  u172_25 0335                                    u156_25 01D2  
                                  u148_25 013F                                    u181_20 03FD  
                                  u173_20 0357                                    u165_20 02A8  
                                  u157_20 01E6                                    u149_20 0164  
                                  u181_21 03FC                                    u173_21 0356  
                                  u165_21 02A7                                    u157_21 01E5  
                                  u149_21 0163                                    u181_25 03F9  
                                  u165_25 02A4                                    u149_25 0160  
                                  u190_20 04C7                                    u182_20 0407  
                                  u174_20 0367                                    u166_20 02B8  
                                  u158_20 01F6                                    u190_21 04C6  
                                  u182_21 0406                                    u174_21 0366  
                                  u166_21 02B7                                    u158_21 01F5  
                                  u190_25 04C3                                    u174_25 0363  
                                  u166_25 02B4                                    u191_20 04E5  
                                  u183_20 042B                                    u175_20 0383  
                                  u167_20 02D5                                    u159_20 0213  
                                  u191_21 04E4                                    u183_21 042A  
                                  u175_21 0382                                    u167_21 02D4  
                                  u159_21 0212                                    u191_25 04E1  
                                  u175_25 037F                                    u167_25 02D1  
                                  u159_25 020F                                    u192_20 0503  
                                  u184_20 043D                                    u176_20 0395  
                                  u168_20 02E5                                    u192_21 0502  
                                  u184_21 043C                                    u176_21 0394  
                                  u168_21 02E4                                    _INTPPS 1E90  
                                  u192_25 04FF                                    u168_25 02E1  
                                  u193_20 052F                                    u185_20 044C  
                                  u177_20 03A4                                    u169_20 0302  
                                  u193_21 052E                                    u185_21 044B  
                                  u177_21 03A3                                    u169_21 0301  
                                  u185_25 0448                                    u177_25 03A0  
                                  u169_25 02FE                                    u194_20 0540  
                                  u178_20 03C5                                    u194_21 053F  
                                  u178_21 03C4                                    u186_25 0455  
                                  u178_25 03C1                                    u195_20 0550  
                                  u187_20 0474                                    u179_20 03D3  
                                  u195_21 054F                                    u187_21 0473  
                                  u179_21 03D2                                    u179_25 03CF  
                                  u196_20 055D                                    u188_20 0486  
                                  u196_21 055C                                    u188_21 0485  
                                  u197_20 0564                                    u189_20 04A9  
                                  u197_21 0563                                    u189_21 04A8  
                                  u189_25 04A5                                    u198_20 0577  
                                  u198_21 0576                                    u199_20 058C  
                                  u199_21 058B                                    u199_25 0588  
                                  _OSCFRQ 0893                                    _WDTCON 080C  
                             ?i1_playNote 0070                __size_of_SPI1_ExchangeByte 000E  
    __end_of_TMR1_DefaultInterruptHandler 0004     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0003                         __end_of_TMR0_ISR_ 0A5C  
                       __end_of_TMR1_ISR_ 05C0                              ?_TMR0_Reload 0070  
                               ??___awdiv 0074                          ?_TMR0_Initialize 0070  
                        ___awdiv@quotient 0077                             ?_INT_CallBack 0070  
                        __end_of_playNote 0BF1                              __pdataBIGRAM 207E  
                         ?_WDT_Initialize 0070          __size_of_INT_SetInterruptHandler 0006  
TMR1_SetInterruptHandler@InterruptHandler 00A0  TMR0_SetInterruptHandler@InterruptHandler 00A0  
 INT_SetInterruptHandler@InterruptHandler 00A0                   __end_of_TMR1_WriteTimer 0AF3  
                        ?_TMR1_Initialize 0070                          ?_PWM3_Initialize 0070  
                       _SYSTEM_Initialize 0B36                   __end_of__initialization 0069  
                      ?_SYSTEM_Initialize 0070                             _last_prescale 00C8  
                    _silent_night_playing 0053                            __pcstackCOMMON 0070  
                            __pidataBANK0 0A7B                              __pidataBANK1 0A74  
                     ??_SYSTEM_Initialize 00A2                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                      i1playNote@prescale 0070                         ??_SPI1_Initialize 00A0  
                        ?_TMR2_Initialize 0070                            ??_INT_CallBack 0071  
                   SPI1_ExchangeByte@data 00A0                         shiftBytes@lowSide 00A1  
                      _spi1_configuration 1000               __size_of_EXT_INT_Initialize 000E  
                     __size_ofi1_playNote 0020                 __end_of_SYSTEM_Initialize 0B52  
                      TMR1_ISR_@jungle_sw 0023                                __pbssBANK0 004F  
                              __pbssBANK1 00C4                                __pmaintext 05C0  
        __end_of_TMR0_SetInterruptHandler 0A74                                ??_TMR0_ISR 0070  
                              ??_TMR1_ISR 007E                                __pintentry 0004  
                    displayMatrix@lowSide 00A8                                   _INT_ISR 0A5C  
                                 _EXT_ISR 0B6F                                   _OSCTUNE 0892  
                                 _PWM3DCH 0315                                   _PWM3DCL 0314  
                                 _PWM3CON 0316                                   _SSP1ADD 018D  
                                 _SLRCONA 1F3B                                   _SLRCONC 1F51  
                                 _SSP1BUF 018C                          ?_TMR1_WriteTimer 0070  
                               ?_playNote 00A0                                   ___awdiv 0C2F  
                    __size_of_TMR0_Reload 0009                                   __ptext1 0BCE  
                                 __ptext2 0BF1                                   __ptext3 0AD3  
                                 __ptext4 0AC5                                   __ptext5 0B36  
                                 __ptext6 0A55                                   __ptext7 0AB7  
                                 __ptext8 0BAD                                   __ptext9 0A93  
          ??_TMR1_DefaultInterruptHandler 0070                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0A68                                 _T2CONbits 028E  
                          displayMatrix@i 00A6         __size_of_TMR1_SetInterruptHandler 0009  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                               _T2HLTbits 028F                   _INT_SetInterruptHandler 0A62  
                                 _presses 00C7                __size_of_SYSTEM_Initialize 001C  
                    end_of_initialization 0069                                 _T2RSTbits 0291  
                                 init_ram 07F4                              ??i1_playNote 0071  
                                 initloop 07F5                      __end_of_INT_CallBack 0AA9  
                              _shiftBytes 0AD3                                ??_playNote 00A1  
                               _TMR0_ISR_ 0A58                                 _TMR1_ISR_ 006D  
                        ??_WDT_Initialize 00A0                  _TMR0_SetInterruptHandler 0A6E  
                      __end_ofi1_playNote 0BAD                                 _TRISAbits 0012  
                               _TRISCbits 0014                     __end_of_displayMatrix 0C2F  
                              main@j_1166 00B3                                main@j_1168 00B5  
                        _silent_night_pre 2366                           _SPI1_Initialize 0AF3  
                    _timer0ReloadVal16bit 00C0                             __pidataBIGRAM 0C8E  
                              ?_TMR0_ISR_ 0070                                ?_TMR1_ISR_ 0070  
                       __size_of_TMR0_ISR 0017                         __size_of_TMR1_ISR 0017  
                  ?_OSCILLATOR_Initialize 0070                 ??_INT_SetInterruptHandler 00A2  
                      shiftBytes@highSide 00A2                       start_initialization 0033  
                __size_of_TMR0_Initialize 001D           __size_of_PIN_MANAGER_Initialize 0028  
            ?_INT_DefaultInterruptHandler 0070                               ?_shiftBytes 00A1  
                __size_of_PWM3_Initialize 0008                  __size_of_TMR1_Initialize 0021  
                             __pdataBANK0 0048                               __pdataBANK1 00B7  
              __end_of_EXT_INT_Initialize 0AB7                                 ___latbits 0002  
                                ?_INT_ISR 0070                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                                  ?_EXT_ISR 0070  
                __size_of_TMR2_Initialize 000E                   __end_of_SPI1_Initialize 0B08  
                   __size_of_INT_CallBack 000D                           TMR1_ISR_@i_1180 0026  
                         TMR1_ISR_@i_1181 0044                           TMR1_ISR_@i_1182 0028  
                         TMR1_ISR_@i_1183 002A                           TMR1_ISR_@i_1176 003C  
                         TMR1_ISR_@i_1192 0034                           TMR1_ISR_@i_1184 002C  
                         TMR1_ISR_@i_1177 0042                           TMR1_ISR_@i_1193 0036  
                         TMR1_ISR_@i_1185 002E                           TMR1_ISR_@i_1194 0038  
                         TMR1_ISR_@i_1186 0030                           TMR1_ISR_@i_1187 003E  
                         TMR1_ISR_@i_1195 003A                           TMR1_ISR_@i_1179 0024  
                         TMR1_ISR_@i_1188 0032                           TMR1_ISR_@i_1189 0046  
                   _TMR0_InterruptHandler 00BE                                 __pnvBANK0 0054  
                               __pnvBANK1 00BE                           TMR1_ISR_@lights 0020  
                  _PIN_MANAGER_Initialize 07CC             ??_INT_DefaultInterruptHandler 0070  
                       __size_of_playNote 0023          __end_of_TMR1_SetInterruptHandler 0A9C  
                                ?___awdiv 0070                               ??_TMR0_ISR_ 0070  
                             ??_TMR1_ISR_ 0079              ??_INTERRUPT_InterruptManager 007E  
                     displayMatrix@states 00A5                              _INT_CallBack 0A9C  
                            playNote@note 00A2                       __size_of_shiftBytes 000F  
                               _last_note 0050                                TMR1_ISR_@i 0040  
                                _T2CLKCON 0290                         ??_TMR0_Initialize 00A2  
                                _LATCbits 001A                                  _PIE0bits 0716  
                                _PIE1bits 0717                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 002D                ??_TMR0_SetInterruptHandler 00A2  
                                _PIR0bits 070C                                  _PIR1bits 070D  
                           ??_TMR0_Reload 0070                                 _song2_pre 224B  
                               _song3_pre 207E                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0B08  
                                _TMR1_ISR 0B1F                                 _num_songs 004E  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00A2  
                       ??_PWM3_Initialize 00A0                                 main@light 00AE  
    __size_of_INT_DefaultInterruptHandler 0001                            i1playNote@note 0072  
                        __size_of_INT_ISR 0006                          __size_of_EXT_ISR 001E  
                        ?_SPI1_Initialize 0070                         ??_TMR2_Initialize 00A0  
                           _song2_playing 0051                             _song3_playing 0052  
                           _TMR0_complete 00C9                   ??_OSCILLATOR_Initialize 00A0  
                            _jungle_count 004F                          __size_of___awdiv 005F  
                             _light_array 00B7                  _TMR1_SetInterruptHandler 0A93  
                     __end_of_TMR0_Reload 0A93                     _TMR1_InterruptHandler 0054  
                              _T0CON0bits 059E                                  __ptext10 0B52  
                                __ptext11 0A6E                                  __ptext20 0AE2  
                                __ptext12 0AF3                                  __ptext21 0003  
                                __ptext13 0A82                                _T1GCONbits 020F  
                                __ptext30 0B6F                                  __ptext22 006D  
                                __ptext14 07CC                                  __ptext31 0A54  
                                __ptext23 0B8D                                  __ptext15 0A68  
                                __ptext32 0A8A                                  __ptext24 0C2F  
                                __ptext16 0AA9                                  __ptext25 0B08  
                                __ptext17 0A62                                  __ptext26 0002  
                                __ptext27 0A58                                  __ptext19 0B1F  
                                __ptext28 0A5C                                  __ptext29 0A9C  
                            _SSP1CON1bits 0190                             __size_of_main 020C  
    __end_of_TMR0_DefaultInterruptHandler 0003     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0002                              ??_shiftBytes 00A2  
                                _playNote 0BCE                    __size_of_displayMatrix 003E  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0031  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0072  
                            _song2_length 004B                              _song3_length 0048  
                              _INTCONbits 000B                      _INT_InterruptHandler 00C2  
                      __end_of_shiftBytes 0AE2                               _jungle_bool 00C6  
                            _silent_night 22DB                        _EXT_INT_Initialize 0AA9  
                 __size_of_WDT_Initialize 0003                                  intlevel1 0000  
                 ?_PIN_MANAGER_Initialize 0070                       ?_EXT_INT_Initialize 0070  
           ?_TMR0_DefaultInterruptHandler 0070                               _TMR0_Reload 0A8A  
                            _timer_high_2 004D                              _timer_high_3 004A  
                ?_INT_SetInterruptHandler 00A0                             __pstringtext1 1000  
                    ??_EXT_INT_Initialize 00A2                                _SSP1DATPPS 1EC6  
                              _SSP1CLKPPS 1EC5                           _TMR0_Initialize 0B52  
                             _timer_low_2 004C                               _timer_low_3 0049  
                           _displayMatrix 0BF1            __end_of_PIN_MANAGER_Initialize 07F4  
                         _TMR1_Initialize 0BAD                           _PWM3_Initialize 0A82  
              __end_of_spi1_configuration 1004  
